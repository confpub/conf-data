{
  "DataRevision": 545434955,
  "Description": "The ACM SIGPLAN conference on Systems, Programming, Languages and Applications: Software for Humanity (SPLASH) embraces all aspects of software construction and delivery to make it the premier conference at the intersection of programming, languages, and software engineering. SPLASH 2016 will take place from Sunday, October 30 to Friday, November 4, 2016 in Amsterdam, The Netherlands. \n \n Planning your attendance \n Register to attend the conference \n Speakers: All projectors at the conference will have 16:9 aspect ratio",
  "Event": "splash-2016",
  "Items": [
    {
      "Abstract": "Continuous data streams are ubiquitous and represent such a high volume of data that they cannot be stored to disk, yet it is often crucial for them to be analyzed in real-time. Stream processing is a programming paradigm that processes these immediately, and enables continuous analytics. Our objective is to make it easier for analysts, with little programming experience, to develop continuous analytics applications directly. We propose enhancing a spreadsheet, a pervasive tool, to obtain a programming platform for stream processing. We present the design and implementation of an enhanced spreadsheet that enables visualizing live streams, live programming to compute new streams, and exporting computations to be run on a server where they can be shared with other users, and persisted beyond the life of the spreadsheet.\nDr. Olivier Tardieu is Research Staff Member in the Programming Technologies Department at IBM\u2019s TJ Watson Research Center, NY, USA. His research interests include programming languages design and implementation, parallel and distributed computing, program analysis, safety critical systems, and fault tolerance. He is one of the lead designers and implementers of the X10 programming language, the APGAS runtime for distributed programming, ActiveSheets, and the CloudLens language for log analytics. He received a PhD in Computer Science from Ecole des Mines de Paris, France in 2004 and is a graduate of Ecole Polytechnique, France.",
      "Affiliations": ["IBM Research"],
      "AffiliationsString": "IBM Research",
      "Authors": ["oliviertardieu"],
      "Key": "rebls2016-keynote",
      "PersonsString": "Olivier Tardieu",
      "Title": "ActiveSheets: Stream Processing with a Spreadsheet (Keynote)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/rebls2016-keynote"
    },
    {
      "Abstract": "The current event-based model of web client programming lacks of a high level abstraction for concurrency and communication when many interactions are involved. The design of JavaScript runtime in the browser is very simple and chains steps of input handling and computation of output in a sequential way. This definition describes exactly a subset of programs well handled by the synchronous-reactive model. It proposes constructs to express parallel tasks communicating through broadcasted signals enforcing a static hypothesis of determinism, coherency and causality that improve programs composition. It is then interesting to consider client events as inputs and web view elements as outputs of a synchronous-reactive program. We describe here the design of pendulum, a language extension implementing those principles and targeting web client programming, which generates fast sequential code.",
      "Affiliations": [
        "UPMC, France",
        "UPMC, France"
      ],
      "AffiliationsString": "UPMC, France",
      "Authors": [
        "remyelsibaie",
        "emmanuelchailloux"
      ],
      "Key": "rebls2016-synchronous-reactive-web-programming",
      "PersonsString": "Rémy El Sibaïe and Emmanuel Chailloux",
      "Title": "Synchronous-Reactive Web Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/rebls2016-synchronous-reactive-web-programming"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "rebls2016-welcome-and-introduction",
      "PersonsString": "",
      "Title": "Welcome and Introduction",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/rebls2016-welcome-and-introduction"
    },
    {
      "Abstract": "In communication-centric software systems, distributed services concurrently interact by following precise protocols. One approach to certify protocol correctness uses behavioral types to abstract protocols and statically check inter- acting programs. Behavioral types have been widely studied for programming calculi such as the π-calculus, which lack constructs for specifying reactive behavior, an increasingly relevant feature in many real-life interaction scenarios.\nIn this paper, we explore the use of the synchronous reactive programming paradigm as a uniform foundation for communication-centric programs. We focus on session types, a widely studied class of behavioral types, and on session-based concurrency, its associated computation model. We present an interpretation (formal translation) of session-based concurrency into ReactiveML, a synchronous reactive language. Our approach uniformly integrates communication, and timed and reactive behavior in concurrent programs which are more natural and concise than π-calculus specifications. To our knowledge, this is the first implementation of sessions in a synchronous reactive programming language.",
      "Affiliations": [
        "INRIA Grenoble Rhône-Alpes",
        "University of Groningen, The Netherlands",
        "University of Groningen, The Netherlands"
      ],
      "AffiliationsString": "INRIA Grenoble Rhône-Alpes, University of Groningen, The Netherlands",
      "Authors": [
        "jaimearias",
        "mauriciocano",
        "jorgeaperez"
      ],
      "Key": "rebls2016-a-reactive-interpretation-of-session-based-concurrency-in-progress-paper-",
      "PersonsString": "Jaime Arias, Mauricio Cano and Jorge A. Perez",
      "Title": "A Reactive Interpretation of Session-Based Concurrency (In Progress Paper)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/rebls2016-a-reactive-interpretation-of-session-based-concurrency-in-progress-paper-"
    },
    {
      "Abstract": "Distributed applications are traditionally developed using separate modules for each component in the distributed system, which can even be written in different programming languages. Those modules react on events such as user input or network messages and may in turn produce new events to be handled by different modules. Applications which define their runtime behavior based on their reaction to events are called reactive. Distributed event-based data flow makes it is hard to reason about the system and therefore makes the development of distributed systems challenging.\nIn this paper, we present ongoing research on RETier, a language for distributed reactive programming. The language eases the development of distributed reactive systems by providing a coherent model to reason about the system and supporting various distributed architectures through dedicated language abstractions.",
      "Affiliations": [
        "",
        "TU Darmstadt, Germany"
      ],
      "AffiliationsString": ", TU Darmstadt, Germany",
      "Authors": [
        "pascalweisenburger",
        "guidosalvaneschi"
      ],
      "Key": "rebls2016-towards-a-comprehensive-multitier-reactive-language",
      "PersonsString": "Pascal Weisenburger and Guido Salvaneschi",
      "Title": "Towards a Comprehensive Multitier Reactive Language",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/rebls2016-towards-a-comprehensive-multitier-reactive-language"
    },
    {
      "Abstract": "Developing modern collaborative applications burdens the programmer with local event handling (e.g. user interaction), remote event handling (e.g. updates from the server) and shared state (e.g. in order to allow operations while being disconnected).Several solutions have been developed at the programming language level in order to reduce the complexity of these aspects.On one hand, distributed reactive models (e.g. DREAM) tackle both local and remote event handling.On the other hand recent replicated consistency models (e.g. CRDT's and CloudTypes) hide the complexity of shared, replicated state.Both solutions only partially alleviate the complexity associated with developing collaborative applications.To the best of our knowledge, none or very little effort has been undertaken to provide a single unified model able to tackle both event handling and shared state.In this paper we argue the need for such a united model.To that end we present Direst, a domain specific language which enhances traditional reactive abstractions (i.e. signals) with replication and consistency features.Direst reduces the complexities of writing truly collaborative applications by providing a framework in which elegantly handling events and easily managing shared state are not mutually exclusive.",
      "Affiliations": [
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium",
        "Universiteit Gent, Belgium",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Belgium, Universiteit Gent, Belgium",
      "Authors": [
        "florianmyter",
        "timcoppieters",
        "christophescholliers",
        "wolfgangdemeuter"
      ],
      "Key": "rebls2016-i-now-pronounce-you-reactive-and-consistent-handling-distributed-and-replicated-state-in-reactive-programming",
      "PersonsString": "Florian Myter, Tim Coppieters, Christophe Scholliers and Wolfgang De Meuter",
      "Title": "I Now Pronounce You Reactive and Consistent: Handling Distributed and Replicated State in Reactive Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/rebls2016-i-now-pronounce-you-reactive-and-consistent-handling-distributed-and-replicated-state-in-reactive-programming"
    },
    {
      "Abstract": "Rapid pace of innovation in industrial research labs requires fast algorithm evaluation cycles. The use of multi-core hardware and distributed clusters is essential to achieve reasonable turnaround times for high-load simulations. Julia\u2019s support for these as well as its pervasive multiple dispatch make it very attractive for high-performance technical computing. \nOur experiments in speeding up a Digital Signal Processing (DSP) Intellectual Property (IP) model simulation for a Wireless LAN (WLAN) product confirm this. We augment standard SystemC High-Level Synthesis (HLS) tool-flow by an interactive worksheet supporting performance visualization and rapid design space exploration cycles.",
      "Affiliations": ["NXP, Netherlands"],
      "AffiliationsString": "NXP, Netherlands",
      "Authors": ["peterkourzanov"],
      "Key": "seps2016-parallel-evaluation-of-a-dsp-algorithm-using-julia",
      "PersonsString": "Peter Kourzanov",
      "Title": "Parallel Evaluation of a DSP Algorithm using Julia",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/seps2016-parallel-evaluation-of-a-dsp-algorithm-using-julia"
    },
    {
      "Abstract": "Thread-level Speculation (TLS) is a technique for automatic parallelization. The complexity of even prototype implementations, however, limits the ability to explore and compare the wide variety of possible design choices, and also makes understanding performance characteristics difficult. In this work we build a general analytical model of the method-level variant of TLS which we can use for determining program speedup under a wide range of TLS designs. Our approach is exhaustive, and using either simple brute force or more efficient dynamic programming implementations we are able to show how performance is strongly limited by program structure, as well as core choices in speculation design, irrespective of and complementary to the impact of data-dependencies. These results provide new, high-level insight into where and how thread-level speculation can and should be applied in order to produce practical speedup.",
      "Affiliations": [
        "McGill University, Canada",
        "McGill University, Canada",
        "McGill University, Canada",
        "IBM, Canada"
      ],
      "AffiliationsString": "McGill University, Canada, IBM, Canada",
      "Authors": [
        "clarkverbrugge",
        "christopherjfpickett",
        "alexanderkrolik",
        "allankielstra"
      ],
      "Key": "seps2016-exhaustive-analysis-of-thread-level-speculation",
      "PersonsString": "Clark Verbrugge, Christopher J. F. Pickett, Alexander Krolik and Allan Kielstra",
      "Title": "Exhaustive Analysis of Thread-Level Speculation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/seps2016-exhaustive-analysis-of-thread-level-speculation"
    },
    {
      "Abstract": "Parallelizing compilers equipped with powerful compiler optimizations are essential tools to fully exploit performance from today's computer systems. These optimizations are supported by both highly sophisticated program analysis techniques and aggressive program restructuring techniques. However, the compilation time for such powerful compilers becomes larger and larger for real commercial application due to these strong program analysis techniques. In this paper, we propose a compilation time reduction technique for parallelizing compilers. The basic idea of the proposed technique is based on an observation that parallelizing compilers applies multiple program analysis passes and restructuring passes to a source program but all program analysis passes do not have to be applied to the whole source program. Thus, there is an opportunity for compilation time reduction by removing redundant program analysis. We describe the removing redundant program analysis techniques considering the inter-procedural propagation of annalysis update information in this paper. We implement the proposed technique into OSCAR automatically multigrain parallelizing compiler. We then evaluate the proposed technique by using three proprietary large scale programs. The proposed technique can remove 37.7\\% of program analysis time on average for basic analysis includes def-use analysis and dependence calculation, and 51.7\\% for pointer analysis, respectively.",
      "Affiliations": [
        "Waseda University, Japan",
        "Waseda University, Japan",
        "Waseda University, Japan",
        "Waseda University, Japan",
        "Waseda University, Japan",
        "OSCAR TECHNOLOGY, Japan",
        "OSCAR TECHNOLOGY, Japan",
        "OSCAR TECHNOLOGY, Japan",
        "OSCAR TECHNOLOGY, Japan",
        "Waseda University",
        "Waseda University, Japan"
      ],
      "AffiliationsString": "Waseda University, Japan, OSCAR TECHNOLOGY, Japan, Waseda University",
      "Authors": [
        "jixinhan",
        "rinafujino",
        "ryotatamura",
        "mamorushimaoka",
        "hirokimikami",
        "moriyukitakamura",
        "sachiokamiya",
        "kazuhikosuzuki",
        "takahiromiyajima",
        "keijikimura",
        "hironorikasahara"
      ],
      "Key": "seps2016-reducing-parallelizing-compilation-time-by-removing-redundant-analysis",
      "PersonsString": "Jixin Han, Rina Fujino, Ryota Tamura, Mamoru Shimaoka, Hiroki Mikami, Moriyuki Takamura, Sachio Kamiya, Kazuhiko Suzuki, Takahiro Miyajima, Keiji Kimura  and Hironori Kasahara",
      "Title": "Reducing Parallelizing Compilation Time by Removing Redundant Analysis",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/seps2016-reducing-parallelizing-compilation-time-by-removing-redundant-analysis"
    },
    {
      "Abstract": "This tutorial presents task-based programming models, such as the OmpSs and OpenMP 4.0 Models. OmpSs is a programming model developed at Barcelona Supercomputing Center (BSC). Like OpenMP, it is based on compiler directives. It is the base platform where BSC has developed OpenMP tasking, support for dependences, priorities, task reductions, and it also includes support for heterogeneous devices.\nWe will introduce the OmpSs basic concepts related to task-based parallelism for Symmetric Multi-Processor (SMP) cores and then quickly move to the support for heterogeneous devices. OmpSs allows to leverage existing OpenCL and CUDA kernels without the burden to have to deal with data copies to/from the devices. Data copies are just triggered automatically by the OmpSs runtime, based on the task dependence annotations. Furthermore, we will talk about the backend engine that enables the whole tasking model: the runtime system. For example, Nanos++ runtime system for OmpSs and OpenMP, and GOMP, IOMP, MTSP runtime systems for OpenMP. They provide services to support task parallelism using synchronizations based on data-dependencies, and they map task to threads in order to run them.\nMTSP (Multicore Task Scheduling Platform) is a lightweight runtime system developed from scratch at UNICAMP (Brazil) for OpenMP 4.0. It focuses on supporting OpenMP 4.0 tasks with the least possible overhead, thus enabling task-based programming on embedded multicore systems, such as smartphones, tablets, etc. MTSP provides a hierarchical API to manage the creation, synchronization, and retirement of tasks, which eases the process of integrating a hardware accelerator into its pipeline, thus lowering the task management overhead and improving application scalability.\nIn addition to the presentations at the tutorial, there will also be a demo for some tools that ease programming and debugging taskified applications. In order to make the most out of the tutorial, it is highly recommended to visit https://pm.bsc.es/ompss-downloads, and download the OmpSs Virtual Machines before coming to the tutorial. The virtual machine contains the OmpSs environment already preinstalled, which helps the participants to quickly experiment with task-based programming.",
      "Affiliations": [
        "Barcelona Supercomputing Center",
        "UNICAMP",
        "LG Electronics San Jose Lab"
      ],
      "AffiliationsString": "Barcelona Supercomputing Center, UNICAMP, LG Electronics San Jose Lab",
      "Authors": [
        "jaumebosch",
        "lucasmorais",
        "tamerdallou"
      ],
      "Key": "seps2016-tutorial-task-based-programming-for-embedded-multicore-systems",
      "PersonsString": "Jaume Bosch, Lucas Morais and Tamer Dallou",
      "Title": "SEPS Tutorial: Task-Based Programming Everywhere from Supercomputing to Embedded Multicore Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/seps2016-tutorial-task-based-programming-for-embedded-multicore-systems"
    },
    {
      "Abstract": "In the years since the 2004 publication of Patterns for Parallel Programming by Mattson, Sanders, and Massingill, the parallel computing landscape has changed significantly. Not only has the need to be able to exploit concurrency and parallelism expanded beyond the realm of specialists, which has greatly increased the number of software engineers developing parallel programs, but new hardware platforms such as GPGPUs, have become widely available. The talk will discuss an updated version of the pattern language for parallel programming. The updated version maintains the goal of the original pattern language, which was to convey expert knowledge of parallel program design to non-experts, but has been updated and extended to reflect recent advances in hardware. It also reflects the authors\u2019 experiences teaching parallel programming using patterns, and collaborating with domain scientists to develop a large parallel software system for computational chemistry.",
      "Affiliations": ["University of Florida"],
      "AffiliationsString": "University of Florida",
      "Authors": ["beverlysanders"],
      "Key": "seps2016-keynote",
      "PersonsString": "Beverly Sanders",
      "Title": "SEPS Keynote: Patterns for Parallel Programming: New and Improved!",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/seps2016-keynote"
    },
    {
      "Abstract": "Divide-and-Conquer (DaC) is a sequential programming paradigm which models a large class of algorithms used in real-life applications. Although suitable to extract parallelism in a straightforward way, the parallel implementation of DaC algorithms still requires some expertise in parallel programming tools by the programmer. \nIn this paper we aim at providing to non-expert programmers a high-level solution for fast prototyping parallel DaC programs on multicores with minimal programming effort. \nFollowing the rationale of parallel design pattern methodology, we design a C++11-compliant template interface for developing parallel DaC programs. The interface is implemented using different back-end frameworks (i.e. OpenMP, Intel TBB and FastFlow) supporting source code reuse and a certain amount of performance portability. \nExperiments on a 24-core Intel server show the effectiveness of our approach: with a reduced programming effort the programmer easily prototypes parallel versions with performance comparable with hand-made parallelizations.",
      "Affiliations": [
        "University of Pisa, Italy",
        "University of Pisa, Italy",
        "University of Pisa, Italy",
        "University of Pisa, Italy"
      ],
      "AffiliationsString": "University of Pisa, Italy",
      "Authors": [
        "marcodanelutto",
        "tizianodematteis",
        "gabrielemencagli",
        "massimotorquati"
      ],
      "Key": "seps2016-a-divide-and-conquer-parallel-pattern-implementation-for-multicores",
      "PersonsString": "Marco Danelutto, Tiziano De Matteis, Gabriele Mencagli and Massimo Torquati",
      "Title": "A Divide-and-Conquer Parallel Pattern Implementation for Multicores",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/seps2016-a-divide-and-conquer-parallel-pattern-implementation-for-multicores"
    },
    {
      "Abstract": "Aiming at sustainable performance improvement in the upcoming computing systems composed of tightly coupled heterogeneous components, the use of advanced methods and techniques supporting developers in creating parallel applications or parallelizing and re-engineering sequential legacy applications is essential. Programming patterns for parallel systems are important interfaces that connect programmers with the underlying systems. To generate high performance code from programs written with parallel patterns, tools such as translators or compilers are key enablers for it. Parallel software needs runtime libraries or runtime support, as we will discuss in task-based programming in the tutorial session of the Workshop SEPS 2016. In this panel session, we discuss these cross-layer techniques advancing toward heterogeneous computing systems that could appear in the near future.",
      "Affiliations": [
        "Tokyo Institute of Technology",
        "University of Amsterdam",
        "Waseda University",
        "University of Florida"
      ],
      "AffiliationsString": "Tokyo Institute of Technology, University of Amsterdam, Waseda University, University of Florida",
      "Authors": [
        "yukinorisato",
        "clemensgrelck",
        "keijikimura",
        "beverlysanders"
      ],
      "Key": "seps2016-panel",
      "PersonsString": "Yukinori Sato, Clemens Grelck, Keiji Kimura  and Beverly Sanders",
      "Title": "SEPS Panel discussion: Engineering software performance for upcoming heterogeneous computing systems - through programming patterns, runtime systems and tools",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/seps2016-panel"
    },
    {
      "Abstract": "Wizards Workbench is a new language workbench designed to develop source code processing tools that translate from a simple domain specific language to a general purpose programming language. These tools are intended to improve developer productivity by reducing the amount of similar code that has to be written to achieve similar but distinct tasks. In this paper we introduce Wizards Workbench and describe solutions to three of the evolution and reuse benchmark problems from the 2016 Language Workbench Challenge.",
      "Affiliations": [
        "University of Glasgow",
        "University of Glasgow"
      ],
      "AffiliationsString": "University of Glasgow",
      "Authors": [
        "niallbarr",
        "jeremysinger"
      ],
      "Key": "lwc2016-solutions-to-three-language-workbench-challenges-using-wizards-workbench",
      "PersonsString": "Niall Barr and Jeremy Singer",
      "Title": "Solutions to Three Language Workbench Challenges using Wizards Workbench",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/lwc2016-solutions-to-three-language-workbench-challenges-using-wizards-workbench"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "samde2016-metadata-catalogue-interactive-hands-on",
      "PersonsString": "",
      "Title": "Metadata Catalogue: Interactive Hands-On",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/samde2016-metadata-catalogue-interactive-hands-on"
    },
    {
      "Abstract": "We have been working full time over the past ten years creating Domain Specific Languages (DSLs) and Model Driven Engineering (MDE) solutions for many different companies. In that time, although one wouldn\u2019t think it was so, we have found the most important element of these two areas of software technologies that must be understood very clearly by all involved (from customer to developer) is the anatomy and definitions of the terms of MDE and DSL themselves, in their raw simplicity. This talk relays our experiences in clarifying these terms with both technical and non-technical personnel.",
      "Affiliations": ["MDE Systems Inc."],
      "AffiliationsString": "MDE Systems Inc.",
      "Authors": ["brucetrask"],
      "Key": "dsldi2016-the-definition-and-anatomy-of-model-driven-engineering-and-domain-specific-languages",
      "PersonsString": "Bruce Trask",
      "Title": "The Definition and Anatomy of Model Driven Engineering and Domain Specific Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-the-definition-and-anatomy-of-model-driven-engineering-and-domain-specific-languages"
    },
    {
      "Abstract": "In the proposed talk the following two open problems of software language engineering are discussed: (1) the process of designing a domain-specific software language and (2) the method of teaching domain-specific language design.\nAt DSLDI I would like to have a discussion around the Domain-Schema-Grammar-Actions model of DSL design, touch on related topics such as software language design and the approaches to teaching it, and consider the model\u2019s viability as well as its alternatives.",
      "Affiliations": ["Raincode, Belgium"],
      "AffiliationsString": "Raincode, Belgium",
      "Authors": ["vadimzaytsev"],
      "Key": "dsldi2016-the-dsga-model-of-dsl-design-domain-schema-grammar-actions",
      "PersonsString": "Vadim Zaytsev",
      "Title": "The DSGA Model of DSL Design: Domain, Schema, Grammar, Actions",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-the-dsga-model-of-dsl-design-domain-schema-grammar-actions"
    },
    {
      "Abstract": "Domain-specific languages can be embedded in a variety of ways within a host language. The choice of embedding approach entails significant tradeoffs in the usability of the embedded DSL. We argue embedding DSLs \\textit{naturally} within the host language results in the best experience for end users of the DSL. A \\textit{naturally embedded DSL} is one that uses natural syntax, static semantics, and dynamic semantics for the DSL, all of which may differ from the host language. Furthermore, it must be possible to use DSLs together naturally - meaning that different DSLs cannot conflict, and the programmer can easily tell which code is written in which language.",
      "Affiliations": [
        "Carnegie Mellon University",
        "Victoria University of Wellington"
      ],
      "AffiliationsString": "Carnegie Mellon University, Victoria University of Wellington",
      "Authors": [
        "jonathanaldrich",
        "alexpotanin"
      ],
      "Key": "dsldi2016-naturally-embedded-dsls",
      "PersonsString": "Jonathan Aldrich and Alex Potanin",
      "Title": "Naturally Embedded DSLs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-naturally-embedded-dsls"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Oxford"],
      "AffiliationsString": "University of Oxford",
      "Authors": ["jameswelch"],
      "Key": "samde2016-the-metadata-catalogue",
      "PersonsString": "James Welch",
      "Title": "Introducing the The Metadata Catalogue",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/samde2016-the-metadata-catalogue"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "lwc2016-preparation-discussion",
      "PersonsString": "",
      "Title": "Preparation Discussion",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/lwc2016-preparation-discussion"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "samde2016-booster-a-guided-tour",
      "PersonsString": "",
      "Title": "Booster: A Guided Tour",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/samde2016-booster-a-guided-tour"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Oxford"],
      "AffiliationsString": "University of Oxford",
      "Authors": ["seyyedshah"],
      "Key": "samde2016-booster-background-and-tools",
      "PersonsString": "Seyyed Shah",
      "Title": "Booster: A Gentle Introduction",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/samde2016-booster-background-and-tools"
    },
    {
      "Abstract": "Racket espouses the view that full-fledged problem solving almost always calls for language design. In support of this view, it implements a notion of linguistic reuse, which allows programmers to rapidly develop and deploy new programming languages. Together with DrRacket, its IDE, the Racket ecosystem thus makes up a true language workbench. This paper demonstrates Racket\u2019s capabilities with an implementation of the 2016 Language Workbench Challenge. Building on a concise implementation of MiniJava, it shows how it is easy it is to add new notation, constrain constructs, and create IDE tools.",
      "Affiliations": [
        "Northwestern University",
        "Northwestern University",
        "Univeristy of Utah",
        "Northeastern University",
        "Northeastern University",
        "University of Utah",
        "Northwestern University",
        "Northeastern University"
      ],
      "AffiliationsString": "Northwestern University, Univeristy of Utah, Northeastern University, University of Utah",
      "Authors": [
        "danielfeltey",
        "spencerpflorence",
        "timknutson",
        "vincentstamour",
        "ryanculpepper",
        "matthewflatt",
        "robbyfindler",
        "matthiasfelleisen"
      ],
      "Key": "lwc2016-languages-the-racket-way-submission-to-the-2016-language-workbench-challenge",
      "PersonsString": "Daniel Feltey, Spencer P. Florence, Tim Knutson, Vincent St-Amour, Ryan Culpepper, Matthew Flatt, Robby Findler and Matthias Felleisen",
      "Title": "Languages the Racket Way: Submission to the 2016 Language Workbench Challenge",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/lwc2016-languages-the-racket-way-submission-to-the-2016-language-workbench-challenge"
    },
    {
      "Abstract": "This paper represents Cedalion\u2019s answer to the 2016 Language Workbench Challenge. We provide solutions to 13 out of the 25 benchmark problems that were most relevant to Cedalion.",
      "Affiliations": [
        "Open University and Technion IIT",
        "University of Haifa"
      ],
      "AffiliationsString": "Open University and Technion IIT, University of Haifa",
      "Authors": [
        "davidlorenz",
        "boazrosenan"
      ],
      "Key": "lwc2016-cedalion-s-response-to-the-2016-language-workbench-challenge",
      "PersonsString": "David H. Lorenz and Boaz Rosenan",
      "Title": "Cedalion's Response to the 2016 Language Workbench Challenge",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/lwc2016-cedalion-s-response-to-the-2016-language-workbench-challenge"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Oxford, UK"],
      "AffiliationsString": "University of Oxford, UK",
      "Authors": ["jeremygibbons"],
      "Key": "samde2016-opening",
      "PersonsString": "Jeremy Gibbons",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/samde2016-opening"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "samde2016-the-model-ctalogue-a-guided-tour",
      "PersonsString": "",
      "Title": "Metadata Catalogue: A Guided Tour",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/samde2016-the-model-ctalogue-a-guided-tour"
    },
    {
      "Abstract": "This paper describes a solution for the SPLASH 2016 Language Workbench Challenge (LWC) workshop, using the JetBrains Meta Programming System (MPS) language workbench. As the main focus of the LWC is on implementation and not on writing a paper, we used the mbeddr documentation language to describe the solutions to the challenges posed in the LWC. In this way, the showcasing of a solution is co-located with its implementation, making it easier for the reader to try out the solutions and to better understand them. Therefore we would encourage you to actually open the solution implementation (see README.md for setting it up) and try it out. JetBrains MPS has evolved into a powerful and flexible tool that can be used to address most of the language engineering challenges in the LWC. The feature-richness, and the scale of practical applicability of Jetbrains MPS increases even more when using the mbeddr platform extensions and other plugins developed by the MPS community.",
      "Affiliations": [
        "Oce",
        "Sioux Embedded Systems",
        "Independent",
        "Eindhoven University of Technology"
      ],
      "AffiliationsString": "Oce, Sioux Embedded Systems, Independent, Eindhoven University of Technology",
      "Authors": [
        "eugenschindler",
        "klemensschindler",
        "federicotomassetti",
        "anamariasutii1"
      ],
      "Key": "lwc2016-language-workbench-challenge-2016-the-jetbrains-meta-programming-system",
      "PersonsString": "Eugen Schindler, Klemens Schindler, Federico Tomassetti and Ana Maria Sutii",
      "Title": "Language Workbench Challenge 2016: the JetBrains Meta Programming System",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/lwc2016-language-workbench-challenge-2016-the-jetbrains-meta-programming-system"
    },
    {
      "Abstract": "",
      "Affiliations": ["Wolters Kluwer, Germany"],
      "AffiliationsString": "Wolters Kluwer, Germany",
      "Authors": ["christiandirschl"],
      "Key": "samde2016-the-aligned-vision",
      "PersonsString": "Christian Dirschl",
      "Title": "The ALIGNED vision",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/samde2016-the-aligned-vision"
    },
    {
      "Abstract": "Language engineering is not a one man show \u2013 yet tools tend to expect so by splitting the work into separate formats, tools and roles. We discuss how tooling can make language engineering and language use a collaborative process leading to better quality languages, improved acceptance and enable continuous language refinements. Many of these collaborative features for language engineering are implemented into MetaEdit+. We describe these collaborative capabilities in chronological order starting from the initial language design leaving the most important \u2013 maintenance - the last.",
      "Affiliations": ["MetaCase, Finland"],
      "AffiliationsString": "MetaCase, Finland",
      "Authors": ["juhapekkatolvanen"],
      "Key": "dsldi2016-collaborative-design-implementation-and-use-of-domain-specific-languages",
      "PersonsString": "Juha-Pekka Tolvanen",
      "Title": "Collaborative Design, Implementation and Use of Domain-Specific Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-collaborative-design-implementation-and-use-of-domain-specific-languages"
    },
    {
      "Abstract": "This document describes solutions in Rascal to three language workbench challenges, based on the questionnaire language QL: code in prose, computed properties, and language extension.",
      "Affiliations": [
        "CWI",
        "CWI & University of Groningen"
      ],
      "AffiliationsString": "CWI, CWI & University of Groningen",
      "Authors": [
        "pabloinostroza",
        "tijsvanderstorm"
      ],
      "Key": "lwc2016-the-rascal-approach-to-code-in-prose-computed-properties-and-language-extension",
      "PersonsString": "Pablo Inostroza and Tijs van der Storm",
      "Title": "The Rascal Approach to Code in Prose, Computed Properties, and Language Extension",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/lwc2016-the-rascal-approach-to-code-in-prose-computed-properties-and-language-extension"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Oxford, UK"],
      "AffiliationsString": "University of Oxford, UK",
      "Authors": ["jeremygibbons"],
      "Key": "samde2016-wrap-up-and-discussion",
      "PersonsString": "Jeremy Gibbons",
      "Title": "Wrap-up and discussion",
      "Type": "Day closing",
      "URL": "http://2016.splashcon.org/event/samde2016-wrap-up-and-discussion"
    },
    {
      "Abstract": "The need to translate linear algebra operations into efficient code arises in a multitude of applications, for instance, in information theory and regularization. Given such expressions, we are interested in the automatic generation of code that is at least as fast and as numerically stable as what an expert would produce.\nConceptually, the problem is similar to how compilers cast scalar expressions in terms of the available instruction set. The corresponding problem for linear algebra expressions (involving matrices) is much more challenging, and requires expertise in both numerical linear algebra and high-performance computing. On the one hand, one wants to take advantage of highly optimized building blocks for matrix operations, such as those as provided by the BLAS and LAPACK libraries. On the other hand, transformations based on associativity, commutativity and distributivity play an essential role. Further complication comes from the fact that matrices frequently have structures and properties that can be exploited both to transform\u2014and thus simplify\u2014expressions, and to evaluate them more efficiently. The application of this kind of knowledge affects not only the computational cost, but also the necessary amount of storage space, and numerical accuracy.",
      "Affiliations": [
        "RWTH Aachen",
        ""
      ],
      "AffiliationsString": "RWTH Aachen, ",
      "Authors": [
        "henrikbarthels",
        "paolobientinesi"
      ],
      "Key": "dsldi2016-the-matrix-chain-algorithm-to-compile-linear-algebra-expressions",
      "PersonsString": "Henrik Barthels and Paolo Bientinesi",
      "Title": "The Matrix Chain Algorithm to Compile Linear Algebra Expressions",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-the-matrix-chain-algorithm-to-compile-linear-algebra-expressions"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Bartlett School of Architecture, UCL",
        "ARM, Ltd"
      ],
      "AffiliationsString": "Bartlett School of Architecture, UCL, ARM, Ltd",
      "Authors": [
        "robertaish",
        "emmanuelmendoza"
      ],
      "Key": "dsldi2016-designscript-a-scalable-multi-paradigm-domain-specific-end-user-language-and-modelling-environment-for-architectural-computation",
      "PersonsString": "Robert Aish and Emmanuel Mendoza",
      "Title": "DesignScript: a scalable multi-paradigm domain-specific end-user language and modelling environment for architectural computation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-designscript-a-scalable-multi-paradigm-domain-specific-end-user-language-and-modelling-environment-for-architectural-computation"
    },
    {
      "Abstract": "Introductory programming languages have been researched for multiple decades. We will point out the lack of a systematic prescriptive theory in the field, and propose to consider the explanation-oriented approach as a possible step to remedy this situation. We also explain how the seed for this idea is already present in work on traceability which evolved towards explanation-orientation. Regarding our goal of systematizing introductory language theory, we believe one can make use of both the insight gained from research on explanation-oriented languages as well as certain sources of that research. As an example for this, we take a closer look at narrative structure, a concept utilized in both explanation-oriented and introductory programming.",
      "Affiliations": ["University of Tübingen"],
      "AffiliationsString": "University of Tübingen",
      "Authors": ["julianjabs"],
      "Key": "dsldi2016-towards-explanation-oriented-introductory-programming",
      "PersonsString": "Julian Jabs",
      "Title": "Towards explanation-oriented introductory programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-towards-explanation-oriented-introductory-programming"
    },
    {
      "Abstract": "Numerical software in computational science and engineering often relies on highly-optimized building blocks from libraries such as BLAS and LAPACK. Examples of such blocks include, but are not limited to, matrix multiplications, matrix factorizations, and solvers for Sylvester-like equations. While the BLAS and LAPACK libraries have been very successful in providing portable performance for a wide range of computing architectures, they still present severe limitations in terms of flexibility. First, these libraries are optimized for large matrices (of sizes at least in the hundreds). Second, the interface in terms of operations and matrix structures they provide specifically targets computational science. These limitations can render those libraries suboptimal in performance or code size for applications in communications, graphics, and control, which may require smaller scale computations and a more flexible interface. To overcome these limitations, we advocate a domain-specific program generator capable of producing library routines tailored to the specific needs of the application in terms of sizes, interface, and target architecture. In this work, we introduce such a generator that translates a desired linear algebra computation, annotated with matrix properties, into optimized C code, optionally vectorized with intrinsics. The generator unites prior work on two independent frameworks: The FLAME-based CL1CK and LGen, which was designed after Spiral. For a given linear algebra problem such as a matrix factorization, matrix inversion, or equation to be solved, CL1CK synthesizes families of blocked algorithms that rely on basic computations provided by BLAS. These, in turn, are compiled into efficient, vectorized C code by (an extension of) LGen. As case studies, we consider the Cholesky decomposition, and solvers for the continuous-time Lyapunov and Sylvester equations. We compare the performance of our generated code with the commercial Intel MKL showing competitive results.",
      "Affiliations": [
        "ETH Zurich",
        "RWTH Aachen",
        "ETH Zurich",
        ""
      ],
      "AffiliationsString": "ETH Zurich, RWTH Aachen, ",
      "Authors": [
        "danielegspampinato",
        "diegofabregattraver",
        "markuspuschel",
        "paolobientinesi"
      ],
      "Key": "dsldi2016-program-generation-for-linear-algebra-using-multiple-layers-of-dsls",
      "PersonsString": "Daniele G. Spampinato, Diego Fabregat-Traver, Markus Püschel and Paolo Bientinesi",
      "Title": "Program Generation for Linear Algebra Using Multiple Layers of DSLs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-program-generation-for-linear-algebra-using-multiple-layers-of-dsls"
    },
    {
      "Abstract": "We are close to a future in which everyone can and will program. Whether it is some Javascript, some R or an extensive spreadsheet, programming happens everywhere. What do end-users do in the wild? And what can we learn from that as programming language designers?\nIn this talk Felienne will summarize her research on the topic of end-user testing, error finding and refactoring, as well as presenting a sneak peek into the future of her research as Delft University.",
      "Affiliations": ["Delft University of Technology"],
      "AffiliationsString": "Delft University of Technology",
      "Authors": ["feliennehermans"],
      "Key": "dsldi2016-keynote",
      "PersonsString": "Felienne Hermans",
      "Title": "Small, simple and smelly: What we can learn from examining end-user artifacts?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsldi2016-keynote"
    },
    {
      "Abstract": "We describe a solution, written using the Whole Platform, to a selection of benchmark problems proposed to evaluate and compare language workbenches. More specifically, we selected the problems best suited to highlight the composability feature of the Whole Platform. We think that the programming languages and consequently the end user applications are mainly designed to be standalone. Composition of program functionalities is supported only in some very limited and anticipated ways, and this severely restrict the availability of the knowledge embedded in a software product. This may seem natural and unavoidable, but it is not if you take as a reference the human mind. We believe that the outcome of software development should be additional knowledge incorporated in the language workbench and that every form of modularity, including applications, should be relegated as a mean to package and distribute knowledge from a system to another.",
      "Affiliations": [
        "Whole Factory srl",
        "Metatis sas"
      ],
      "AffiliationsString": "Whole Factory srl, Metatis sas",
      "Authors": [
        "riccardosolmi",
        "enricopersiani"
      ],
      "Key": "lwc2016-whole-platform-solution-to-a-selection-of-lwc16-benchmark-problems",
      "PersonsString": "Riccardo Solmi and Enrico Persiani",
      "Title": "Whole Platform Solution to a Selection of LWC16 Benchmark Problems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/lwc2016-whole-platform-solution-to-a-selection-of-lwc16-benchmark-problems"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "lwc2016-future-challenges-break-out-sessions",
      "PersonsString": "",
      "Title": "Future challenges / Break out sessions",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/lwc2016-future-challenges-break-out-sessions"
    },
    {
      "Abstract": "Language workbenches are tools that help language designers to design and implement (domain-specific) programming languages, aiming to produce a full featured programming environment from a high-level language description. A recent paper, resulting from a series of language workbench challenge workshops, describes a collection of benchmark problems for language workbench research. In this paper, we describe solutions to two of these benchmark problems in the Spoofax Language Workbench, i.e. default formatting and skeleton editing. In addition, we introduce a new benchmark problem \u2014 bootstrapping of meta-languages in a workbench \u2014 and describe the support for bootstrapping we developed for Spoofax.",
      "Affiliations": [
        "Delft University of Technology",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands"
      ],
      "AffiliationsString": "Delft University of Technology, Delft University of Technology, Netherlands",
      "Authors": [
        "gabrielkonat",
        "luiseduardodesouzaamorim",
        "sebastianerdweg",
        "eelcovisser"
      ],
      "Key": "lwc2016-bootstrapping-default-formatting-and-skeleton-editing-in-the-spoofax-language-workbench",
      "PersonsString": "Gabriël Konat, Luís Eduardo de Souza Amorim, Sebastian Erdweg and Eelco Visser",
      "Title": "Bootstrapping, Default Formatting, and Skeleton Editing in the Spoofax Language Workbench",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/lwc2016-bootstrapping-default-formatting-and-skeleton-editing-in-the-spoofax-language-workbench"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "samde2016-booster-interactive-hands-on",
      "PersonsString": "",
      "Title": "Booster: Interactive Hands-On",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/samde2016-booster-interactive-hands-on"
    },
    {
      "Abstract": "When a program fails, it leaves behind fragmentary clues as to what went wrong: core dumps, stack traces, log files, and so on. In this talk I describe CSI: Crash Scene Investigation, which puts these postmortem clues to work. CSI uses lightweight instrumentation and compile-time optimization to improve the quality of clues left behind in the event of a failure. After failure occurs, CSI gathers clues and performs a best-effort reconstruction of events leading up to the final, fatal blow. Our hybrid static/dynamic approach adds minimal run-time cost while providing rich, informative context in support of human debugging efforts.",
      "Affiliations": ["University of Wisconsin\u2013Madison"],
      "AffiliationsString": "University of Wisconsin\u2013Madison",
      "Authors": ["benliblit"],
      "Key": "woda2016-invited-talk-ben-liblit",
      "PersonsString": "Ben Liblit",
      "Title": "Best-Effort Failure Reconstruction Using CSI: Crash Scene Investigation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-invited-talk-ben-liblit"
    },
    {
      "Abstract": "Test suites should test exceptional behavior to detect faults in error-handling code. However, manually-written test suites tend to neglect exceptional behavior. Automatically-generated test suites, on the other hand, lack test oracles that verify whether runtime exceptions are the expected behavior of the code under test.\nIn this talk I will present a technique that automatically creates test oracles for exceptional behaviors from Javadoc comments. The technique uses a combination of natural language processing and program analysis. Our implementation, Toradocu, can be combined with a test input generation tool. Our experimental evaluation shows that Toradocu improves the fault-finding effectiveness of automatically-generated test suites, while at the same time it reduces the number of false positives.",
      "Affiliations": ["IMDEA Software Institute"],
      "AffiliationsString": "IMDEA Software Institute",
      "Authors": ["alessandragorla"],
      "Key": "woda2016-invited-talk-alessandra-gorla",
      "PersonsString": "Alessandra Gorla",
      "Title": "Inferring test oracles from the Javadoc documentation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-invited-talk-alessandra-gorla"
    },
    {
      "Abstract": "For years, the program analysis community has accepted that runtime enforcement is a technique that is in many ways preferable to static analysis and is amenable to deployment, as long as we keep the runtime overhead low enough. In this talk we will try to understand what actually gets deployed and when. Given that the cost of independent runtime enforcement mechanisms is usually additive, we will be confronted with the question: can we afford always-on runtime enforcement? This talk will summarize some of the experiences we have accumulated as a community and propose some insights.",
      "Affiliations": ["Microsoft Research"],
      "AffiliationsString": "Microsoft Research",
      "Authors": ["benjaminlivshits"],
      "Key": "woda2016-invited-talk-benjamin-livshits",
      "PersonsString": "Ben Livshits",
      "Title": "The high-interest credit card of runtime enforcement",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-invited-talk-benjamin-livshits"
    },
    {
      "Abstract": "Almost every modern program stores its data in pointer-based data structures. As a result, any tool that wants to discover properties of that data \u2013 either statically or dynamically \u2013 needs to understand the organization of objects in the heap. The increasing scale and complexity of these structures, however, has made this job very difficult. The problem is particularly vexing for static analysis, but also affects dynamic analysis, as well as runtime systems, such as garbage collectors, which must manage these data structures. But what constitutes a suitable characterization of heap behavior? Prior work mostly represents the extremes: at the lowest level, producing extremely detailed traces or graphs, or at the highest level, producing summary statistics, such as instance counts, pointer in/out degree, or lifetime profiles. While these representations may be useful for specific purposes, they are far removed from the model that the programmer has in his or her mind. In this talk I will discuss this prior work, including past heap analysis projects from my own group, and describe our current work on tools that produce a more intuitive story about the large-scale structures in the heap, how they change over time, and how that relates to the program structure.",
      "Affiliations": ["Tufts University"],
      "AffiliationsString": "Tufts University",
      "Authors": ["samguyer"],
      "Key": "woda2016-invited-talk-sam-guyer",
      "PersonsString": "Sam Guyer",
      "Title": "What\u2019s going on in the heap?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-invited-talk-sam-guyer"
    },
    {
      "Abstract": "Metamorphic testing is a well-established technique for testing software for which no oracle is readily available. The idea is to exploit known properties of an application domain to check consistency of the behaviour of a software application for particular inputs, without knowing what the right behaviour to be expected is for these inputs. The simplest example of metamorphic testing is that to test the trigonometric function \u201csin\u201d, we could check whether, for a given value x, sin(x) and sin(x + 2π) are found to have the same value (modulo round-off error). If they do not, \u201csin\u201d has been implemented incorrectly and the mismatch provides a starting point for debugging.\nIn recent work my group others have investigated applying metamorphic techniques for testing compilers, and are now exploring ideas for how to apply metamorphic testing to program analysers more generally. In particular, we are interested in exploring the use of semantics-preserving program transformations as a basis for checking the consistency of analysis results. In the talk I will demonstrate this in action for automated testing of compilers for GLSL, the OpenGL shading language, which is difficult to test in a traditional manner due to its deliberate lack of strict floating-point semantics. I will then talk about ideas for how to use program transformations as a basis for \u201canalysing the analyser\u201d, testing both correctness and performance characteristics of program analysis tools.",
      "Affiliations": ["Imperial College London"],
      "AffiliationsString": "Imperial College London",
      "Authors": ["alastairdonaldson"],
      "Key": "woda2016-invited-talk-alastair-donaldson",
      "PersonsString": "Alastair Donaldson",
      "Title": "Metamorphic Testing for Compilers and Program Analysers",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-invited-talk-alastair-donaldson"
    },
    {
      "Abstract": "Many bugs in JavaScript applications manifest themselves as objects that have incorrect property values when a failure occurs. For this type of error, stack traces and logs are often insufficient for diagnosing problems. In such cases, it is helpful for developers to know the control flow path from the creation of an object to a crashing statement. Such crash paths are useful for understanding where the object originated and whether any properties of the object were corrupted since its creation. We present a feedback-directed instrumentation technique for computing crash paths that allows the instrumentation overhead to be distributed over a crowd of users and to reduce it for users who do not encounter the crash. We implemented our technique in a tool, Crowdie, and evaluated it on 10 real-world issues for which error messages and stack traces are insufficient to isolate the problem. Our results show that feedback-directed instrumentation requires 5% to 25% of the program to be instrumented, that the same crash must be observed 3 to 10 times to discover the crash path, and that feedback-directed instrumentation typically slows down execution by a factor 2x-9x compared to 8x-90x for an approach where applications are fully instrumented.",
      "Affiliations": ["Samsung Research America"],
      "AffiliationsString": "Samsung Research America",
      "Authors": ["franktip"],
      "Key": "woda2016-invited-talk-frank-tip",
      "PersonsString": "Frank Tip",
      "Title": "Feedback-Directed Instrumentation for Deployed JavaScript Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-invited-talk-frank-tip"
    },
    {
      "Abstract": "\u201cSoundness\u201d in static and dynamic program analysis is an oft-used term with an evasive meaning. Part of the difficulty is the ambiguity in terminology: typically a sound dynamic analysis is one that only warns of true bugs, whereas a sound static analysis is one that catches all bugs\u2013the complement of the previous definition. Beyond terminology, however, there is a deeper issue. Static analyses that are sound for a restricted language model are typically not sound for full-fledged languages. Indeed, no practical static analysis framework (yes, this includes virtually any static analysis framework you can name, if it is meant to run on real programs) is sound in practice. The goal of the talk is to explain why this is the case and to discuss what can be done going forward.",
      "Affiliations": ["University of Athens"],
      "AffiliationsString": "University of Athens",
      "Authors": ["yannissmaragdakis"],
      "Key": "woda2016-invited-talk-yannis-smaragdakis",
      "PersonsString": "Yannis Smaragdakis",
      "Title": "From Soundiness to Soundness ",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-invited-talk-yannis-smaragdakis"
    },
    {
      "Abstract": "Emerging consumer electronics products are running the same software platforms that power smartphones. This leads to the appealing idea that a uniform programming abstraction can be used for app development for a range of devices, from wearables to smartphones. In practice, however, devices vary in their hardware capabilities, and this has an impact on app development. In this talk, I will focus on ways in which JavaScript may be used and/or run differently to accommodate the different hardware capabilities across devices. Specifically, I will present a subset of JavaScript that strikes a balance between retaining the flavor of JavaScript (e.g. use of prototype inheritance, no explicit type declarations) and the possibility of ahead-of-time compilation to efficient code with a small memory footprint. I will also present our experiences in designing and implementing type inference for this subset of JavaScript.",
      "Affiliations": ["Samsung Research America"],
      "AffiliationsString": "Samsung Research America",
      "Authors": ["coleschlesinger"],
      "Key": "woda2016-javascript-in-the-small",
      "PersonsString": "Cole Schlesinger",
      "Title": "JavaScript in the Small",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-javascript-in-the-small"
    },
    {
      "Abstract": "Android applications, or apps, provide useful features to end-users, but many apps also contain malicious behavior. Modern malware makes understanding such behavior challenging by behaving maliciously only under particular conditions. For example, a malware app may check whether it runs on a real device and not an emulator, in a particular country, and alongside a specific target app, such as a vulnerable banking app. To observe the malicious behavior, an analyst must find out and emulate all these app-specific constraints. In this talk, we will present FuzzDroid, a framework for automatically generating an Android execution environment where an app exposes its malicious behavior. The key idea is to combine an extensible set of static and dynamic analyses through a search-based algorithm that steers the app toward a configurable target location. On recent malware, the approach reaches the target location in 75% of the apps. In total, we reach 240 code locations within an average time of only one minute. To reach these code locations, FuzzDroid generates 106 different environments, too many for a human analyst to create manually.",
      "Affiliations": ["TU Darmstadt, Germany"],
      "AffiliationsString": "TU Darmstadt, Germany",
      "Authors": ["stevenarzt"],
      "Key": "woda2016-making-malory-behave-maliciously-targeted-fuzzing-of-android-applications",
      "PersonsString": "Steven Arzt",
      "Title": "Making Malory Behave Maliciously: Targeted Fuzzing of Android Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/woda2016-making-malory-behave-maliciously-targeted-fuzzing-of-android-applications"
    },
    {
      "Abstract": "JavaProgrammersUseCamelCaseToSeparateWordsInIdentifiers. Pythonistas_and_others_use_underscore_in_their_identifiers. Polite programmers can use spaces in their identifiers if needed.",
      "Affiliations": [
        "University of Groningen",
        "University of Bern"
      ],
      "AffiliationsString": "University of Groningen, University of Bern",
      "Authors": [
        "mirceaflungu",
        "jankurs"
      ],
      "Key": "nool2016-polite-programmers-use-spaces-in-identifiers-when-needed",
      "PersonsString": "Mircea F. Lungu and Jan Kurš",
      "Title": "Polite Programmers, Use Spaces in Identifiers When Needed",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-polite-programmers-use-spaces-in-identifiers-when-needed"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "nool2016-welcome",
      "PersonsString": "",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/nool2016-welcome"
    },
    {
      "Abstract": "We present Hot Objects, actors which logically support processing of multiple messages in parallel, in the Encore programming language. The internal behaviour of Hot objects is encapsulated inside an asynchronous interface. We discuss compositionality of Hot Objects and the reintroduction of locks into actor-based systems.",
      "Affiliations": [
        "Uppsala University",
        "Spotify"
      ],
      "AffiliationsString": "Uppsala University, Spotify",
      "Authors": [
        "tobiaswrigstad",
        "thorbiornfritzon"
      ],
      "Key": "nool2016-actors-and-hot-objects",
      "PersonsString": "Tobias Wrigstad and Thorbiörn Fritzon",
      "Title": "Actors and Hot Objects",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-actors-and-hot-objects"
    },
    {
      "Abstract": "Nomen is an experimental, dynamically typed OO programming language which compiles to Java source code. The translation to Java is transparent: a class in Nomen is a class in Java, a method in Nomen is a method in Java, etc. The generated code is thus relatively idiomatic (allowing the JVM to optimize method dispatch), and easy to map back to Nomen code during debugging.",
      "Affiliations": ["CWI & University of Groningen"],
      "AffiliationsString": "CWI & University of Groningen",
      "Authors": ["tijsvanderstorm"],
      "Key": "nool2016-nomen-a-dynamically-typed-oo-programming-language-transpiled-to-java",
      "PersonsString": "Tijs van der Storm",
      "Title": "Nomen: A Dynamically Typed OO Programming Language, Transpiled to Java",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-nomen-a-dynamically-typed-oo-programming-language-transpiled-to-java"
    },
    {
      "Abstract": "How should code reuse be supported in a statically-typed, expression-oriented programming language? Neither function-based reuse nor class-based inheritance provides a good solution in this setting. We question the requirements for code reuse, proposing that future work evaluate whether open recursion is really needed to support cases commonly seen in industry. In addition, we explore the design space of forwarding and delegation mechanisms, finding that there are solutions that are surprisingly expressive despite their simplicity.\nFunction-based reuse works well at the small scale, but at the medium scale we would like to compose groups of functions and perhaps state (i.e. objects). Statically-typed inheritance-based reuse works with classes as top-level declarations, but this choice is incompatible with an expression-oriented language design. First-class classes restore expression orientation, but make static typing complex.",
      "Affiliations": [
        "Carnegie Mellon University",
        "Victoria University of Wellington"
      ],
      "AffiliationsString": "Carnegie Mellon University, Victoria University of Wellington",
      "Authors": [
        "jonathanaldrich",
        "alexpotanin"
      ],
      "Key": "nool2016-delegation-revisited",
      "PersonsString": "Jonathan Aldrich and Alex Potanin",
      "Title": "Delegation Revisited",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-delegation-revisited"
    },
    {
      "Abstract": "The essence of subclassing is the ability to represent classification hierarchies reflecting domain concepts. With the right class mechanism there is no need for a separate type/subtype mechanism, and general classes may have behavior specifications so that subclassing also implies code reuse. Sometimes the application is so well defined (known) that developers may readily start out with classes that represent domain concepts. Singular objects have been around for some time, so a new kind of language with equal support for both objects and classes would simply ask for tool support for objects in the spirit of e.g. Self and support for classes as described above.",
      "Affiliations": [
        "Aarhus University & The Alexandra Institute",
        "University of Oslo"
      ],
      "AffiliationsString": "Aarhus University & The Alexandra Institute, University of Oslo",
      "Authors": [
        "olelehrmannmadsen",
        "birgermllerpedersen"
      ],
      "Key": "nool2016-the-essence-of-subclassing",
      "PersonsString": "Ole Lehrmann Madsen and Birger Møller-Pedersen",
      "Title": "The Essence of Subclassing",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-the-essence-of-subclassing"
    },
    {
      "Abstract": "We explore a form of object-oriented messaging in the context of an ownership tree, where owners can intercept messages sent to their transitively-owned objects. If all access to an object is mediated by its owner (owners-as-accessors), then we call such an object a situated object. We discuss how situated objects can offer another perspective on the perennial separation-of-concerns problem in object-oriented programs.",
      "Affiliations": ["Y Combinator Research"],
      "AffiliationsString": "Y Combinator Research",
      "Authors": ["patrickdubroy"],
      "Key": "nool2016-situated-objects",
      "PersonsString": "Patrick Dubroy",
      "Title": "Situated Objects",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-situated-objects"
    },
    {
      "Abstract": "Julia is an untyped imperative programming language designed for scientific computing. Despite being untyped, Julia provides a rich runtime type system that includes features such as inheritance, but lacks the mechanisms to ensure compliance with interfaces. We propose a static type system for a subset of Julia, called Jolt, ruling out functional interface mismatches by synthesizing abstract interfaces from concrete implementations. Jolt can rule out some type errors in existing code without any new annotations, providing additional safety for free.",
      "Affiliations": [
        "Carnegie Mellon University",
        "Northeastern University",
        "Northeastern University"
      ],
      "AffiliationsString": "Carnegie Mellon University, Northeastern University",
      "Authors": [
        "benjaminchung",
        "paleyli",
        "janvitek"
      ],
      "Key": "nool2016-static-typing-without-static-types-typing-inheritance-from-the-bottom-up",
      "PersonsString": "Benjamin Chung, Paley Li and Jan Vitek",
      "Title": "Static Typing Without Static Types - Typing Inheritance from the Bottom Up",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-static-typing-without-static-types-typing-inheritance-from-the-bottom-up"
    },
    {
      "Abstract": "Programming languages serve a dual purpose: to communicate programs to computers, and to communicate programs to humans. Indeed, it is this dual purpose that makes programming language design a constrained and challenging problem. Inheritance is an essential aspect of that second purpose: it is a tool to improve communication. Humans understand new concepts most readily by first looking at a number of concrete examples, and later abstracting over those examples. The essence of inheritance is that it mirrors this process: it provides a formal mechanism for moving from the concrete to the abstract.",
      "Affiliations": ["Portland State University"],
      "AffiliationsString": "Portland State University",
      "Authors": ["andrewblack"],
      "Key": "nool2016-the-essence-of-inheritance",
      "PersonsString": "Andrew Black",
      "Title": "The Essence of Inheritance",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-the-essence-of-inheritance"
    },
    {
      "Abstract": "It is important from the view point of separation of concerns to separate optional features from core features of classes. The decorator pattern is a major technique to achieve this in single inheritance object-oriented programming languages such as Java. There are also more advanced techniques for modularity such as multiple inheritance, mixins, traits, incomplete objects and aspect-, feature- and delta-oriented programming. This direction is helpful for implementors of classes in the sense that it helps to avoid code duplication. It however makes the use of the classes complicated because one has to pick up and compose the modules that provides optional features with the modules that provides core features manually. We propose decorators as a solution to the problem. Decorators are a simple extension of mixins. One of the important differences of decorators from mixins is automatic composition: decorators are intended to be composed with classes automatically by infering the set of decorators from the use of objects, which we call decoration inference. This paper sketches and demonstrates decorators and decoration inference through simple and small examples. It also gives and discusses issues to realize decorators.",
      "Affiliations": [
        "Tokyo Institute of Technology",
        "Ritsumeikan University"
      ],
      "AffiliationsString": "Tokyo Institute of Technology, Ritsumeikan University",
      "Authors": [
        "tomoyukiaotani",
        "tetsuokamina"
      ],
      "Key": "nool2016-towards-automatic-decoration",
      "PersonsString": "Tomoyuki Aotani and Tetsuo Kamina",
      "Title": "Towards Automatic Decoration",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/nool2016-towards-automatic-decoration"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "plateau2016-discussion-and-wrap-up",
      "PersonsString": "",
      "Title": "Discussion and Wrap Up",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-discussion-and-wrap-up"
    },
    {
      "Abstract": "Production systems are used to detect patterns in large sets of facts. These patterns are described by rules. \nRules frequently need to be modified to adapt to changing requirements, for instance to update the security policies encoded in the rules. The production system however needs to remain operational throughout these updates. Current systems provide no reflective language constructs to inspect rules and/or change them. Instead, updates are achieved by unloading the current ruleset and loading an updated set. This is not only a costly operation which renders the system unresponsive while the new ruleset is being loaded, it also necessitates implementing the update-logic elsewhere. \nIn this position-paper we introduce a meta-level to RETE; a well established pattern-matching algorithm which is used in many production systems. This meta-level embodies a reification of all the rules in the ruleset, enabling us to provide language support for reflective rules. The envisioned language constructs make it possible to write rules that (a) leverage introspection to reason about the state of business rules, and (b) adapt to changing requirements by changing business rules at runtime.",
      "Affiliations": [
        "VUB",
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "VUB, Vrije Universiteit Brussel, Vrije Universiteit Brussel, Belgium",
      "Authors": [
        "simonvandewater",
        "thierryrenaux",
        "wolfgangdemeuter"
      ],
      "Key": "meta2016-a-model-for-reflection-in-rule-based-languages",
      "PersonsString": "Simon Van de Water, Thierry Renaux and Wolfgang De Meuter",
      "Title": "A model for Reflection in Rule-Based Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-a-model-for-reflection-in-rule-based-languages"
    },
    {
      "Abstract": "Domain specific languages (DSLs) allow engineers to models their systems in terms of concepts familiar to their domain, rather than encoding them into general purpose concept, like those offered by UML. DSLs are often designed using meta-models, by means of model-driven engineering (MDE). These meta-models ,defining DSLs, evolve over time (Favre 2005), for example by new demands from the domain. Evolution of these meta-models can trigger co-evolution of models made using these meta-models (Cicchetti et al. 2009). In industry, the number of models can number in the thousands (Mengerink et al. 2016), making manual execution of this model co-evolution infeasible. Thus, an automated approach to model co-evolution is required. Based on earlier comparative studies (Rose et al. 2009; Herrmannsd &uml;orfer and Wachsmuth 2014), we have performed an internal evaluation of various automated model migration tools at ASML, provider of lithography equipment for the semiconductor industry (ASM). There we found that many existing tools are no longer available, or not mature enough. In particular, the tool Flock (Rose et al. 2010) was experienced as having a high learning curve. Lastly, the tool Edapt has the functionality required for the ASML case (Mengerink et al. 2016; Vissers et al. 2016), and has been previously applied in a number of industrial case studies (Herrmannsd&uml;orfer et al. 2009, 2008).",
      "Affiliations": [
        "Eindhoven University of Technology",
        "Eindhoven University of Technology",
        "ASML",
        ""
      ],
      "AffiliationsString": "Eindhoven University of Technology, ASML, ",
      "Authors": [
        "jgmmengerink",
        "aserebrenik",
        "rrhschiffelers",
        "markvandenbrand"
      ],
      "Key": "itsle2016-udapt-edapt-extensions-for-industrial-application",
      "PersonsString": "J.G.M. Mengerink, A. Serebrenik, R.R.H. Schiffelers and Mark van den Brand",
      "Title": "Udapt: Edapt Extensions for Industrial Application",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/itsle2016-udapt-edapt-extensions-for-industrial-application"
    },
    {
      "Abstract": "Reflection allows programmers to inspect and modify the structural and runtime properties of a software system. Traditionally, the architecture of a reflective system has been a monolithic part of the runtime system, featuring a fixed semantics. Mirror-based reflective architectures decouple the base-level entities from their meta-level counterparts. In this work, we explore ChromaKey, a design to go yet one step further. ChromaKey enables the user extend the reflective system in two dimensions: the semantics of reflective objects and reflection on syntax extensions of the host language. The first axis decouples the reflective system from a specific mirror interface. The second axis allows existing hierarchies of reflective objects to be extended. The key component is a generic reflecting component that &quot;parses\u2019\u2019 class definitions according to a given semantics, specified by generic factories (Object Algebras).",
      "Affiliations": [
        "CWI",
        "CWI & University of Groningen"
      ],
      "AffiliationsString": "CWI, CWI & University of Groningen",
      "Authors": [
        "pabloinostroza",
        "tijsvanderstorm"
      ],
      "Key": "meta2016-chromakey-towards-extensible-mirror-architectures",
      "PersonsString": "Pablo Inostroza and Tijs van der Storm",
      "Title": "ChromaKey: Towards Extensible Mirror Architectures",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-chromakey-towards-extensible-mirror-architectures"
    },
    {
      "Abstract": "Large organizations like banks su\u000bffer from the ever growing complexity of their systems. Evolving the software in the face of change becomes harder and harder since a single change can a\u000bffect a much larger part of the system than predicted upfront. A large contributing factor to this problem is that the actual domain knowledge is often implicit, incomplete, or out of date, making it difficult to reason about the correct behavior of the system as a whole. When domain knowledge is recorded it is captured in informal document (like Word files or Excel sheets) making it hard to relate the requirements to the actual implementation of the software. With Rebel we aim to capture, centralize and relate the domain knowledge to the running systems.\nRebel is a formal specification language for controlling the intrinsic complexity of software for financial enterprise systems. In collaboration with ING, a large Dutch bank, we developed the Rebel specification language and an Integrated Specification Environment (ISE), currently o\u000bffering automated simulation and checking of Rebel specifications. These specifications can be used as a method of communication between stakeholders, to check the existing system implementations and, ultimately, to serve as a base to generate new systems. Specifications can be translated into Satisfiability Modulo Theories (SMT) constraints, solved using an SMT solver, and translated back into the Rebel ISE for interpretation.\nIn this paper, we report on our design choices for Rebel, the implementation and features of the ISE and our initial observations on the application of Rebel inside the bank.",
      "Affiliations": [
        "CWI",
        "CWI, Netherlands",
        "CWI & University of Groningen",
        "ING Bank"
      ],
      "AffiliationsString": "CWI, CWI, Netherlands, CWI & University of Groningen, ING Bank",
      "Authors": [
        "joukestoel",
        "jurgenvinju",
        "tijsvanderstorm",
        "joostbosman"
      ],
      "Key": "itsle2016-solving-the-bank-with-rebel",
      "PersonsString": "Jouke Stoel, Jurgen Vinju, Tijs van der Storm and Joost Bosman",
      "Title": "Solving the Bank with Rebel",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/itsle2016-solving-the-bank-with-rebel"
    },
    {
      "Abstract": "Trace-based just-in-time compilers use program analyses to optimise execution traces. These analyses are limited in scope to the parts of the program that have been traced. We conjecture that trace optimisations can benefit from extending the scope of their enabling analyses beyond these traces to the set of possible future execution states of the program. This by incorporating a static analysis which, however, necessarily over-approximates this set. We therefore propose to continuously refine the set of future states computed by an initial, ahead-of-time analysis using run-time information about the current execution state of the program. Additional static analyses launched at run time could further refine the information about the future of the current and all possible states. We expect that the resulting, hybrid program view of static and dynamic information may enable additional optimisations on collected traces and that these optimisations may overcome the computational overhead of keeping the view up-to-date.",
      "Affiliations": [
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Vrije Universiteit Brussel, Belgium",
      "Authors": [
        "maartenvandercammen",
        "coenderoover"
      ],
      "Key": "vmil2016-improving-trace-based-jit-optimisation-using-whole-program-information",
      "PersonsString": "Maarten Vandercammen and Coen De Roover",
      "Title": "Improving Trace-based JIT Optimisation using Whole-Program Information",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-improving-trace-based-jit-optimisation-using-whole-program-information"
    },
    {
      "Abstract": "Nowadays, there are more and more applications that need to run uninterruptedly. This need requires minimizing the downtime to add new features or fix bugs. Dynamic Software Update (DSU) solutions allow updating applications while they are executing. A common concern in all DSU solutions is the migration of the application\u2019s state. This migration should guarantee the coherence of the state between versions by either adding, removing, preserving or transforming state. In an object-oriented environment, this state is represented by instances. In this paper, we analyse the features that a DSU solution should have with the objective to understand the operations a DSU should provide. Our analysis focuses on the migration of instances. Then, we identify the Meta-Object Protocol (MOP) that a programming language should expose to support these operations. We scope our proposal to DSU solutions for class-based programming languages with eager and atomic instance migration. Finally, we validate our proposal with a prototype DSU implemented in the Pharo programming language using the identified operations.",
      "Affiliations": [
        "Inria Lille\u2013Nord Europe, France Mines Douai, IA, Univ. Lille, France",
        "Inria",
        "Mines Douai",
        "Mines Douai",
        " INRIA Lille"
      ],
      "AffiliationsString": "Inria Lille\u2013Nord Europe, France Mines Douai, IA, Univ. Lille, France, Inria, Mines Douai,  INRIA Lille",
      "Authors": [
        "pablotesone",
        "guillermopolito",
        "lucfabresse",
        "nourybouraqadi",
        "stephaneducasse"
      ],
      "Key": "meta2016-instance-migration-in-dynamic-software-update",
      "PersonsString": "Pablo Tesone, Guillermo Polito, Luc Fabresse, Noury Bouraqadi and Stéphane Ducasse",
      "Title": "Instance Migration in Dynamic Software Update",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-instance-migration-in-dynamic-software-update"
    },
    {
      "Abstract": "Dart reflection is Mirror based. Mirrors have a key advantage with respect to deployment; they make it easy to remove reflection from the system if it is not needed. However, what happens when reflection is needed? Reflection undermines tree-shaking techniques used to reduce program footprint. Tree shaking is crucial for Dart, so it can compete with native platforms on web and mobile. The path of least resistance has been to hobble Dart reflection, but there are alternative implementation approaches that can help preserve the advantages of mirrors in this challenging environment.",
      "Affiliations": ["Google"],
      "AffiliationsString": "Google",
      "Authors": ["giladbracha"],
      "Key": "meta2016-reflection-in-dart-a-cautionary-experience",
      "PersonsString": "Gilad Bracha",
      "Title": "Reflection in Dart: A Cautionary Experience",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-reflection-in-dart-a-cautionary-experience"
    },
    {
      "Abstract": "MDSE is a discipline that only recently has begun to be used in mainstream practice. At the Dutch Tax and Customs Administration (DTCA), we use this approach successfully for a major part of the Dutch Social Benefits system, a nationwide online system serving 6 million citizens. We report on our experiences with bringing forth and maintaining this system, and on our future plans for extending this approach to other key systems of our organisation. The DTCA is responsible for (amongst others) collecting taxes and paying social benefits. The supporting software system typically have a lot of functionality and process huge volumes of data. Furthermore, the systems should be easy to adapt within short notice: laws do change often, and once a change to a law has been approved by the parliament, there is only little time to implement the changes. To adapt complex systems quickly, we use Functional Model Driven Development (FMDD), a variant of MDSE. The FMDD approach separates functionality from other aspects of an application, hence its name. We outline the basic way of working by describing the main artifacts and roles. A key feature of our approach is separation of concerns. We organize the specifications and transformations such that different concerns are separated from each other. We detail some of the techniques we applied in the Social Benefits System.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "betsypepels",
        "gerteveldhuijzenvanzanten"
      ],
      "Key": "itsle2016-model-driven-software-engineering-mdse-in-the-large",
      "PersonsString": "Betsy Pepels and Gert E. Veldhuijzen van Zanten",
      "Title": "Invited talk: Model Driven Software Engineering (MDSE) in the large",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/itsle2016-model-driven-software-engineering-mdse-in-the-large"
    },
    {
      "Abstract": "Metaprogramming is a methodology of constructing programs that analyse and transform other programs. Metaprograms themselves evolve as well, and there are times when this evolution means migrating to a different metalanguage. We illustrate this complicated scenario by a concrete case of porting grammar manipulation scripts from XSLT to Rascal, and list common metaprogramming features from XSLT used in the corpus.",
      "Affiliations": ["Raincode, Belgium"],
      "AffiliationsString": "Raincode, Belgium",
      "Authors": ["vadimzaytsev"],
      "Key": "meta2016-evolution-of-metaprograms-xslt-as-a-metaprogramming-language",
      "PersonsString": "Vadim Zaytsev",
      "Title": "Evolution of Metaprograms: XSLT as a Metaprogramming Language",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-evolution-of-metaprograms-xslt-as-a-metaprogramming-language"
    },
    {
      "Abstract": "This paper presents work in progress on developing a Discount Method for Programming Language Evaluation inspired by the Discount Usability Evaluation method (Benyon 2010) and the Instant Data Analysis method (Kjeldskov et al. 2004). The method is intended to bridge the gap between small scale internal language design evaluation methods and large scale surveys and quantitative evaluation methods. The method is designed to be applicable even before a compiler or IDE is developed for a new language. To test the method, a usability evaluation experiment was carried out on the Quorum programming language (Stefik et al. 2016) using programmers with experience in C and C#. When comparing our results with previous studies of Quorum, most of the data was comparable though not strictly in agreement. However, the discrepancies were mainly related to the programmers pre-existing expectations of a language. The results show that our evaluation method could serve language designers as a low-cost way for evaluating programming languages, especially in the early stages of the language design process. Future work includes adjusting and improving the method in such a way that it becomes usable to novice programming language designers.",
      "Affiliations": [
        "Aalborg University, Denmark",
        "Aalborg University, Denmark",
        "Aalborg University, Denmark"
      ],
      "AffiliationsString": "Aalborg University, Denmark",
      "Authors": [
        "svetomirkurtev",
        "tommyaagaardchristensen",
        "bentthomsen"
      ],
      "Key": "plateau2016-discount-method-for-programming-language-evaluation",
      "PersonsString": "Svetomir Kurtev, Tommy Aagaard Christensen and Bent Thomsen",
      "Title": "Discount Method for Programming Language Evaluation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-discount-method-for-programming-language-evaluation"
    },
    {
      "Abstract": "A tenet of Live Programming is that its tightening of the development feedback loop results in better program comprehension and hence higher developer productivity. There are however no extensive reports published on user studies that validate this claim when considering already existing code. In this paper we report on a controlled experiment that establishes whether our live programming language, LRP, helps in program understanding when compared to a non-live language and toolkit. We furthermore obtained qualitative feedback from the test subjects on their preferences between the two systems. Remarkably, while the users prefer the live system over a non-live system, the actual level and speed of program comprehension is the same for both systems.",
      "Affiliations": [
        "DCC, Universidad de Chile",
        "University of Chile",
        "University of Chile"
      ],
      "AffiliationsString": "DCC, Universidad de Chile, University of Chile",
      "Authors": [
        "miguelcampusano",
        "alexandrebergel",
        "johanfabry"
      ],
      "Key": "plateau2016-does-live-programming-help-program-comprehension-a-user-study-with-live-robot-programming",
      "PersonsString": "Miguel Campusano, Alexandre Bergel and Johan Fabry",
      "Title": "Does Live Programming Help Program Comprehension? -- A user study with Live Robot Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-does-live-programming-help-program-comprehension-a-user-study-with-live-robot-programming"
    },
    {
      "Abstract": "Programming language VMs are now widely used, from server applications to web browsers. Benchmarks show that VMs can optimise programs to the same degree as, and often substantially better than, traditional static compilers. VMs, it seems, have more than proved their worth.\nAnd yet there are still many people who are unhappy with the VMs they use. Frequently their programs don\u2019t run anywhere near as fast as benchmarks suggest; sometimes their programs run slower than more naive language implementations.\nOften our reaction is to tell such users that their programs are \u201cwrong\u201d and to fix them. While this is sometimes a reasonable answer, this talk\u2019s thesis is that we use this answer too often. I will therefore discuss some of the reasons why I believe real users don\u2019t see the same performance levels that VM implementers. I will then offer some thoughts for how, and to what extent, we can make more VM users more happy.",
      "Affiliations": ["King's College London"],
      "AffiliationsString": "King's College London",
      "Authors": ["laurietratt"],
      "Key": "vmil2016-why-aren-t-more-users-more-happy-with-our-vms-",
      "PersonsString": "Laurence Tratt",
      "Title": "Invited Talk: Why aren't more users more happy with our VMs?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-why-aren-t-more-users-more-happy-with-our-vms-"
    },
    {
      "Abstract": "Security controls such as taint analysis and information flow analysis can be powerful tools to protect against many common attacks. However, incorporating these controls into a language such as JavaScript is challenging. Native implementations require the support of all JavaScript VMs. Code rewriting requires developers to reason about the entire abstract syntax of JavaScript.\nIn this paper, we demonstrate how virtual values may be used to more easily integrate these security controls. Virtual values provide hooks to alter the behavior of primitive operations, allowing programmers to create the desired security controls in a more declarative fashion, facilitating more rapid prototyping.\nWe demonstrate how virtual values may be encoded in JavaScript using a combination of JavaScript object proxies and the Sweet.js macro library, and use that implementation to build taint and information flow controls into JavaScript. Finally, we show some benchmark results to demonstrate the overhead of this approach.",
      "Affiliations": [
        "San Jose State University",
        "",
        "San Jose State University",
        "",
        "University of California, Santa Cruz"
      ],
      "AffiliationsString": "San Jose State University, , University of California, Santa Cruz",
      "Authors": [
        "prakasamkannan",
        "thomashaustin",
        "markstamp",
        "timdisney",
        "cormacflanagan"
      ],
      "Key": "meta2016-virtual-values-for-taint-and-information-flow-analysis",
      "PersonsString": "Prakasam Kannan, Thomas H. Austin, Mark Stamp, Tim Disney and Cormac Flanagan",
      "Title": "Virtual Values for Taint and Information Flow Analysis",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-virtual-values-for-taint-and-information-flow-analysis"
    },
    {
      "Abstract": "The complex architecture of browser technologies and dynamic characteristics of JavaScript make it difficult to ensure security in client-side web applications. Browser-level policies alone, such as Content Security Policy and Same-Origin Policy, are not sufficient because they are implemented inconsistently across browsers and can be bypassed. At the application level, however, there exists no specification language for expressing a wide range of security policies in a composable and reusable manner. In this paper we develop a declarative language for encoding an combining security policies in the context of JavaScript web applications. We explore JavaScript\u2019s reflection capabilities to enforce these security policies dynamically. We validate our work by expressing common security policies encountered in the literature.",
      "Affiliations": [
        "Sofware Languages Lab, Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": "Sofware Languages Lab, Vrije Universiteit Brussel, Vrije Universiteit Brussel, Belgium, Vrije Universiteit Brussel",
      "Authors": [
        "angelluisscullpupo",
        "jensnicolay",
        "elisagonzalezboix"
      ],
      "Key": "meta2016-declaratively-specifying-security-policies-for-web-applications",
      "PersonsString": "Angel Luis Scull Pupo, Jens Nicolay and Elisa Gonzalez Boix",
      "Title": "Declaratively Specifying Security Policies For Web Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-declaratively-specifying-security-policies-for-web-applications"
    },
    {
      "Abstract": "In computing, we usually take a technical view of programming languages (PL), defining them as formal means of specifying a computer behavior. This view shapes much of the research that we do on PL, determining the questions we ask about them, the improvements we make to them, and how we teach people to use them. But to many people, PL are not purely technical things, but&nbsp;socio-technical things. This paper describes several alternative views of PL and how these views can reshape how we design, evolve, and use programming languages in research and practice.",
      "Affiliations": ["University of Washington, USA"],
      "AffiliationsString": "University of Washington, USA",
      "Authors": ["andrewko"],
      "Key": "plateau2016-what-is-a-programming-language-really-",
      "PersonsString": "Andrew J. Ko",
      "Title": "What Is a Programming Language, Really?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-what-is-a-programming-language-really-"
    },
    {
      "Abstract": "",
      "Affiliations": ["Google"],
      "AffiliationsString": "Google",
      "Authors": ["bentitzer"],
      "Key": "vmil2016-webassembly-from-wire-to-machine-code-a-view-inside-v8-s-implementation",
      "PersonsString": "Ben Titzer",
      "Title": "Keynote: WebAssembly from wire to machine code: a view inside V8's implementation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-webassembly-from-wire-to-machine-code-a-view-inside-v8-s-implementation"
    },
    {
      "Abstract": "Programming languages - how to tell a computer what to do - are the core technology of the digital revolution, just as the invention of the wheel was the core technology enabling the design of land transportation systems, and the invention of the roof was the core technology enabling the design of cities. Roofs and wheels have been necessary, but not sufficient, for the design of effective cities and cars. Beyond basic optimisation, and occasional innovation, research into wheel and roof technologies may be important, but provides little practical guidance for successful products. In the same way, compilers and type systems are necessary, but not sufficient, for the design of effective programming languages. This talk draws lessons from the design of cars and cities to propose principles and processes for programming language design, as well as research agendas that will support those principles and processes.",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["alanblackwell"],
      "Key": "plateau2016-alan-blackwell-plateau-keynote",
      "PersonsString": "Alan Blackwell",
      "Title": "PLATEAU Keynote: How to Design a Programming Language",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-alan-blackwell-plateau-keynote"
    },
    {
      "Abstract": "",
      "Affiliations": ["IBM Canada"],
      "AffiliationsString": "IBM Canada",
      "Authors": ["markstoodley"],
      "Key": "vmil2016-the-good-the-good-enough-and-some-things-we-wish-we-had-done-differently-runtime-design-lessons-from-a-production-jvm",
      "PersonsString": "Mark Stoodley",
      "Title": "Keynote: The good, the good enough, and some things we wish we had done differently: runtime design lessons from a production JVM",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-the-good-the-good-enough-and-some-things-we-wish-we-had-done-differently-runtime-design-lessons-from-a-production-jvm"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "itsle2016-splash-break-networking",
      "PersonsString": "",
      "Title": "SPLASH break & networking",
      "Type": "Break",
      "URL": "http://2016.splashcon.org/event/itsle2016-splash-break-networking"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "itsle2016-panel-discussion",
      "PersonsString": "",
      "Title": "Panel discussion (Chairs: Yanja Dajsuren/Peter Kourzanov)",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/itsle2016-panel-discussion"
    },
    {
      "Abstract": "",
      "Affiliations": ["Microsoft Research, Cambridge"],
      "AffiliationsString": "Microsoft Research, Cambridge",
      "Authors": ["simonpaytonjones"],
      "Key": "vmil2016-splash-e-keynote",
      "PersonsString": "Simon Peyton Jones",
      "Title": "SPLASH-E Keynote (Room Matterhorn 3)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-splash-e-keynote"
    },
    {
      "Abstract": "Eclipse OMR is a new open source project created by refactoring the IBM J9 Java Virtual Machine to create a set of language agnostic components for building all kinds of language runtimes. This paper reflects on the effort, the successes, and the mistakes made while refactoring more than a million lines of code on the master development branch while 8 disparate production compiler products were under active development. Refactoring large scale projects like compilers and language runtimes can be done while shipping releases, but there are certainly challenges. We offer some recommendations for other projects considering this path.",
      "Affiliations": [
        "IBM Canada",
        "IBM Canada"
      ],
      "AffiliationsString": "IBM Canada",
      "Authors": [
        "matthewgaudet",
        "markstoodley"
      ],
      "Key": "vmil2016-rebuilding-an-airliner-in-flight-a-retrospective-on-refactoring-ibm-testarossa-production-compiler-for-eclipse-omr",
      "PersonsString": "Matthew Gaudet and Mark Stoodley",
      "Title": "Rebuilding an Airliner In Flight: A Retrospective on Refactoring IBM Testarossa production compiler for Eclipse OMR",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-rebuilding-an-airliner-in-flight-a-retrospective-on-refactoring-ibm-testarossa-production-compiler-for-eclipse-omr"
    },
    {
      "Abstract": "LMNtal is a modeling language based on hierarchical graph rewriting, and its implementation SLIM features an LTL model checker. There is some research on extensions of SLIM, and all of them achieve their functionalities by modifying SLIM. If a model checker is implemented in the modeling language itself, it should be very easy to develop prototypes of various model checkers without changing the implementation of the model checker. This approach is called metaprogramming which has been taken conventionally in Lisp and Prolog. In this paper, we define first-class rewriting rules to enable a metaprogramming in LMNtal. In addition to that, we design APIs to operate states of LMNtal programs. These features allow us to implement diverse variants of a model checker without changing SLIM. We implemented an LTL model checker and a CTL model checker in LMNtal. As a result, our framework is sufficient to develop a metainterpreter which treats program states flexibly.",
      "Affiliations": [
        "Waseda University",
        "Waseda University",
        "Waseda University"
      ],
      "AffiliationsString": "Waseda University",
      "Authors": [
        "yutarotsunekawa",
        "taichitomioka",
        "kazunoriueda"
      ],
      "Key": "meta2016-implementation-of-lmntal-model-checkers-a-metaprogramming-approach",
      "PersonsString": "Yutaro Tsunekawa, Taichi Tomioka and Kazunori Ueda",
      "Title": "Implementation of LMNtal Model Checkers: a Metaprogramming Approach",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-implementation-of-lmntal-model-checkers-a-metaprogramming-approach"
    },
    {
      "Abstract": "A model of a system (plant) is required to address aspects from different domains, e.g., supervisory control, communication, each of which need to be formulated using appropriate modeling tools. Modeling all these aspects using a single tool is a tedious task and mostly it is not achievable. As a result, the complete system has different modules modeled in different tools, later integrated and simulated together in order to achieve the desired functionality of the system as well as accuracy of the results. This makes the modeling easier and more efficient. The objective of this paper is to describe the integration between two modeling languages - Simulink and CIF3 for their use in modeling. Simulink is used to model the 802.11p communication system for transmission of data between vehicles, including transceivers and channels. CIF3 is used for modeling a discrete-event modulation control for a transceiver and continuous-time scenarios involving traffic safety. The integration of CIF3 models with Simulink model satisfies the safety requirements as well as provides useful insights into a combined cyber-physical system.",
      "Affiliations": [
        "",
        "TU/e"
      ],
      "AffiliationsString": ", TU/e",
      "Authors": [
        "abhisheksharma",
        "michelreniers"
      ],
      "Key": "itsle2016-integrated-simulation-of-cif3-and-simulink-models",
      "PersonsString": "Abhishek Sharma and Michel Reniers",
      "Title": "Integrated Simulation of CIF3 and Simulink Models",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/itsle2016-integrated-simulation-of-cif3-and-simulink-models"
    },
    {
      "Abstract": "To implement modern web applications, a new family of JavaScript frameworks has emerged, using the MVC pattern. Among these frameworks, the most popular one is ANGULARJS, which is supported by Google. In spite of its popularity, there is not a clear knowledge on how ANGULARJS design and features affect the development experience of Web applications. Therefore, this paper reports the results of a survey about ANGULARJS, including answers from 460 developers. Our contributions include the identification of the most appreciated features of ANGULARJS (e.g., custom interface components, dependency injection, and two-way data binding) and the most problematic aspects of the framework (e.g., performance and implementation of directives).",
      "Affiliations": [
        "Federal University of Minas Gerais, Brazil",
        "Federal University of Minas Gerais, Brazil",
        "Federal University of Lavras, Brazil",
        "Inria, France"
      ],
      "AffiliationsString": "Federal University of Minas Gerais, Brazil, Federal University of Lavras, Brazil, Inria, France",
      "Authors": [
        "miguelramos",
        "marcotuliovalente",
        "ricardoterra",
        "gustavosantos"
      ],
      "Key": "plateau2016-angularjs-in-the-wild-a-survey-with-460-developers",
      "PersonsString": "Miguel Ramos, Marco Tulio Valente, Ricardo Terra and Gustavo Santos",
      "Title": "AngularJS in the Wild: A Survey with 460 Developers",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-angularjs-in-the-wild-a-survey-with-460-developers"
    },
    {
      "Abstract": "2016 is a coincidence of anniversaries: 400 years since Shakespeare\u2019s death, and 40 years since Wirth specified the code virtual machine. This talk uniquely brings together Shakespeare\u2019s poetry and language-level virtual machine engineering. This high-energy collision has interesting outcomes. In his \u2018Seven Ages of Man\u2019 poem, Shakespeare outlines how \u2018One man in his time plays many parts\u2019\u2014from the infant to the ancient. In this talk, I will argue that a virtual machine has seven analogous ages, or phases. In order, these ages are (1) incomplete prototype, (2) beta version, (3) next big thing, (4) research platform, (5) production platform, (6) legacy system, and (7) bitrotted artefact. I will qualitatively characterise each VM age in some detail. I will also give an instance of a current VM at each age. This may be controversial, but should promote discussion. Do you remember Rotor or Jikes RVM? Where is PyPy or Maxine VM? What about V8 or HotSpot? And has anyone ever heard of OCODE?",
      "Affiliations": ["University of Glasgow"],
      "AffiliationsString": "University of Glasgow",
      "Authors": ["jeremysinger"],
      "Key": "vmil2016-the-seven-ages-of-virtual-machines-with-apologies-to-shakespeare-",
      "PersonsString": "Jeremy Singer",
      "Title": "Invited Talk: The seven ages of virtual machines (with apologies to Shakespeare)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-the-seven-ages-of-virtual-machines-with-apologies-to-shakespeare-"
    },
    {
      "Abstract": "Researchers, students and practitioners often encounter a situation when the build process of a third-party software system fails. In this paper, we aim to confirm this observation present mainly as anecdotal evidence so far. Using a virtual environment simulating a programmer\u2019s one, we try to fully automatically build target archives from the source code of over 7,200 open source Java projects. We found that more than 38% of builds ended in failure. Build log analysis reveals the largest portion of errors are dependency-related. We also conduct an association study of factors affecting build success.",
      "Affiliations": [
        "Technical University of Košice, Slovakia",
        "Technical University of Košice, Slovakia"
      ],
      "AffiliationsString": "Technical University of Košice, Slovakia",
      "Authors": [
        "matussulir",
        "jaroslavporuban"
      ],
      "Key": "plateau2016-a-quantitative-study-of-java-software-buildability",
      "PersonsString": "Matúš Sulír and Jaroslav Porubän",
      "Title": "A Quantitative Study of Java Software Buildability",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-a-quantitative-study-of-java-software-buildability"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "plateau2016-group-exercise",
      "PersonsString": "",
      "Title": "Group Exercise",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-group-exercise"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "plateau2016-welcome-and-introduction",
      "PersonsString": "",
      "Title": "Welcome and Introduction",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/plateau2016-welcome-and-introduction"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "itsle2016-coffie-break",
      "PersonsString": "",
      "Title": "Coffee break",
      "Type": "Break",
      "URL": "http://2016.splashcon.org/event/itsle2016-coffie-break"
    },
    {
      "Abstract": "",
      "Affiliations": ["Australian National University, Data61, and Purdue University"],
      "AffiliationsString": "Australian National University, Data61, and Purdue University",
      "Authors": ["tonyhosking"],
      "Key": "vmil2016-closing-remark",
      "PersonsString": "Tony Hosking",
      "Title": "Discussions/Closing Remarks",
      "Type": "Day closing",
      "URL": "http://2016.splashcon.org/event/vmil2016-closing-remark"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "itsle2016-short-break",
      "PersonsString": "",
      "Title": "Short break",
      "Type": "Break",
      "URL": "http://2016.splashcon.org/event/itsle2016-short-break"
    },
    {
      "Abstract": "The increased use of domain-specific languages (DSLs) and the absence of adequate tooling to take advantage of commonalities among DSLs has led to a situation where the same structure is duplicated in multiple DSLs. This observation has lead to the work described in this paper: an investigation of methods and tools for pattern specification and application and two extensions of a state of the art tool for patterns in DSLs, DSL-tao. The extensions make the patterns more understandable and they also make the tool suitable for more patterns. The first extension introduces a literal specification for patterns and the second extension introduces a merge function for the application of patterns. These two extensions",
      "Affiliations": [
        "Altran",
        "",
        "Eindhoven University of Technology",
        "Altran"
      ],
      "AffiliationsString": "Altran, , Eindhoven University of Technology",
      "Authors": [
        "jiazhang",
        "markvandenbrand",
        "anamariasutii1",
        "marchamilton"
      ],
      "Key": "itsle2016-pattern-specification-and-application-in-metamodels-in-ecore",
      "PersonsString": "Jia Zhang, Mark van den Brand, Ana Maria Sutii and Marc Hamilton",
      "Title": "Pattern Specification and Application in Metamodels in Ecore",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/itsle2016-pattern-specification-and-application-in-metamodels-in-ecore"
    },
    {
      "Abstract": "The article presents an idea of a meta-level framework for simulating Context-Oriented Software. The framework focuses on method invocations related with layers of Context-Oriented Software. The method invocations cause increasing complexity of behaviour since they accompany with method dispatches on the current layer. In previous our works, we described the importance of layer states that are pre-activation and post-activation. The state mechanism increases the further complexity of the method invocations. Thus, we need to prepare a simulator to clarify the behaviour and detect errors of layer-interactions. Coloured Petri Nets (CP-nets) is useful for constructing such a simulator. The coloured tokens and hierarchies of CP-nets are suitable for modelling layers of Context-Oriented Software. Additionally, we can construct a model as interpreter programming language because of the token game. However, the modelling is not well-understandable because of the simplicity of CP-nets elements. We expect that our meta-level framework for simulator contributes this CP-nets modelling problem and help to clarify the method invocation for COS.",
      "Affiliations": [
        "Tokai University",
        "Kyusyu University",
        "Tokyo City University",
        "Shibaura Institute of Technology",
        "Kyushu University",
        "Kyushu University"
      ],
      "AffiliationsString": "Tokai University, Kyusyu University, Tokyo City University, Shibaura Institute of Technology, Kyushu University",
      "Authors": [
        "harumiwatanabe",
        "ikutatanigawa",
        "nobuhikoogura",
        "midorisugaya",
        "kenjihisazumi",
        "akirafukuda"
      ],
      "Key": "meta2016-coloured-petri-nets-framework-for-simulating-method-invocations-on-context-oriented-software",
      "PersonsString": "Harumi Watanabe, Ikuta Tanigawa, Nobuhiko Ogura, Midori Sugaya, Kenji Hisazumi and Akira Fukuda",
      "Title": "Coloured Petri-Nets Framework for Simulating Method Invocations on Context-Oriented Software",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-coloured-petri-nets-framework-for-simulating-method-invocations-on-context-oriented-software"
    },
    {
      "Abstract": "We have recently described and evaluated a research prototype system (called XJ, for transactional Java) that allows execution of Java programs extended with transactional memory (TM) abstractions (Chapman et al. 2014, 2016). The system allows mixed execution of these abstractions using both software (STM) and hardware (HTM) transactional memory. The prototype system, based on OpenJDK, suffers a number of roadblocks impeding production use, including: (i) Per-object metadata in support of manipulation of objects by transactions is inserted via bytecode rewriting at load time, in the form of a new word-sized instance field placed at the beginning of each object; (ii) The HotSpot optimizing compilers (C1 and C2) require gentle coaxing to compile both the STM and HTM versions of methods via alternating execution in a warm-up phase. Here we explore possible changes to OpenJDK that would allow for more integrated support for TM in HotSpot, as needed to support hybrid STM/HTM. These changes include encoding per-object transactional metadata in the synchronization word carried by all OpenJDK objects, and integrating more effectively with the profiling and compilation mechanisms of the HotSpot interpreter and compilers. We believe that the proposed changes are incremental, though we also expect that a deeper re-engineering would yield somewhat better ability to tune synchronization hot-paths for performance.",
      "Affiliations": [
        "Purdue University",
        "Australian National University, Data61, and Purdue University",
        "University of Massachusetts Amherst"
      ],
      "AffiliationsString": "Purdue University, Australian National University, Data61, and Purdue University, University of Massachusetts Amherst",
      "Authors": [
        "keithchapman",
        "tonyhosking",
        "eliotmoss"
      ],
      "Key": "vmil2016-extending-openjdk-to-support-hybrid-stm-htm",
      "PersonsString": "Keith Chapman, Tony Hosking and Eliot Moss",
      "Title": "Extending OpenJDK To Support Hybrid STM/HTM",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-extending-openjdk-to-support-hybrid-stm-htm"
    },
    {
      "Abstract": "The Ruby programming language has extensive metaprogramming functionality. But unlike most similar languages, the use of these features is idiomatic and much of the Ruby ecosystem uses metaprogramming operations in the inner loops of libraries and applications.\nThe foundational techniques to make most of these metaprogramming operations efficient have been known since the work on Smalltalk and Self, but their implementation in practice is difficult enough that they are not widely applied in existing Ruby implementations.\nThe Truffle framework for writing self-specialising AST interpreters, and the Graal dynamic compiler have been designed to make it easy to make high-performance implementations of languages. We have found that the tools they provide also make it dramatically easier to implement efficient metaprogramming. In this paper we present metaprogramming patterns from Ruby, show that with Truffle and Graal their implementation can be easy, concise, elegant and high-performance, and highlight the key tools that were needed.",
      "Affiliations": ["Oracle Labs"],
      "AffiliationsString": "Oracle Labs",
      "Authors": ["chrisseaton"],
      "Key": "meta2016-ast-specialisation-and-partial-evaluation-for-easy-high-performance-metaprogramming",
      "PersonsString": "Chris Seaton",
      "Title": "AST Specialisation and Partial Evaluation for Easy High-Performance Metaprogramming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-ast-specialisation-and-partial-evaluation-for-easy-high-performance-metaprogramming"
    },
    {
      "Abstract": "Although the Java platform has been used as a multi-language platform, most of the low-level languages (such as C, Fortran, and C++) cannot be executed efficiently on the JVM. We propose Sulong, a system that can execute LLVM-based languages on the JVM. By targeting LLVM IR, Sulong is able to execute C, Fortran, and other languages that can be compiled to LLVM IR. Sulong combines LLVM\u2019s static optimizations with dynamic compilation to reach a peak performance that is near to the performance achievable with static compilers. For C benchmarks, Sulong\u2019s peak runtime performance is on average 1.39&times; slower (0.79&times; to 2.45&times;) compared to the performance of executables compiled by Clang O3. For Fortran benchmarks, Sulong is 2.63&times; slower (1.43&times; to 4.96&times;) than the performance of executables compiled by GCC O3. This low overhead makes Sulong an alternative to Java\u2019s native function interfaces. More importantly, it also allows other JVM language implementations to use Sulong for implementing their native interfaces.",
      "Affiliations": [
        "Johannes Kepler University, Linz, Austria",
        "Johannes Kepler University Linz",
        "Oracle Labs",
        "Oracle Labs",
        "Johannes Kepler University Linz"
      ],
      "AffiliationsString": "Johannes Kepler University, Linz, Austria, Johannes Kepler University Linz, Oracle Labs",
      "Authors": [
        "manuelrigger",
        "matthiasgrimmer",
        "christianwimmer",
        "thomaswuerthinger",
        "hanspetermossenbock"
      ],
      "Key": "vmil2016-bringing-low-level-languages-to-the-jvm-efficient-execution-of-llvm-ir-on-truffle",
      "PersonsString": "Manuel Rigger, Matthias Grimmer, Christian Wimmer, Thomas Wuerthinger and Hanspeter Mössenböck",
      "Title": "Bringing Low-Level Languages to the JVM: Efficient Execution of LLVM IR on Truffle",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/vmil2016-bringing-low-level-languages-to-the-jvm-efficient-execution-of-llvm-ir-on-truffle"
    },
    {
      "Abstract": "Over the last years, a number of languages based on data flow abstractions have been proposed in different important areas including Big Data, stream processing, reactive programming, real time analytics. While there is a general agreement that the data flow style simplifies the access to such complex systems compared to low level imperative APIs, this design has been substantiated by little evidence.In this paper, we advocate a systematic investigation of the design principles of data flow languages and suggest important research questions that urge to be addressed.",
      "Affiliations": ["TU Darmstadt, Germany"],
      "AffiliationsString": "TU Darmstadt, Germany",
      "Authors": ["guidosalvaneschi"],
      "Key": "plateau2016-what-do-we-really-know-about-data-flow-languages-",
      "PersonsString": "Guido Salvaneschi",
      "Title": "What Do We Really Know about Data Flow Languages?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-what-do-we-really-know-about-data-flow-languages-"
    },
    {
      "Abstract": "Over the last five years we have built mbeddr, a collection of integrated languages and language extensions built with the Jetbrains MPS language workbench. mbeddr consists of 81 languages, incl. IDE support, 34 of them C extensions. The mbeddr languages use a wide variety of notations \u2013 textual, tabular, symbolic and graphical \u2013 and the C extensions are modular; new extensions can be added without changing the existing implementation of C. mbeddr\u2019s development has spanned roughly 15 person years so far, and the tool is used in practice and continues to be developed. This makes mbeddr a case study in language engineering of non-trivial size and complexity. In this keynote, I look back at mbeddr\u2019s development to identify what worked well and what are still challenges in language engineering with a modern language workbench. I will address five areas: language modularity, notational freedom and projectional editing, mechanisms for managing complexity, performance and scalability issues and the consequences for the development process. I will close by highlighting a set of issues which need further research and engineering.",
      "Affiliations": ["itemis, Germany"],
      "AffiliationsString": "itemis, Germany",
      "Authors": ["markusvlter"],
      "Key": "itsle2016-lessons-learned-about-language-engineering-from-the-development-of-mbeddr",
      "PersonsString": "Markus Völter",
      "Title": "Keynote: Lessons learned about language engineering from the development of mbeddr",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/itsle2016-lessons-learned-about-language-engineering-from-the-development-of-mbeddr"
    },
    {
      "Abstract": "Reflection allows a program to examine and even modify itself, but its power can also lead to violations of encapsulation and even security vulnerabilities. The Wyvern language leverages static types for encapsulation and provides security through an object capability model. We present a design for reflection in Wyvern which respects capability safety and type-based encapsulation. This is accomplished through a mirror-based design, with the addition of a mechanism to constrain the visible type of a reflected object. In this way, we ensure that the programmer cannot use reflection to violate basic encapsulation and security guarantees.",
      "Affiliations": [
        "Carnegie Mellon University",
        "Carnegie Mellon University"
      ],
      "AffiliationsString": "Carnegie Mellon University",
      "Authors": [
        "estherwang",
        "jonathanaldrich"
      ],
      "Key": "meta2016-capability-safe-reflection-for-the-wyvern-language",
      "PersonsString": "Esther Wang and Jonathan Aldrich",
      "Title": "Capability Safe Reflection for the Wyvern Language",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/meta2016-capability-safe-reflection-for-the-wyvern-language"
    },
    {
      "Abstract": "This paper discusses the design and implementation of a domainspecific language (SHEP) for modelling energy optimal pumping systems (realizing specific flows and pressures). The optimization problem (specified as a SHEP model) is transformed into a corresponding mixed-integer linear program which can be solved by standard MILP-solvers. The solution together with the original model are transformed into executable simulation models (e. g. MODELICA or MATLAB SIMULINK).",
      "Affiliations": [
        "Martin-Luther-University Halle-Wittenberg",
        "Martin-Luther-University Halle-Wittenberg",
        "Martin-Luther-University Halle-Wittenberg"
      ],
      "AffiliationsString": "Martin-Luther-University Halle-Wittenberg",
      "Authors": [
        "benjaminsaul",
        "christianberg",
        "wolfzimmermann"
      ],
      "Key": "itsle2016-a-domain-specific-language-for-optimal-pumping-systems",
      "PersonsString": "Benjamin Saul, Christian Berg and Wolf Zimmermann",
      "Title": "A Domain Specific Language for Optimal Pumping Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/itsle2016-a-domain-specific-language-for-optimal-pumping-systems"
    },
    {
      "Abstract": "Session types are a formalism used to specify and check the correctness of communication based systems. Within their scope, they can guarantee the absence of communication errors such as deadlock, sending an unexpected message or failing to handle an incoming message. Introduced over two decades ago, they have developed into a significant theme in programming languages. In this paper we examine the beliefs that drive research into this area and make it popular. We look at the claims and motivation behind session types throughout the literature. We identify the hypotheses upon which session types have been designed and implemented, and attempt to clarify and formulate them in a more suitable manner for testing.",
      "Affiliations": [
        "University of Glasgow, UK",
        "University of Glasgow, UK"
      ],
      "AffiliationsString": "University of Glasgow, UK",
      "Authors": [
        "alauravoinea",
        "simonjgay"
      ],
      "Key": "plateau2016-benefits-of-session-types-for-software-development",
      "PersonsString": "A. Laura Voinea and Simon J. Gay",
      "Title": "Benefits of Session Types for Software Development",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/plateau2016-benefits-of-session-types-for-software-development"
    },
    {
      "Abstract": "",
      "Affiliations": ["Australian National University, Data61, and Purdue University"],
      "AffiliationsString": "Australian National University, Data61, and Purdue University",
      "Authors": ["tonyhosking"],
      "Key": "vmil2016-opening-remarks",
      "PersonsString": "Tony Hosking",
      "Title": "Opening Remarks",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/vmil2016-opening-remarks"
    },
    {
      "Abstract": "Comparing the performance of programming languages is difficult because they differ in many aspects including preferred programming abstractions, available frameworks, and their runtime systems. Nonetheless, the question about relative performance comes up repeatedly in the research community, industry, and wider audience of enthusiasts.\nThis paper presents 14 benchmarks and a novel methodology to assess the compiler effectiveness across language implementations. Using a set of common language abstractions, the benchmarks are implemented in Java, JavaScript, Ruby, Crystal, Newspeak, and Smalltalk. We show that the benchmarks exhibit a wide range of characteristics using language-agnostic metrics. Using four different languages on top of the same compiler, we show that the benchmarks perform similarly and therefore allow for a comparison of compiler effectiveness across languages. Based on anecdotes, we argue that these benchmarks help language implementers to identify performance bugs and optimization potential by comparing to other language implementations.",
      "Affiliations": [
        "Johannes Kepler University Linz",
        "Johannes Kepler University",
        "Johannes Kepler University Linz"
      ],
      "AffiliationsString": "Johannes Kepler University Linz, Johannes Kepler University",
      "Authors": [
        "stefanmarr",
        "benoitdaloze",
        "hanspetermossenbock"
      ],
      "Key": "dls-2016-papers-cross-language-compiler-benchmarking-are-we-fast-yet-",
      "PersonsString": "Stefan Marr, Benoit Daloze and Hanspeter Mössenböck",
      "Title": "Cross-Language Compiler Benchmarking\u2014Are We Fast Yet?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-cross-language-compiler-benchmarking-are-we-fast-yet-"
    },
    {
      "Abstract": "Defect-prediction techniques can enhance the quality assurance activities for software systems. For instance, they can be used to predict bugs in source files or functions. In the context of a software product line, such techniques could ideally be used for predicting defects in features or combinations of features, which would allow developers to focus quality assurance on the error-prone ones. In this preliminary case study, we investigate how defect prediction models can be used to identify defective features using machine-learning techniques. We adapt process metrics and evaluate and compare three classifiers using an open-source product line. Our results show that the technique can be effective. Our best scenario achieves an accuracy of 73 % for accurately predicting features as defective or clean using a Naive Bayes classifier. Based on the results we discuss directions for future work.",
      "Affiliations": [
        "University of Waterloo, Canada",
        "Chalmers University of Technology, Sweden",
        "University of Waterloo, Canada"
      ],
      "AffiliationsString": "University of Waterloo, Canada, Chalmers University of Technology, Sweden",
      "Authors": [
        "rodrigoqueiroz",
        "thorstenberger",
        "krzysztofczarnecki"
      ],
      "Key": "fosd2016-towards-predicting-feature-defects-in-software-product-lines",
      "PersonsString": "Rodrigo Queiroz, Thorsten Berger and Krzysztof Czarnecki",
      "Title": "Towards Predicting Feature Defects in Software Product Lines",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-towards-predicting-feature-defects-in-software-product-lines"
    },
    {
      "Abstract": "Multiple inheritance is often criticised for the ambiguity that arises when multiple parents want to pass on a feature with the same name to their offspring. This problem, often referred to as \u201cthe diamond problem\u201d, has been addressed by various languages in various ways. A survey of these solutions reveals that none of the languages have an inherently implicit and dynamic approach to resolve the ambiguity.\nThis paper introduces just-in-time inheritance, an implicit and dynamic inheritance mechanism where one of the parents is favoured over the others and where this favoured parent can change at runtime. This entails that the ambiguity generally introduced by multiple inheritance is not present at runtime.\nThe applicability of just-in-time inheritance is to be found in systems where multiple inheritance is used to model an \u201cis-a OR is-a\u201d-relation, rather than the more traditional \u201cis-a AND is-a\u201d-relation. Hence, just-in-time inheritance is not a silver bullet to solve \u201cthe diamond problem\u201d, but is it a very useful feature for implementing typestate oriented programs or in programs with representation changes in general.",
      "Affiliations": [
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Vrije Universiteit Brussel, Belgium",
      "Authors": [
        "mattiasdewael",
        "janwillemswalens",
        "wolfgangdemeuter"
      ],
      "Key": "dls-2016-papers-just-in-time-inheritance",
      "PersonsString": "Mattias De Wael, Janwillem Swalens and Wolfgang De Meuter",
      "Title": "Just-in-Time Inheritance",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-just-in-time-inheritance"
    },
    {
      "Abstract": "Parser generators give programmers a convenient and declarative way to write parsers and other language-processing applications, but their mechanisms for extension and code reuse often leave something to be desired. We introduce Ohm, a parser generator in which both grammars and their interpretations can be extended in safe and modular ways. Unlike many similar tools, Ohm completely separates grammars and semantic actions, avoiding the problems that arise when these two concerns are mixed. This paper describes the particular way in which Ohm achieves this separation, and discusses the resulting benefits to modularity and extensibility.",
      "Affiliations": [
        "HARC / Y Combinator Research",
        "Y Combinator Research",
        "Northeastern University"
      ],
      "AffiliationsString": "HARC / Y Combinator Research, Y Combinator Research, Northeastern University",
      "Authors": [
        "alessandrowarth",
        "patrickdubroy",
        "tonygarnockjones"
      ],
      "Key": "dls-2016-papers-modular-semantic-actions",
      "PersonsString": "Alessandro Warth, Patrick Dubroy and Tony Garnock-Jones",
      "Title": "Modular Semantic Actions",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-modular-semantic-actions"
    },
    {
      "Abstract": "",
      "Affiliations": ["Chalmers University of Technology, Sweden"],
      "AffiliationsString": "Chalmers University of Technology, Sweden",
      "Authors": ["thorstenberger"],
      "Key": "fosd2016-keynote-perspectives-of-projection-based-variation-control-systems",
      "PersonsString": "Thorsten Berger",
      "Title": "Keynote: Perspectives of Projection-Based Variation Control Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-keynote-perspectives-of-projection-based-variation-control-systems"
    },
    {
      "Abstract": "The R language, from the point of view of language design and implementation, is a unique combination of various programming language concepts. It has functional characteristics like lazy evaluation of arguments, but also allows expressions to have arbitrary side effects. Many runtime data structures, for example variable scopes and functions, are accessible and can be modified while a program executes. Several different object models allow for structured programming, but the object models can interact in surprising ways with each other and with the base operations of R.\nR works well in practice, but it is complex, and it is a challenge for language developers trying to improve on the current state-of-the-art, which is the reference implementation - GNU R. The goal of this work is to demonstrate that, given the right approach and the right set of tools, it is possible to create an implementation of the R language that provides significantly better performance while keeping compatibility with the original implementation.\nIn this paper we describe novel optimizations backed up by aggressive speculation techniques and implemented within FastR, an alternative R language implementation, uti- lizing Truffle - a JVM-based language development framework developed at Oracle Labs. We also provide experimental evidence demonstrating effectiveness of these optimizations in comparison with GNU R, as well as Renjin and TERR implementations of the R language.",
      "Affiliations": [
        "Oracle Labs",
        "Oracle Labs",
        "Oracle Labs",
        "Oracle Labs"
      ],
      "AffiliationsString": "Oracle Labs",
      "Authors": [
        "lukasstadler",
        "adamwelc",
        "christianhumer",
        "mickjordan"
      ],
      "Key": "dls-2016-papers-optimizing-r-language-execution-via-aggressive-speculation",
      "PersonsString": "Lukas Stadler, Adam Welc, Christian Humer and Mick Jordan",
      "Title": "Optimizing R Language Execution via Aggressive Speculation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-optimizing-r-language-execution-via-aggressive-speculation"
    },
    {
      "Abstract": "",
      "Affiliations": ["ARC Technology Ltd."],
      "AffiliationsString": "ARC Technology Ltd.",
      "Authors": ["neilmather"],
      "Key": "fosd2016-lightning-talk-comparing-variability-mechanisms-for-requirements-and-test-artifacts-in-behaviour-driven-development",
      "PersonsString": "Neil Mather",
      "Title": "Lightning Talk: Comparing Variability Mechanisms for Requirements and Test Artifacts in Behaviour-Driven Development",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-lightning-talk-comparing-variability-mechanisms-for-requirements-and-test-artifacts-in-behaviour-driven-development"
    },
    {
      "Abstract": "The choice calculus is a simple metalanguage and associated theory that has been successfully applied to several problems of interest to the feature-oriented software development community. The formal presentation of the choice calculus essentially restricts variation points, called choices, to vary based on the inclusion or not of a single feature, while in practice variation points may depend on several features. Therefore, in both theoretical applications of the choice calculus, and in tools inspired by the choice calculus, the syntax of choices has often been generalized to depend on an arbitrary propositional formula of features. The purpose of this paper is to put this syntactic generalization on more solid footing by also generalizing the associated theory. Specifically, after defining the syntax and denotational semantics of the formula choice calculus (FCC), we define and prove the soundness of a syntactic equivalence relation on FCC expressions. This effort validates previous work which has implicitly assumed the soundness of rules in the equivalence relation, and also reveals several rules that are specific to FCC. Finally, we describe some further generalizations to FCC and their limits.",
      "Affiliations": [
        "Oregon State University, USA",
        "Oregon State University, USA"
      ],
      "AffiliationsString": "Oregon State University, USA",
      "Authors": [
        "spencerhubbard",
        "ericwalkingshaw"
      ],
      "Key": "fosd2016-formula-choice-calculus",
      "PersonsString": "Spencer Hubbard and Eric Walkingshaw",
      "Title": "Formula Choice Calculus",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-formula-choice-calculus"
    },
    {
      "Abstract": "The type system in the Dart programming language is deliberately designed to be unsound: for a number of reasons, it may happen that a program encounters type errors at runtime although the static type checker reports no warnings. According to the language designers, this ensures a pragmatic balance between the ability to catch bugs statically and allowing a flexible programming style without burdening the programmer with a lot of spurious type warnings.\nIn this work, we attempt to experimentally validate these design choices. Through an empirical evaluation based on open source programs written in Dart totalling 2.4 M LOC, we explore how alternative, more sound choices affect the type warnings being produced. Our results show that some, but not all, sources of unsoundness can be justified. In particular, we find that unsoundness caused by bivariant function subtyping and method overriding does not seem to help programmers. Such information may be useful when designing future versions of the language or entirely new languages.",
      "Affiliations": [
        "Aarhus University",
        "Aarhus University",
        ""
      ],
      "AffiliationsString": "Aarhus University, ",
      "Authors": [
        "gianlucamezzetti",
        "andersmoller",
        "fabiostrocco"
      ],
      "Key": "dls-2016-papers-type-unsoundness-in-practice-an-empirical-study-of-dart",
      "PersonsString": "Gianluca Mezzetti, Anders Møller and Fabio Strocco",
      "Title": "Type Unsoundness in Practice: An Empirical Study of Dart",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-type-unsoundness-in-practice-an-empirical-study-of-dart"
    },
    {
      "Abstract": "jQuery is the most popular JavaScript library but the state-of-the-art static analyzers for JavaScript applications fail to analyze simple programs that use jQuery. In this paper, we present a novel abstract string domain whose elements are simple regular expressions that can represent prefix, infix, and postfix substrings of a string and even their sets. We formalize the new domain in the abstract interpretation framework with abstract models of strings and objects commonly used in the existing JavaScript analyzers. For practical use of the domain, we present polynomial-time inclusion decision rules between the regular expressions and prove that the rules exactly capture the actual inclusion relation. We have implemented the domain as an extension of the open-source JavaScript analyzer, SAFE, and we show that the extension significantly improves the scalability and precision of the baseline analyzer in analyzing programs that use jQuery.",
      "Affiliations": [
        "KAIST",
        "INRIA Grenoble Rhône-Alpes",
        "KAIST"
      ],
      "AffiliationsString": "KAIST, INRIA Grenoble Rhône-Alpes",
      "Authors": [
        "changheepark",
        "hyeonseungim",
        "sukyoungryu"
      ],
      "Key": "dls-2016-papers-precise-and-scalable-static-analysis-of-jquery-using-a-regular-expression-domain",
      "PersonsString": "Changhee Park, Hyeonseung Im and Sukyoung Ryu",
      "Title": "Precise and Scalable Static Analysis of jQuery Using a Regular Expression Domain",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-precise-and-scalable-static-analysis-of-jquery-using-a-regular-expression-domain"
    },
    {
      "Abstract": "Software product line (SPL) testing is a challenging task, due to the huge number of variants sharing common functionalities to be taken into account for efficient testing. By adopting the concept of regression testing, incremental SPL testing strategies cope with this challenge by exploiting the reuse potential of test artifacts between subsequent variants under test. In previous work, we proposed delta-oriented test case prioritization for incremental SPL integration testing, where differences between architecture test model variants allow for reasoning about the order of reusable test cases to be executed. However, the prioritization left two issues open, namely (1) changes to component behavior are ignored, which may also influence component interactions and, (2) the weighting and ordering of similar test cases result in an unintended clustering of test cases. In this paper, we extend the test case prioritization technique by (1) incorporating changes to component behavior allowing for a more fine-grained analysis and (2) defining a dissimilarity measure to avoid clustered test case orders. We prototyped our test case prioritization technique and evaluated its applicability and effectiveness by means of a case study from the automotive domain showing positive results.",
      "Affiliations": [
        "Technische Universität Braunschweig",
        "Technische Universität Braunschweig",
        "Magdeburg University",
        "Technische Universität Braunschweig",
        "TU Braunschweig, Germany"
      ],
      "AffiliationsString": "Technische Universität Braunschweig, Magdeburg University, TU Braunschweig, Germany",
      "Authors": [
        "remolachmann",
        "saschality",
        "mustafaalhajjaji",
        "franzefurchtegott",
        "inaschaefer"
      ],
      "Key": "fosd2016-fine-grained-test-case-prioritization-for-integration-testing-of-delta-oriented-software-product-lines",
      "PersonsString": "Remo Lachmann, Sascha Lity, Mustafa Al-Hajjaji, Franz E. Fürchtegott and Ina Schaefer",
      "Title": "Fine-Grained Test Case Prioritization for Integration Testing of Delta-Oriented Software Product Lines",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-fine-grained-test-case-prioritization-for-integration-testing-of-delta-oriented-software-product-lines"
    },
    {
      "Abstract": "We present a straightforward, call-by-value embedding of a small logic programming language with a simple complete search. We construct the entire language in 54 lines of Racket\u2014half of which implement unification. We then layer over it, in 43 lines, a reconstruction of an existing logic programming language, miniKanren, and attest to our implementation\u2019s pedagogical value. Evidence suggests our combination of expressiveness, concision, and elegance is compelling: since microKanren\u2019s release, it has spawned over 50 embeddings in over two dozen host languages, including Go, Haskell, Prolog and Smalltalk.",
      "Affiliations": [
        "Indiana University",
        "Indiana University",
        "University of Utah",
        "University of Utah"
      ],
      "AffiliationsString": "Indiana University, University of Utah",
      "Authors": [
        "jasonhemann",
        "danfriedman",
        "williamebyrd",
        "mattmight"
      ],
      "Key": "dls-2016-papers-a-small-embedding-of-logic-programming-with-a-simple-complete-search",
      "PersonsString": "Jason Hemann, Dan Friedman, William E. Byrd and Matt Might",
      "Title": "A Small Embedding of Logic Programming with a Simple Complete Search",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-a-small-embedding-of-logic-programming-with-a-simple-complete-search"
    },
    {
      "Abstract": "Optional typing is traditionally viewed as a compromise between static and dynamic type checking, where code without type annotations is not checked until runtime. We demonstrate that optional type annotations in Dart programs can be integrated into a flow analysis to provide static type safety guarantees both for annotated and non-annotated parts of the code. We explore two approaches: one that uses type annotations for filtering, and one that uses them as specifications. What makes this particularly challenging for Dart is that its type system is unsound even for fully annotated code. Experimental results show that the technique is remarkably effective, even without context sensitivity: 99.3% of all property lookup operations are reported type safe in a collection of benchmark programs.",
      "Affiliations": [
        "Aarhus University",
        "Aarhus University",
        ""
      ],
      "AffiliationsString": "Aarhus University, ",
      "Authors": [
        "thomassheinze",
        "andersmoller",
        "fabiostrocco"
      ],
      "Key": "dls-2016-papers-type-safety-analysis-for-dart",
      "PersonsString": "Thomas S. Heinze, Anders Møller and Fabio Strocco",
      "Title": "Type Safety Analysis for Dart",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-type-safety-analysis-for-dart"
    },
    {
      "Abstract": "Compiling Matlab\u2014a dynamic, array-based language\u2014to JavaScript is an attractive proposal: the output code can be deployed on a platform used by billions and can leverage the countless hours that have gone into making JavaScript JIT engines fast. But before that can happen, the original MatLab code must be properly translated, making sure to bridge the semantic gaps of the two languages.\nAn important area where MatLab and JavaScript differ is in their handling of arrays: for example, in MatLab, arrays are one-indexed and writing at an index beyond the end of an array extends it; in JavaScript, typed arrays are zero-indexed and writing out of bounds is a no-op. A MatLab-to-JavaScript compiler must address these mismatches. Another salient and pervasive difference between the two languages is the assignment of arrays to variables: in MatLab, this operation has value semantics, while in JavaScript is has reference semantics.\nIn this paper, we present MatJuice \u2014 a source-to-source, ahead-of-time compiler back-end for MatLab \u2014 and how it deals efficiently with this last issue. We present an intra-procedural data-flow analysis to track where each array variable may point to and which variables are possibly aliased. We also present the associated copy insertion transformation that uses the points-to information to insert explicit copies when necessary. The resulting JavaScript program respects the MatLab value semantics and we show that it performs fewer run-time copies than some alternative approaches.",
      "Affiliations": [
        "",
        "McGill University"
      ],
      "AffiliationsString": ", McGill University",
      "Authors": [
        "vincentfoleybourgon",
        "lauriehendren"
      ],
      "Key": "dls-2016-papers-efficiently-implementing-the-copy-semantics-of-matlab-s-arrays-in-javascript",
      "PersonsString": "Vincent Foley-Bourgon and Laurie Hendren",
      "Title": "Efficiently Implementing the Copy Semantics of MATLAB's Arrays in JavaScript",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-efficiently-implementing-the-copy-semantics-of-matlab-s-arrays-in-javascript"
    },
    {
      "Abstract": "Software product line implementation techniques are complementary. Thus, moving fluidly between them would be beneficial. Our tool PEoPL, a novel instantiation of the MPS language workbench, supports projecting a common variational AST into user-editable projections, each of which represents a different product line implementation technique. PEoPL supports FOP-like, annotative and product projections and allows developers to move fluidly between them. In this paper, we lay the foundation for future delta-oriented projectional editors. We use an example scenario to discuss a mapping of DeltaJ language concepts to the variational AST and operations employed in PEoPL. In a case study, we show that PEoPL is expressive enough to represent DeltaJ product lines, and at the same time supports all delta manipulations.",
      "Affiliations": [
        "University of Luxembourg, Germany",
        "Saarland University of Applied Sciences, Germany"
      ],
      "AffiliationsString": "University of Luxembourg, Germany, Saarland University of Applied Sciences, Germany",
      "Authors": [
        "benjaminbehringer",
        "moritzfey"
      ],
      "Key": "fosd2016-are-deltas-projectable-using-peopl-an-example-scenario-and-case-study",
      "PersonsString": "Benjamin Behringer and Moritz Fey",
      "Title": "Implementing Delta-Oriented SPLs using PEoPL: An Example Scenario and Case Study",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-are-deltas-projectable-using-peopl-an-example-scenario-and-case-study"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Technische Universität Braunschweig",
        "Federal University of Pernambuco"
      ],
      "AffiliationsString": "Technische Universität Braunschweig, Federal University of Pernambuco",
      "Authors": [
        "christophseidl",
        "leopoldoteixeira"
      ],
      "Key": "fosd2016-workshop-opening",
      "PersonsString": "Christoph Seidl and Leopoldo Teixeira",
      "Title": "Workshop Opening",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/fosd2016-workshop-opening"
    },
    {
      "Abstract": "The RPython framework takes an interpreter for a dynamic language as its input and produces a Virtual Machine (VM) for that language. RPython is being used to develop PyPy, a high-performance Python interpreter. However, the produced VM does not support parallel execution since the framework relies on a Global Interpreter Lock (GIL): PyPy serialises the execution of multi-threaded Python programs.\nWe describe the rationale and design of a new parallel execution model for RPython that allows the generation of parallel virtual machines while leaving the language semantics unchanged. This model then allows different implementations of concurrency control, and we discuss an implementation based on a GIL and an implementation based on Software Transactional Memory (STM).\nTo evaluate the benefits of either choice, we adapt PyPy to work with both implementations (GIL and STM). The evaluation shows that PyPy with STM improves the runtime of a set of multi-threaded Python programs over PyPy with a GIL by factors in the range of $1.87\\times$ up to $5.96\\times$ when executing on a processor with 8 cores.",
      "Affiliations": [
        "ETH Zurich",
        "PyPy.org",
        "ETH Zurich"
      ],
      "AffiliationsString": "ETH Zurich, PyPy.org",
      "Authors": [
        "remigiusmeier",
        "arminrigo",
        "thomasgross"
      ],
      "Key": "dls-2016-papers-parallel-virtual-machines-with-rpython",
      "PersonsString": "Remigius Meier, Armin Rigo and Thomas Gross",
      "Title": "Parallel Virtual Machines with RPython",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-parallel-virtual-machines-with-rpython"
    },
    {
      "Abstract": "Software Product Lines (SPLs) exploit reuse-in-the-large to enable customization by explicitly modeling commonalities and variabilities of closely related software systems. Different approaches exist to enable SPL development and product creation by using modular languages, such as Feature-Oriented Programming (FOP) (compositional) or Delta-Oriented Programming (DOP) (transformational). These languages incorporate, e.g., object-oriented languages, adding a layer of variability. Creating a variabilityaware Abstract Syntax Graph (ASG), i.e., an ASG that contains the complete variability of the SPL, facilitates family-based analyses and is essential for supporting developers during SPL development. To this end, name resolution has to be performed. However, name resolution for these languages is a challenge as multiple declarations for the same element may occur in different modules. In this paper, we propose four name resolution strategies for compositional and transformational SPL realization languages and discuss their benefits and drawbacks, categorized by relevant application scenarios of the ASG.",
      "Affiliations": [
        "TU Braunschweig, Germany",
        "TU Braunschweig, Germany",
        "TU Braunschweig, Germany"
      ],
      "AffiliationsString": "TU Braunschweig, Germany",
      "Authors": [
        "svenschuster",
        "michaelnieke",
        "inaschaefer"
      ],
      "Key": "fosd2016-name-resolution-strategies-in-variability-realization-languages-for-software-product-lines",
      "PersonsString": "Sven Schuster, Michael Nieke and Ina Schaefer",
      "Title": "Name Resolution Strategies in Variability Realization Languages for Software Product Lines",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-name-resolution-strategies-in-variability-realization-languages-for-software-product-lines"
    },
    {
      "Abstract": "V8 is a mature, high-performance JavaScript engine used by Chrome, node.js and a number of other projects. V8\u2019s original raison d\u2019etre was to make JavaScript fast. It therefore eschewed the typical dynamic language virtual machine approach of having an interpreter as its first-level execution target, and instead JIT compiled baseline machine code directly. While this approach has served V8 well, it has led to architectural complexity and can incur increased memory and runtime overheads for run-once code. As such, we recently embarked on a project to build a new high-performance interpreter, Ignition, for V8.\nBuilding an interpreter for a mature virtual machine such as V8 presents a number of challenges as well as some opportunities. In this talk I will describe some of the key design decisions of Ignition, such as its register based design and the mechanism used to build the bytecode handlers with V8\u2019s TurboFan optimizing compiler. I will also describe how we adapted V8s dynamic type feedback system, which is critical to achieving good performance on a dynamic language such as JavaScript. Finally I will outline how Ignition integrates into V8\u2019s compilation pipeline and plans for the future.",
      "Affiliations": ["Google"],
      "AffiliationsString": "Google",
      "Authors": ["rossmcilroy"],
      "Key": "dls-2016-papers-invited-talk",
      "PersonsString": "Ross McIlroy",
      "Title": "DLS 2016 Keynote: Ignition: Jump-starting an Interpreter for V8",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-invited-talk"
    },
    {
      "Abstract": "Developing and maintaining a feature model is a tedious process and gets increasingly difficult with regard to large product lines consisting of thousands of features and constraints. In addition, these large-scale feature models typically involve several stakeholders from different domains during development and maintenance. We aim at supporting such stakeholders by deriving and explaining implicit constraints for partial feature models. A partial feature model can either be a submodel of a feature model representing the full product line or a specific feature model in a set of interrelated models. For every implicit constraint, we generate an explanation exposing which other model parts and constraints interfere with the partial model of interest. Thus, stakeholders are only confronted with a small part of the feature model reducing the complexity while preserving the necessary information about dependencies. Our approach is implemented in the open-source framework FeatureIDE.",
      "Affiliations": [
        "FZI Research Center for Information Technology",
        "TU Braunschweig, Germany",
        "TU Braunschweig, Germany",
        "TU Braunschweig, Germany"
      ],
      "AffiliationsString": "FZI Research Center for Information Technology, TU Braunschweig, Germany",
      "Authors": [
        "sofiaananieva",
        "matthiaskowal",
        "thomasthm",
        "inaschaefer"
      ],
      "Key": "fosd2016-implicit-constraints-in-partial-feature-models",
      "PersonsString": "Sofia Ananieva, Matthias Kowal, Thomas Thüm and Ina Schaefer",
      "Title": "Implicit Constraints in Partial Feature Models",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-implicit-constraints-in-partial-feature-models"
    },
    {
      "Abstract": "Companies commonly use state charts to reduce the complexity of software development. To create variants with slightly different functionality from existing products, it is common practice to copy the corresponding state charts and modify them to changed requirements. Even though these so-called clone-and-own approaches save money in the short-term, they introduce severe risks for software evolution and product quality in the long term as the relation between the software variants is lost so that all products have to be maintained separately. In previous work, we introduced variability mining algorithms to identify the relations between related MATLAB/Simulink model variants regarding their common and varying parts. In this paper, we adapt these algorithms for state charts by applying guidelines from previous work to make them available for developers to better understand the relations between a set of state chart variants. Using this knowledge, maintenance of related variants can be improved and migration from clone-and-own based single variant development to more elaborate reuse strategies is possible to increase maintainability and the overall product quality. We demonstrate the feasibility of variability mining for state charts by means of a case study with models of realistic size.",
      "Affiliations": [
        "TU Braunschweig, Germany",
        "TU Hamburg, Germany",
        "TU Braunschweig, Germany"
      ],
      "AffiliationsString": "TU Braunschweig, Germany, TU Hamburg, Germany",
      "Authors": [
        "davidwille",
        "sandroschulze",
        "inaschaefer"
      ],
      "Key": "fosd2016-variability-mining-of-state-charts",
      "PersonsString": "David Wille, Sandro Schulze and Ina Schaefer",
      "Title": "Variability Mining of State Charts",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-variability-mining-of-state-charts"
    },
    {
      "Abstract": "Programming language virtual machines (VMs) realize language semantics, enforce security properties, and execute applications efficiently. Fully Reflective Execution Environments (EEs) are VMs that additionally expose their whole structure and behavior to applications. This enables developers to observe and adapt VMs at run time. However, there is a belief that reflective EEs are not viable for practical usages because such flexibility would incur a high performance overhead. \nTo refute this belief, we built a reflective EE on top of a highly optimizing dynamic compiler.We introduced a new optimization model that, based on the conjecture that variability of low-level (EE-level) reflective behavior is low in many scenarios, mitigates the most significant sources of the performance overheads related to the reflective capabilities in the EE. Our experiments indicate that reflective EEs can reach peak performance in the order of standard VMs. Concretely, that a) if reflective mechanisms are not used the execution overhead is negligible compared to standard VMs, b) VM operations can be redefined at language-level without incurring in significant overheads, c) for several software adaptation tasks, applying the reflection at the VM level is not only lightweight in terms of engineering effort, but also competitive in terms of performance in comparison to other ad-hoc solutions.",
      "Affiliations": [
        "Dept. of Computer Science FCEyN, University of Buenos Aires",
        "Departamento de Computación, FCEyN, UBA",
        "Johannes Kepler University Linz"
      ],
      "AffiliationsString": "Dept. of Computer Science FCEyN, University of Buenos Aires, Departamento de Computación, FCEyN, UBA, Johannes Kepler University Linz",
      "Authors": [
        "guidochari",
        "diegogarbervetsky",
        "stefanmarr"
      ],
      "Key": "dls-2016-papers-building-efficient-and-highly-run-time-adaptable-virtual-machines",
      "PersonsString": "Guido Chari, Diego Garbervetsky and Stefan Marr",
      "Title": "Building Efficient and Highly Run-time Adaptable Virtual Machines",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dls-2016-papers-building-efficient-and-highly-run-time-adaptable-virtual-machines"
    },
    {
      "Abstract": "Software product lines can be implemented with different techniques. Those techniques can be grouped into annotation-based and composition-based approaches, with complementary strengths and weaknesses. A combination seems useful to utilize benefits of both groups but using two techniques in parallel may cause new problems. To our knowledge, there is no approach that integrates composition into an annotation-based approach or vice versa. We propose the use of an extended preprocessor to introduce physical separation of concerns similar to feature-oriented programming. In this paper, we i) present a preliminary implementation that integrates composition into annotation, ii) analyse its benefits and shortcomings, and iii) discuss implementation and tooling. Overall, we enable developers to keep on using familiar preprocessors but also to benefit from composition. Finally, we show the potential of our approach.",
      "Affiliations": [
        "Harz University of Applied Sciences, Germany",
        "University of Magdeburg, Germany",
        "METOP Magdeburg, Germany",
        "METOP Magdeburg, Germany",
        "Harz University of Applied Sciences, Germany"
      ],
      "AffiliationsString": "Harz University of Applied Sciences, Germany, University of Magdeburg, Germany, METOP Magdeburg, Germany",
      "Authors": [
        "jacobkruger",
        "ivonneschroter",
        "andykenner",
        "christopherkruczek",
        "thomasleich"
      ],
      "Key": "fosd2016-featurecopp-compositional-annotations",
      "PersonsString": "Jacob Krüger, Ivonne Schröter, Andy Kenner, Christopher Kruczek and Thomas Leich",
      "Title": "FeatureCoPP: Compositional Annotations",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-featurecopp-compositional-annotations"
    },
    {
      "Abstract": "In software product lines (SPL), i.e., a family of similar software systems sharing common and variable artifacts, modeling evolution and reasoning about it is challenging, as not only a single system, but rather a set of system variants as well as their interdependencies change. An integrated modeling formalism for variability and evolution is required to allow the capturing of evolution operations that are applied to SPL artifacts, and to facilitate the impact analysis of evolution on the artifact level. Delta modeling is a flexible transformational variability modeling approach, where the variability and commonality between variants are explicitly documented and analyzable by means of transformations modeled as deltas. In this paper, we lift the notion of delta modeling to capture both, variability and evolution, by deltas. We evolve a delta model specifying a set of variants by applying higher-order deltas. A higher-order delta encapsulates evolution operations, i.e., additions, removals, or modifications of deltas, and transforms a delta model in its new version. In this way, we capture the complete evolution history of delta-oriented SPLs by higher-order delta models. By analyzing each higher-order delta application, we are further able to reason about the impact and, thus, the changes to the specified set of variants. We prototypically implement our formalism and show its applicability using a system from the automation engineering domain.",
      "Affiliations": [
        "Technische Universität Braunschweig",
        "TU Braunschweig, Germany",
        "TU Braunschweig, Germany"
      ],
      "AffiliationsString": "Technische Universität Braunschweig, TU Braunschweig, Germany",
      "Authors": [
        "saschality",
        "matthiaskowal",
        "inaschaefer"
      ],
      "Key": "fosd2016-higher-order-delta-modeling-for-software-product-line-evolution",
      "PersonsString": "Sascha Lity, Matthias Kowal and Ina Schaefer",
      "Title": "Higher-Order Delta Modeling for Software Product Line Evolution",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/fosd2016-higher-order-delta-modeling-for-software-product-line-evolution"
    },
    {
      "Abstract": "All participants can join the group(s) with the topic of interest.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-group-work",
      "PersonsString": "",
      "Title": "Group work",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/dsm2016-group-work"
    },
    {
      "Abstract": "While creation of modeling languages and related code generators has become easier, their testing is perhaps nowadays the most time consuming part. This is particularly relevant for Domain-Specific Modeling (DSM) as it is common that the language and generators evolve frequently along with the domain it addresses. We demonstrate one solution that we have found practical when applying Test Driven Development for creating and maintaining modeling languages and generators along with tool support.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-applying-test-driven-development-for-creating-and-refining-domain-specific-modeling-languages-and-generators-juha-pekka-tolvanen",
      "PersonsString": "",
      "Title": "Applying Test-Driven Development for Creating and Refining Domain-Specific Modeling Languages and Generators, Juha-Pekka Tolvanen",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/dsm2016-applying-test-driven-development-for-creating-and-refining-domain-specific-modeling-languages-and-generators-juha-pekka-tolvanen"
    },
    {
      "Abstract": "Presentation of group work results and workshop wrap-up",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-group-work-reporting-and-wrap-up",
      "PersonsString": "",
      "Title": "Group work reporting and wrap-up",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-group-work-reporting-and-wrap-up"
    },
    {
      "Abstract": "Robotics currently adopts model-driven engineering focusing software modeling languages. This forces domain experts to employ these languages instead of enabling application of more appropriate DSLs. This ultimately produces monolithic, hardly reusable applications. We present an infrastructure for the development of service robotics applications employing DSLs aimed at domain experts and tailored to domain challenges. It facilitates separation of concerns of participating robotics, domain, and software engineering experts and integrates their models via a component &amp; connector reference architecture and a combined code generation framework. The infrastructure was successfully deployed and evaluated with robotics manufacturers, caregivers, and software engineers in a German hospital. We believe that model-driven engineering with languages tailored to the various stakeholders\u2019 needs can greatly facilitate robotic application engineering.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-model-driven-separation-of-concerns-for-service-robotics-kai-adam-arvid-butting-robert-heim-oliver-kautz-bernhard-rumpe-and-andreas-wortmann",
      "PersonsString": "",
      "Title": "Model-Driven Separation of Concerns for Service Robotics, Kai Adam, Arvid Butting, Robert Heim, Oliver Kautz, Bernhard Rumpe and Andreas Wortmann",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-model-driven-separation-of-concerns-for-service-robotics-kai-adam-arvid-butting-robert-heim-oliver-kautz-bernhard-rumpe-and-andreas-wortmann"
    },
    {
      "Abstract": "Elastic cloud systems automatically respond to workload changes by (de-)allocating resources according to a configuration specification. Testing such systems requires peculiar effort from the tester. In particular, the tester is brought to specify the sequence of resource variations he/she is willing to test the system under, and then, drive the system through this specific sequence of variations while the test is being executed. In this paper, we propose a Domain Specific Language (DSL) aiming at reducing the tester\u2019s effort to write and execute elasticity testing. Our DSL abstracts test case specification from the cloud provider\u2019s libraries, making our language portable. The DSL compiles into executable code that implicitly orchestrates the execution of elasticity testing. In our preliminary results, we show that our approach reduces the amount of words to specify test cases \\wrt dedicated libraries. It also demonstrates how much this improvement scales when running a test on multiple cloud providers.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-a-dsl-based-approach-for-elasticity-testing-of-cloud-system-michel-albonico-amine-benelallam-jean-marie-mottu-and-gerson-suny-",
      "PersonsString": "",
      "Title": "A DSL-based Approach for Elasticity Testing of Cloud System, Michel Albonico, Amine Benelallam, Jean-Marie Mottu and Gerson Sunyé",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-a-dsl-based-approach-for-elasticity-testing-of-cloud-system-michel-albonico-amine-benelallam-jean-marie-mottu-and-gerson-suny-"
    },
    {
      "Abstract": "The high-tech industry produces complex devices in which software plays an important role. Since these devices have been developed for many decades, an increasing part of the software can be classified as legacy which is difficult to maintain and to extend. To improve the maintainability of legacy components, domain specific languages (DSL) provides promising perspectives. We present a DSL for creating configuration files that describe the topology of a fieldbus. This DSL improves the maintainability and extensibility of a legacy component. Compared to the current way-of-working, the configuration files generated by the DSL are of higher quality due to the concise representation of DSL instances and additional validation checks. To raise the level of abstraction even more, we have created a second DSL which allows a concise description of system configurations and the generation of topologies.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-improving-maintenance-by-creating-a-dsl-for-configuring-a-fieldbus-mathijs-schuts-and-jozef-hooman",
      "PersonsString": "",
      "Title": "Improving Maintenance by Creating a DSL for Configuring a Fieldbus, Mathijs Schuts and Jozef Hooman",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-improving-maintenance-by-creating-a-dsl-for-configuring-a-fieldbus-mathijs-schuts-and-jozef-hooman"
    },
    {
      "Abstract": "Industrial Use of Domain-Specific Modeling\nRaising the level of abstraction with languages, yet enabling the generation of code and other needed artifacts, has been a successful recipe for productivity and quality improvements for decades. In this panel, we ask experienced industry experts to share their experiences, both good and bad, on applying Domain-Specific Modeling (DSM) in various application areas. The panel discussion will offer insight into the nature of DSM language design, implementation, and application, as well as the possibilities of diverse organizational introduction and use. The audience is welcome to ask their own questions and join with their own opinions and experiences.\nPanelists: \n \n Niels Brouwers, Software Architect, Altran \n Robert Hendriksen, Software Architect at SoLayTec and Sioux \n G&ouml;khan Kahraman, Team Leader, ASELSAN A.S \n Jeroen Kouwer, Software Engineering Consultant, Thales \n\n\nModerator: Juha-Pekka Tolvanen, MetaCase\nAbout the panelists:\nNiels Brouwers is a software architect at Altran and specialized in the field of model driven engineering. His passion for model driven engineering originated in 2007 and was further pursued by joining Altran, a global leader in innovation and high-tech engineering consulting that strongly believes in Model Driven Engineering, in 2011. For more than 5 years, he has led multiple teams in the development of domain specific languages and advanced code generators that are applied in a large industrial software organization.\nRobert Hendriksen joined Sioux, which is based in Eindhoven, the Netherlands, in 2006. He has been involved in various projects for Sioux, but at the moment, he works on a fulltime basis as software architect for SoLayTec\u2019s products. Any time left after this is devoted to the construction and application of DSLs.\nG&ouml;khan Kahraman received the M.Sc. and Ph.D. degrees in Electrical and Electronics Engineering from Hacettepe University, and Middle East Technical University (METU), Ankara, Turkey, respectively. He is currently working as a senior expert software engineer at ASELSAN A.S. in Turkey. He has over 10 years of experience in embedded software development using model driven development and domain specific modeling approaches, taking on developer, architect and team leader roles in large scale and complex system projects. He is the team leader of the Domain Specific Language (DSL) development team in ASELSAN-REHIS group. This team designed and implemented many DSLs which are used in several projects and these DSLs continue to be evolved and maintained. His Ph.D. work focused on the assessment of DSLs and his current research interests include Domain Specific Languages, quality of DSLs and cyber-physical systems.\nJeroen Kouwer started his career in 1998 at Thales and has worked since then for various companies in order to return to Thales at the end of 2006. Upon returning to Thales he started to work on a software service framework and the modeling methodology on top of this framework. Since then he has applied his modeling and software skills in various projects. He has experience with C, Java, modeling, meta-modeling and DSL development. He has a strong focus on enhancing and simplifying developing and testing of software.\nAbout the moderator:\nJuha-Pekka Tolvanen is the CEO of MetaCase, a company providing MetaEdit+ tool for Domain-Specific Modeling. Juha-Pekka has been working with model-driven development and tools, notably metamodeling and domain-specific languages and models, since 1991. He has acted as a consultant world-wide for modeling language development, authored a book on Domain-Specific Modeling, and written over 70 articles for various software development magazines and conferences. Juha-Pekka holds a Ph.D. in computer science from the University of Jyv&auml;skyl&auml;, Finland.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-panel-on-industrial-use-of-domain-specific-modeling",
      "PersonsString": "",
      "Title": "Panel on Industrial Use of Domain-Specific Modeling",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-panel-on-industrial-use-of-domain-specific-modeling"
    },
    {
      "Abstract": "Introduction to the workshop, schedule and participants.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-introduction",
      "PersonsString": "",
      "Title": "Workshop Introduction",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/dsm2016-introduction"
    },
    {
      "Abstract": "Code generators in the Domain-Specific Modelling (DSM) provide transformation from abstract models into specifications that can be executed, interpreted, or compiled using a target language compiler. Modelling tools may include parsers assisting software engineers to perform an inverse task, i.e., to create a set of language concepts on base of existing program code. Practical benefits from such a reverse approach are limited, since source code cannot be used as an adequate base for creating language concepts on the high-abstraction level. Goal of application of the Model-Driven Development (MDD) approach, and DSM in particular, is to formally specify, using abstract models, a complete real system to the extent that models can be executed. In this paper we present an approach that completely achieve this goal. Model execution is implemented by visual debugging of models, and submodels, which are dynamically created. In this approach, the most important role play fast code generators, so called run-time generators, and feedback that modelling and metamodeling tools get from run-time systems executing specifications.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-run-time-code-generators-for-model-level-debugging-in-domain-specific-modeling",
      "PersonsString": "",
      "Title": "Run-time Code Generators for Model-level Debugging in Domain-specific Modeling, Verislav Djukić, Aleksandar Popović and Zhenli Lu.",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-run-time-code-generators-for-model-level-debugging-in-domain-specific-modeling"
    },
    {
      "Abstract": "We believe that programming is mainly a linguistic process concerning the development of the language abstractions better suited to deal with a given problem domain. The main responsibility of a linguistic system is to capture and incorporate the knowledge of domain experts, while trying to minimize the meta levels efforts, thus allowing users to concentrate on modeling activities. While a meta level is necessary in order to write instances, it is possible to define a generic meta level capable of representing any specific entity. We introduce an instance modeling language, Entities, combining a rich graphical notation, an optionally typed structure, and composability with other domain specific languages. The visual expressivity is comparable to a mindmapping tool, and makes it best suited for knowledge representation domains. The optional typing enables an exploratory, bottom up approach to metamodeling. The composability with strictly typed languages makes modeling a much more flexible experience.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-instance-modeling-assisted-by-an-optional-meta-level-riccardo-solmi",
      "PersonsString": "",
      "Title": "Instance Modeling Assisted by an Optional Meta Level, Riccardo Solmi",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/dsm2016-instance-modeling-assisted-by-an-optional-meta-level-riccardo-solmi"
    },
    {
      "Abstract": "Selection of interesting topics for group work discussion.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-group-work-topic-selection",
      "PersonsString": "",
      "Title": "Group work topic selection",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/dsm2016-group-work-topic-selection"
    },
    {
      "Abstract": "Managing complexity while ensuring safely designed behaviors is important for cyber physical systems as they are continually introduced to consumers, such as autonomous vehicles. Safety considerations are important as programming interfaces become open to experts and non experts of varying degrees. Autonomous vehicles are an example system where many domain experts must collaborate together to ensure safe operation. Through the use of higher level abstraction, domain experts may provide verification tools to check dynamic behavioral constraints. Similarly, higher level modeling tools may generate lower level artifacts for a working system. With modeling and verification tools, smaller teams and potentially non-experts may program custom behaviors while ensuring a correctly behaved system. A high level domain specific modeling language was created with a focus on non-domain experts. The domain consists of driving a vehicle through a set of known waypoints by connecting together multiple primitive motions in a sequence. Though constrained to simple motions, it is still possible to create a sequence to drive the vehicle unsafely. Model verification was implemented to check that the expected start and stop waypoints were correctly reached without driving the vehicle into unsafe regions. The language was then provided to a set of 4th year elementary school students to create unique paths. The Models created by the students were then used to generate controller artifacts to operate a real autonomous vehicle on a soccer field.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-a-safe-autonomous-vehicle-trajectory-domain-specific-modeling-language-for-non-expert-development-matt-bunting-yegeta-zeleke-kennon-mckeever-and-jonathan-sprinkle",
      "PersonsString": "",
      "Title": "A Safe Autonomous Vehicle Trajectory Domain Specific Modeling Language For Non-Expert Development, Matt Bunting, Yegeta Zeleke, Kennon McKeever and Jonathan Sprinkle",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/dsm2016-a-safe-autonomous-vehicle-trajectory-domain-specific-modeling-language-for-non-expert-development-matt-bunting-yegeta-zeleke-kennon-mckeever-and-jonathan-sprinkle"
    },
    {
      "Abstract": "DesignScript is the key computational engine within the Dynamo architectural computing application. DesignScript takes a completely different approach to other domain specific systems. DesignScript is a hybrid language. It is a general purpose language implementing standard programming concepts. It is also a domain specific language implementing a data flow update mechanism as a first class feature of the language. The novice user initially develops his data flow programs through the familiar visual programming environment. This is effectively an intuitive user interface masking the underlying DesignScript language.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-designscript-a-domain-specific-language-for-architectural-computing-position-paper-robert-aish-and-emmanuel-mendoza",
      "PersonsString": "",
      "Title": "DesignScript: a domain specific language for architectural computing (position paper), Robert Aish and Emmanuel Mendoza",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-designscript-a-domain-specific-language-for-architectural-computing-position-paper-robert-aish-and-emmanuel-mendoza"
    },
    {
      "Abstract": "Abstract Innovation in the field of embedded systems, and more broadly in cyber-physical systems, increasingly relies on software. The productivity gain in software development cannot keep up with the demand for software despite the increasing adoption of Model-Driven Development (MDD). In this context, we believe that major productivity and quality improvements are still ahead of us through better programming languages and environments. CPAL, the Cyber-Physical Action Language, is a contribution in that direction with the objective to speed-up the development of embedded systems with dependability constraints. The objective of this paper is to present and illustrate the use-cases of the high-level abstractions offered to the developer in CPAL with respect to real-time scheduling, introspection mechanisms, native support of Finite State Machines (FSMs), abstracting the hardware and decoupling functional concerns from non-functional concerns.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "dsm2016-cpal-high-level-abstractions-for-safe-embedded-systems-nicolas-navet-and-fejoz-lo-c",
      "PersonsString": "",
      "Title": "CPAL: High-Level Abstractions for Safe Embedded Systems, Nicolas Navet and Fejoz Loïc",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/dsm2016-cpal-high-level-abstractions-for-safe-embedded-systems-nicolas-navet-and-fejoz-lo-c"
    },
    {
      "Abstract": "Context-sensitive parsing remains a problematic area within parsing research. To enable context-sensitive yet context-transparent parsing, we propose principled stateful parsing as a new transactional discipline that makes state changes transparent to parsing mechanisms such as backtracking and memoization. We also discuss the challenges and opportunities inherent to our approach.",
      "Affiliations": [
        "Université Catholique de Louvain, Belgium",
        "Université Catholique de Louvain, Belgium"
      ],
      "AffiliationsString": "Université Catholique de Louvain, Belgium",
      "Authors": [
        "nicolaslaurent",
        "kimmens"
      ],
      "Key": "parsing2016-context-sensitive-parsing-through-stateful-parsing",
      "PersonsString": "Nicolas Laurent and Kim Mens",
      "Title": "Context-Sensitive Parsing Through Stateful Parsing",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-context-sensitive-parsing-through-stateful-parsing"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "parsing2016-discussion-and-closing",
      "PersonsString": "",
      "Title": "Discussion and closing",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/parsing2016-discussion-and-closing"
    },
    {
      "Abstract": "Parsers are everywhere. Novel and not-so-novel parsing tools (and occasionally new ideas) emerge routinely. We have a jungle of techniques, summarized ably by Grune and Jacobs [2], but little guidance as to the quality of implementations. In fact, judging the utility and performance of tools is hard for experts, and can be bewildering for users, who mostly want a black-box parser that \u2018just works\u2019. We suggest a community effort to create a set of standard challenges with two goals: (a) helping users identify the right tool for their use-case, and (b) helping us improve the utility and performance of our implementation by providing an element of competition. These kinds of standard challenges have proved successful in developing the research agenda of areas such as graph drawing (http://www.graphdrawing.org), grammar induction (http://www.grammarlearning.org) and in broad areas of data science (http://www.kaggle.com)",
      "Affiliations": [
        "Royal Holloway University of London",
        "Royal Holloway University of London"
      ],
      "AffiliationsString": "Royal Holloway University of London",
      "Authors": [
        "adrianjohnstone",
        "elizabethscott"
      ],
      "Key": "parsing2016-good-enough-for-you-explaining-ourselves-through-standard-challenges",
      "PersonsString": "Adrian Johnstone and Elizabeth Scott",
      "Title": "Good enough for you? Explaining ourselves through standard challenges",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-good-enough-for-you-explaining-ourselves-through-standard-challenges"
    },
    {
      "Abstract": "The K-tool is a framework for programming language designers. It provides an environment in which users can denote the syntax and semantics of a programming language (PL). From the PL syntax declaration, the tool automatically generates (among other things) a parser for the language. For user convenience, the semantics of the PL can be described as rewrite rules between program congurations written in concrete syntax (not just abstract syntax). To provide this functionality, we developed a new technique for parsing programming language denitions.",
      "Affiliations": ["Faculty of Computer Science, UAIC, Iasi, Romania"],
      "AffiliationsString": "Faculty of Computer Science, UAIC, Iasi, Romania",
      "Authors": ["radumereuta"],
      "Key": "parsing2016-parsing-in-k-framework",
      "PersonsString": "Radu Mereuta",
      "Title": "Parsing in K-Framework",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/parsing2016-parsing-in-k-framework"
    },
    {
      "Abstract": "Wyvern is a new general-purpose programming language that supports the definition and use of naturally embedded domain-specific languages. As described at Parsing@SLE 2013, Wyvern\u2019s design allows developers to equip a type definition with an associated custom parser. This parser is then invoked to parse literals of that type. This approach, which we call type-specific languages (TSLs), supports natural syntax as well as appropriate static and dynamic semantics for the embedded language, and ensures that separately defined TSLs can be used together without conflict. We will demonstrate this approach through a series of small example TSLs defined in Wyvern.",
      "Affiliations": ["Carnegie Mellon University"],
      "AffiliationsString": "Carnegie Mellon University",
      "Authors": ["jonathanaldrich"],
      "Key": "parsing2016-demonstration-modularly-parsing-naturally-embedded-dsls-in-wyvern",
      "PersonsString": "Jonathan Aldrich",
      "Title": "Demonstration: Modularly Parsing Naturally Embedded DSLs in Wyvern",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/parsing2016-demonstration-modularly-parsing-naturally-embedded-dsls-in-wyvern"
    },
    {
      "Abstract": "We present an extension, MGLL, of generalised parsing which allows multiple input strings to be parsed together efficiently. A primary application is the combination of lexical analysis and parsing which encompasses lexical ambiguity in a way which has advantages over scannerless parsing.",
      "Affiliations": [
        "Royal Holloway University of London",
        "Royal Holloway University of London"
      ],
      "AffiliationsString": "Royal Holloway University of London",
      "Authors": [
        "elizabethscott",
        "adrianjohnstone"
      ],
      "Key": "parsing2016-multiple-input-gll-parsing",
      "PersonsString": "Elizabeth Scott and Adrian Johnstone",
      "Title": "Multiple input GLL parsing",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-multiple-input-gll-parsing"
    },
    {
      "Abstract": "The goal of our research effort is to explore synergies between domains described by semantic web technologies and parser generators for domain-specific languages. Specifically, we are exploring how semantic technologies such as RDF (the Resource Description Framework) and RDF-S (RDF-schema) can facilitate the building of DSLs using parser generators such as ANTLR.",
      "Affiliations": ["SMU"],
      "AffiliationsString": "SMU",
      "Authors": ["frankcoyle"],
      "Key": "parsing2016-knowledge-based-support-for-domain-specific-language-generation",
      "PersonsString": "Frank Coyle",
      "Title": "Knowledge-Based Support for Domain Specific Language Generation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-knowledge-based-support-for-domain-specific-language-generation"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "parsing2016-opening",
      "PersonsString": "",
      "Title": "Opening",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/parsing2016-opening"
    },
    {
      "Abstract": "",
      "Affiliations": ["Fernuniversität"],
      "AffiliationsString": "Fernuniversität",
      "Authors": ["friedrichsteimann"],
      "Key": "parsing2016-goodbye-chomsky-hello-tesni-re-replacing-constituency-with-dependency-in-software-languages",
      "PersonsString": "Friedrich Steimann",
      "Title": "Goodbye Chomsky, Hello Tesnière: Replacing Constituency with Dependency in Software Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-goodbye-chomsky-hello-tesni-re-replacing-constituency-with-dependency-in-software-languages"
    },
    {
      "Abstract": "Generalised parsing eases the design of programming languages as a language designer no longer needs to adjust the concrete syntax of the language to suit a particular parsing technique. Concrete syntax can be made more abstract if appropriate disambiguation strategies are available. Many tools exist for generating generalised parsers from a grammar specification, e.g. Bison, SDF, and Happy. \nHandcrafted parsers are common in the functional programming community, thanks to the popularity of parser combinators: higher-order functions performing basic parsing operations that are composed to form more complex combinators. Advantages of the parser combinator approach are plentiful. For example, type-checked semantic actions execute semantics on the fly; the elementary combinators offer more than just terminal matching, e.g. matching terminals satisfying a certain predicate; forms of context-sensitivity are possible when using monadic parsers; and combinator libraries are easily extensible, either by the library implementer or by users of the library. In recent years, combinator libraries have emerged attempting to unite generalised parsing and combinator parsing as to benefit from the advantages of both approaches. \nIn this paper we discuss the difficulties generalised parsing techniques pose on defining such libraries. We adopt the standpoint of an inveterate functional programmer, writing parsers using conventional parser combinators, and impose a number of challenges to combinator libraries offering generalised parsing.",
      "Affiliations": ["Royal Holloway University of London"],
      "AffiliationsString": "Royal Holloway University of London",
      "Authors": ["lthomasvanbinsbergen"],
      "Key": "parsing2016-generalised-parsing-and-combinator-parsing-a-happy-marriage-",
      "PersonsString": "L. Thomas van Binsbergen",
      "Title": "Generalised Parsing and Combinator Parsing: a Happy Marriage?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-generalised-parsing-and-combinator-parsing-a-happy-marriage-"
    },
    {
      "Abstract": "Minimal acyclic deterministic finite automata (MADFAs) are frequently used to represent dictionaries, i.e. finite sets of finite words, in e.g. spell checkers, network security, packet filtering applications, and other tools. Given the size of such dictionaries, which may run into millions of words, their efficient construction is a critical issue. Acyclic Deterministic Finite Automata (ADFAs) consist of a set of states, one of them being a start state, and one or more of them being final states; and labeled transitions between states. They are deterministic, i.e. each state has at most one out-transition for a specific label; and they are acyclic, i.e. as their name says, no cycles occur. An ADFA is a MADFA if no other ADFA with fewer states accepts the same set of words. This makes MADFAs an excellent data structure to store large finite word sets like dictionaries. As a result, quite some research has gone into MADFA construction algorithms, and a number of different ones, with different characteristics, have been developed [1]. Yet no coherent implementation covering all these algorithm variants existed. In this talk, we report on our experience implementing these algorithms in a coherent Java-based toolkit, and on initial empirical performance results obtained.\n[1] B. W. Watson. Constructing Minimal Acyclic Deterministic Finite Automata. PhD thesis, University of Pretoria, 2010.",
      "Affiliations": [
        "TU Braunschweig",
        "TU Braunschweig, Germany",
        "Eindhoven University of Technology",
        "Stellenbosch University; and Centre for AI Research, CSIR"
      ],
      "AffiliationsString": "TU Braunschweig, TU Braunschweig, Germany, Eindhoven University of Technology, Stellenbosch University; and Centre for AI Research, CSIR",
      "Authors": [
        "tobiasrunge",
        "inaschaefer",
        "loekcleophas",
        "brucewatson"
      ],
      "Key": "parsing2016-madfact-constructing-dictionaries",
      "PersonsString": "Tobias Runge, Ina Schaefer, Loek Cleophas and Bruce Watson",
      "Title": "MADFAct\u2014Constructing Dictionaries",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-madfact-constructing-dictionaries"
    },
    {
      "Abstract": "A tool demonstration of Copper and AbleC.",
      "Affiliations": [
        "University of Minnesota",
        "University of Minnesota",
        "University of Minnesota"
      ],
      "AffiliationsString": "University of Minnesota",
      "Authors": [
        "tedkaminski",
        "lucaskramer",
        "ericvanwyk"
      ],
      "Key": "parsing2016-composition-of-independent-language-extensions-to-c",
      "PersonsString": "Ted Kaminski, Lucas Kramer and Eric Van Wyk",
      "Title": "Composition of independent language extensions to C",
      "Type": "Demonstration",
      "URL": "http://2016.splashcon.org/event/parsing2016-composition-of-independent-language-extensions-to-c"
    },
    {
      "Abstract": "When developing a new programming language, writing a parser is a necessary, but often tedious, task. During development, a language developer may want to experiment with different styles of concrete syntax: should the language be indentation-based like Python or Haskell, or should it belong to the curly-brackets family of languages (C, Java, etc.)? Skinner is a tool that automatically generates a parser directly from abstract-syntax-tree definitions, using a language skin to seed the parser generator with the appropriate syntax. The language skin includes a grammar template, a description of the lexical and syntactic features of the skin language. For instance, a Python language skin would contain a template for a scanner and parser for Python. Skinner tries to match the AST types to constructs in the grammar, using existing rules, removing unused rules, and creating new rules as necessary to instantiate a parser that generates the given ASTs. The user can use the generated parser as is, or modify it to taste.",
      "Affiliations": ["University of Lugano"],
      "AffiliationsString": "University of Lugano",
      "Authors": ["natenystrom"],
      "Key": "parsing2016-there-s-more-than-one-way-to-skin-a-cat",
      "PersonsString": "Nate Nystrom",
      "Title": "There\u2019s more than one way to skin a cat",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-there-s-more-than-one-way-to-skin-a-cat"
    },
    {
      "Abstract": "SDF is a syntax definition formalism used to describe context-free grammars of programming languages. The key principle underlying the design of SDF is declarative syntax definition, so that the user does not need to understand the underlying parsing algorithm, unlike other formalisms such as Yacc. This disambiguation method is able to handle common cases of operator precedence, but the current semantics of priorities fails to disambiguate some other less usual operator precedence that can be found in OCaml or Haskell languages. We propose a new semantics for SDF priorities that generalize the current approach. We describe a possible implementation of a GLR parse-table generator compliant to our semantics, and tested in the Spoofax Language Workbench.",
      "Affiliations": [
        "ENS Rennes",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands"
      ],
      "AffiliationsString": "ENS Rennes, Delft University of Technology, Netherlands",
      "Authors": [
        "timotheehaudebourg",
        "luiseduardodesouzaamorim",
        "eelcovisser"
      ],
      "Key": "parsing2016-disambiguation-for-sdf3-with-deep-priority-conflicts",
      "PersonsString": "Timothée Haudebourg, Luís Eduardo de Souza Amorim and Eelco Visser",
      "Title": "Disambiguation for SDF3 with Deep Priority Conflicts",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-disambiguation-for-sdf3-with-deep-priority-conflicts"
    },
    {
      "Abstract": "It is desirable that the construction of parsers for programming languages be carried out in a measurable and reproducible way, as has been highlighted in a recent stream of research on \u201cgrammar engineering\u201d. We are currently exploiting this approach in the development of a parser for the Python programming language. Our research provides a further case study of grammar engineering, as well as highlighting some specific issues relating to the maintenance of consistency across grammar versions.",
      "Affiliations": [
        "Clemson University",
        "Maynooth University"
      ],
      "AffiliationsString": "Clemson University, Maynooth University",
      "Authors": [
        "brianmalloy",
        "jamespower"
      ],
      "Key": "parsing2016-deriving-grammar-transformations-for-developing-and-maintaining-multiple-parser-versions",
      "PersonsString": "Brian Malloy and James Power",
      "Title": "Deriving Grammar Transformations for Developing and Maintaining Multiple Parser Versions",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/parsing2016-deriving-grammar-transformations-for-developing-and-maintaining-multiple-parser-versions"
    },
    {
      "Abstract": "As of today, mobile software development teams can follow a number of different development and distribution strategies, ranging from native apps, to mobile web apps, hybrid apps, and the recently emerging progressive web apps. \nThis talk provides a state-of-the-art overview of the development strategies and technologies for developing mobile apps, each of them with its own advantages and drawbacks. In this context, the use of web technologies is discussed as a promising investment for moving forward one of the most intriguing challenges in the world of mobile apps: its fragmentation with respect to mobile platforms. A discussion of research challenges, and thus opportunities, closes the talk.",
      "Affiliations": ["Vrije Universiteit Amsterdam"],
      "AffiliationsString": "Vrije Universiteit Amsterdam",
      "Authors": ["ivanomalavolta"],
      "Key": "mobile2016-beyond-native-apps-web-technologies-to-the-rescue-keynote-",
      "PersonsString": "Ivano Malavolta",
      "Title": "Beyond Native Apps: Web Technologies to the Rescue! (Keynote)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-beyond-native-apps-web-technologies-to-the-rescue-keynote-"
    },
    {
      "Abstract": "The Google Identity Platform is a system that allows a user to sign in to applications and other services by using a Google account. Google Sign-In is one such method for providing one\u2019s identity to the Google Identity Platform. Google Sign-In is available for Android applications and iOS applications, as well as for websites and other devices. Users of Google Sign-In find that it integrates well with the Android platform, but iOS users (iPhone, iPad, etc.) do not have the same experience. The user experience when logging in to a Google account on an iOS application can not only be more tedious than the Android experience, but it also conditions users to engage in behaviors that put the information in their Google accounts at risk.",
      "Affiliations": ["CERT/CC, USA"],
      "AffiliationsString": "CERT/CC, USA",
      "Authors": ["willdormann"],
      "Key": "mobile2016-google-authentication-risks-on-ios",
      "PersonsString": "Will Dormann",
      "Title": "Google Authentication Risks on iOS",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-google-authentication-risks-on-ios"
    },
    {
      "Abstract": "The rise of smart mobile devices presents increasing opportunities for health monitoring outside the clinic. Through the use of sensors and wearables, innovative Connected Health applications can be developed. In particular, Digital Therapeutics (DT), a type of technology-enabled intervention, can be made possible through continuous data capture, aiding users through gaining feedback on their lifestyle choices and engagement with programs of recovery, and supplementing conventional treatments for chronic disease management such as in diabetes, epilepsy, and mental health. Unfortunately, patient-facing professionals capable of articulating appropriate sensor-enabled solutions, generally lack the full range of skills to develop such systems. A connected health application may involve mobile development, data services, visualisation, machine learning, and sensor signal processing, needing multidisciplinary teams, including professional software engineers. The cost of maintaining a software team across the research and development stages may prove prohibitive for many, hindering innovation. This paper focuses on gathering requirements for \\emph{data collection} in mHealth studies, and reports the initial findings after a round of interviews with researchers in areas such as psychology, physiotherapy, neurology, and health promotion education. Those requirements are framed within an existing End User Development (EUD) tool to create mobile apps for the Android platform, the open source project MIT App Inventor. The survey results highlight not only the development work needed for App Inventor to be used as a data collection tool in DT, but also a number of potential security and privacy issues, and the implementation of a \\emph{layered} feedback loop with a social aspect at the heart of it.",
      "Affiliations": [
        "Maynooth University, Ireland",
        "Maynooth University, Ireland"
      ],
      "AffiliationsString": "Maynooth University, Ireland",
      "Authors": [
        "josejuandominguezveiga",
        "tomaseward"
      ],
      "Key": "mobile2016-data-collection-requirements-for-mobile-connected-health-an-end-user-development-approach",
      "PersonsString": "Jose Juan Dominguez Veiga and Tomas E. Ward",
      "Title": "Data Collection Requirements for Mobile Connected Health: An End User Development Approach",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-data-collection-requirements-for-mobile-connected-health-an-end-user-development-approach"
    },
    {
      "Abstract": "Consumer-centered software applications nowadays are required to be available both as mobile and desktop versions. However, the app design is frequently made only for one of the two (i.e., mobile first or web first) while missing an appropriate design for the other (which, in turn, simply mimics the interaction of the first one).This results into poor quality of the interaction on one or the other platform. Current solutions would require different designs, to be realized through different design methods and tools, and that may require to double development and maintenance costs. \nIn order to mitigate such an issue, this paper proposes a novel approach that supports the design of both web and mobile applications at once. Starting from a unique requirement and business specification, where web\u2013 and mobile\u2013specific aspects are captured through tagging, we derive a platform-independent design of the system specified in IFML. This model is subsequently refined and detailed for the two platforms, and used to automatically generate both the web and mobile versions. If more precise interactions are needed for the mobile part, a blending with MobML, a mobile-specific modeling language, is devised. Full traceability of the relations between artifacts is granted.",
      "Affiliations": [
        "Politecnico di Milano, Italy",
        "Politecnico di Milano, Italy",
        "University of L'Aquila, Italy",
        "University of L'Aquila, Italy"
      ],
      "AffiliationsString": "Politecnico di Milano, Italy, University of L'Aquila, Italy",
      "Authors": [
        "marcobrambilla",
        "andreamauri",
        "mircofranzago",
        "henrymuccini"
      ],
      "Key": "mobile2016-a-model-based-method-for-seamless-web-and-mobile-experience",
      "PersonsString": "Marco Brambilla, Andrea Mauri, Mirco Franzago and Henry Muccini",
      "Title": "A Model-Based Method for Seamless Web and Mobile Experience",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-a-model-based-method-for-seamless-web-and-mobile-experience"
    },
    {
      "Abstract": "This paper presents an approach to model-based test case generation for Android GUI testing. Our approach aims to formulate a technique that can achieve better code coverage by incorporating manual testing methods. Our approach was evaluated using three applications based on the statement coverage achieved.",
      "Affiliations": [
        "Keio University, Japan",
        "Keio University, Japan"
      ],
      "AffiliationsString": "Keio University, Japan",
      "Authors": [
        "joselorenzosanmiguel",
        "shingotakada"
      ],
      "Key": "mobile2016-gui-and-usage-model-based-test-case-generation-for-android-applications-with-change-analysis",
      "PersonsString": "Jose Lorenzo San Miguel and Shingo Takada",
      "Title": "GUI and Usage Model-Based Test Case Generation for Android Applications with Change Analysis",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-gui-and-usage-model-based-test-case-generation-for-android-applications-with-change-analysis"
    },
    {
      "Abstract": "This paper proposes an approach for test case generation of mobile apps, specifically Android apps. The approach focuses on external events. External events are considered from two aspects: explicit events and implicit events.",
      "Affiliations": [
        "Keio University, Japan",
        "Keio University, Japan"
      ],
      "AffiliationsString": "Keio University, Japan",
      "Authors": [
        "sienayu",
        "shingotakada"
      ],
      "Key": "mobile2016-mobile-application-test-case-generation-focusing-on-external-events",
      "PersonsString": "Siena Yu and Shingo Takada",
      "Title": "Mobile Application Test Case Generation Focusing on External Events",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-mobile-application-test-case-generation-focusing-on-external-events"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "mobile2016-group-activity-with-mobile-development-topic",
      "PersonsString": "",
      "Title": "Group Activity with Mobile Development Topic",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/mobile2016-group-activity-with-mobile-development-topic"
    },
    {
      "Abstract": "TODO",
      "Affiliations": [
        "EPFL",
        "Purdue University, USA"
      ],
      "AffiliationsString": "EPFL, Purdue University, USA",
      "Authors": [
        "nadaamin",
        "tiarkrompf"
      ],
      "Key": "mobile2016-generative-programming-from-high-performance-to-safety-critical-applications",
      "PersonsString": "Nada Amin and Tiark Rompf",
      "Title": "Generative Programming: from High-Performance to Safety-Critical Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-generative-programming-from-high-performance-to-safety-critical-applications"
    },
    {
      "Abstract": "This year a billion smartphones will be sold worldwide, with people relying more and more on mobile apps for activities like purchasing products, messaging, accessing digital media, etc. As of today, mobile software development teams can follow a number of different development and distribution strategies, ranging from native apps, to mobile web apps, hybrid apps, and the recently raising progressive web apps.\nThis talk provides a state-of-the-art overview of the development strategies and technologies for developing mobile apps, each of them with its own advantages and drawbacks. In this context, the use of web technologies is discussed as a promising investment for moving forward one of the most intriguing challenges in the world of mobile apps: its fragmentation with respect to mobile platforms (e.g., Android, Apple iOS, Windows Phone). A discussion of research challenges, and thus opportunities, close the talk.",
      "Affiliations": ["Vrije Universiteit Amsterdam"],
      "AffiliationsString": "Vrije Universiteit Amsterdam",
      "Authors": ["ivanomalavolta"],
      "Key": "mobile2016-beyond-native-apps-web-technologies-to-the-rescue-",
      "PersonsString": "Ivano Malavolta",
      "Title": "Keynote: \"Beyond native apps: Web technologies to the rescue!\"",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-beyond-native-apps-web-technologies-to-the-rescue-"
    },
    {
      "Abstract": "The scalability limitations of current DRAM technologyhave prompted research in alternative memory technologies.Almost all new viable alternatives being explored are non-volatilein nature. In this talk, we explore the implication of emergingnon-volatile memory technologies (NVRAM) to mobile computing,the persistence programming models inspired by the emergenceof NVRAM, and the challenges of managing persistent memory.Finally, we present Makalu, an approach that representsone possible solution to the persistent memorymanagement challenges. Makalu avoids failure-inducedpersistent memory leaks, offers interoperability witha variety of NVRAM programming libraries (NVMPLs),while supporting a less restrictive programming modeland delivering better performance compared to existingNVMPLs\u2019 default allocators.",
      "Affiliations": ["Rice University, USA"],
      "AffiliationsString": "Rice University, USA",
      "Authors": ["kumudbhandari"],
      "Key": "mobile2016-managing-persistent-heap-in-nvram",
      "PersonsString": "Kumud Bhandari",
      "Title": "Managing Persistent Heap in NVRAM",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-managing-persistent-heap-in-nvram"
    },
    {
      "Abstract": "Mobile applications today often fail to be context awarewhen they also need to be customizable and efficient atrun-time. Context-oriented programming allows programmersto develop applications that are more context aware.Its central construct, the so-called layer, however, isnot customizable. We propose to use novel persistentcontextual values for mobile development. Persistentcontextual values automatically adapt their value to thecontext. Furthermore they provide access without overhead.Key-value configuration files contain the specificationof contextual values and the persisted contextual valuesthemselves. By modifying the configuration files, thecontextual values can easily be customized for everycontext. From the specification, we generate code tosimplify development. Our implementation, called Elektra,permits development in several languages including C++and Java. In a benchmark we compare layer activationsbetween threads and between applications. In a case studyinvolving a web-server on a mobile embedded device theperformance overhead is minimal, even with many contextswitches.",
      "Affiliations": ["Vienna University of Technology, Austria"],
      "AffiliationsString": "Vienna University of Technology, Austria",
      "Authors": ["markusraab"],
      "Key": "mobile2016-persistent-contextual-values-as-inter-process-layers",
      "PersonsString": "Markus Raab",
      "Title": "Persistent Contextual Values as Inter-process Layers",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-persistent-contextual-values-as-inter-process-layers"
    },
    {
      "Abstract": "Developing applications for touch devices is hard. Developing touch based applications for multi-user input is harder. The Multi-Touch for Java (MT4j) toolkit supports developing touch based applications for multiple users. In this paper, we outline our experience using MT4j for developing a number of software applications to support developers working in co-located teams. Our experience using the toolkit will help developers to understand the nuances of the toolkit and design issues that can be applied to other toolkits for developing multi-user touch based applications.",
      "Affiliations": [
        "Middlesex University, UK",
        "Victoria University of Wellington, New Zealand",
        "Victoria University of Wellington, New Zealand",
        "Carleton University, Canada"
      ],
      "AffiliationsString": "Middlesex University, UK, Victoria University of Wellington, New Zealand, Carleton University, Canada",
      "Authors": [
        "craiganslow",
        "stuartmarshall1",
        "jamesnoble",
        "robertbiddle"
      ],
      "Key": "mobile2016-hacking-with-multi-touch-for-java-mt4j-",
      "PersonsString": "Craig Anslow, Stuart Marshall, James Noble and Robert Biddle",
      "Title": "Hacking with Multi-touch for Java (MT4j)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-hacking-with-multi-touch-for-java-mt4j-"
    },
    {
      "Abstract": "",
      "Affiliations": ["CERT"],
      "AffiliationsString": "CERT",
      "Authors": ["loriflynn"],
      "Key": "mobile2016-opening",
      "PersonsString": "Lori Flynn",
      "Title": "Opening",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/mobile2016-opening"
    },
    {
      "Abstract": "Regression-aware fault localization attempts to rank suspicious statements in a manner such that potential regression inducing suggestions are ranked low. The algorithm extracts the proof of correctness of all the correct executions in the form of Craig Interpolants over the successful execution traces. It, then, labels a program location suspicious if it can find a possible value for the assignment that can allow the hitherto failing execution to produce the expected output. However, any such value that does not satisfy the proof constraints of the passing tests are penalized in terms of their ranking. In this article, we sketch the regression-aware fault localization algorithm and motivate its potential application in debugging mobile applications.",
      "Affiliations": [
        "IIT Kanpur, India",
        "IIT Kanpur, India",
        "IIT Kanpur, India"
      ],
      "AffiliationsString": "IIT Kanpur, India",
      "Authors": [
        "rohanbavishi",
        "awanishpandey",
        "subhajitroy"
      ],
      "Key": "mobile2016-regression-aware-debugging-for-mobile-applications",
      "PersonsString": "Rohan Bavishi, Awanish Pandey and Subhajit Roy",
      "Title": "Regression Aware Debugging for Mobile Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-regression-aware-debugging-for-mobile-applications"
    },
    {
      "Abstract": "",
      "Affiliations": ["CERT"],
      "AffiliationsString": "CERT",
      "Authors": ["loriflynn"],
      "Key": "mobile2016-closing",
      "PersonsString": "Lori Flynn",
      "Title": "Closing",
      "Type": "Day closing",
      "URL": "http://2016.splashcon.org/event/mobile2016-closing"
    },
    {
      "Abstract": "Modern mobile device screen sizes vary significantly, from watches to phones to tablets. Android in particular has supported varying screen sizes since 2009, and is currently being installed on large format touch displays over eight feet diagonally. These extreme variations present significant challenges to app developers who desire to support all devices within a single application. Squid is a handwriting, note-taking application with well over two million installations and a 4.2+ star rating in Google Play. Although originally designed for tablets, we have adapted Squid to run effectively on phones and more recently large format displays. In this paper we report on UI/UX challenges that we faced and decisions made to overcome them.",
      "Affiliations": [
        "California Polytechnic State University, USA",
        "Steadfast Innovation, USA",
        "Steadfast Innovation, USA"
      ],
      "AffiliationsString": "California Polytechnic State University, USA, Steadfast Innovation, USA",
      "Authors": [
        "davidjanzen",
        "andrewhughes",
        "anthonylenz"
      ],
      "Key": "mobile2016-scaling-android-user-interfaces-a-case-study-of-squid",
      "PersonsString": "David S. Janzen, Andrew Hughes and Anthony Lenz",
      "Title": "Scaling Android User Interfaces: A Case Study of Squid",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/mobile2016-scaling-android-user-interfaces-a-case-study-of-squid"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "agere2016-coffee-break",
      "PersonsString": "",
      "Title": "Coffee Break",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-coffee-break"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "agere2016-discussion",
      "PersonsString": "",
      "Title": "DISCUSSION",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/agere2016-discussion"
    },
    {
      "Abstract": "Interaction protocols in concurrent systems are increasingly complex and diverse. Although there is a body of work on separating communication concerns of computations from their functional concerns, it supports static protocols, which cannot handle dynamically evolving numbers and sets of participants in interactions, and complex initialization steps are left mixed with functional concerns. This paper presents an approach to creating communications which are self- driven and can dynamically evolve as the computation progresses. Complex communications are defined as compositions of simpler ones, and can be specified in a specification language. A prototype supporting the specification language\u2019s primitives has been implemented in Scala.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "hongxinggeng",
        "nadeemjamali"
      ],
      "Key": "agere2016-separating-communication-concerns-in-concurrent-systems",
      "PersonsString": "Hongxing Geng and Nadeem Jamali",
      "Title": "Separating Communication Concerns in Concurrent Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-separating-communication-concerns-in-concurrent-systems"
    },
    {
      "Abstract": "This paper presents the support for interaction protocols that has been recently added to the JADEL programming language. JADEL is an agent-oriented programming language designed to ease the development of JADE agents and multi-agent systems by offering general-purpose agent-oriented abstractions to the programmer. The first part of the paper presents JADEL and motivates the need for a new agent-oriented programming language. Then, the agent-oriented abstractions that JADEL has been providing since its first version-namely agents, behaviours and communication ontologies-are described. The new support for interaction protocols is finally presented, and a simple example of a JADEL multi-agent system that uses interaction protocols is reported. The paper is concluded with an overview of the current state of JADEL and related tools.",
      "Affiliations": [
        "University of Parma, Italy",
        "University of Parma, Italy",
        "University of Parma, Italy",
        "University of Parma, Italy"
      ],
      "AffiliationsString": "University of Parma, Italy",
      "Authors": [
        "federicobergenti",
        "eleonoraiotti",
        "stefaniamonica",
        "agostinopoggi"
      ],
      "Key": "agere2016-interaction-protocols-in-the-jadel-programming-language",
      "PersonsString": "Federico Bergenti, Eleonora Iotti, Stefania Monica and Agostino Poggi",
      "Title": "Interaction Protocols in the JADEL Programming Language",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-interaction-protocols-in-the-jadel-programming-language"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "agere2016-closing",
      "PersonsString": "",
      "Title": "Closing",
      "Type": "Day closing",
      "URL": "http://2016.splashcon.org/event/agere2016-closing"
    },
    {
      "Abstract": "This paper describes a structured approach to encoding monitors in an actor language. Within a configuration of actors, each of which publishes a history, a monitor is an independent actor that triggers an action based on patterns occurring in the actor histories. The paper defines a model of monitors using features of an actor language called ESL including time, static types and higher-order functions. An implementation of monitors is evaluated in the context of a simple case study based on competitive bidding.",
      "Affiliations": [
        "Middlesex University, London",
        "",
        "",
        ""
      ],
      "AffiliationsString": "Middlesex University, London, ",
      "Authors": [
        "tonyclark",
        "vinaykulkarni",
        "souvikbarat",
        "balbirbarn"
      ],
      "Key": "agere2016-actor-monitors-for-adaptive-behaviour",
      "PersonsString": "Tony Clark , Vinay Kulkarni, Souvik Barat and Balbir Barn",
      "Title": "Actor Monitors for Adaptive Behaviour",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-actor-monitors-for-adaptive-behaviour"
    },
    {
      "Abstract": "This paper presents an integration of the Actor model in Emfrp, a functional reactive programming language designed for resource constrained embedded systems. In this integration, actors not only express nodes that represent time-varying values, but also present communication mechanism. The integration provides a higher-level view of the internal representation of nodes, representations of time-varying values, as well as an actor-based inter-device communication mechanism.",
      "Affiliations": [
        "Tokyo Institute of Technology",
        "Tokyo Institute of Technology, Japan"
      ],
      "AffiliationsString": "Tokyo Institute of Technology, Tokyo Institute of Technology, Japan",
      "Authors": [
        "takuowatanabe",
        "kensukesawada"
      ],
      "Key": "agere2016-towards-an-integration-of-the-actor-model-in-an-frp-language-for-small-scale-embedded-systems",
      "PersonsString": "Takuo Watanabe and Kensuke Sawada",
      "Title": "Towards an Integration of the Actor Model in an FRP Language for Small-Scale Embedded Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-towards-an-integration-of-the-actor-model-in-an-frp-language-for-small-scale-embedded-systems"
    },
    {
      "Abstract": "The reactor model is a foundational programming model for distributed computing,whose focus is modularizing and composing computations and message protocols.Previous work on reactors dealt mainly withthe programming model and its composability properties,but did not show how to schedule computations in reactor-based programs. \nIn this paper, we propose a pluggable scheduling algorithm for the reactor model.The algorithm is customizable with user-defined scheduling policies.We define and prove safety and progress properties.We compare our implementation against the Akka actor framework,and show up to $3\\times$ performance improvementson standard actor benchmarks.",
      "Affiliations": ["Oracle Labs, Switzerland"],
      "AffiliationsString": "Oracle Labs, Switzerland",
      "Authors": ["aleksandarprokopec"],
      "Key": "agere2016-pluggable-scheduling-for-the-reactor-programming-model",
      "PersonsString": "Aleksandar Prokopec",
      "Title": "Pluggable Scheduling for the Reactor Programming Model",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-pluggable-scheduling-for-the-reactor-programming-model"
    },
    {
      "Abstract": "The Actor Model is a message passing concurrency model that was originallyproposed by Hewitt et al. in 1973. It is now 43 years later and since thenresearchers have explored a plethora of variations on this model. This paperpresents a history of the Actor Model throughout those years. The goal of thispaper is not to provide an exhaustive overview of every actor system inexistence but rather to give an overview of some of the exemplar languages andlibraries that influenced the design and rationale of other actor systemsthroughout those years. This paper therefore shows that most actor systems canbe roughly classified into four families, namely: \\emph{Classic Actors, ActiveObjects, Processes and Communicating Event-Loops}. This paper also defines theIsolated Turn Principle as a unifying principle across those four families.Additionally this paper lists some of the key properties along which actorsystems can be evaluated and formulates some general insights about the designand rationale of the different actor families across those dimensions.",
      "Affiliations": [
        "Vrije Universiteit Brussel, Belgium",
        "Nokia Bell Labs, Belgium",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Belgium, Nokia Bell Labs, Belgium",
      "Authors": [
        "joeridekoster",
        "tomvancutsem",
        "wolfgangdemeuter"
      ],
      "Key": "agere2016-43-years-of-actors-a-taxonomy-of-actor-models-and-their-key-properties",
      "PersonsString": "Joeri De Koster, Tom Van Cutsem and Wolfgang De Meuter",
      "Title": "43 Years of Actors: A Taxonomy of Actor Models and Their Key Properties",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-43-years-of-actors-a-taxonomy-of-actor-models-and-their-key-properties"
    },
    {
      "Abstract": "The goal of this tool demo paper is to demonstrate the features of Atomic RMI 2, a system and tool for distributed programming in Java, extending the popular Java RMI system with support for distributed transactions. A distributed transaction can contain arbitrary code, including any operations on remote objects that must be executed atomically, consistently, and in isolation with respect to any other concurrent transactions. The Atomic RMI 2 package is released with an open source license.",
      "Affiliations": [
        "Poznań University of Technology, Poland",
        "Poznań University of Technology, Poland"
      ],
      "AffiliationsString": "Poznań University of Technology, Poland",
      "Authors": [
        "pawetwojciechowski",
        "konradsiek"
      ],
      "Key": "agere2016-atomic-rmi-2-distributed-transactions-for-java",
      "PersonsString": "Paweł T. Wojciechowski and Konrad Siek",
      "Title": "Atomic RMI 2: Distributed Transactions for Java",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-atomic-rmi-2-distributed-transactions-for-java"
    },
    {
      "Abstract": "We present a work in progress report on applying deforestation techniques to distributed dataflow programming models. We propose a novel algorithm, dynamic path contraction, that applies and reverses optimizations to a distributed dataflow application as it executes. With this algorithm, control flow is tracked by the runtime system and optimizations are determined and applied as the system is running. We demonstrate and present preliminary results regarding this technique on an actor-based distributed programming model, Lasp, implemented on the Erlang virtual machine.",
      "Affiliations": [
        "IMDEA Software Institute",
        "Université catholique de Louvain"
      ],
      "AffiliationsString": "IMDEA Software Institute, Université catholique de Louvain",
      "Authors": [
        "borjaarnauderegilbasanez",
        "christophermeiklejohn"
      ],
      "Key": "agere2016-dynamic-path-contraction-for-distributed-dataflow-languages",
      "PersonsString": "Borja Arnau de Régil Basáñez and Christopher Meiklejohn",
      "Title": "Dynamic Path Contraction for Distributed Dataflow Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-dynamic-path-contraction-for-distributed-dataflow-languages"
    },
    {
      "Abstract": "JavaScript is the predominant language when it comes to developing applications for the web.Many of today's web-based systems are implemented solely in JavaScript due to its applicability to both client and server-side development.This use of JavaScript as a general purpose programming language has sparked a number of efforts to provide programmers with the means to write parallel web applications.For the most parts these efforts have based themselves on actor-based parallelism, given the similarities between actors and the JavaScript runtime model.We argue that these solutions are based on actor models which do not optimally fit web development.Concretely, existing solutions fail to provide programmers with an actor framework which embraces both parallelism and distribution.To this end we present Spiders.js, an actor framework providing both high-level parallelism and built-in distribution.In Spiders.js, programmers can easily specify the coarse-grained parallelism needs of modern web applications.Moreover, Spiders.js' built-in distribution features allow programmers to express client/server, server/server and client/client distribution simply by using actors.We show the performance characteristics of our approach by detailing Spiders.js' results for the Savina benchmark suite.",
      "Affiliations": [
        "Vrije Universiteit Brussel, Belgium",
        "Universiteit Gent, Belgium",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Belgium, Universiteit Gent, Belgium",
      "Authors": [
        "florianmyter",
        "christophescholliers",
        "wolfgangdemeuter"
      ],
      "Key": "agere2016-many-spiders-make-a-better-web-a-unified-web-based-actor-framework",
      "PersonsString": "Florian Myter, Christophe Scholliers and Wolfgang De Meuter",
      "Title": "Many Spiders Make a Better Web: A Unified Web-Based Actor Framework",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-many-spiders-make-a-better-web-a-unified-web-based-actor-framework"
    },
    {
      "Abstract": "With the ubiquity of multicore hardware, concurrent and parallel programming has become a fundamental part of software development. If writing concurrent programs is hard, debugging them is even harder. The actor model is attractive for developing concurrent applications because actors are isolated concurrent entities that communicates through asynchronous message sending and do not share state, thus they avoid common concurrency bugs such as race conditions. However, they are not immune to bugs. This paper presents initial work on a taxonomy of concurrent bugs for actor-based applications. Based on this study, we propose debugging tooling to assist the development process of actor-based applications.",
      "Affiliations": [
        "",
        "Johannes Kepler University Linz",
        "Johannes Kepler University Linz",
        "Vrije Universiteit Brussel"
      ],
      "AffiliationsString": ", Johannes Kepler University Linz, Vrije Universiteit Brussel",
      "Authors": [
        "carmentorreslopez",
        "stefanmarr",
        "hanspetermossenbock",
        "elisagonzalezboix"
      ],
      "Key": "agere2016-towards-advanced-debugging-support-for-actor-languages",
      "PersonsString": "Carmen Torres Lopez, Stefan Marr, Hanspeter Mössenböck and Elisa Gonzalez Boix",
      "Title": "Towards Advanced Debugging Support for Actor Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-towards-advanced-debugging-support-for-actor-languages"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "agere2016-welcome",
      "PersonsString": "",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/agere2016-welcome"
    },
    {
      "Abstract": "Agent programming languages like AgentSpeak(L) \u2013 and Jason, as its modern extension/implementation \u2013 have features that make them interesting for software development and general-purpose programming, besides AI problems. A main one is the level of abstraction, that eases the design and development of concurrent, reactive, distributed applications. At the same time, being not developed for general-purpose programming and software development in mind, they typically miss elements that are important for that purpose. These weaknesses can negatively impact on their adoption beyond the agent-oriented programming community. Accordingly, in this paper we discuss some features extending the basic model provided by AgentSpeak(L)/Jason, with the purpose of improving its adoption for programming and software development. Such extensions are shown in practice using a Jason extension called Jona.",
      "Affiliations": [
        "University of Bologna",
        "University of Bologna, Italy"
      ],
      "AffiliationsString": "University of Bologna, University of Bologna, Italy",
      "Authors": [
        "angelocroatti",
        "alessandroricci"
      ],
      "Key": "agere2016-an-extension-of-agentspeak-l-and-jason-tailored-to-programming-and-software-development",
      "PersonsString": "Angelo Croatti and Alessandro Ricci",
      "Title": "An Extension of AgentSpeak(L) and Jason Tailored to Programming and Software Development",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-an-extension-of-agentspeak-l-and-jason-tailored-to-programming-and-software-development"
    },
    {
      "Abstract": "In recent years, we are witnessing a growing interest in large-scale situated systems, such as those falling under the umbrella of pervasive computing, cyber-physical systems, and the Internet of Things. The actor model is a natural choice for designing and implementing such systems, thanks to the ability of actors to address distribution, autonomy of control, and asynchronous communication: namely, it is convenient to view the pervasive cyberspace as an environment densely inhabited by mobile embedded actors. But how can an actor-centric development approach be fruitfully used to engineer a complex coordination strategy, where a myriad of devices/actors performs adaptive distributed sensing/processing/acting? \nAggregate computing has been proposed as an emerging paradigm that faces this general problem by adopting a global, system-level stance, allowing to specify and functionally compose collective behaviours by operating on diffused data structures, known as \u201ccomputational fields\u201d. In this paper, we develop on the idea of integrating the actor model and aggregate computing, presenting a software framework where declarative global-level system specifications are automatically turned into an underlying system of Scala/Akka actors carrying on computation over the pervasive computing system.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "robertocasadei",
        "mirkoviroli"
      ],
      "Key": "agere2016-programming-actor-based-collective-adaptive-systems",
      "PersonsString": "Roberto Casadei and Mirko Viroli",
      "Title": "Programming Actor-based Collective Adaptive Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-programming-actor-based-collective-adaptive-systems"
    },
    {
      "Abstract": "The actor model prevents the traditional pitfalls of concurrent programming (deadlocks and data-races) by not allowing shared state between different processes. While shared state can be simulated through a set of message exchanges, this quickly becomes complex and renders the program inexpressive. In this paper we present a novel way of integrating shared state into the communicating event-loop model by introducing a new type of object called a repliq. When such object crosses actor boundaries it exhibits what we call pass-by-replication semantics. The object is deeply copied and the runtime keeps track of the owner of the original repliq, the actor that first created it. Actors can access and alter repliq objects locally, while the runtime makes sure they are eventually consistent with other replicas of the object. Consistency is guaranteed by eventually executing all the operations of the replicas in the same order, as determined by the original object. Synchronization happens in a background process and external updates become visible in between message processing. This makes sure that the programmer\u2019s code is always executed in a consistent snapshot of the object states. We present the semantics, guarantees and restrictions exhibited by repliq objects using an implementation in the AmbientTalk actor language. This model maintains the easy and safe local-only execution model for the programmer that is key to the actor model, while providing integrated and expressive means to share state that is eventually consistent.",
      "Affiliations": [
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Belgium",
      "Authors": [
        "timcoppieters",
        "joeridekoster",
        "wolfgangdemeuter"
      ],
      "Key": "agere2016-shared-state-for-actors-pass-by-replication-semantics",
      "PersonsString": "Tim Coppieters, Joeri De Koster and Wolfgang De Meuter",
      "Title": "Shared State for Actors: Pass-By-Replication Semantics",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-shared-state-for-actors-pass-by-replication-semantics"
    },
    {
      "Abstract": "An important feature of goal-oriented programming languages is that agents are able to easily pursue multiple goals concurrently. However, there is an issue when some concurrent goals may conflict with others. Pursuing conflicting goals concurrently can lead an agent to undesirable behavior, in which case pursuing them concurrently should be avoided. In this paper, we address some such problems ranging from how to specify conflicts among goals to handling conflicts at run-time when they are detected.",
      "Affiliations": [
        "Federal University of Santa Catarina, Brazil",
        "Federal University of Santa Catarina, Brazil",
        "University of Bologna, Italy",
        "PUCRS, Brazil"
      ],
      "AffiliationsString": "Federal University of Santa Catarina, Brazil, University of Bologna, Italy, PUCRS, Brazil",
      "Authors": [
        "maiconrafaelzatelli",
        "jomihubner",
        "alessandroricci",
        "rafaelheitorbordini"
      ],
      "Key": "agere2016-conflicting-goals-in-agent-oriented-programming",
      "PersonsString": "Maicon Rafael Zatelli, Jomi Fred Hübner, Alessandro Ricci and Rafael H. Bordini",
      "Title": "Conflicting Goals in Agent-Oriented Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/agere2016-conflicting-goals-in-agent-oriented-programming"
    },
    {
      "Abstract": "When is one object equal to another object? While object \\emph{identity} is fundamental to object-oriented systems, object \\textit{equality}, although tightly intertwined with identity, is harder to pin down. The distinction between identity and equality is reflected in object-oriented languages, almost all of which provide two variants of ``equality'', while some provide many more. Programmers can usually override at least one of these forms of equality, and can always define their own methods to distinguish their own objects. \nThis essay takes a reflexive journey through fifty years of identity and equality in object-oriented languages, and ends somewhere we did not expect: a ``left-handed'' equality relying on trust and grace.",
      "Affiliations": [
        "Victoria University of Wellington, New Zealand",
        "Portland State University",
        "Pomona College",
        "Victoria University of Wellington",
        "Google Inc."
      ],
      "AffiliationsString": "Victoria University of Wellington, New Zealand, Portland State University, Pomona College, Victoria University of Wellington, Google Inc.",
      "Authors": [
        "jamesnoble",
        "andrewblack",
        "kimbruce",
        "michaelhomer",
        "markmiller"
      ],
      "Key": "onward2016-essays-the-left-hand-of-equals",
      "PersonsString": "James Noble, Andrew Black, Kim Bruce, Michael Homer and Mark Miller",
      "Title": "The Left Hand of Equals",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward2016-essays-the-left-hand-of-equals"
    },
    {
      "Abstract": "The most successful systems for ``big data'' processing have all adopted functional APIs. We present a new programming model we call {\\em function passing} designed to provide a more principled substrate on which to build data-centric distributed systems. A key idea is to build up a persistent functional data structure representing transformations on distributed immutable data by passing well-typed serializable functions over the wire and applying them to this distributed data. Thus, the function passing model can be thought of as a persistent functional data structure that is {\\em distributed}, where transformations to data are stored in its nodes rather than the distributed data itself. The model simplifies failure recovery by design\u2013in the event of a failure, data is recovered by replaying function applications atop immutable data loaded from stable storage. Deferred evaluation is also central to our model; by incorporating deferred evaluation into our design only at the point of initiating network communication, the function passing model remains easy to reason about while remaining efficient in time and memory. We formalize our programming model using small-step operational semantics, and we provide an open-source implementation of our model in and for the Scala programming language, along with a case study of several example frameworks and end-user programs written atop of this model.",
      "Affiliations": [
        "Ecole Polytechnique Federale de Lausanne",
        "KTH Royal Institute of Technology",
        "",
        "EPFL",
        "EPFL"
      ],
      "AffiliationsString": "Ecole Polytechnique Federale de Lausanne, KTH Royal Institute of Technology, , EPFL",
      "Authors": [
        "heathermiller",
        "philipphaller",
        "normenmuller",
        "jocelynboullier",
        "jorgevicentecantero"
      ],
      "Key": "onward-2016-papers-function-passing-a-model-for-typed-distributed-functional-programming",
      "PersonsString": "Heather Miller, Philipp Haller, Normen Müller, Jocelyn Boullier and Jorge Vicente-Cantero",
      "Title": "Function Passing: A Model for Typed, Distributed Functional Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-function-passing-a-model-for-typed-distributed-functional-programming"
    },
    {
      "Abstract": "The number of programming tutorial videos on the web increases daily. Video hosting sites such as YouTube host millions of video lectures, with many programming tutorials for various languages and platforms. These videos contain a wealth of valuable information, including code that may be of interest. However, two main challenges have so far prevented the effective indexing of programming tutorial videos: (i) code in tutorials is typically written on-the-fly, with only parts of the code visible in each frame, and (ii) optical character recognition (OCR) is not precise enough to produce quality results from videos.We present a novel approach for extracting code from videos that is based on: (i) consolidating code across frames, and (ii) statistical language models for applying corrections at different levels, allowing us to make corrections by choosing the most likely token, combination of tokens that form a likely line structure, and combination of lines that lead to a likely code fragment in a particular language. We implemented our approach in a tool called ACE, and used it to extract code from 40 Android video tutorials on YouTube. Our evaluation shows that ACE extracts code with high accuracy, enabling deep indexing of video tutorials.",
      "Affiliations": [
        "Technion",
        "Technion"
      ],
      "AffiliationsString": "Technion",
      "Authors": [
        "shiryadid",
        "eranyahav"
      ],
      "Key": "onward-2016-papers-extracting-code-from-programming-tutorial-videos",
      "PersonsString": "Shir Yadid and Eran Yahav",
      "Title": "Extracting Code from Programming Tutorial Videos",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-extracting-code-from-programming-tutorial-videos"
    },
    {
      "Abstract": "Several mature cryptographic frameworks are available, and they have been utilized for building complex applications. However, developers often use these frameworks incorrectly and introduce security vulnerabilities. This is because current cryptographic frameworks erode abstraction boundaries, as they do not encapsulate all the framework-specific knowledge and expect developers to understand security attacks and defenses. Starting from the documented misuse cases of cryptographic APIs, we infer five developer needs and we show that a good API design would address these needs only partially. Building on this observation, we propose APIs that are semantically meaningful for developers, we show how these interfaces can be implemented consistently on top of existing frameworks using novel and known design patterns, and we propose build management hooks for isolating security workarounds needed during the development and test phases. Through two case studies, we show that our APIs can be utilized to implement non-trivial client-server protocols and that they provide a better separation of concerns than existing frameworks. We also discuss the challenges and potential approaches for evaluating our solution. Our semantic interfaces represent a first step toward preventing misuses of cryptographic APIs.",
      "Affiliations": [
        "University of Maryland at College Park",
        "University of Maryland at College Park",
        "University of Maryland at College Park",
        "University of Maryland at College Park"
      ],
      "AffiliationsString": "University of Maryland at College Park",
      "Authors": [
        "soumyaindela",
        "mukulkulkarni",
        "kartiknayak",
        "tudordumitras"
      ],
      "Key": "onward-2016-papers-helping-johnny-encrypt-toward-semantic-interfaces-for-cryptographic-frameworks",
      "PersonsString": "Soumya Indela, Mukul Kulkarni, Kartik Nayak and Tudor Dumitras",
      "Title": "Helping Johnny Encrypt: Toward Semantic Interfaces for Cryptographic Frameworks",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-helping-johnny-encrypt-toward-semantic-interfaces-for-cryptographic-frameworks"
    },
    {
      "Abstract": "Despite many advances in programming models and frameworks, writing distributed applications remains hard.Even when the underlying logic is inherently sequential and simple, addressing distributed aspects results in complex cross-cutting code that undermines such simplicity. \nThis paper analyzes different programming models to motivate a new paradigm that leverages the sequential computation model, while gaining the expressiveness for distribution.The paper argues for an adoption of the paradigm shift by exhibiting a programming model that allows easier reasoning about the conceptual aspects of distributed systems' behavior.The newly proposed programming model provides a clean separation of concerns and retains the simplicity of sequential computation, using it as a basis onto which distributed aspects are added without corrupting the essential sequential structure, while offloading much of the complexity of implementing distributed concerns to the compiler.We demonstrate the feasibility of this model on a case study, identifying key improvements over existing approaches.",
      "Affiliations": [
        "MIT CSAIL, USA",
        "MIT"
      ],
      "AffiliationsString": "MIT CSAIL, USA, MIT",
      "Authors": [
        "ivankuraj",
        "danieljackson"
      ],
      "Key": "onward-2016-papers-exploring-the-role-of-sequential-computation-in-distributed-systems-motivating-a-programming-paradigm-shift",
      "PersonsString": "Ivan Kuraj and Daniel Jackson",
      "Title": "Exploring the Role of Sequential Computation in Distributed Systems: Motivating a Programming Paradigm Shift",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-exploring-the-role-of-sequential-computation-in-distributed-systems-motivating-a-programming-paradigm-shift"
    },
    {
      "Abstract": "Services are normally composed following a structured model,or based on a particular goal that needs to be fulfilled.Such model is problematic for pervasive environments, since service components deployed in theenvironment are unknown beforehand. As a result, services may never execute due to the unavailabilityof one of the pre-specified components, or components missing to fulfill the service goal.This paper posits a new vision for service composition by inverting the control flow of service-orientedapplications between users and the environment. Rather than having to request a particular service,services emerge from the environment based on interactions between available service components,and are pushed to be utilized by users.We present the architecture required to fulfill our vision in enabling service emergence in a pervasiveenvironment. This vision architecture is realized by an initial prototype framework for software serviceemergence called Mordor.Early results of this vision are obtained from two examples demonstrating the feasibility of servicesemergence frompreviously unknown service components, and a case study demonstrating Mordor's usability inreal world scenarios.",
      "Affiliations": ["Universidad de los Andes"],
      "AffiliationsString": "Universidad de los Andes",
      "Authors": ["nicolascardozo"],
      "Key": "onward-2016-papers-emergent-software-services",
      "PersonsString": "Nicolás Cardozo",
      "Title": "Emergent Software Services",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-emergent-software-services"
    },
    {
      "Abstract": "Program similarity is a central challenge in many programming-related applications, such as code search, clone detection, automatic translation, and programming education. \nWe present a novel approach for establishing the similarity of code fragments by:(i) obtaining textual descriptions of code fragments captured in millions of posts on question-answering sites, blogs and other sources, and(ii) using natural language processing techniques to establish similarity between textual descriptions, and thus between their corresponding code fragments. \nTo improve precision, we use a simple static analysis that extracts type signatures, and combine the results of textual similarity with similarity of the signatures.Because our notion of code similarity is based on similarity of textual descriptions, our approach can determine semantic relatedness and similarity of code across different libraries and even across different programming languages, a task considered extremely difficult using traditional approaches.To evaluate our approach, we use data obtained from the popular question-answering site, Stackoverflow. To obtain a ground-truth to compare against, we developed a crowdsourcing system, Like2Drops, that allows users to label the similarity of code fragments. We used the system to collect similarity classifications for a massive corpus of 6,500 program pairs. Our results show that our technique is effective in determining similarity, and achieves more than 85 percent precision, recall and accuracy.",
      "Affiliations": [
        "Technion",
        "Technion"
      ],
      "AffiliationsString": "Technion",
      "Authors": [
        "meitalzilberstein",
        "eranyahav"
      ],
      "Key": "onward-2016-papers-leveraging-a-corpus-of-natural-language-descriptions-for-program-similarity",
      "PersonsString": "Meital Zilberstein and Eran Yahav",
      "Title": "Leveraging a Corpus of Natural Language Descriptions for Program Similarity",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-leveraging-a-corpus-of-natural-language-descriptions-for-program-similarity"
    },
    {
      "Abstract": "Domain-specific languages (DSLs) improve software maintainability and programmer productivity by making domain concepts more explicit in the code. However, developing syntax and semantics of DSLs is often challenging and as a result developers seldom take advantage of the benefits of DSLs. One way to lower the entry barrier to DSL development is to give developers immediate and continuous feedback on modifications to a language. We propose Gramada, an environment for developing DSLs in Squeak/Smalltalk which is designed to provide such a live programming experience. It is based on a language development framework with additional support for incremental compilation to improve system response times and a set of tools which creates a steady frame and allows programmers to quickly explore changes to the syntax of a language. Our benchmarks and discussion illustrate how Gramada can give visual feedback on most changes to the language in a way that supports live programming. We conclude that Gramada\u2019s feedback is fast and consistent enough to make exploring the effects of changes a lively and productive activity during the interactive development of DSLs.",
      "Affiliations": [
        "Hasso Plattner Institute",
        "Hasso Plattner Institute",
        "HPI"
      ],
      "AffiliationsString": "Hasso Plattner Institute, HPI",
      "Authors": [
        "patrickrein",
        "marceltaeumel",
        "roberthirschfeld"
      ],
      "Key": "onward-2016-papers-gramada-immediacy-in-programming-language-development",
      "PersonsString": "Patrick Rein, Marcel Taeumel and Robert Hirschfeld",
      "Title": "Gramada: Immediacy in Programming Language Development",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-gramada-immediacy-in-programming-language-development"
    },
    {
      "Abstract": "The Lively Kernel and the Lively Web represent a continuing effort to realize a creative computing environment in the context of the World Wide Web. We refer to that evolving system simply as &quot;Lively&quot;. Lively is a live object computing environment implemented using JavaScript and other techniques available inside the browser. When first built in 2006, it was a grand accomplishment to have created such a system that would run in any web browser. Since that time we have learned a lot about the goals we had, the challenges and opportunities that come with life in the browser, and the exciting possibilities that still lie ahead.",
      "Affiliations": [
        "SAP Palo Alto Research Center",
        "Hasso-Plattner-Institute, Potsdam",
        "HPI",
        "CDG Labs",
        "Hasso Plattner Institute",
        "HARC / Y Combinator Research",
        "Nokia Technologies",
        "Tampere University of Technology"
      ],
      "AffiliationsString": "SAP Palo Alto Research Center, Hasso-Plattner-Institute, Potsdam, HPI, CDG Labs, Hasso Plattner Institute, HARC / Y Combinator Research, Nokia Technologies, Tampere University of Technology",
      "Authors": [
        "danielingalls",
        "timfelgentreff",
        "roberthirschfeld",
        "robertkrahn",
        "jenslincke",
        "markoroder",
        "anterotaivalsaari",
        "tommimikkonen"
      ],
      "Key": "onward2016-essays-a-world-of-active-objects-for-work-and-play-the-first-ten-years-of-lively",
      "PersonsString": "Daniel Ingalls, Tim Felgentreff, Robert Hirschfeld, Robert Krahn, Jens Lincke, Marko Röder, Antero Taivalsaari and Tommi Mikkonen",
      "Title": "A World of Active Objects for Work and Play: The First Ten Years of Lively",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward2016-essays-a-world-of-active-objects-for-work-and-play-the-first-ten-years-of-lively"
    },
    {
      "Abstract": "It is often said that controlled experiments should check the effect of programming languages or styles on programming. But it is also often said that running controlled experiments is a very time consuming and error prone task \u2013 that's why a lot of researchers do not run such experiments. Both arguments are plausible, but there is potentially an alternative: lightweight experiments where the effort to run such experiments is low and which (still) fulfill the requirements of controlled experiments with two exceptions: First, these experiments do not use programmers as subjects, and second, the experiments do not contain programming tasks. Instead, such experiments try to find analogies from other domains where the topic to be studied is (still) close enough to the original target domain but where it is easier to find participants and experimental setups. This paper illustrates such a lightweight experiment by introducing a study on the effect of number of identifiers and similarity of identifiers on (code) readability \u2013 without using source code and without programmers as subjects. The result of the experiment is comparable to other experimental results which gives a first indicator that it is possible to run such lightweight experiments that approximate the results of full-blown experiments. This paper argues that such lightweight experiments could be useful in the process of experimentation \u2013 they cannot and should not supersede full-blown experiments, but they can help in early stages of experimentation.",
      "Affiliations": [
        "University of Duisburg-Essen",
        "University of Duisburg-Essen",
        "University of Duisburg-Essen",
        "University of Duisburg-Essen"
      ],
      "AffiliationsString": "University of Duisburg-Essen",
      "Authors": [
        "timmarter",
        "paulbabucke",
        "philipplembken",
        "stefanhanenberg"
      ],
      "Key": "onward-2016-papers-doing-programming-experiments-without-programmers-and-programs-studying-the-effect-of-similarity-and-number-of-object-identifiers-on-the-readability-of-source-code-using-natural-texts",
      "PersonsString": "Tim Marter, Paul Babucke, Philipp Lembken and Stefan Hanenberg",
      "Title": "Lightweight Programming Experiments without Programmers and Programs: An Example Study on the Effect of Similarity and Number of Object Identifiers on the Readability of Source Code using Natural Texts",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-doing-programming-experiments-without-programmers-and-programs-studying-the-effect-of-similarity-and-number-of-object-identifiers-on-the-readability-of-source-code-using-natural-texts"
    },
    {
      "Abstract": "Creativity, AI, programming, the Turing Test, and mystery.",
      "Affiliations": ["Dream Songs, Inc. & IBM Research"],
      "AffiliationsString": "Dream Songs, Inc. & IBM Research",
      "Authors": ["richardpgabriel"],
      "Key": "onward2016-essays-in-the-control-room-of-the-banquet-",
      "PersonsString": "Richard P. Gabriel",
      "Title": "\u201cin the control room of the banquet\u201d",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward2016-essays-in-the-control-room-of-the-banquet-"
    },
    {
      "Abstract": "Spreadsheets offer many advantages as the computational and data-storage engine for applications that are authored by end users. Paradoxically, however, their main failing in this regard is their computational model. Despite being used in almost all cases to represent data that is essentially relational (with some hierarchical structuring), the spreadsheet model treats the two-dimensional grid as largely unstructured, with formulas linking cells in an ad hoc way.\nThis paper reports on a quest to rethink the spreadsheet model. The model we propose supports not only conventional flat tables, but also nested variable-size lists and object references. It includes a formula language suited to the data model and procedures to specify updates.\nThe model has been implemented in a tool called Object Spreadsheets, which is intended for the development of data-centric web applications. We describe several example applications we built using the tool to demonstrate its applicability.",
      "Affiliations": [
        "MIT",
        "MIT CSAIL",
        "MIT"
      ],
      "AffiliationsString": "MIT, MIT CSAIL",
      "Authors": [
        "mattmccutchen",
        "shacharitzhaky",
        "danieljackson"
      ],
      "Key": "onward-2016-papers-object-spreadsheets-an-end-user-development-tool-for-web-applications-backed-by-entity-relationship-data",
      "PersonsString": "Matt McCutchen, Shachar Itzhaky and Daniel Jackson",
      "Title": "Object Spreadsheets: A New Computational Model for End-User Development of Data-Centric Web Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-object-spreadsheets-an-end-user-development-tool-for-web-applications-backed-by-entity-relationship-data"
    },
    {
      "Abstract": "Functional languages with strong static type systems have beneficial properties to help ensure program correctness and reliability. Surprisingly, their practical significance in applications is low relative to other languages lacking in those dimensions. In this paper, the \\emph{programs-as-proofs} analogy is taken seriously to gain speculative insights by analysis of creation habits in the proof-centric discipline of mathematics. Viewed in light of this analogy, a sampling of mathematicians' attitudes towards formal proof suggests that the crucial role of intuition and experimentation in programming tasks may be under appreciated, hinting at a possible explanation of the challenges rigorously disciplined languages face in practical applications.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["johannesemerich"],
      "Key": "onward2016-essays-how-are-programs-found-",
      "PersonsString": "Johannes Emerich",
      "Title": "How Are Programs Found? Speculating about Language Ergonomics with Curry-Howard",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward2016-essays-how-are-programs-found-"
    },
    {
      "Abstract": "Nez is a PEG(Parsing Expressing Grammar)-based open grammar language that allows us to describe complex syntax constructs without action code. Since open grammars are declarative and free from a host programming language of parsers, software engineering tools and other parser applications can reuse once-defined grammars across programming languages. \nA key challenge to achieve practical open grammars is the expressiveness of syntax constructs and the resulting parser performance, as the traditional action code approach has provided very pragmatic solutions to these two issues. In Nez, we extend the symbol-based state management to recognize context-sensitive language syntax, which often appears in major programming languages. In addition, the Abstract Syntax Tree constructor allows us to make flexible tree structures, including the left-associative pair of trees. Due to these extensions, we have demonstrated that Nez can parse many grammars of practical programming languages. \nNez can generate various types of parsers since all Nez operations are independent of a specific parser language. To highlight this feature, we have implemented Nez with dynamic parsing, which allows users to integrate a Nez parser as a parser library that loads a grammar at runtime. To achieve its practical performance, Nez operators are assembled into low-level virtual machine instructions, including automated state modifications when backtracking, transactional controls of AST construction, and efficient memoization in packrat parsing. We demonstrate that Nez dynamic parsers achieve very competitive performance compared to existing efficient parser generators.",
      "Affiliations": ["Yokohama National University, Japan"],
      "AffiliationsString": "Yokohama National University, Japan",
      "Authors": ["kimiokuramitsu"],
      "Key": "onward-2016-papers-nez-practical-open-grammar-language",
      "PersonsString": "Kimio Kuramitsu",
      "Title": "Nez: Practical Open Grammar Language",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-nez-practical-open-grammar-language"
    },
    {
      "Abstract": "Abstractions make building complex systems possible. Many facilities provided by a modern programming language are directly designed to build a certain style of abstraction. Abstractions also aim toenhance code reusability, thus enhancing programmer productivity and effectiveness. \nReal-world software systems can grow to have a complicated hierarchy of abstractions. Often, the hierarchy grows unnecessarily deep, because the programmers have envisioned the most generic use cases for a piece of code to make it reusable. Sometimes, the abstractions used in the program are not the appropriate ones, and it would besimpler for the higher level client to circumvent such abstractions. Another problem is the impedance mismatch between different pieces of code or libraries coming from different projects that are not designed to work together. Interoperability between such libraries are often hindered by abstractions, by design, in the name of hiding implementation details and encapsulation. These problems necessitate forms of abstraction that are easy to manipulate if needed. \nIn this paper, we describe a powerful mechanism to create white-box abstractions, that encourage flatter hierarchies of abstraction and ease of manipulation and customization when necessary: program refinement. \nIn so doing, we rely on the basic principle that writing directly in the host programming language is as least restrictive as one can get in terms of expressiveness, and allow the programmer to reuse and customize existing code snippets to address their specific needs.",
      "Affiliations": [
        "Vivibe LLC",
        "University of California, Davis"
      ],
      "AffiliationsString": "Vivibe LLC, University of California, Davis",
      "Authors": [
        "mehrdadafshari",
        "zhendongsu"
      ],
      "Key": "onward-2016-papers-building-white-box-abstractions-by-program-refinement",
      "PersonsString": "Mehrdad Afshari and Zhendong Su",
      "Title": "Building White-Box Abstractions by Program Refinement",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-building-white-box-abstractions-by-program-refinement"
    },
    {
      "Abstract": "Although dynamically typed languages allow developers to be more productive in writing source code, their lack of in- formation about types of variables is one of the main obstacles during program comprehension. Static type information helps developers to decrease software maintenance time. Inference of types of variables requires complex algorithms to avoid false positives or negatives. Their main aim is to shorten the list of possible types for a variable.We have developed a couple of cheap heuristics that use easily accessible information about the presence of each class in the available source code to promote the correct type towards the top of the list of possible types for a variable.Our evaluation of a proof-of-concept prototype, implemented in Pharo Smalltalk, shows that both for domain- specific types and standard libraries these heuristics tend to work well. The evaluated heuristics prove to be reasonably precise, promoting the correct types of a variable towards the top of the list in 50.67% up to 89.09% of cases on average, depending on the applied heuristic. The heuristic that has proved to be the best was compared with one existing type inference algorithm and the best heuristic yields significantly better results with less effort.",
      "Affiliations": [
        "University of Bern",
        "University of Bern, Switzerland"
      ],
      "AffiliationsString": "University of Bern, University of Bern, Switzerland",
      "Authors": [
        "nevenamilojkovic",
        "oscarnierstrasz"
      ],
      "Key": "onward-2016-papers-exploring-cheap-type-inference-heuristics-in-dynamically-typed-languages",
      "PersonsString": "Nevena Milojković and Oscar Nierstrasz",
      "Title": "Exploring Cheap Type Inference Heuristics in Dynamically Typed Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-exploring-cheap-type-inference-heuristics-in-dynamically-typed-languages"
    },
    {
      "Abstract": "Software systems involve many different kinds of domain-specific and interrelated software entities. A common strategy employed by developers to deal with this reality is to perform exploratory investigations by means of searching. Nevertheless, most integrated development environments (IDEs) support searching through generic and disconnected search tools. This impedes search tasks over domain-specific entities, as considerable effort is wasted by developers locating and linking data and concepts relevant to their application domains. \nTo tackle this problem we propose Spotter, a moldable framework for supporting contextual-aware searching in IDEs by enabling developers to easily create custom searches for domain objects. In this paper we motivate a set of requirements for Spotter and show, through usage scenarios, that Spotter improves program comprehension by reducing the effort required to find and search through concepts from a wide range of domains. Furthermore, we show that by taking code into account, Spotter can provide a single entry point for embedding search support within an IDE.",
      "Affiliations": [
        "University of Bern, Switzerland",
        "feenk.com",
        "University of Chile",
        "University of Bern, Switzerland",
        "",
        "University of Bern"
      ],
      "AffiliationsString": "University of Bern, Switzerland, feenk.com, University of Chile, , University of Bern",
      "Authors": [
        "andreichis",
        "tudorgirba",
        "jurajkubelka",
        "oscarnierstrasz",
        "stefanreichhart",
        "aliakseisyrel"
      ],
      "Key": "onward-2016-papers-moldable-context-aware-searching-with-spotter",
      "PersonsString": "Andrei Chiş, Tudor Gîrba, Juraj Kubelka, Oscar Nierstrasz, Stefan Reichhart and Aliaksei Syrel",
      "Title": "Moldable, Context-Aware Searching with Spotter",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-moldable-context-aware-searching-with-spotter"
    },
    {
      "Abstract": "Automation programming is typically done using blocks and dataflow connections, in diagram languages that support user-defined block types. Often, these types are intended to be instantiated and connected to other blocks in common patterns, corresponding to anticipated variability. We present the new language mechanisms of wirings and recommendations that allow these intentions to be encoded as features in libraries. A wiring describes how a given block is typically connected to other blocks, and a recommendation describes where such a wiring is typically applied as a feature. This allows feature-based wizards to be generated for user-defined libraries, making it easy to construct applications that make use of the encoded patterns.",
      "Affiliations": [
        "Lund University",
        "Lund University, Sweden"
      ],
      "AffiliationsString": "Lund University, Lund University, Sweden",
      "Authors": [
        "niklasfors",
        "gorelhedin1"
      ],
      "Key": "onward-2016-papers-automatica-modular-feature-based-automation-programming",
      "PersonsString": "Niklas Fors and Görel Hedin",
      "Title": "Bloqqi: Modular Feature-Based Block Diagram Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/onward-2016-papers-automatica-modular-feature-based-automation-programming"
    },
    {
      "Abstract": "It is common practice to bootstrap compilers of programming languages. By using the compiled language to implement the compiler, compiler developers can code in their own high-level language and gain a large-scale test case. In this paper, we investigate bootstrapping of compiler-compilers as they occur in language workbenches. Language workbenches support the development of compilers through the application of multiple collaborating domain-specific meta-languages for defining a language\u2019s syntax, analysis, code generation, and editor support. We analyze the bootstrapping problem of language workbenches in detail, propose a method for sound bootstrapping based on fixpoint compilation, and develop recipes for conducting breaking meta-language changes in a bootstrapped language workbench. We have applied sound bootstrapping to the Spoofax language workbench and report on our experience.",
      "Affiliations": [
        "Delft University of Technology",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands"
      ],
      "AffiliationsString": "Delft University of Technology, Delft University of Technology, Netherlands",
      "Authors": [
        "gabrielkonat",
        "sebastianerdweg",
        "eelcovisser"
      ],
      "Key": "gpce-2016-papers-bootstrapping-domain-specific-meta-languages-in-language-workbenches",
      "PersonsString": "Gabriël Konat, Sebastian Erdweg and Eelco Visser",
      "Title": "Bootstrapping Domain-Specific Meta-Languages in Language Workbenches",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-bootstrapping-domain-specific-meta-languages-in-language-workbenches"
    },
    {
      "Abstract": "Collection data structures in standard libraries of programming languages are designed to excel for the average case by carefully balancing memory footprint and runtime performance. These implicit design decisions and hard-coded trade-offs do constrain users from using an optimal variant for a given problem. Although a wide range of specialized collections is available for the Java Virtual Machine (JVM), they introduce yet another dependency and complicate user adoption by requiring specific Application Program Interfaces (APIs) incompatible with the standard library.\nA product line for collection data structures would relieve library designers from optimizing for the general case. Furthermore, a product line allows evolving the potentially large code base of a collection family efficiently. The challenge is to find a small core framework for collection data structures which covers all variations without exhaustively listing them, while supporting good performance at the same time.\nWe claim that the concept of Array Mapped Tries (AMTs) embodies a high degree of commonality in the sub-domain of immutable collection data structures. AMTs are flexible enough to cover most of the variability, while minimizing code bloat in the generator and the generated code. We implemented a Data Structure Code Generator (DSCG) that emits immutable collections based on an AMT skeleton foundation. The generated data structures outperform competitive hand-optimized implementations, and the generator still allows for customization towards specific workloads.",
      "Affiliations": [
        "CWI, Netherlands",
        "CWI, Netherlands"
      ],
      "AffiliationsString": "CWI, Netherlands",
      "Authors": [
        "michaelsteindorfer",
        "jurgenvinju"
      ],
      "Key": "gpce-2016-papers-towards-a-software-product-line-of-trie-based-collections",
      "PersonsString": "Michael Steindorfer and Jurgen Vinju",
      "Title": "Towards a Software Product Line of Trie-Based Collections",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-towards-a-software-product-line-of-trie-based-collections"
    },
    {
      "Abstract": "Nowadays, many virtual execution environments benefit from concurrency offered by the actor model. Unfortunately, while actors are used in many applications and computing frameworks, existing profiling tools are little effective in analyzing the performance of applications using actors. In this paper, we present a new instrumentation-based technique to profile actors in virtual execution environments. Our technique adopts platform-independent profiling metrics that minimize the perturbations induced by the instrumentation logic and allow comparing profiling results across different platforms. In particular, our technique measures the initialization cost, the amount of executed computations, and the messages sent and received by each actor. We implement our technique within a profiling tool for Akka actors on the Java platform. Evaluation results show that our profiling technique can help performance analysis of actor utilization and communication between actors in large-scale computing frameworks.",
      "Affiliations": [
        "Università della Svizzera italiana",
        "IBM Research Lab Zurich",
        "University of Lugano"
      ],
      "AffiliationsString": "Università della Svizzera italiana, IBM Research Lab Zurich, University of Lugano",
      "Authors": [
        "andrearosa",
        "lydiaychen",
        "walterbinder"
      ],
      "Key": "gpce-2016-papers-actor-profiling-in-virtual-execution-environments",
      "PersonsString": "Andrea Rosà, Lydia Y. Chen and Walter Binder",
      "Title": "Actor Profiling in Virtual Execution Environments",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-actor-profiling-in-virtual-execution-environments"
    },
    {
      "Abstract": "Mobile robots often use a distributed architecture in which software components are deployed to heterogeneous hardware modules. Ensuring the consistency with the designed architecture is a complex task, notably if functional safety requirements have to be fulfilled. We propose to use a domain-specific language to specify those requirements and to allow for generating a safety-enforcing layer of code, which is deployed to the robot. The paper at hand reports experiences in practically applying code generation to mobile robots. For two cases, we discuss how we addressed challenges, e.g., regarding weaving code generation into proprietary development environments and testing of manually written code. We find that a DSL based on the same conceptual model can be used across different kinds of hardware modules, but a significant adaptation effort is required in practical scenarios involving different kinds of hardware.",
      "Affiliations": [
        "Conpleks Innovation",
        "",
        "University of Southern Denmark"
      ],
      "AffiliationsString": "Conpleks Innovation, , University of Southern Denmark",
      "Authors": [
        "sorinadam",
        "marcokuhrmann",
        "ulrikschultz"
      ],
      "Key": "gpce-2016-papers-automatic-code-generation-in-practice-experiences-with-embedded-robot-controllers",
      "PersonsString": "Sorin Adam, Marco Kuhrmann and Ulrik Schultz",
      "Title": "Automatic Code Generation in Practice: Experiences with Embedded Robot Controllers",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-automatic-code-generation-in-practice-experiences-with-embedded-robot-controllers"
    },
    {
      "Abstract": "Today\u2019s programmers face a false choice between creating software that is extensible and software that is correct. Specifically, dynamic languages permit software that is richly extensible (via dynamic code loading, dynamic object extension, and various forms of reflection), and today\u2019s programmers exploit this flexibility to \u201cbring their own language features\u201d to enrich extensible languages (e.g., by using common JavaScript libraries). Meanwhile, such library-based language extensions generally lack enforcement of their abstractions, leading to programming errors that are complex to avoid and predict. To offer verification for this extensible world, we propose online verification-validation (OVV), which consists of language and VM design that enables a \u201cphaseless\u201d approach to program analysis, in contrast to the standard static-dynamic phase distinction. Phaseless analysis freely interposes abstract interpretation with concrete execution, allowing analyses to use dynamic (concrete) information to prove universal (abstract) properties about future execution. In this paper, we present a conceptual overview of OVV through a motivating example program that uses a hypothetical database library. We present a generic semantics for OVV, and an extension to this semantics that offers a simple gradual type system for the database library primitives. The result of instantiating this gradual type system in an OVV setting is a checker that can progressively type successive continuations of the program until a continuation is fully verified. To evaluate the proposed vision of OVV for this example, we implement the VM semantics (in Rust), and show that this design permits progressive typing in this manner.",
      "Affiliations": [
        "University of Colorado, Boulder",
        "University of Colorado Boulder",
        "University of Maryland at College Park, USA"
      ],
      "AffiliationsString": "University of Colorado, Boulder, University of Colorado Boulder, University of Maryland at College Park, USA",
      "Authors": [
        "matthewahammer",
        "boryuhevanchang",
        "davidvanhorn"
      ],
      "Key": "gpce-2016-papers-a-vision-for-online-verification-validation",
      "PersonsString": "Matthew Hammer, Bor-Yuh Evan Chang and David Van Horn",
      "Title": "A Vision for Online Verification-Validation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-a-vision-for-online-verification-validation"
    },
    {
      "Abstract": "Jamie Oliver\u2019s Fifteen is established in an old warehouse with great atmosphere. It has a view over the IJ-river and it\u2019s situated from walking distance of the Amsterdam Central Station. In the kitchen you will find 15 motivated apprentices who get the chance to change their life forever. On our menu you will find local, sustainably produced ingredients of the highest quality",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "gpce-2016-papers-gpce-sle-dinner",
      "PersonsString": "",
      "Title": "GPCE & SLE Dinner",
      "Type": "Dinner",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-gpce-sle-dinner"
    },
    {
      "Abstract": "Mainstream programming languages like Java have limited support for language extensibility. Without mechanisms for syntactic abstraction, new programming styles can only be embedded in the form of libraries, limiting expressiveness. In this paper, we present Recaf, a lightweight tool for creating Java dialects; effectively extending Java with new language constructs and user defined semantics. The Recaf compiler generically transforms designated method bodies to code that is parameterized by a semantic factory (Object Algebra), defined in plain Java. The implementation of such a factory defines the desired runtime semantics. We applied our design to produce several examples from a diverse set of programming styles and two case studies: we define i) extensions for generators, asynchronous computations and asynchronous streams and ii) a Domain-Specific Language (DSL) for Parsing Expression Grammars (PEGs), in a few lines of code.",
      "Affiliations": [
        "University of Athens",
        "CWI",
        "CWI & University of Groningen"
      ],
      "AffiliationsString": "University of Athens, CWI, CWI & University of Groningen",
      "Authors": [
        "aggelosbiboudis",
        "pabloinostroza",
        "tijsvanderstorm"
      ],
      "Key": "gpce-2016-papers-recaf-java-dialects-as-libraries",
      "PersonsString": "Aggelos Biboudis, Pablo Inostroza and Tijs van der Storm",
      "Title": "Recaf: Java Dialects as Libraries",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-recaf-java-dialects-as-libraries"
    },
    {
      "Abstract": "Recent years have seen a surge of interest in staging and generative programming, driven by the increasing difficulty of making high-level code run fast on modern hardware. While the mechanics of program generation are relatively well understood, we have only begun to understand how to develop systems in a generative way. The Lightweight Modular Staging (LMS) platform forms the core of a research agenda to make generative programming more widely accessible, through powerful libraries and a growing selection of case studies that illuminate design patterns and crystallize best practices for high-level and effective generative programming. This talk will reflect on the foundations of LMS, on applications, achievements, challenges, as well as ongoing and future work.",
      "Affiliations": ["Purdue University, USA"],
      "AffiliationsString": "Purdue University, USA",
      "Authors": ["tiarkrompf"],
      "Key": "gpce-2016-papers-tiark-rompf-lightweight-modular-staging-lms-generate-all-the-things-",
      "PersonsString": "Tiark Rompf",
      "Title": "GPCE 2016 Keynote: Lightweight Modular Staging (LMS): Generate all the things!",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-tiark-rompf-lightweight-modular-staging-lms-generate-all-the-things-"
    },
    {
      "Abstract": "The development of variable software, in general, and feature models, in particular, is an error-prone and time-consuming task. It gets increasingly more challenging with industrial-size models containing hundreds or thousands of features and constraints. Each change may lead to anomalies in the feature model such as making some features impossible to select. While the detection of anomalies is well-researched, giving explanations is still a challenge. Explanations must be as accurate and understandable as possible to support the developer in repairing the source of an error. We propose a generic algorithm for explaining different anomalies in feature models. We achieve a benefit for the developer by computing short explanations and by emphasizing specific parts in explanations that are more likely to be responsible for the anomaly. We provide an open-source implementation in FeatureIDE and show its scalability for industrial-size feature models.",
      "Affiliations": [
        "TU Braunschweig, Germany",
        "FZI Research Center for Information Technology",
        "TU Braunschweig, Germany"
      ],
      "AffiliationsString": "TU Braunschweig, Germany, FZI Research Center for Information Technology",
      "Authors": [
        "matthiaskowal",
        "sofiaananieva",
        "thomasthm"
      ],
      "Key": "gpce-2016-papers-explaining-anomalies-in-feature-models",
      "PersonsString": "Matthias Kowal, Sofia Ananieva and Thomas Thüm",
      "Title": "Explaining Anomalies in Feature Models",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-explaining-anomalies-in-feature-models"
    },
    {
      "Abstract": "We present a method for synthesizing regular expressions for introductory automata assignments. Given a set of positive and negative examples, the method automatically synthesizes the simplest possible regular expression that accepts all the positive examples while rejecting all the negative examples. The key novelty is the search-based synthesis algorithm that leverages ideas from static analysis to effectively prune out large search space. We have implemented our technique in a tool and evaluated it with non-trivial benchmark problems that students often struggle with. The results show that our system can synthesize desired regular expressions within a few seconds, so that it can be interactively used by students to enhance their understanding of regular expressions.",
      "Affiliations": [
        "Korea University",
        "Korea University",
        "Korea University"
      ],
      "AffiliationsString": "Korea University",
      "Authors": [
        "minalee",
        "sunbeomso",
        "hakjoooh"
      ],
      "Key": "gpce-2016-papers-synthesizing-regular-expressions-from-examples-for-introductory-automata-assignments",
      "PersonsString": "Mina Lee, Sunbeom So and Hakjoo Oh",
      "Title": "Synthesizing Regular Expressions from Examples for Introductory Automata Assignments",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-synthesizing-regular-expressions-from-examples-for-introductory-automata-assignments"
    },
    {
      "Abstract": "This paper introduces typy, a statically typed programming language embedded by reflection into Python. Rather than defining a monolithic semantics, typy features a fragmentary semantics, i.e. it delegates semantic control over each term, drawn from Python\u2019s fixed syntax, to a contextually relevant user-defined semantic fragment. This fragment programmatically 1) typechecks the term, and 2) assigns dynamic meaning to the term by computing its translation to Python. We argue that this design is expressive with examples of fragments that express the static and dynamic semantics of 1) functional records; 2) a variation on JavaScript\u2019s prototypal object system; 3) labeled sums (with nested pattern matching a la ML); and 4) typed foreign interfaces to Python and OpenCL. These semantic structures are, or would need to be, defined primitively in other languages. We further argue that this design is compositionally well- behaved. It sidesteps the problems of grammar composition and the expression problem by allowing different fragments to deterministically share a fixed syntax. Moreover, programs are semantically stable under fragment composition.",
      "Affiliations": [
        "Carnegie Mellon University",
        "Carnegie Mellon University"
      ],
      "AffiliationsString": "Carnegie Mellon University",
      "Authors": [
        "cyrusomar",
        "jonathanaldrich"
      ],
      "Key": "gpce-2016-papers-programmable-semantic-fragments",
      "PersonsString": "Cyrus Omar and Jonathan Aldrich",
      "Title": "Programmable Semantic Fragments: The Design and Implementation of typy",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-programmable-semantic-fragments"
    },
    {
      "Abstract": "Regression testing is a form of software quality assurance (QA) that involves comparing the behavior of a newer version of a software artifact to its earlier correct behavior, and signaling the QA engineer when deviations are detected. Given the large potential in automated generation and execution of regression test cases for business process models in the context of running systems, powerful tools are required to make this practically feasible, more specifically to limit the potential impact on production systems, and to reduce the manual effort required from QA engineers. In this paper, we present a regression testing automation framework that implements the capture &amp; replay paradigm in the context of BPMN 2.0, a domain-specific language for modeling and executing business processes. The framework employs parallelization techniques and efficient communication patterns to reduce the performance overhead of capturing. Based on inputs from the QA engineer, it manipulates the BPMN2 model before executing tests for isolating the latter from external dependencies (e.g. human actors or expensive web services) and for avoiding undesired side-effects. Finally, it performs a regression detection algorithm and reports the results to the QA engineer. We have implemented our framework on top of a BPMN2-compliant execution engine, namely jBPM, and performed functional validations and evaluations of its performance and fault-tolerance. The results, indicating 3.9% average capturing performance overhead, demonstrate that the implemented framework can be the foundation of a practical regression testing tool for BPMN 2.0, and a key enabler for continuous delivery of business process-driven applications and services.",
      "Affiliations": [
        "iMinds-DistriNet",
        "Katholieke Universiteit Leuven",
        "Katholieke Universiteit Leuven"
      ],
      "AffiliationsString": "iMinds-DistriNet, Katholieke Universiteit Leuven",
      "Authors": [
        "majidmakki",
        "dimitrivanlanduyt",
        "wouterjoosen"
      ],
      "Key": "gpce-2016-papers-automated-regression-testing-of-bpmn-2-0-processes-a-capture-replay-framework-for-continuous-delivery",
      "PersonsString": "Majid Makki, Dimitri Van Landuyt and Wouter Joosen",
      "Title": "Automated Regression Testing of BPMN 2.0 Processes: A Capture & Replay Framework for Continuous Delivery",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-automated-regression-testing-of-bpmn-2-0-processes-a-capture-replay-framework-for-continuous-delivery"
    },
    {
      "Abstract": "Concern-Oriented Reuse (CORE) proposes a new way of structuring model-driven software development, where models of the system are modularized by domains of abstraction within units of reuse called concerns. Within a CORE concern, models are further decomposed and modularized by features. This paper extends CORE with a technique that enables developers of high-level concerns to reuse lower-level concerns without unnecessarily committing to a specific feature selection. The developer can select the functionality that is minimally needed to continue development, and reexpose relevant alternative lower-level features of the reused concern in the reusing concern\u2019s interface. This effectively delays decision making about alternative functionality until the higher-level reuse context, where more detailed requirements are known and further decisions can be made. The paper describes the algorithms for composing the variation (i.e., feature and impact models), customization, and usage interfaces of a concern, as well as the concern\u2019s realization models and finally an entire concern hierarchy, as is necessary to support delayed decision making in CORE. The approach is evaluated on a crisis management case study.",
      "Affiliations": [
        "McGill University, Canada",
        "McGill University",
        "Trent University",
        "University of Nice"
      ],
      "AffiliationsString": "McGill University, Canada, McGill University, Trent University, University of Nice",
      "Authors": [
        "jorgkienzle",
        "guntermussbacher",
        "omaralam",
        "philippecollet"
      ],
      "Key": "gpce-2016-papers-delaying-decisions-in-variable-concern-hierarchies",
      "PersonsString": "Jörg Kienzle, Gunter Mussbacher, Omar Alam and Philippe Collet",
      "Title": "Delaying Decisions in Variable Concern Hierarchies",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-delaying-decisions-in-variable-concern-hierarchies"
    },
    {
      "Abstract": "A software product line comprises a family of software products that share a common set of features. It enables customers to compose software systems from a large space of features. Testing every product of a product line individually is often infeasible due to the exponential number of possible products in the number of features. Several approaches have been proposed to restrict the number of products to be tested by sampling a subset of products achieving sufficient combinatorial interaction coverage. However, existing sampling algorithms do not scale well to large product lines, as they require a considerable amount of time to generate the samples. Moreover, samples are not available until a sampling algorithm completely terminates. As testing time is usually limited, we propose an incremental approach of product sampling for pairwise interaction testing (called IncLing), which enables developers to generate samples on demand in a step-wise incremental way. Furthermore, IncLing uses heuristics to efficiently achieve pairwise interaction coverage with a reasonable number of products. We evaluated IncLing by comparing it against existing sampling algorithms using feature models of different sizes. The results of our approach indicate potential improvement in the efficiency of product-line testing.",
      "Affiliations": [
        "Magdeburg University",
        "Magdeburg University",
        "TU Braunschweig, Germany",
        "TU Darmstadt",
        "Magdeburg University"
      ],
      "AffiliationsString": "Magdeburg University, TU Braunschweig, Germany, TU Darmstadt",
      "Authors": [
        "mustafaalhajjaji",
        "sebastiankrieter",
        "thomasthm",
        "maltelochau",
        "guntersaake"
      ],
      "Key": "gpce-2016-papers-incling-efficient-product-line-testing-using-incremental-pairwise-sampling",
      "PersonsString": "Mustafa Al-Hajjaji, Sebastian Krieter, Thomas Thüm, Malte Lochau and Gunter Saake",
      "Title": "IncLing: Efficient Product-Line Testing Using Incremental Pairwise Sampling",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-incling-efficient-product-line-testing-using-incremental-pairwise-sampling"
    },
    {
      "Abstract": "Testing a software product line such as Linux implies building the source with different configurations. Manual approaches to generate configurations that enable code of interest are doomed to fail due to the high amount of variation points distributed over the feature model, the build system and the source code. Research has proposed various approaches to generate covering configurations, but the algorithms show many drawbacks related to run-time, exhaustiveness and the amount of generated configurations. Hence, analyzing an entire Linux source can yield more than 30 thousand configurations and thereby exceeds the limited budget and resources for build testing.\nIn this paper, we present an approach to fill the gap between a systematic generation of configurations and the necessity to fully build software in order to test it. By merging previously generated configurations, we reduce the number of necessary builds and enable global variability-aware testing. We reduce the problem of merging configurations to finding maximum cliques in a graph. We evaluate the approach on the Linux kernel, compare the results to common practices in industry, and show that our implementation scales even when facing graphs with millions of edges.",
      "Affiliations": [
        " Friedrich-Alexander University of Erlangen-Nürnberg",
        "",
        "Friedrich-Alexander University Erlangen-Nürnberg (FAU)",
        "Friedrich-Alexander University of Erlangen-Nürnberg"
      ],
      "AffiliationsString": " Friedrich-Alexander University of Erlangen-Nürnberg, , Friedrich-Alexander University Erlangen-Nürnberg (FAU), Friedrich-Alexander University of Erlangen-Nürnberg",
      "Authors": [
        "valentinrothberg",
        "christiandietrich",
        "andreasziegler",
        "daniellohmann"
      ],
      "Key": "gpce-2016-papers-towards-scalable-configuration-testing-in-variable-software",
      "PersonsString": "Valentin Rothberg, Christian Dietrich, Andreas Ziegler and Daniel Lohmann",
      "Title": "Towards Scalable Configuration Testing in Variable Software",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-towards-scalable-configuration-testing-in-variable-software"
    },
    {
      "Abstract": "This paper presents an OO style without classes, which we call interface-based object-oriented programming (IB). This style is a natural extension of closely related ideas such as traits. To support state, IB uses abstract state operations. This new way to deal with state allows flexibility not available in class-based languages. In IB state can be type-refined in subtypes. The combination of a purely IB style and type-refinement enables powerful idioms using multiple inheritance and state. To introduce IB to programmers we created Classless Java: an embedding of IB directly into Java. Classless Java uses annotation processing for code generation and relies on new features of Java 8 for interfaces. The code generation techniques used in Classless Java have interesting properties, including guarantees that the generated code is type-safe and good integration with IDEs. Usefulness of IB and Classless Java is shown with examples and case studies.",
      "Affiliations": [
        "University of Hong Kong",
        "",
        "Victoria University of Wellington",
        "University of Hong Kong"
      ],
      "AffiliationsString": "University of Hong Kong, , Victoria University of Wellington",
      "Authors": [
        "yanlinwang",
        "haoyuanzhang",
        "marcoservetto",
        "brunooliveira"
      ],
      "Key": "gpce-2016-papers-classless-java",
      "PersonsString": "Yanlin Wang, Haoyuan Zhang, Marco Servetto and Bruno C. d. S. Oliveira",
      "Title": "Classless Java",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-classless-java"
    },
    {
      "Abstract": "Configurable systems typically use #ifdefs to denote variability. Generating and compiling all configurations may be time-consuming. An alternative consists of using variability-aware parsers, such as TypeChef. However, they may not scale. In practice, developers can use sampling strategies to compile only a subset of the configurations. We propose a change-centric approach to compile configurable systems with #ifdefs by analyzing only configurations impacted by a code change. We implement it in a tool called CHECKCONFIGMX, which reports the new compilation errors introduced by the transformation. We perform an empirical study to evaluate 3,913 transformations applied to the 14 largest files of BusyBox, Apache HTTPD, and Expat configurable systems. CHECKCONFIGMX finds 595 compilation errors of 20 types introduced by 41 developers in 214 commits (5.46% of the analyzed transformations). In our study, it reduces at least 50% (an average of 99%) the number of compiled configurations by comparing with the exhaustive approach without considering a feature model. CHECKCONFIGMX may help developers to reduce compilation effort to evaluate fine-grained transformations applied to configurable systems with #ifdefs.",
      "Affiliations": [
        "Federal University of Campina Grande",
        "UFCG, Brazil",
        "",
        "Federal University of Alagoas (UFAL)",
        "",
        "Federal University of Pernambuco"
      ],
      "AffiliationsString": "Federal University of Campina Grande, UFCG, Brazil, , Federal University of Alagoas (UFAL), Federal University of Pernambuco",
      "Authors": [
        "larissabraz",
        "rohitgheyi",
        "melinamongiovi",
        "marcioribeiro",
        "flaviomedeiros",
        "leopoldoteixeira"
      ],
      "Key": "gpce-2016-papers-a-change-centric-approach-to-compile-configurable-systems-with-ifdefs",
      "PersonsString": "Larissa Braz, Rohit Gheyi, Melina Mongiovi, Márcio Ribeiro, Flavio Medeiros and Leopoldo Teixeira",
      "Title": "A Change-Centric Approach to Compile Configurable Systems with #ifdefs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-a-change-centric-approach-to-compile-configurable-systems-with-ifdefs"
    },
    {
      "Abstract": "The intensive use of generative programming techniques provides an elegant engineering solution to deal with the heterogeneity of platforms and technological stacks. The use of domain-specific languages for example, leads to the creation of numerous code generators that automatically translate high-level system specifications into multi-target executable code. Producing correct and efficient code generator is complex and error-prone. Although software designers provide generally high-level test suites to verify the functional outcome of generated code, it remains challenging and tedious to verify the behavior of produced code in terms of non-functional properties. This paper describes a practical approach based on a runtime monitoring infrastructure to automatically check the potential inefficient code generators. This infrastructure, based on system containers as execution platforms, allows code-generator developers to evaluate the generated code performance. We evaluate our approach by analyzing the performance of Haxe, a popular high-level programming language that involves a set of cross-platform code generators. Experimental results show that our approach is able to detect some performance inconsistencies that reveal real issues in Haxe code generators.",
      "Affiliations": [
        "INRIA Rennes",
        "",
        "",
        "INRIA Rennes"
      ],
      "AffiliationsString": "INRIA Rennes, ",
      "Authors": [
        "mohamedboussaa",
        "olivierbarais",
        "benoitbaudry",
        "gersonsunye"
      ],
      "Key": "gpce-2016-papers-automatic-non-functional-testing-of-code-generators-families",
      "PersonsString": "Mohamed Boussaa, Olivier Barais, Benoit Baudry and Gerson Sunyé",
      "Title": "Automatic Non-functional Testing of Code Generators Families",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-automatic-non-functional-testing-of-code-generators-families"
    },
    {
      "Abstract": "Many model-driven development (MDD) tools employ specialized frameworks and modeling languages, and assume that the semantics of models is provided by some form of code generation. As a result, programming against models is cumbersome and does not integrate well with ordinary programming languages and IDEs. In this paper we present MD4J, a modeling approach for embedding metamodels directly in Java, using plain interfaces and annotations. The semantics is provided by data managers that create and manipulate models. This architecture enables two kinds of extensibility. First, the data managers can be changed or extended to obtain different base semantics of a model. This allows a kind of aspect-oriented programming. Second, the metamodels themselves can be extended with additional fields and methods to modularly enrich a modeling language. We illustrate the approach using the example of state machines, discuss the implementation, and validate the approach in two case-studies based on UML activity diagram execution and an aspect-oriented refactoring of JHotDraw.",
      "Affiliations": [
        "Centrum Wiskunde & Informatica",
        "CWI",
        "CWI & University of Groningen"
      ],
      "AffiliationsString": "Centrum Wiskunde & Informatica, CWI, CWI & University of Groningen",
      "Authors": [
        "theologoszacharopoulos",
        "pabloinostroza",
        "tijsvanderstorm"
      ],
      "Key": "gpce-2016-papers-extensible-modeling-with-managed-data-in-java",
      "PersonsString": "Theologos Zacharopoulos, Pablo Inostroza and Tijs van der Storm",
      "Title": "Extensible Modeling with Managed Data in Java",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-extensible-modeling-with-managed-data-in-java"
    },
    {
      "Abstract": "Today\u2019s competitive marketplace requires the industry to understand unique and particular needs of their customers. Product line practices enable companies to create individual products for every customer by providing an interdependent set of features. Users configure personalized products by consecutively selecting desired features based on their individual needs. However, as most features are interdependent, users must understand the impact of their gradual selections in order to make valid and desired decisions. Thus, especially when dealing with large feature models, specialized assistance is needed to guide the users in configuring their product. Recently, recommender systems have proved to be an appropriate mean to assist users in finding information and making decisions. In this paper, we propose an advanced feature recommender system that provides personalized recommendations to users. In detail, we offer four main contributions: (i) We provide a recommender system that suggests relevant features to ease the decision-making process. (ii) Based on this system, we provide visual support to users that guides them through the decision-making process and allows them to focus on valid and relevant parts of the configuration space. (iii) We provide an interactive open-source configurator tool encompassing all those features. (iv) In order to demonstrate the performance of our approach, we compare three different recommender algorithms in two real case studies derived from business experience.",
      "Affiliations": [
        "University of Magdeburg",
        "University of Magdeburg",
        "Magdeburg University",
        "University of Magdeburg",
        "Magdeburg University"
      ],
      "AffiliationsString": "University of Magdeburg, Magdeburg University",
      "Authors": [
        "julianaalvespereira",
        "pawelmatuszyk",
        "sebastiankrieter",
        "myraspiliopoulou",
        "guntersaake"
      ],
      "Key": "gpce-2016-papers-a-feature-based-personalized-recommender-system-for-product-line-configuration",
      "PersonsString": "Juliana Alves Pereira, Pawel Matuszyk, Sebastian Krieter, Myra Spiliopoulou and Gunter Saake",
      "Title": "A Feature-Based Personalized Recommender System for Product-Line Configuration",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-a-feature-based-personalized-recommender-system-for-product-line-configuration"
    },
    {
      "Abstract": "Most software systems are designed to provide custom functionality using configuration options. Testing such systems is challenging as running tests of a single configuration is often not sufficient, because defects may appear in other configurations. Ideally, all configurations of a software system should be tested, which is usually not applicable in practice due to the combinatorial explosion with respect to the configuration options. Multiple sampling strategies aim to reduce the set of tested configurations to a feasible amount, such as T-wise sampling, random generation, and user-defined configurations. However, these strategies are often not applied in practice as they require manual effort or a specialized testing framework. Within our tool FeatureIDE, we integrate all aforementioned strategies and reduce the manual effort by automating the process of generating and testing configurations. Furthermore, we provide support for unit testing to avoid redundant test executions and for variability-aware testing. With this extension of FeatureIDE, we aim to make recent testing techniques for configurable systems applicable in practice.",
      "Affiliations": [
        "Magdeburg University",
        "Magdeburg University",
        "Magdeburg University",
        "Magdeburg University",
        "TU Braunschweig, Germany",
        "Harz University of Applied Sciences, Germany",
        "Magdeburg University"
      ],
      "AffiliationsString": "Magdeburg University, TU Braunschweig, Germany, Harz University of Applied Sciences, Germany",
      "Authors": [
        "mustafaalhajjaji",
        "jensmeinicke",
        "sebastiankrieter",
        "reimarschroter",
        "thomasthm",
        "thomasleich",
        "guntersaake"
      ],
      "Key": "gpce-2016-papers-tool-demo-testing-configurable-systems-with-featureide",
      "PersonsString": "Mustafa Al-Hajjaji, Jens Meinicke, Sebastian Krieter, Reimar Schröter, Thomas Thüm, Thomas Leich and Gunter Saake",
      "Title": "Tool Demo: Testing Configurable Systems with FeatureIDE",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-tool-demo-testing-configurable-systems-with-featureide"
    },
    {
      "Abstract": "In today\u2019s web applications asynchronous requests to remote services using callbacks or futures are omnipresent. The continuation of such a non-blocking task is represented as a callback function that will later be called with the result of the request. This style of programming where the remainder of a computation is captured in a continuation function is called continuation-passing style (CPS). This style of programming can quickly lead to a phenomenon called \u201ccallback hell\u201d, which has a negative impact on the maintainability of applications that employ this style. Several alternatives to callbacks are therefore gaining traction within the web domain. For example, there are a number of frameworks that rely on automatically transforming code, written without callbacks in a direct sequential style, into the continuation-passing style. However, these frameworks often employ a conservative approach in which each function call is transformed into CPS. Even when they do a selective transformation they will often encapsulate the entire remainder of the computation in the continuation. This conservative approach can sequentialise requests that could otherwise be run in parallel. So-called delimited continuations can remedy, but require special marks that have to be manually inserted in the code for marking the beginning and end of the continuation. In this paper we propose an alternative strategy in which we apply a selective and delimited CPS transformation that operates on a Program Dependence Graph instead to find the limits of each continuation. We implement this strategy in JavaScript and demonstrate its applicability to various web programming scenarios.",
      "Affiliations": [
        "Software Languages Lab",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Software Languages Lab, Vrije Universiteit Brussel, Belgium",
      "Authors": [
        "laurephilips",
        "joeridekoster",
        "wolfgangdemeuter",
        "coenderoover"
      ],
      "Key": "gpce-2016-papers-dependence-driven-delimited-cps-transformation-for-javascript",
      "PersonsString": "Laure Philips, Joeri De Koster, Wolfgang De Meuter and Coen De Roover",
      "Title": "Dependence-Driven Delimited CPS Transformation for JavaScript",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/gpce-2016-papers-dependence-driven-delimited-cps-transformation-for-javascript"
    },
    {
      "Abstract": "This paper describes RandIR, a tool for differential testing of compilers using random instances of a given intermediate representation (IR). RandIR assumes no fixed target language but instead supports extensible IR-definitions through an internal IR-independent representation of operations. This makes it particularly well suited to test embedded compilers for multi-stage programming, which is our main use case. The ideas underlying our work, however, are more generally applicable. \nRandIR is able to automatically simplify failing instances of a test, a technique commonly referred to as shrinking. This enables testing with large random IR samples, thus increasing the odds of detecting a buggy behavior, while still being able to simplify failing instances to human-readable code.",
      "Affiliations": [
        "ETH Zurich, Switzerland",
        "Purdue University, USA",
        "ETH Zurich"
      ],
      "AffiliationsString": "ETH Zurich, Switzerland, Purdue University, USA, ETH Zurich",
      "Authors": [
        "georgofenbeck",
        "tiarkrompf",
        "markuspuschel"
      ],
      "Key": "scala-2016-randir-differential-testing-for-embedded-compilers",
      "PersonsString": "Georg Ofenbeck, Tiark Rompf and Markus Püschel",
      "Title": "RandIR: Differential Testing for Embedded Compilers",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-randir-differential-testing-for-embedded-compilers"
    },
    {
      "Abstract": "We present a lightweight library for testing concurrent Scala programs by systematically exploring multiple interleavings between user-specified operations on shared objects. Our library is targeted at beginners of concurrent programming in Scala, runs on a standard JVM, and supports conventional synchronization primitives such as wait, notify, and synchronized. The key component of the library is the trait SchedulableMonitor that accepts a thread schedule, and interleaves as per the schedule all user-specified operations invoked through multiple threads on objects implementing the trait. Using our library, we developed a unit test engine that tests concurrent operations on shared objects on thousands of schedules obtained by bounding the number of context-switches. If a unit test fails on a schedule, the test engine offers as feedback the interleaved traces of execution that resulted in the failure. We used our test engine to automatically test and evaluate two assignments: (a) lock-based producer/consumer problem, and (b) lock-free sorted list implementation, offered to a class of 150 under-graduate students of EPFL. Our evaluations show that the system is effective in detecting bugs in students\u2019 solutions.",
      "Affiliations": [
        "EPFL, Switzerland",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, Switzerland",
      "Authors": [
        "mikaelmayer",
        "ravichandhranmadhavan"
      ],
      "Key": "scala-2016-a-scala-library-for-testing-student-assignments-on-concurrent-programming",
      "PersonsString": "Mikaël Mayer and Ravichandhran Madhavan",
      "Title": "A Scala Library for Testing Student Assignments on Concurrent Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-a-scala-library-for-testing-student-assignments-on-concurrent-programming"
    },
    {
      "Abstract": "Algebraic data types and pattern matching are key features of functional programming languages. Exhaustivity checking of pattern matching is a safety belt that defends against unmatched exceptions at runtime and boosts type safety. However, the presence of language features like inheritance, typecase, traits, GADTs, path-dependent types and union types makes the checking difficult and the algorithm complex. \nIn this paper we propose a generic algorithm that decouples the checking algorithm from specific type theories. The decoupling makes the algorithm simple and enables easy customization for specific type systems.",
      "Affiliations": ["EPFL, Switzerland"],
      "AffiliationsString": "EPFL, Switzerland",
      "Authors": ["fengyunliu"],
      "Key": "scala-2016-a-generic-algorithm-for-checking-exhaustivity-of-pattern-matching",
      "PersonsString": "Fengyun Liu",
      "Title": "A Generic Algorithm for Checking Exhaustivity of Pattern Matching (Short Paper)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-a-generic-algorithm-for-checking-exhaustivity-of-pattern-matching"
    },
    {
      "Abstract": "Traditionally, programming languages have been islands, each disconnected from the rest. Running multiple languages on a single VM (e.g. the JVM) allows languages to communicate a little more easily, but at the price of performance: no matter how clever the VM, some languages run slowly. Even when all languages on a VM run acceptably fast, the mechanisms for communication are usually crude, normally due to performance concerns.\nIn this talk I will show how languages can be composed in a way that reflects the needs of programmers, and that human-orientated design decisions can be made to run sufficiently fast. Using the Eco editor, users can write source files that contain fragments of multiple languages. Multi-language programs are then run on composed meta-tracing interpreters that JIT compile across language implementations \u2013 despite not having a common VM. I will show that the performance of the resulting systems is more than good enough to be usable, and that it opens up new possibilities for language design and use.\nJoint work with Edd Barrett, Carl Friedrich Bolz, Lukas Diekmann, Sarah Mount, and Jasper Schulz. More at http://soft-dev.org/",
      "Affiliations": ["King's College London"],
      "AffiliationsString": "King's College London",
      "Authors": ["laurietratt"],
      "Key": "scala-2016-fine-grained-language-composition-without-a-common-vm",
      "PersonsString": "Laurence Tratt",
      "Title": "Fine-grained language composition without a common VM",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-fine-grained-language-composition-without-a-common-vm"
    },
    {
      "Abstract": "\u201cDo well-typed programs go wrong?\u201d &quot;Of course they do, dear, even the finest Scala programs written using the best of type systems.\u201d \u201cBut then, why bother?\u201d \u201cBecause it is the way of the world child.\u201d The vast majority of programs written today are written in languages with a single, unconstrained, type; in other words they ignore four decade of research in programming languages. But all is not lost. An idea \u2013referred to, for the lack of better name, as gradual typing\u2013 has gained hold in both academe and industry. At heart, gradual typing is about incrementally decorating untyped programs with type annotations and obtaining (partial) correctness. Not surprisingly soundness has a very different meaning in academic efforts and industrial ones. This talk will attempt to explain what it means for a variable to have a type and argue that soundness must be revisited in this new age. Examples from our experience implementing and evaluating gradual type systems for languages such as JavaScript, Thorn and Racket will illustrate the talk. Some hopeful conclusions will be drawn.",
      "Affiliations": ["Northeastern University"],
      "AffiliationsString": "Northeastern University",
      "Authors": ["janvitek"],
      "Key": "scala-2016-this-is-not-a-type-gradual-typing-in-practice-keynote-",
      "PersonsString": "Jan Vitek",
      "Title": "This is not a Type: Gradual typing in practice",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-this-is-not-a-type-gradual-typing-in-practice-keynote-"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "scala-2016-unconference-2",
      "PersonsString": "",
      "Title": "Unconference 2",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/scala-2016-unconference-2"
    },
    {
      "Abstract": "Bonsai is a tool that symbolically checks for soundness errors in type systems. It constructs a symbolic space of syntactically-correct programs and evaluates them on the actual typechecker and interpreter, looking for a program that passes the former but fails in the latter. Being a bounded model checker, Bonsai does not prove correctness of a type system, but it finds counterexamples twice as large as those found by experts. We demonstrate how to use Bonsai to find the recently-discovered Scala soundness issue SI-9633 (Amin &amp; Tate), which is related to the interaction between null and path-dependent types.",
      "Affiliations": [
        "Henry M. Gunn High School",
        "University of Washington, USA"
      ],
      "AffiliationsString": "Henry M. Gunn High School, University of Washington, USA",
      "Authors": [
        "kartikchandra",
        "rastislavbodik"
      ],
      "Key": "scala-2016-automatically-finding-scala-soundness-bugs",
      "PersonsString": "Kartik Chandra and Rastislav Bodik",
      "Title": "Automatically finding Scala soundness bugs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-automatically-finding-scala-soundness-bugs"
    },
    {
      "Abstract": "The cake pattern was designed to support modular development combining mixins with ML modules, but it is criticized because mixins are not sufficiently isolated from each other\u2019s implementation. Indeed, as discussed by Gabriel, historically mixins were not designed to enforce isolation, but to support separating intrinsically orthogonal concepts in cooperative development scenarios.\nWe start investigating the issue and clarify which scenarios the cake pattern does succesfully apply to. We compare the cake pattern with an encoding of (recursive) hierarchical modules based on object composition instead of inheritance, that support fully separate modular development at the cost of more boilerplate.\nWe also suggest one could support separate modular development without additional boilerplate by combining the cake pattern with private implementation inheritance.",
      "Affiliations": [
        "University of Tübingen, Germany",
        "University of Tübingen, Germany"
      ],
      "AffiliationsString": "University of Tübingen, Germany",
      "Authors": [
        "paologgiarrusso1",
        "jonathanbrachthauser"
      ],
      "Key": "scala-2016-revisiting-the-cake-pattern-scaling-scalable-component-abstractions-",
      "PersonsString": "Paolo G. Giarrusso and Jonathan Immanuel Brachthäuser",
      "Title": "Revisiting the Cake Pattern: Scaling \u201cScalable Component Abstractions\u201d",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-revisiting-the-cake-pattern-scaling-scalable-component-abstractions-"
    },
    {
      "Abstract": "Type-directed API search, using queries composed of both keywords and type signatures to retrieve definitions from APIs, are popular in the functional programming community. This search technique allows programmers to easily navigate complex and large APIs in order to find the definitions they are interested in. While there exist some effective approaches to address type-directed API search for functional languages, we observed that none of these have been successfully adapted for use with statically-typed, object-oriented languages. The challenge here is incorporating large and unified inheritance hierarchies and the resulting prevalence of subtyping into an API retrieval model. We describe a new approach to API retrieval and provide an implementation thereof for the Scala language. Our evaluation with queries mined from Q&amp;A websites shows that the model retrieves definitions from the Scala standard library with 94% of the relevant results in the top 10.",
      "Affiliations": [
        "1plusX, Switzerland",
        "University of Applied Sciences Rapperswil, Switzerland",
        "University of Applied Sciences Rapperswil, Switzerland",
        "University of Applied Sciences Rapperswil, Switzerland"
      ],
      "AffiliationsString": "1plusX, Switzerland, University of Applied Sciences Rapperswil, Switzerland",
      "Authors": [
        "lukaswegmann",
        "farhadmehta",
        "petersommerlad",
        "mirkostocker"
      ],
      "Key": "scala-2016-scaps-type-directed-api-search-for-scala",
      "PersonsString": "Lukas Wegmann, Farhad Mehta, Peter Sommerlad and Mirko Stocker",
      "Title": "Scaps: Type-Directed API Search for Scala",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-scaps-type-directed-api-search-for-scala"
    },
    {
      "Abstract": "Scala-gopher is a library-level Scala implementation of communication sequence process constructs: channels, selectors (similar to analogical constructs in Limbo or Go) transputers (similar to Occam proc) and a set of high-level operations on top of akka and SIP-22 async. The framework integrates CSP-style programming into standard Scala concurrency environment via idiomatic API. This allows usage of communication patterns, well known in Go world, but not easy expressable in mainstream scala concurrency frameworks, along with algebraic approach for composing computation builders. Besides, we want to discuss current implementation issues and future directions in the context of evolving of compiler and libraries ecosystem.",
      "Affiliations": ["vertamedia"],
      "AffiliationsString": "vertamedia",
      "Authors": ["ruslanshevchenko"],
      "Key": "scala-2016-scala-gopher-csp-style-programming-techniques-with-idiomatic-scala-",
      "PersonsString": "Ruslan Shevchenko",
      "Title": "Scala-Gopher: CSP-style programming techniques with idiomatic Scala.",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-scala-gopher-csp-style-programming-techniques-with-idiomatic-scala-"
    },
    {
      "Abstract": "Concurrent programming is infamous for its difficulty. An important source of difficulty is non-determinism, stemming from unpredictable interleavings of concurrent activities. Futures and promises are widely-used abstractions that help designing deterministic concurrent programs, although this property cannot be guaranteed statically in mainstream programming languages. Deterministic-by-construction concurrent programming models avoid this issue, but they typically restrict expressiveness in important ways. \nThis paper introduces a concurrent programming model, Reactive Async, which decouples concurrent computations using so-called cells, shared locations which generalize futures as well as recent deterministic abstractions such as LVars. Compared to previouslyproposed programming models Reactive Async provides (a) a fallback mechanism for the case where no computation ever computes the value of a given cell, and (b) explicit and optimized handling of cyclic dependencies. We present a complete implementation of the Reactive Async programming model as a library in Scala. Finally, the paper reports on a case study applying Reactive Async to static analyses of JVM bytecode based on the Opal framework.",
      "Affiliations": [
        "KTH Royal Institute of Technology",
        "KTH Royal Institute of Technology, Sweden",
        "TU Darmstadt, Germany",
        "TU Darmstadt, Germany"
      ],
      "AffiliationsString": "KTH Royal Institute of Technology, KTH Royal Institute of Technology, Sweden, TU Darmstadt, Germany",
      "Authors": [
        "philipphaller",
        "simongeries",
        "michaeleichberg",
        "guidosalvaneschi"
      ],
      "Key": "scala-2016-reactive-async-expressive-deterministic-concurrency",
      "PersonsString": "Philipp Haller, Simon Geries, Michael Eichberg and Guido Salvaneschi",
      "Title": "Reactive Async: Expressive Deterministic Concurrency",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-reactive-async-expressive-deterministic-concurrency"
    },
    {
      "Abstract": "It is difficult to verify that the popular implementations of CSS layout match the specification, due to the very different languages being used. We hope to bridge this gap by formalising the specification using attribute grammars, which are formulae for specifying tree computations. Kiama is a language processing library that uses Scala\u2019s pattern matching syntax as a baseline for defining attribute formulae. This format is useful for defining a formula for many production rules in one place. Further, Kiama 2.0 introduced the ability to interrogate the structure of a tree using extractor patterns, which allows us to write tree matching patterns that match not only downwards on the tree, but also upwards or sideways. We have also been using extractor patterns to grant easy access to commonly used attributes, and to express the attributes in a language that closely resembles the CSS specification.",
      "Affiliations": ["Macquarie University, Australia"],
      "AffiliationsString": "Macquarie University, Australia",
      "Authors": ["scottbuckley"],
      "Key": "scala-2016-using-scala-s-pattern-matching-features-for-an-attribute-grammar-formalisation-of-the-css-layout-specification",
      "PersonsString": "Scott Buckley",
      "Title": "Using Scala\u2019s pattern matching features for an attribute grammar formalisation of the CSS layout specification",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-using-scala-s-pattern-matching-features-for-an-attribute-grammar-formalisation-of-the-css-layout-specification"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "EPFL",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, EPFL, Switzerland",
      "Authors": [
        "sandrostucki",
        "manoharjonnalagedda"
      ],
      "Key": "scala-2016-opening-day-2",
      "PersonsString": "Sandro Stucki and Manohar Jonnalagedda",
      "Title": "Opening - Day 2",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/scala-2016-opening-day-2"
    },
    {
      "Abstract": "Metaprogramming techniques to generate code at runtime in a general-purpose meta-language have seen a surge of interest in recent years, driven by the widening performance gap between high-level languages and emerging hardware platforms. In the context of Scala, the LMS (Lightweight Modular Staging) framework has contributed to &quot;abstraction without regret\u2019\u2019\u2013high-level programming without performance penalty\u2013in a number of challenging domains, through runtime code generation and embedded compiler pipelines based on stacks of DSLs.\nBased on this experience, this paper crystallizes some of the design decisions of LMS and discusses potential alternatives, which maintain the underlying spirit but differ in implementation choices: specifically, strategies for realizing more flexible front-end embeddings using type classes instead of higher-kinded types, and strategies for type-safe metaprogramming with untyped intermediate representations.",
      "Affiliations": ["Purdue University, USA"],
      "AffiliationsString": "Purdue University, USA",
      "Authors": ["tiarkrompf"],
      "Key": "scala-2016-reflections-on-lms-exploring-front-end-alternatives",
      "PersonsString": "Tiark Rompf",
      "Title": "Reflections on LMS: Exploring Front-End Alternatives",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-reflections-on-lms-exploring-front-end-alternatives"
    },
    {
      "Abstract": "Aggregate programming is a novel paradigm that addresses, at the core, many issues commonly found in the development of large-scale, situated, self-adaptive systems. It is a particular macro-programming approach where a developer expresses the behaviour of the system at the aggregate-level, by targeting the distributed computational machine which is given by the entire set of (possibly mobile and heterogeneous) networked devices pervading the environment. It is the model that takes care of turning a system-level behaviour specification into the concrete, device-centric programs executed locally by each component.\nAggregate computing is formally grounded in the field calculus, a minimal functional language that works with computational fields, i.e., distributed data structures mapping devices (digital representatives of space-time portions) to computational objects. Fields are a useful unifying abstraction for drawing a connection between the physical and the computational world, and between the local and global programming viewpoints. This approach is compositional, allowing to define layers of building blocks of increasing abstraction, and is also amenable to formal analyses.\nIn this talk, I will present scafi (SCAla with computational FIels), an aggregate computing framework for the Scala programming language which provides (i) an internal DSL for expressing aggregate computations as well as (ii) a library support for the configuration and execution of aggregate systems. There is no need to learn ad-hoc external DSLs anymore: with scafi, Scala programmers can instantaneously start playing with this new, intriguing development approach!",
      "Affiliations": ["University of Bologna, Italy"],
      "AffiliationsString": "University of Bologna, Italy",
      "Authors": ["robertocasadei1"],
      "Key": "scala-2016-practical-aggregate-programming-in-scala",
      "PersonsString": "Roberto Casadei",
      "Title": "Practical Aggregate Programming in Scala",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-practical-aggregate-programming-in-scala"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "scala-2016-unconference",
      "PersonsString": "",
      "Title": "Unconference 1",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/scala-2016-unconference"
    },
    {
      "Abstract": "dotty is a new, experimental Scala compiler based on DOT, the calculus of Dependent Object Types. Higher-kinded types are a natural extension of first-order lambda calculus, and have been a core construct of Haskell and Scala. As long as such types are just partial applications of generic classes, they can be given a meaning in DOT relatively straightforwardly. But general lambdas on the type level require extensions of the DOT calculus to be expressible. This paper is an experience report where we describe and discuss four implementation strategies that we have tried out in the last three years. Each strategy was fully implemented in the dotty compiler. We discuss the usability and expressive power of each scheme, and give some indications about the amount of implementation difficulties encountered.",
      "Affiliations": [
        "EPFL, Switzerland",
        "EPFL, Switzerland",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, Switzerland",
      "Authors": [
        "martinodersky",
        "guillaumemartres",
        "dmitrypetrashko"
      ],
      "Key": "scala-2016-implementing-higher-kinded-types-in-dotty",
      "PersonsString": "Martin Odersky, Guillaume Martres and Dmitry Petrashko",
      "Title": "Implementing Higher-Kinded Types in Dotty",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-implementing-higher-kinded-types-in-dotty"
    },
    {
      "Abstract": "Hundreds of programming languages compile to JavaScript. Yet, most of them fail, at one level or another, to provide satisfactory interoperability with JavaScript APIs. This is limiting, as interoperability is at least required to manipulate web pages through the DOM API, but also to use the eco-system of existing JavaScript libraries. This paper presents the interoperability features of Scala.js, which solves the shortcomings of previous approaches. Scala.js offers a separate hierarchy of JavaScript types, whose operations have semantics borrowed from ECMAScript 2015. The interoperability features are complete with respect to ECMAScript 2015, save for two exceptions which are still being worked on. This allows Scala.js programs to perform any operation that an ECMAScript program could do, thereby guaranteeing that they can talk to any JavaScript library.",
      "Affiliations": [
        "EPFL, Switzerland",
        "EPFL, Switzerland",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, Switzerland",
      "Authors": [
        "sebastiendoeraene",
        "tobiasschlatter",
        "nicolasstucki"
      ],
      "Key": "scala-2016-semantics-driven-interoperability-between-scala-js-and-javascript",
      "PersonsString": "Sébastien Doeraene, Tobias Schlatter and Nicolas Stucki",
      "Title": "Semantics-Driven Interoperability between Scala.js and JavaScript",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-semantics-driven-interoperability-between-scala-js-and-javascript"
    },
    {
      "Abstract": "In this paper, we report on our experience in teaching a course on concepts of programming languages at TU Delft based on Krishnamurthi\u2019s PAPL book with the definitional interpreter approach using Scala as meta-language and using the WebLab learning management system. In particular, we discuss our experience with encoding of definitional interpreters in Scala using case classes, pattern matching, and recursive functions; offering this material in the web-based learning management system WebLab; automated grading and feedback of interpreter submissions using unit tests; testing tests to force students to formulate tests, instead of just implementing interpreters; generation of tests based on a reference implementation to reduce the effort of producing unit tests; and the construction of a product line of interpreters in order to maximize reuse and consistency between reference implementations.",
      "Affiliations": [
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands"
      ],
      "AffiliationsString": "Delft University of Technology, Netherlands",
      "Authors": [
        "timvanderlippe",
        "thomassmith",
        "danielpelsmaeker",
        "eelcovisser"
      ],
      "Key": "scala-2016-teaching-concepts-of-programming-languages-with-definitional-interpreters-in-scala-and-the-weblab-learning-management-system-an-experience-report",
      "PersonsString": "Tim van der Lippe, Thomas Smith, Daniël Pelsmaeker and Eelco Visser",
      "Title": "A Scalable Infrastructure for Teaching Concepts of Programming Languages in Scala with WebLab: An Experience Report",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-teaching-concepts-of-programming-languages-with-definitional-interpreters-in-scala-and-the-weblab-learning-management-system-an-experience-report"
    },
    {
      "Abstract": "In an information system development process, a lot of time is spent on initial setup and development of prototypes. During that time, a lot of resources are spent, and often thrown away as the process progresses in future iterations. The main focus of this talk is to define and implement a domain specific language that would allow fast development of information system prototypes. Generated prototype source code contains MVC skeleton with predefined methods for creating, reading, updating and deleting objects from the database. These objects are related to the corresponding relational tables using Slick database query and access library. Operations on objects are available through REST services hosted at a JBoss Netty web server with Play framework. A skeleton system represents a basis for the development of an information system in a manner that makes adding new functionalities easy. Once the system is generated, further implementation is done using Scala. Scala is an excellent candidate both for host and target programming language. In this version we use external DSL but in future versions we plan to switch to embedded DSL that is more convenient to use with Scala.",
      "Affiliations": [
        "",
        "Department of Mathematics and Informatics, Faculty of Sciences, University of Novi Sad"
      ],
      "AffiliationsString": ", Department of Mathematics and Informatics, Faculty of Sciences, University of Novi Sad",
      "Authors": [
        "zeljkobajic",
        "milanjovic"
      ],
      "Key": "scala-2016-towards-a-scala-embedded-information-system-description-dsl",
      "PersonsString": "Zeljko Bajic and Milan Jovic",
      "Title": "Towards a Scala embedded information system description DSL",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-towards-a-scala-embedded-information-system-description-dsl"
    },
    {
      "Abstract": "We present qualified types for Scala, a form of refinement types adapted to the Scala language. Qualified types allow users to refine base types and classes using predicate expressions. We implemented a type checker for qualified types that is embedded in Scala\u2019s next-generation compiler Dotty and delegates constraint checking to an SMT solver. Our system supports many of Scala\u2019s functional as well as its object-oriented constructs. To propagate user-provided qualifier ascriptions we utilize both Scala\u2019s own type system and an incomplete, but effective qualifier inference algorithm. Our evaluation shows that for a series of examples exerting various of Scala\u2019s language features, the additional compile-time overhead is manageable. By combining these features we show that one can verify essential safety properties such as static bounds-checks while retaining several of Scala\u2019s advanced features.",
      "Affiliations": [
        "EPFL, Switzerland",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, Switzerland",
      "Authors": [
        "georgstefanschmid",
        "viktorkuncak"
      ],
      "Key": "scala-2016-smt-based-checking-of-qualified-types-for-scala",
      "PersonsString": "Georg Stefan Schmid and Viktor Kuncak",
      "Title": "SMT-Based Checking of Predicate-Qualified Types for Scala",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-smt-based-checking-of-qualified-types-for-scala"
    },
    {
      "Abstract": "DynaML is an open source library written in the Scala programming language, targeted towards machine learning researchers and practitioners.\nThe aim is to build a robust set of abstract classes and interfaces, which can be extended easily to implement advanced models for small and large scale applications.\nDynaML has a highly modular package structure and leverages many features of the Scala programming language such as generic types, tail recursion, etc.\nCurrently implementations of models such as least squares support vector machines, feed forward neural networks, gaussian processes are available along with optimization solvers such as conjugate gradient, quasi-newton (BFGS), back-propagation etc. \nFurthermore, DynaML has a lightweight data pipes library which enables the creation and composition of reproducible data processing workflows.",
      "Affiliations": ["Centrum Wiskunde & Informatica"],
      "AffiliationsString": "Centrum Wiskunde & Informatica",
      "Authors": ["mandarchandorkar"],
      "Key": "scala-2016-dynaml-a-scala-machine-learning-environment",
      "PersonsString": "Mandar Chandorkar",
      "Title": "DynaML: A Scala machine learning environment",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-dynaml-a-scala-machine-learning-environment"
    },
    {
      "Abstract": "Cloud computing offers an attractive and cost-efficient computing platform and hence it has been widely adopted by the industry and the government. At the same time, cloud computing poses a serious security challenge because sensitive data must often be outsourced to third party entities that can access the data and perform computations on them.Partial homomorphic encryption is promising for secure computation, since it allows programs to be executed over encrypted data. Despite advances in cryptographic techniques have improved the expressivity of such programs, integration with mainstream languages has seen little progress.To this end, we present SecureScala, a domain-specific language in Scala that allows expressing secure programs without requiring any cryptographic knowledge. SecureScala is based on a novel combination of free monads and free applicative functors and supports parallel execution and static analyzability. We evaluate our approach through several case studies, demonstrate its expressivity, and show that it incurs in limited performance overhead.",
      "Affiliations": [
        "codecentric AG",
        "Purdue University",
        "Purdue University",
        "TU Darmstadt",
        "TU Darmstadt, Germany"
      ],
      "AffiliationsString": "codecentric AG, Purdue University, TU Darmstadt, TU Darmstadt, Germany",
      "Authors": [
        "markushauck",
        "savvassavvides",
        "patrickeugster",
        "miramezini",
        "guidosalvaneschi"
      ],
      "Key": "scala-2016-scala-embedding-of-secure-computations",
      "PersonsString": "Markus Hauck, Savvas Savvides, Patrick Eugster, Mira Mezini and Guido Salvaneschi",
      "Title": "SecureScala: Scala Embedding of Secure Computations",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-scala-embedding-of-secure-computations"
    },
    {
      "Abstract": "Tools for creating parsers are a key part of a mature language eco-system. Scala has traditionally relied on combinator libraries for defining parsers but being libraries they come with fundamental implementation limitations. An alternative is to use a Java-based parser generator such as ANTLR or Rats! but these tools are quite verbose and not ideal to use with Scala code. We describe our experiences with Scala-focused parser generation that is embodied in our sbt-rats plugin for the Scala Build Tool. At its simplest, sbt-rats provides a bridge to the Rats! parser generator for Java. On top of this bridge, we have a simple grammar definition notation that incorporates annotations for tree construction and pretty-printing. As well as generating a Rats! grammar, sbt-rats can optionally generate case class definitions for the tree structure and a pretty-printer defined using our Kiama language processing library. We explain the sbt-rats grammar notation and describe our positive experiences using it to define grammars for LLVM assembly notation and the SMTLIB input/output language for SMT solvers.",
      "Affiliations": [
        "Macquarie University, Australia",
        "Macquarie University, Australia",
        "Macquarie University, Australia"
      ],
      "AffiliationsString": "Macquarie University, Australia",
      "Authors": [
        "tonysloane",
        "franckcassez",
        "scottbuckley"
      ],
      "Key": "scala-2016-the-sbt-rats-parser-generator-plugin-for-scala",
      "PersonsString": "Tony Sloane, Franck Cassez and Scott Buckley",
      "Title": "The sbt-rats Parser Generator Plugin for Scala (Tool Paper)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-the-sbt-rats-parser-generator-plugin-for-scala"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "EPFL",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, EPFL, Switzerland",
      "Authors": [
        "sandrostucki",
        "manoharjonnalagedda"
      ],
      "Key": "scala-2016-opening",
      "PersonsString": "Sandro Stucki and Manohar Jonnalagedda",
      "Title": "Opening - Day 1",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/scala-2016-opening"
    },
    {
      "Abstract": "We present Scala-AM, a framework for implementing static analyses as systematically abstracted abstract machines. Analyses implemented on top of Scala-AM separate operational semantics from machine abstraction concerns. This modularity facilitates varying the analyzed language and the applied abstraction method in an analysis. We describe the design of our framework and demonstrate its use in a static analysis for the DOT calculus. We conclude with a tour of the features of Scala through which Scala-AM achieves its modularity.",
      "Affiliations": [
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium",
        "Vrije Universiteit Brussel, Belgium"
      ],
      "AffiliationsString": "Vrije Universiteit Brussel, Belgium",
      "Authors": [
        "quentinstievenart",
        "jensnicolay",
        "wolfgangdemeuter",
        "coenderoover"
      ],
      "Key": "scala-2016-building-a-modular-static-analysis-framework-in-scala",
      "PersonsString": "Quentin Stiévenart, Jens Nicolay, Wolfgang De Meuter and Coen De Roover",
      "Title": "Building a Modular Static Analysis Framework in Scala (Tool Paper)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/scala-2016-building-a-modular-static-analysis-framework-in-scala"
    },
    {
      "Abstract": "Principled syntactic code completion enables developers to change source code by inserting code templates, thus increasing developer efficiency and supporting language exploration. However, existing code completion systems are ad-hoc and neither complete nor sound. They are not complete and only provide few code templates for selected programming languages. They also are not sound and propose code templates that yield invalid programs when inserted.This paper presents a generic framework that automatically derives complete and sound syntactic code completion from the syntax definition of arbitrary languages. A key insight of our work is to provide an explicit syntactic representation for incomplete programs using placeholders. This enables us to address the following challenges for code completion separately: (i) completing incomplete programs by replacing placeholders with code templates, (ii) injecting placeholders into complete programs to make them incomplete, and (iii) introducing lexemes and placeholders into incorrect programs through error-recovery parsing to make them correct so we can apply one of the previous strategies. We formalize our framework and provide an implementation in the Spoofax Language Workbench.",
      "Affiliations": [
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands",
        "Delft University of Technology, Netherlands"
      ],
      "AffiliationsString": "Delft University of Technology, Netherlands",
      "Authors": [
        "luiseduardodesouzaamorim",
        "sebastianerdweg",
        "guidowachsmuth",
        "eelcovisser"
      ],
      "Key": "sle-2016-papers-principled-syntactic-code-completion-using-placeholders",
      "PersonsString": "Luís Eduardo de Souza Amorim, Sebastian Erdweg, Guido Wachsmuth and Eelco Visser",
      "Title": "Principled Syntactic Code Completion using Placeholders",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-principled-syntactic-code-completion-using-placeholders"
    },
    {
      "Abstract": "We revisit the notion of coupled software transformations (CX) which is concerned with keeping collections of software artifacts consistent in response to changes of individual artifacts. We model scenarios of CX while we abstract from technological spaces and application domains. Our objective is to mediate between universal consistency properties of CX and test-driven validation of concrete (illustrative) CX implementations. To this end, we leverage an emerging megamodeling language LAL which is based on many- and order-sorted predicate logic with support for reuse by inlining modulo substitution. We provide a simple translation semantics for LAL so that formulae can be rendered as test cases on appropriate interpretations of the megamodel elements. Our approach has been implemented and validated in logic programming; this includes the executable language definition of LAL and test-case execution on top of illustrative CX implementations.",
      "Affiliations": ["University of Koblenz-Landau, Germany"],
      "AffiliationsString": "University of Koblenz-Landau, Germany",
      "Authors": ["ralflammel"],
      "Key": "sle-2016-papers-coupled-software-transformations-revisited",
      "PersonsString": "Ralf Lämmel",
      "Title": "Coupled Software Transformations \u2014 Revisited",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-coupled-software-transformations-revisited"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "CWI & University of Groningen",
        "University of Rennes 1, France"
      ],
      "AffiliationsString": "CWI & University of Groningen, University of Rennes 1, France",
      "Authors": [
        "tijsvanderstorm",
        "benoitcombemale"
      ],
      "Key": "sle-2016-papers-closing",
      "PersonsString": "Tijs van der Storm and Benoit Combemale",
      "Title": "Closing & Outlook to SLE'17",
      "Type": "Day closing",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-closing"
    },
    {
      "Abstract": "We introduce several blame strategies for gradual effect systems. Blame strategies are the part of a language semantics that aims to identify the cause of a runtime check failure. Gradual effect systems are a framework that combines static and dynamic checking of invariants about the side effects performed by a program. \nWe present a minimal language that performs dynamic checks over an effect discipline, and we explore the design space of blame assignment strategies for effects in this language. We also present usefulness criteria against which we compare these strategies.",
      "Affiliations": ["University of British Columbia, Canada"],
      "AffiliationsString": "University of British Columbia, Canada",
      "Authors": ["felipebanadosschwerter"],
      "Key": "sle-2016-papers-side-effects-take-the-blame",
      "PersonsString": "Felipe Bañados Schwerter",
      "Title": "Side Effects Take the Blame",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-side-effects-take-the-blame"
    },
    {
      "Abstract": "Since the year 1977, role modeling has been continuously investigated as promising paradigm to model complex, dynamic systems. However, this research had almost no influence on the design of todays increasingly complex and context-sensitive software systems. The reason for that is twofold. First, most modeling languages focused either on the behavioral, relational or context-dependent nature of roles rather than combining them. Second, there is a lack of tool support for the design, validation, and generation of role-based software systems. In particular, there exists no graphical role modeling editor supporting the three natures as well as the various proposed constraints. To overcome this deficiency, we introduce the \\emph{Full-fledged Role Modeling Editor} (FRaMED), a graphical modeling editor embracing all natures of roles and modeling constraints featuring generators for a formal representation and source code of a role-based programming language. To show its applicability for the development of role-based software systems, an example from the banking domain is employed.",
      "Affiliations": [
        "TU Dresden, Germany",
        "TU Dresden, Germany",
        "TU Dresden, Germany",
        "TU Dresden, Germany"
      ],
      "AffiliationsString": "TU Dresden, Germany",
      "Authors": [
        "thomaskuhn",
        "kaybierzynski",
        "sebastianrichly",
        "uweamann"
      ],
      "Key": "sle-2016-papers-full-fledge-role-modeling-editor-framed-",
      "PersonsString": "Thomas Kühn, Kay Bierzynski, Sebastian Richly and Uwe Aßmann",
      "Title": "FRaMED: Full-Fledge Role Modeling Editor (Tool Demo)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-full-fledge-role-modeling-editor-framed-"
    },
    {
      "Abstract": "Historically, true context-sensitive parsing has seldom been applied to programming languages, due to its inherent complexity. However, many mainstream programming and markup languages (C, Haskell, Python, XML, and more) possess context-sensitive features. These features are traditionally handled with ad-hoc code (e.g., custom lexers), outside of the scope of parsing theory. \nCurrent grammar formalisms struggle to express context-sensitive features. Most solutions lack context transparency: they make grammars hard to write, maintain and compose by hardwiring context through the entire grammar. Instead, we approach context-sensitive parsing through the idea that parsers may recall previously matched input (or data derived therefrom) in order to make parsing decisions. We make use of mutable parse state to enable this form of recall. \nWe introduce principled stateful parsing as a new transactional discipline that makes state changes transparent to parsing mechanisms such as backtracking and memoization. To enforce this discipline, users specify parsers using formally specified primitive state manipulation operations. \nOur solution is available as a parsing library named Autumn. We illustrate our solution by implementing some practical context-sensitive grammar features such as significant whitespace handling and namespace classification.",
      "Affiliations": [
        "Université Catholique de Louvain, Belgium",
        "Université Catholique de Louvain, Belgium"
      ],
      "AffiliationsString": "Université Catholique de Louvain, Belgium",
      "Authors": [
        "nicolaslaurent",
        "kimmens"
      ],
      "Key": "sle-2016-papers-taming-context-sensitive-languages-with-principled-stateful-parsing",
      "PersonsString": "Nicolas Laurent and Kim Mens",
      "Title": "Taming Context-Sensitive Languages with Principled Stateful Parsing",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-taming-context-sensitive-languages-with-principled-stateful-parsing"
    },
    {
      "Abstract": "IBM\u2019s High Level Assembler (HLASM) is a low level programming language for z/Architecture mainframe computers. Many legacy codebases contain large fractions written in HLASM for various reasons, and such components usually had to be manually rewritten in COBOL or PL/I before migration to a modern framework could take place. Now, the Raincode ASM370 compiler for .NET supports HLASM syntax and emulates the data types and behaviour of the original language, allowing to port, maintain and interactively debug legacy mainframe assembler code under .NET.",
      "Affiliations": [
        "Raincode, Belgium",
        "Raincode, Belgium",
        "Raincode, Belgium"
      ],
      "AffiliationsString": "Raincode, Belgium",
      "Authors": [
        "volodymyrblagodarov",
        "yvesjaradin",
        "vadimzaytsev"
      ],
      "Key": "sle-2016-papers-tool-demo-raincode-assembler-compiler",
      "PersonsString": "Volodymyr Blagodarov, Yves Jaradin and Vadim Zaytsev",
      "Title": "Raincode Assembler Compiler (Tool Demo)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-tool-demo-raincode-assembler-compiler"
    },
    {
      "Abstract": "In model-driven engineering, developers express their solutions in domain-specific modelling languages (DSLs) that support domain-specific abstractions. Big-Step Modelling Languages (BSML) is a family of extended state-machine DSLs for creating executable models that have a complex execution semantics. In this paper, we present BSML-mbeddr, which imbeds a large subset of BSML within the mbeddr C programming environment, thereby extending mbeddr with language constructs for extended, semantically configurable state-machines. We also report on three case studies that exercise the expressiveness of BSML-mbeddr, assess the integrability of BSML-mbeddr into mbeddr, and demonstrate the need to provide support for state-machine models with different execution semantics.",
      "Affiliations": [
        "University of Waterloo, Canada",
        "University of Waterloo, Canada"
      ],
      "AffiliationsString": "University of Waterloo, Canada",
      "Authors": [
        "zhaoyiluo",
        "joatlee"
      ],
      "Key": "sle-2016-papers-bsml-mbeddr-integrating-semantically-configurable-state-machine-models-in-a-c-programming-environment",
      "PersonsString": "Zhaoyi Luo and Joanne M. Atlee",
      "Title": "BSML-mbeddr: Integrating Semantically Configurable State-Machine Models in a C Programming Environment",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-bsml-mbeddr-integrating-semantically-configurable-state-machine-models-in-a-c-programming-environment"
    },
    {
      "Abstract": "Although several software modeling languages permit the representation of key aspects of physical entities, such as units, precision or measurement uncertainty, these aspects are not typically incorporated into their type systems. Therefore, operating with such properties is normally cumbersome and contrived. This paper shows how both data uncertainty and units can be captured in software models and naturally incorporated into their type systems. In particular, we present extensions of the UML/OCL type Real and define a set of operations on values of these new types. Furthermore, we show how they can be used in software models to carry out computations that consider measurement uncertainty and permit the detection of unit mismatches when trying to operate with their values.",
      "Affiliations": [
        "TU Vienna, Austria",
        "TU Vienna, Austria",
        "University of Málaga, Spain"
      ],
      "AffiliationsString": "TU Vienna, Austria, University of Málaga, Spain",
      "Authors": [
        "tanjamayerhofer",
        "manuelwimmer",
        "antoniovallecillo"
      ],
      "Key": "sle-2016-papers-adding-tolerance-and-units-to-quantity-types-in-software-models",
      "PersonsString": "Tanja Mayerhofer, Manuel Wimmer and Antonio Vallecillo",
      "Title": "Adding Uncertainty and Units to Quantity Types in Software Models",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-adding-tolerance-and-units-to-quantity-types-in-software-models"
    },
    {
      "Abstract": "Domain-specific modelling languages (DSML) enable domain users \nto model systems in their problem domain, using concepts and \nnotations they are familiar with. The process of domain-specific \nmodelling (DSM) consists of two stages: a language engineering \nstage where a DSML is created, and a system modelling stage where \nthe DSML is used. Because techniques such as metamodelling and \nmodel transformation allow for a efficient creation of DSMLs, and \nusing DSMLs significantly increases productivity, DSM is very \nsuitable for early prototyping. Many systems that are modelled \nusing DSMLs are reactive, meaning that during their execution, they \nrespond to external input. Because of the complexity of input and \nresponse behaviour of reactive systems, it is desirable to test models \nas early as possible. However, while dedicated testing support for \nspecific DSMLs has been provided, no systematic support exists for \ntesting DSML models according to DSM principles. \nIn this paper, we introduce a technique to automatically generate \na domain-specific testing framework from an annotated DSML \ndefinition. In our approach, the DSML definition consists of a metamodel, \na concrete syntax definition and operational semantics described \nas a schedule of graph rewrite rules, thus covering a large \nclass of DSMLs. Currently, DSMLs with deterministic behaviour \nare supported, but we provide an outlook to other (nondeterministic, \nreal-time or continuous-time) DSMLs. We illustrate the approach \nwith a DSML for describing an elevator controller. We evaluate \nthe approach and conclude that compared to the state-of-the-art, \nour testing support is significantly less costly, and similar or better \n(according to DSM principles) testing support is achieved. Additionally, \nthe generative nature of the approach makes testing support for \nDSMLs less error-prone while catering the need for early testing.",
      "Affiliations": [
        "University of Antwerp, Belgium",
        "University of Antwerp, Belgium",
        "University of Antwerp, Belgium",
        "University of Antwerp, Canada"
      ],
      "AffiliationsString": "University of Antwerp, Belgium, University of Antwerp, Canada",
      "Authors": [
        "bartmeyers",
        "joachimdenil",
        "istvandavid",
        "hansvangheluwe"
      ],
      "Key": "sle-2016-papers-automated-testing-support-for-reactive-domain-specific-modelling-languages",
      "PersonsString": "Bart Meyers, Joachim Denil, István Dávid and Hans Vangheluwe",
      "Title": "Automated Testing Support for Reactive Domain-Specific Modelling Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-automated-testing-support-for-reactive-domain-specific-modelling-languages"
    },
    {
      "Abstract": "The development and evolution of an advanced modeling environment for a Domain-Specific Modeling Language (DSML) is a tedious task, which becomes recurrent with the increasing number of DSMLs involved in the development and management of complex software-intensive systems. Recent efforts in language workbenches result in advanced frameworks that automatically provide syntactic tooling such as advanced editors. However, defining the execution semantics of languages and their tooling remains mostly hand crafted. Similarly to editors that share code completion or syntax highlighting, the development of advanced debuggers, animators, and others execution analysis tools shares common facilities, which should be reused among various DSMLs. In this tool demonstration paper, we present the execution framework offered by the GEMOC studio, an Eclipse-based language and modeling workbench. The framework provides a generic interface to plug in different execution engines associated to their specific metalanguages used to define the discrete-event operational semantics of DSMLs. It also integrates generic runtime services that are shared among the approaches used to implement the execution semantics, such as graphical animation or omniscient debugging.",
      "Affiliations": [
        "TU Vienna, Austria",
        "Inria, France",
        "Inria, France",
        "TU Vienna, Austria",
        "",
        "University of Rennes 1, France"
      ],
      "AffiliationsString": "TU Vienna, Austria, Inria, France, , University of Rennes 1, France",
      "Authors": [
        "erwanbousse",
        "thomasdegueule",
        "didiervojtisek",
        "tanjamayerhofer",
        "juliendeantoni",
        "benoitcombemale"
      ],
      "Key": "sle-2016-papers-execution-framework-of-the-gemoc-studio-tool-demo-",
      "PersonsString": "Erwan Bousse, Thomas Degueule, Didier Vojtisek, Tanja Mayerhofer, Julien DeAntoni and Benoit Combemale",
      "Title": "Execution Framework of the GEMOC Studio (Tool Demo)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-execution-framework-of-the-gemoc-studio-tool-demo-"
    },
    {
      "Abstract": "When implementing a language by means of attribute grammars, it is often useful to study example programs and their attributed trees, to understand the compiler structure, or for debugging. DrAST is a tool that allows interactive inspection of attributed trees. It is interfaced to the JastAdd metacompiler, and supports all JastAdd attribution mechanisms, such as demand evaluation, reference attributes (graph edges), and nonterminal attributes. A challenge in visualizing attributed trees is that they are large, even for small programs. To allow the user to focus on the aspects of interest, DrAST supports the interactive definition of filtered versions of the tree through a domain-specific language which allows conditional filtering based on the attributes themselves. We have used DrAST on a variety of language implementations, from tiny compilers used in teaching to a complete Java compiler.",
      "Affiliations": [
        "Lund University, Sweden",
        "Lund University, Sweden",
        "Lund University, Sweden"
      ],
      "AffiliationsString": "Lund University, Sweden",
      "Authors": [
        "joellindholm",
        "johanthorsberg",
        "gorelhedin1"
      ],
      "Key": "sle-2016-papers-tool-demo-drast-an-inspection-tool-for-attributed-syntax-trees",
      "PersonsString": "Joel Lindholm, Johan Thorsberg and Görel Hedin",
      "Title": "DrAST: An Inspection Tool for Attributed Syntax Trees (Tool Demo)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-tool-demo-drast-an-inspection-tool-for-attributed-syntax-trees"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Sensational AG",
        "",
        "Raincode, Belgium",
        "University of York"
      ],
      "AffiliationsString": "Sensational AG, , Raincode, Belgium, University of York",
      "Authors": [
        "emilieballand",
        "danielvarro",
        "vadimzaytsev",
        "dimitriskolovos"
      ],
      "Key": "sle-2016-papers-awards",
      "PersonsString": "Emilie Balland, Daniel Varro, Vadim Zaytsev and Dimitris Kolovos",
      "Title": "Awards",
      "Type": "Day closing",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-awards"
    },
    {
      "Abstract": "To ease domain-specific language (DSL) development, a range of language workbenches have been created, which provide language design facilities and programming tools, like editors and validators.In spite of these developments, there is a perceived lack of tool support for execution monitoring, which is the basic block for program validation and maintenance.To partially address this issue some language workbenches offer ad-hoc solutions for DSL debugging, but lack support for other monitoring features.In the literature, a number of domain-specific monitoring tools have been proposed. However, there is no clear way for integrating these developments in existing language workbenches.This paper presents ten requirements needed for creating a modular and composable DSL monitoring infrastructure and proposes an object-oriented design pattern for DSL program monitoring.This pattern provides a practical answer to the problem of interfacing the runtime of a DSL with concrete domain-specific monitoring tools.To show the practicability of our approach, we add monitoring support to a simple lambda calculus, without changing the standard interpreter. The ease of integrating monitoring tools is shown through the development of a tracer and the integration of an off-the-shelf domain-specific profiler.",
      "Affiliations": [
        "ENSTA Bretagne, France",
        "ENSTA Bretagne, France"
      ],
      "AffiliationsString": "ENSTA Bretagne, France",
      "Authors": [
        "zoedrey",
        "ciprianteodorov"
      ],
      "Key": "sle-2016-papers-object-oriented-design-pattern-for-dsl-program-monitoring",
      "PersonsString": "Zoé Drey and Ciprian Teodorov",
      "Title": "Object-Oriented Design Pattern for DSL Program Monitoring",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-object-oriented-design-pattern-for-dsl-program-monitoring"
    },
    {
      "Abstract": "Access-control policies, often the mechanism of choice to implement the security requirements of confidentiality and integrity, can be found in a wide range of application scenarios. Although there are standard languages for access-control and a plethora of works devoted to assure the well-formedness of access-control policies, little attention has been paid to the problem of providing robust and adaptable runtime evaluation engines for the integration of access-control in new DSL's and platforms. Indeed, the integration of access-control requires the development of critical infrastructure facilities around it, so that the policies can be: 1) analyzed and validated and 2) efficiently evaluated against run-time access requests. \nIn order to solve this problem, this paper explores the use of the already mature model transformation frameworks as modern, application-independent infrastructures for access-control languages i.e., following the Policy Enforcement Point(PEP)-Policy Decision Point(PDP) architecture. More specifically, we show how model-driven engineering and the ATL model-transformation framework can be used to lift the infrastructure development burden from developers by providing a robust, flexible and re-usable runtime evaluation engine for rule-based access-control policies.",
      "Affiliations": [
        "Open University of Catalonia, France",
        "IK4-IKERLAN Research Center, Spain",
        "Open University of Catalonia, Spain"
      ],
      "AffiliationsString": "Open University of Catalonia, France, IK4-IKERLAN Research Center, Spain, Open University of Catalonia, Spain",
      "Authors": [
        "salvadormartinez",
        "jokingarcia",
        "jordicabot"
      ],
      "Key": "sle-2016-papers-runtime-support-for-rule-based-access-control-evaluation-through-model-transformation",
      "PersonsString": "Salvador Martínez, Jokin García and Jordi Cabot",
      "Title": "Runtime Support for Rule-Based Access-Control Evaluation through Model-Transformation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-runtime-support-for-rule-based-access-control-evaluation-through-model-transformation"
    },
    {
      "Abstract": "Coding conventions are lexical, syntactic or semantic restrictions enforced on top of a software language for the sake of consistency within the source base. Specifying coding conventions is currently an open problem in software language engineering, addressed in practice by resorting to natural language descriptions which complicate conformance verification. In this paper we present an endeavour to solve this problem for the case of CSS \u2014 a ubiquitous software language used for specifying appearance of hypertextual content separately from the content itself. The paper contains the results of domain analysis, a short report on an empirically obtained catalogue of 143 unique CSS coding conventions, the domain-specific ontology for the domain of detecting violations, the design of CssCoco, a language for expressing coding conventions of CSS, as well as a description of the tool we developed to detect violations of conventions specified in this DSL.",
      "Affiliations": [
        "University of Amsterdam, Netherlands",
        "Raincode, Belgium"
      ],
      "AffiliationsString": "University of Amsterdam, Netherlands, Raincode, Belgium",
      "Authors": [
        "boryanagoncharenko",
        "vadimzaytsev"
      ],
      "Key": "sle-2016-papers-language-design-and-implementation-for-the-domain-of-coding-conventions",
      "PersonsString": "Boryana Goncharenko and Vadim Zaytsev",
      "Title": "Language Design and Implementation for the Domain of Coding Conventions",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-language-design-and-implementation-for-the-domain-of-coding-conventions"
    },
    {
      "Abstract": "Transformations form an important part of developing domain specific languages, where they are used to provide semantics for typing and evaluation. Yet, few solutions exist for verifying transformations written in expressive high-level transformation languages. We take a step towards that goal, by developing a general symbolic execution technique that handles programs written in these high-level transformation languages. We use logical constraints to describe structured symbolic values, including containment, acyclicity, simple unordered collections (sets) and to handle deep type-based querying of syntax hierarchies. We evaluate this symbolic execution technique on a collection of refactoring and model transformation programs, showing that the white-box test generation tool based on symbolic execution obtains better code coverage than a black box test generator for such programs in almost all tested cases.",
      "Affiliations": [
        "IT University of Copenhagen, Denmark",
        "IT University of Copenhagen, Denmark",
        "IT University of Copenhagen, Denmark"
      ],
      "AffiliationsString": "IT University of Copenhagen, Denmark",
      "Authors": [
        "ahmadsalimalsibahi",
        "aleksandarsdimovski",
        "andrzejwasowski"
      ],
      "Key": "sle-2016-papers-symbolic-execution-of-high-level-transformations",
      "PersonsString": "Ahmad Salim Al-Sibahi, Aleksandar S. Dimovski and Andrzej Wąsowski",
      "Title": "Symbolic Execution of High-Level Transformations",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-symbolic-execution-of-high-level-transformations"
    },
    {
      "Abstract": "Almost all software development activities require collaboration and language engineering is no exception. First, there is a need for collaboration among language engineers as it is not realistic to expect one man to master all. Second, there is a natural need for collaboration among language users. Finally, there is a need for collaboration among language engineers and language users: Not only when languages are originally designed but more importantly when they are maintained along with the work already created with them. Unfortunately too often tools ignore collaboration by unnecessarily splitting the work into separate for-mats, tools and roles. We describe and demonstrate collaborative tool capabilities implemented into MetaEdit+ tool and describe experiences on their use in practice.",
      "Affiliations": ["MetaCase, Finland"],
      "AffiliationsString": "MetaCase, Finland",
      "Authors": ["juhapekkatolvanen"],
      "Key": "sle-2016-papers-metaedit-for-collaborative-language-engineering-and-language-use-tool-demonstration",
      "PersonsString": "Juha-Pekka Tolvanen",
      "Title": "MetaEdit+ for Collaborative Language Engineering and Language Use (Tool Demo)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-metaedit-for-collaborative-language-engineering-and-language-use-tool-demonstration"
    },
    {
      "Abstract": "Jamie Oliver\u2019s Fifteen is established in an old warehouse with great atmosphere. It has a view over the IJ-river and it\u2019s situated from walking distance of the Amsterdam Central Station. In the kitchen you will find 15 motivated apprentices who get the chance to change their life forever. On our menu you will find local, sustainably produced ingredients of the highest quality",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "sle-2016-papers-gpce-sle-dinner",
      "PersonsString": "",
      "Title": "GPCE & SLE Dinner",
      "Type": "Dinner",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-gpce-sle-dinner"
    },
    {
      "Abstract": "Modern IDEs support multiple programming languages via plug-ins, but developing a high-quality language plug-in is a huge development effort and individual plug-ins are not reusable in other IDEs. We call this the IDE portability problem. \nIn this paper, we present a solution to the IDE portability problem based on a language-independent and IDE-independent intermediate representation (IR) for editor-service products. This IR enables IDE-independent language services to provide editor services for arbitrary IDEs, using language-independent IDE plug-ins. We combine the IR with a service-oriented architecture to facilitate the modular addition of language services, the decomposition of language services into smaller interdependent services, and the use of arbitrary implementation languages for services. \nTo evaluate the feasibility of our design, we have implemented the IR and architecture in a framework called Monto. We demonstrate the generality of our design by constructing language services for Java, JavaScript, Python, and Haskell and show that they are reusable in the Eclipse IDE and in a web-based IDE. We also evaluate the performance of Monto and show that Monto is responsive and has admissible performance overhead.",
      "Affiliations": [
        "Delft University of Technology, Netherlands",
        "TU Darmstadt, Germany",
        "Delft University of Technology, Netherlands"
      ],
      "AffiliationsString": "Delft University of Technology, Netherlands, TU Darmstadt, Germany",
      "Authors": [
        "svenkeidel",
        "wulfpfeiffer",
        "sebastianerdweg"
      ],
      "Key": "sle-2016-papers-the-ide-portability-problem-and-its-solution-in-monto",
      "PersonsString": "Sven Keidel, Wulf Pfeiffer and Sebastian Erdweg",
      "Title": "The IDE Portability Problem and Its Solution in Monto",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-the-ide-portability-problem-and-its-solution-in-monto"
    },
    {
      "Abstract": "As the models that need to be handled in model-driven engineering grow in scale, scalable algorithms for model transformation (MT) are becoming necessary. Programming models such as MapReduce or Pregel may simplify the development of distributed model transformations. However, because of the dense inter-connectivity of models and the complexity of transformation logics, scalability in distributed model processing is challenging. \nIn this paper, we adapt existing formalization of uniform graph partitioning to the case of distributed MTs by means of binary linear programming. Moreover, we propose a data distribution algorithm for declarative model transformation based on static analysis of relational transformation rules. We first extract footprints from transformation rules. Then we propose a fast data distribution algorithm, driven by the extracted footprints, and based on recent results on balanced partitioning of streaming graphs. To validate our approach, we apply it to an existing distributed MT engine for the ATL language, built on top of MapReduce. We implement our heuristic as a custom split algorithm for ATL on MapReduce and we evaluate its impact on remote access to the underlying backend.",
      "Affiliations": [
        "",
        "AtlanMod, France",
        "Autonomous University of Madrid, Spain",
        "Autonomous University of Madrid, Spain",
        "Open University of Catalonia, Spain"
      ],
      "AffiliationsString": ", AtlanMod, France, Autonomous University of Madrid, Spain, Open University of Catalonia, Spain",
      "Authors": [
        "aminebenelallam",
        "massimotisi1",
        "jesussanchezcuadrado",
        "juandelara",
        "jordicabot"
      ],
      "Key": "sle-2016-papers-efficient-model-partitioning-for-distributed-model-transformations",
      "PersonsString": "Amine Benelallam, Massimo Tisi, Jesús Sánchez Cuadrado, Juan de Lara and Jordi Cabot",
      "Title": "Efficient Model Partitioning for Distributed Model Transformations",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-efficient-model-partitioning-for-distributed-model-transformations"
    },
    {
      "Abstract": "Model-drivenengineering promotes models and modeltrans- \nformations as the primary assets in software development. \nThe models@run-time approach provides an abstract rep- \nresentation of a system at run-time, whereby changes in \nthe model and the system are constantly reflected on each \nother. In this paper, we report on more than three years \nof experience with realising models@run-time in scalable \ncloud scenarios using a technology stack consisting of the \nEclipse Modelling Framework (EMF) and Connected Data \nObjects(CDO).We establish requirements for the three roles \ndomain-specific language (DSL) designer, developer, and \noperator, and compare them against the capabilities of EM- \nF/CDO. It turns out that this technology stack is well-suited \nfor DSL designers, but less recommendable for developers \nand even less suited for operators. For these roles, we experi- \nenced a steep learning curve and several lacking features that \nhinder the implementation of models@run-time in scalable \ncloud scenarios. Performance experiences show limitations \nfor write heavy scenarios with an increasing amount of total \nelements. While we do not discourage the use of EMF/CDO \nfor such scenarios, we recommend that its adoption for sim- \nilar use cases is carefully evaluated until this technology \nstack has realised our wish list of advanced features.",
      "Affiliations": [
        "Ulm University, Germany",
        "Ulm University, Germany",
        "SINTEF, Norway",
        "Ulm University, Germany",
        "Ulm University, Germany",
        "Ulm University, Germany"
      ],
      "AffiliationsString": "Ulm University, Germany, SINTEF, Norway",
      "Authors": [
        "danielseybold",
        "jorgdomaschka",
        "alessandrorossini",
        "christopherbhauser",
        "frankgriesinger",
        "athanasiostsitsipas"
      ],
      "Key": "sle-2016-papers-experiences-of-models-run-time-with-emf-and-cdo",
      "PersonsString": "Daniel Seybold, Jörg Domaschka, Alessandro Rossini, Christopher B. Hauser, Frank Griesinger and Athanasios Tsitsipas",
      "Title": "Experiences of Models@run-time with EMF and CDO",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-experiences-of-models-run-time-with-emf-and-cdo"
    },
    {
      "Abstract": "The definition of a projectional editor does not just specify the notation of a language, but also how users interact with the notation. Because of that it is easy to end up with different interaction styles within one and between multiple languages. The resulting inconsistencies have proven to be a major usability problem. To address this problem, we introduce grammar cells, an approach for declaratively specifying textual notations and their interactions for projectional editors. In the paper we motivate the problem, give a formal definition of grammar cells, and define their mapping to low-level editor behaviors. Our evaluation based on project experience shows that grammar cells improve editing experience by providing a consistent and intuitive, text editor-like user experience for textual notations. At the same time they do not limit language composability and the use of non-textual notations, the primary benefits of projectional editors. We have implemented grammar cells for Jetbrains MPS, but they can also be used with other projectional editors.",
      "Affiliations": [
        "itemis, Germany",
        "itemis AG / TU Delft",
        "itemis AG",
        "itemis AG",
        "Delft University of Technology, Netherlands",
        "Chalmers University of Technology, Sweden"
      ],
      "AffiliationsString": "itemis, Germany, itemis AG / TU Delft, itemis AG, Delft University of Technology, Netherlands, Chalmers University of Technology, Sweden",
      "Authors": [
        "markusvlter",
        "tamasszabo",
        "saschalisson",
        "berndkolb",
        "sebastianerdweg",
        "thorstenberger"
      ],
      "Key": "sle-2016-papers-efficient-development-of-consistent-projectional-editors-using-grammar-cells",
      "PersonsString": "Markus Völter, Tamás Szabó, Sascha Lisson, Bernd Kolb, Sebastian Erdweg and Thorsten Berger",
      "Title": "Efficient Development of Consistent Projectional Editors using Grammar Cells",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-efficient-development-of-consistent-projectional-editors-using-grammar-cells"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "CWI & University of Groningen",
        "Sensational AG",
        ""
      ],
      "AffiliationsString": "CWI & University of Groningen, Sensational AG, ",
      "Authors": [
        "tijsvanderstorm",
        "emilieballand",
        "danielvarro"
      ],
      "Key": "sle-2016-papers-opening",
      "PersonsString": "Tijs van der Storm, Emilie Balland and Daniel Varro",
      "Title": "Opening",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-opening"
    },
    {
      "Abstract": "Language designers usually need to implement parsers and printers. Despite being two intimately related programs, in practice they are often designed separately, and then need to be revised and kept consistent as the language evolves. It will be more convenient if the parser and printer can be unified and developed in one single program, with their consistency guaranteed automatically.\nFurthermore, in certain scenarios (like showing compiler optimisation results to the programmer), it is desirable to have a more powerful reflective printer that, when an abstract syntax tree corresponding to a piece of program text is modified, can reflect the modification to the program text while preserving layouts, comments, and syntactic sugar.\nTo address these needs, we propose a domain-specific language BIYacc, whose programs denote both a parser and a reflective printer for an unambiguous context-free grammar. BIYacc is based on the theory of_bidirectional transformations_, which helps to guarantee by construction that the pairs of parsers and reflective printers generated by BIYacc are consistent. We show that BIYacc is capable of facilitating many tasks such as Pombrio et al.\u2018s \u2019\u2018resugaring\u2019\u2019, language evolution, and refactoring.",
      "Affiliations": [
        "National University SOKENDAI, Japan",
        "National University SOKENDAI, Japan",
        "National Institute of Informatics, Japan",
        "University of California at Irvine, USA",
        "University of Minho, Portugal",
        "National University SOKENDAI, Japan"
      ],
      "AffiliationsString": "National University SOKENDAI, Japan, National Institute of Informatics, Japan, University of California at Irvine, USA, University of Minho, Portugal",
      "Authors": [
        "zirunzhu",
        "yongzhezhang",
        "hsiangshangko",
        "pedromartins",
        "joaosaraiva",
        "zhenjianghu"
      ],
      "Key": "sle-2016-papers-parsing-and-reflective-printing-bidirectionally",
      "PersonsString": "Zirun Zhu, Yongzhe Zhang, Hsiang-Shang Ko, Pedro Martins, João Saraiva and Zhenjiang Hu",
      "Title": "Parsing and Reflective Printing, Bidirectionally",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-parsing-and-reflective-printing-bidirectionally"
    },
    {
      "Abstract": "Redex is a programming language designed to support semantics engineers as they experiment with programming language models. To explore a model, an engineer writes down grammars, type systems, and operational semantics in a notation inspired by the programming languages literature. Redex breathes life into the model, building typing derivations, running example expressions, and using random generation to falsify claims about the model.",
      "Affiliations": ["Northwestern University"],
      "AffiliationsString": "Northwestern University",
      "Authors": ["robbyfindler"],
      "Key": "sle-2016-papers-redex-lightweight-semantics-engineering",
      "PersonsString": "Robby Findler",
      "Title": "SLE 2016 Keynote: Redex: Lightweight Semantics Engineering",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-redex-lightweight-semantics-engineering"
    },
    {
      "Abstract": "There are many declarative frameworks that allow us to implement code formatters relatively easily for any specific language, but constructing them is cumbersome. The first problem is that \u201ceverybody\u201d wants to format their code differently, leading to either many formatter variants or a ridiculous number of configuration options. Second, the size of each implementation scales with a language\u2019s grammar size, leading to hundreds of rules. \nIn this paper, we solve the formatter construction problem using a novel approach, one that automatically derives formatters for any given language without intervention from a language expert. We introduce a code formatter called CodeBuff that uses machine learning to abstract formatting rules from a representative corpus, using a carefully designed feature set. Our experiments on Java, SQL, and ANTLR grammars show that CodeBuff is efficient, has excellent accuracy, and is grammar invariant for a given language. It also generalizes to a 4th language tested during manuscript preparation.",
      "Affiliations": [
        "University of San Francisco, USA",
        "CWI, Netherlands"
      ],
      "AffiliationsString": "University of San Francisco, USA, CWI, Netherlands",
      "Authors": [
        "terenceparr",
        "jurgenvinju"
      ],
      "Key": "sle-2016-papers-towards-a-universal-code-formatter-through-machine-learning",
      "PersonsString": "Terence Parr and Jurgen Vinju",
      "Title": "Towards a Universal Code Formatter through Machine Learning",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-towards-a-universal-code-formatter-through-machine-learning"
    },
    {
      "Abstract": "When compared to the realm of textual syntax, developing graphical syntax for a domain-specific modeling language (DSML) is still challenging. Xdiagram is a research prototype that consists of a textual domain-specific language (DSL) for specifying diagrammatic representations against abstract syntax defined in the Eclipse Modeling Framework (EMF). Specifications are written in Xdiagram against such models in a declarative fashion in order to obtain a diagram editor. We explain the main primitives of our DSL using conceptual modeling as an example domain for illustration.",
      "Affiliations": [
        "University Institute of Lisbon, Portugal",
        "University Institute of Lisbon, Portugal"
      ],
      "AffiliationsString": "University Institute of Lisbon, Portugal",
      "Authors": [
        "andresantos1",
        "eduardogomes"
      ],
      "Key": "sle-2016-papers-xdiagram-tool-demonstration-a-declarative-textual-dsl-for-describing-diagram-editors",
      "PersonsString": "André L. Santos and Eduardo Gomes",
      "Title": "Xdiagram: A Declarative Textual DSL for Describing Diagram Editors (Tool Demo)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/sle-2016-papers-xdiagram-tool-demonstration-a-declarative-textual-dsl-for-describing-diagram-editors"
    },
    {
      "Abstract": "Reception for PLMW attendees, starts jat 17.45 ust after the last regular session. Takes place on 2nd floor in the M&ouml;venpick Restaurant.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "splash-2016-plmw-plmw-reception",
      "PersonsString": "",
      "Title": "PLMW Reception 17.45 2nd floor Movenpick restaurant",
      "Type": "Social Event",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-plmw-reception"
    },
    {
      "Abstract": "Contemporary live debuggers do not display the complete call stack history for concurrent threads. Hence, developers have less information at their disposal when debugging concurrent threads than when debugging a single threaded, sequential program. We solve the problem of incomplete thread history by creating a debugger that operates on a virtual call stack comprised of multiple threads. With live debuggers displaying at least the equivalent information for both single threaded, sequential programs and concurrent threads, developers can focus on the hard parts of concurrency issues.",
      "Affiliations": ["University of Bern, Switzerland"],
      "AffiliationsString": "University of Bern, Switzerland",
      "Authors": ["maxleske"],
      "Key": "splash-2016-src-improving-live-debugging-of-concurrent-threads",
      "PersonsString": "Max Leske",
      "Title": "Improving Live Debugging of Concurrent Threads",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-improving-live-debugging-of-concurrent-threads"
    },
    {
      "Abstract": "Concurrency bugs are very difficult and subtle to discover, reproduce, and fix. Many techniques have been devised by the academic as well as the industry communities to find these bugs. However, most of the effective techniques tend to focus on a subset of the various concurrency bugs types. We propose a new generic concurrency bug detection technique that leverages &quot;Big Code&quot;: millions of lines of code freely available on code repositories. Our approach tries to learn the properties of what constitutes a good and a bad synchronization pattern from hundreds of concurrent software using graph-based anomaly detection.",
      "Affiliations": ["TU Darmstadt, Germany"],
      "AffiliationsString": "TU Darmstadt, Germany",
      "Authors": ["andrewhabib"],
      "Key": "splash-2016-src-finding-concurrency-bugs-using-graph-based-anomaly-detection-in-big-code",
      "PersonsString": "Andrew Habib",
      "Title": "Finding Concurrency Bugs Using Graph-Based Anomaly Detection in Big Code",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-finding-concurrency-bugs-using-graph-based-anomaly-detection-in-big-code"
    },
    {
      "Abstract": "The interoperability of applications depends on a successful mapping between their domain models. Nowadays, common file formats serve as a mediator between the different domain models but cause friction losses during the conversion of data. These loses could be mitigated whenever the models are already working on the same concepts but are only using different representations for them. We propose the concept of deducing classes which interpret existing object structures and detect instances of themselves in this existing data. Further, we introduce a planning algorithm which combines deducing classes to allow unanticipated interactions between applications. We discuss some of the implications of this approach and illustrate upcoming research challenges.",
      "Affiliations": ["Hasso Plattner Institute"],
      "AffiliationsString": "Hasso Plattner Institute",
      "Authors": ["patrickrein"],
      "Key": "splash-2016-src-deducing-classes-integrating-the-domain-models-of-object-oriented-applications",
      "PersonsString": "Patrick Rein",
      "Title": "Deducing Classes: Integrating the Domain Models of Object-Oriented Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-deducing-classes-integrating-the-domain-models-of-object-oriented-applications"
    },
    {
      "Abstract": "Developers and compiler writers spend significant effort on performance tuning and optimizations. However, the impact of these efforts must be taken with a grain of salt. Prior work has shown that changes to a program's layout\u2014the placement of code and data in memory\u2014can change performance by more than the effect of standard optimization techniques. \nThis paper presents Scrambler, a system that dynamically changes the layout of programs to improve their performance. Scrambler runs C and C++ programs with a randomized layout, and monitors these programs for evidence of layout-related performance issues. When an issue is detected, Scrambler relocates the offending code to eliminate the layout issue. We evaluate Scrambler on eight SPEC CPU2006 benchmarks, and find that Scrambler can provide speedups as large as 4.6% by fixing layouts that hurt branch predictor performance. These early results are encouraging, and we plan to extend this work to support additional layout-related performance issues in the future.",
      "Affiliations": [
        "Grinnell College, USA",
        "Grinnell College, USA",
        "Grinnell College, USA"
      ],
      "AffiliationsString": "Grinnell College, USA",
      "Authors": [
        "davidchang",
        "thunguyen",
        "nikotakayesu"
      ],
      "Key": "splash-2016-src-scrambler-dynamic-layout-adaptation",
      "PersonsString": "David Chang, Thu Nguyen and Niko Takayesu",
      "Title": "Scrambler: Dynamic Layout Adaptation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-scrambler-dynamic-layout-adaptation"
    },
    {
      "Abstract": "In this paper we present a compiler that translates arithmetic expressions containing matrices to efficient sequences of calls to basic linear algebra kernels.",
      "Affiliations": ["RWTH Aachen"],
      "AffiliationsString": "RWTH Aachen",
      "Authors": ["henrikbarthels"],
      "Key": "splash-2016-src-a-compiler-for-linear-algebra-operations",
      "PersonsString": "Henrik Barthels",
      "Title": "A Compiler for Linear Algebra Operations",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-a-compiler-for-linear-algebra-operations"
    },
    {
      "Abstract": "Reasoning about object-oriented applications requires developers to answer contextual questions about their domain objects. Tailored development tools can support developers in this activity by providing relevant domain-specific information. Nonetheless, a high effort for extending development tools to handle domain-specific objects, together with diverging mechanisms for creating, sharing and discovering extensions, discourage developers to adapt their tools. To address this, we propose to enable contextual behavior in development tools by allowing domain objects to decide how they are handled in development tools. We show that combining this idea with mechanisms for specifying extensions using internal DSLs can significantly reduce the cost of tailoring development tools to specific domains.",
      "Affiliations": ["University of Bern, Switzerland"],
      "AffiliationsString": "University of Bern, Switzerland",
      "Authors": ["andreichis"],
      "Key": "splash-2016-src-towards-object-aware-development-tools",
      "PersonsString": "Andrei Chiş",
      "Title": "Towards Object-Aware Development Tools",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-towards-object-aware-development-tools"
    },
    {
      "Abstract": "Configurable systems typically use #ifdefs to denote variability. Generating and compiling all configurations may be time-consuming. An alternative consists of using variability-aware parsers, such as TypeChef. However, they may not scale. We propose a change-centric approach to compile configurable systems with #ifdefs by analyzing only configurations impacted by a code change. We implemented it in a tool called CHECKCONFIGMX. We perform an empirical study to evaluate 3,913 transformations applied to the 14 largest files of BusyBox, Apache HTTPD, and Expat configurable systems. CHECKCONFIGMX finds 595 compilation errors of 20 types introduced by 41 developers in 214 commits (5.46% of the analyzed transformations). In our study, it reduces by at least 50% (an average of 99%) the effort of evaluating the analyzed transformations by comparing with the exhaustive approach without considering a feature model.",
      "Affiliations": ["Federal University of Campina Grande"],
      "AffiliationsString": "Federal University of Campina Grande",
      "Authors": ["larissabraz"],
      "Key": "splash-2016-src-an-approach-to-compile-configurable-systems-with-ifdefs-based-on-impact-analysis",
      "PersonsString": "Larissa Braz",
      "Title": "An Approach to Compile Configurable Systems with #ifdefs Based on Impact Analysis",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-an-approach-to-compile-configurable-systems-with-ifdefs-based-on-impact-analysis"
    },
    {
      "Abstract": "Eye tracking studies are valuable for evaluating program- ming environments, but annotating what the programmer is looking at in a dynamic environment can be repetitive, time- consuming, and error prone. Through a participatory design exercise with two eye tracking researchers, I identified three significant challenges: search, extraction of code, and annotat- ing transient objects. By applying computer vision algorithms to video traces, I developed a mixed-initiative system called PIXELDUST, which allows the researcher to train a system to recognize different objects on a screen. My preliminary results demonstrate the versatility of the approach; for ex- ample, the system can recognize return statements, method signatures, tool tips, and dialog boxes.",
      "Affiliations": ["Wellesley College, USA"],
      "AffiliationsString": "Wellesley College, USA",
      "Authors": ["jessicacherayil"],
      "Key": "splash-2016-src-pixeldust-supporting-dynamic-area-of-interest-tagging-in-programming-studies-with-eye-tracking",
      "PersonsString": "Jessica Cherayil",
      "Title": "PixelDust: Supporting Dynamic Area of Interest Tagging in Programming Studies with Eye Tracking",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-pixeldust-supporting-dynamic-area-of-interest-tagging-in-programming-studies-with-eye-tracking"
    },
    {
      "Abstract": "Rapid increases in demand for cloud computing, large-scale internet services, and mobile devices have led to a correspondingly large increase in the amount of energy required for computation. This additional energy use comes at a high cost, both financially and environmentally. \nEnergy profilers are useful tools which allow programmers to energy audit their programs and determine what functions are responsible for the most energy use. In this paper, we introduce a new technique for energy profiling, which takes energy measurements at regularly spaced intervals and uses linear regression to correlate executing functions with changes in power demand. We have implemented this technique in Alpaca, an energy profiler for Linux. Initial results suggest that this approach shows promise in energy profiling programs in an accurate and meaningful way.",
      "Affiliations": [
        "Grinnell College, USA",
        "Grinnell College, USA",
        "Grinnell College, USA"
      ],
      "AffiliationsString": "Grinnell College, USA",
      "Authors": [
        "logangoldberg",
        "joelkatticaran",
        "abrahammhaidli"
      ],
      "Key": "splash-2016-src-energy-profiling-with-alpaca",
      "PersonsString": "Logan Goldberg, Joel Katticaran and Abraham Mhaidli",
      "Title": "Energy Profiling with Alpaca",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-energy-profiling-with-alpaca"
    },
    {
      "Abstract": "Reuse is one of the core principles in professional software engineering. Design patterns provide a reusable solution for common design problems. But their implementations are generally not reusable as they are often well tailored to a specific context. We introduce a concept, that facilitates the reuse of their implementations by defining an abstract design pattern definition that can be instantiated with specialized design decisions.This approach is a meta-level Builder constructing design patterns as first-class citizens.It simplifies the application of design patterns by providing a pattern library and still being able to adjust it to the concrete context.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["tobiasdurschmid"],
      "Key": "splash-2016-src-design-pattern-builder-a-concept-for-refinable-reusable-design-pattern-libraries",
      "PersonsString": "Tobias Dürschmid",
      "Title": "Design Pattern Builder: A Concept for Refinable Reusable Design Pattern Libraries",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-design-pattern-builder-a-concept-for-refinable-reusable-design-pattern-libraries"
    },
    {
      "Abstract": "Robots understand the world around them through sensing. To process the data produced by sensors we propose to use Procedural Parameters and Complex Event Processing (CEP). End-users model applications for robots as a CEP Graph, in which the end-users specify how input from the sensors of the robot is transformed to output for the actuators of the robot. Between input and output is a network of streams connected together by operators. By using Procedural Parameters a set of generic operators can be used within the CEP Graph. The CEP Graph can be executed on the robot or on a PC remotely controlling the robot.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["floriserich"],
      "Key": "splash-2016-src-end-user-software-engineering-of-cognitive-robot-applications-using-procedural-parameters-and-complex-event-processing",
      "PersonsString": "Floris Erich",
      "Title": "End-User Software Engineering of Cognitive Robot Applications using Procedural Parameters and Complex Event Processing",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-end-user-software-engineering-of-cognitive-robot-applications-using-procedural-parameters-and-complex-event-processing"
    },
    {
      "Abstract": "Immutability is a valuable feature for programmers in object-oriented languages: making objects immutable often simplifies reasoning about the correctness of code, particularly when concurrency is present. Java allows programmers to express and enforce immutability by declaring all fields of an object &quot;final&quot;, but this comes at the cost of decreased expressiveness and intuitiveness of initialization. In this work, we propose a minimalistic type-based mechanism that both enforces immutability and relaxes these constraints on initialization. Furthermore, we propose and formalize two different type systems based on this mechanism that form a meaningful trade-off with respect to complexity, expressiveness, and strength of static guarantees. System One is simple, more expressive, and provides object-level immutability; System Two has more complicated annotation, is less expressive, and ensures that immutable objects are fully initialized in addition to enforcing immutability.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["tyleretzel"],
      "Key": "splash-2016-src-flexible-initialization-of-immutable-objects",
      "PersonsString": "Tyler Etzel",
      "Title": "Flexible Initialization of Immutable Objects",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-flexible-initialization-of-immutable-objects"
    },
    {
      "Abstract": "JavaScript is the de facto language of the Web, but is notoriously error-prone to use. 65% of common bugs like undefined/null_variable_usage are DOM-related. Besides DOM, JS APIs are also expected to manipulate graphic hardware and asynchronous I/O, which makes the condition even worse. Although WebIDL provides a formal contract between JS developers and platform implementation, its expressivity is too limited to support deep checking of API misuses. We propose the eXtended WebIDL (xWIDL) language and a modular API misuses checking framework based on xWIDL. We discuss how to handle the data exchange between JS analyzer and SMT-based verifier. Finally, we test our implementation in a case study manner and report our findings on its efficiency and modularity.",
      "Affiliations": ["University of Science and Technology of China"],
      "AffiliationsString": "University of Science and Technology of China",
      "Authors": ["zhenzhang"],
      "Key": "splash-2016-src-xwidl-modular-and-deep-javascript-api-misuses-checking-based-on-extended-webidl",
      "PersonsString": "Zhen Zhang",
      "Title": "xWIDL: Modular and Deep JavaScript API Misuses Checking Based on eXtended WebIDL",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-xwidl-modular-and-deep-javascript-api-misuses-checking-based-on-extended-webidl"
    },
    {
      "Abstract": "The use of a standard calling convention throughout a binary can bloat code size and negatively impact power consumption, flash memory costs, and chip size in embedded or otherwise size-critical domains. This is particularly true in \u201dcompressed\u201d instruction sets, such as the 16-bit ARM Thumb instruction set, used in virtually all smart phones and in many other smaller-scale embedded devices. Here, we examine the extent of the problem in modern embedded software. We found that between 6-17% of the code in typical binaries represents overhead attributable to the calling convention. Finally, we propose a method of reducing this overhead by assigning calling conventions per-procedure during register allocation, and discuss solutions to scalability problems with this approach.",
      "Affiliations": ["University of Tokyo"],
      "AffiliationsString": "University of Tokyo",
      "Authors": ["josephcaldwell"],
      "Key": "splash-2016-src-reducing-procedure-call-bloat-in-arm-binaries",
      "PersonsString": "Joseph Caldwell",
      "Title": "Reducing Procedure Call Bloat in ARM Binaries",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-reducing-procedure-call-bloat-in-arm-binaries"
    },
    {
      "Abstract": "Abstraction and modularity underlie all successful hardware and software systems: We build complex artifacts by decomposing them into parts that can be understood separately. Modular decomposition depends crucially on the artful choice of interfaces between pieces. As these interfaces become more expressive, we think of them as specifications of components or layers. Rich specifications based on formal logic are little used in industry today, but a practical platform for working with them could signicantly reduce the costs of system implementation and evolution by identifying vulnerabilities, helping programmers understand the behavior of new components, facilitating rigorous change-impact analysis, and supporting maintainable machine-checked verication that components are correct and fit together correctly.\nRecently, research in the area has begun to focus on a particularly rich class of specifications, which might be called deep specifications. Deep specifications are rich (describing complex component behaviors in detail); two-sided (connected to both implementations and clients); formal (written in a mathematical notation with clear semantics to support tools such as type checkers, analysis and testing tools, automated or machine-assisted provers, and advanced IDEs); and live (connected directly to the source code of implementations via machine-checkable proofs or property-based random testing). These requirements impose strong functional correctness conditions on individual components and permit them to be connected together with rigorous composition theorems.\nThis talk presents the key features of deep specifications, surveys recent achievements and ongoing efforts in the research community (in particular, work at Penn, Princeton, Yale, and MIT on formalizing a rich interconnected collection of deep specifications for critical system software components), and argues that the time is ripe for an intensive effort in this area, involving both academia and industry and integrating research, education, and community building. The ultimate goal is to provide rigorously checked proofs about much larger artifacts than are feasible today, based on decomposition of proof effort across components with deep specifications.",
      "Affiliations": ["University of Pennsylvania"],
      "AffiliationsString": "University of Pennsylvania",
      "Authors": ["benjamincpierce"],
      "Key": "splash-2016-keynotes-splash-2016-keynote",
      "PersonsString": "Benjamin C. Pierce",
      "Title": "SPLASH 2016 Keynote: The Science of Deep Specification",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-splash-2016-keynote"
    },
    {
      "Abstract": "Data filtering in spreadsheets is a common problem faced by millions of end-users. The task of data filtering requires a computational model that can separate intended positive and negative string instances. We present a system, FIDEX, that can efficiently learn desired data filtering expressions from a small set of positive and negative string examples. \nThere are two key ideas of our approach. First, we design an expressive DSL to represent disjunctive filter expressions needed for several real-world data filtering tasks. Second, we develop an efficient synthesis algorithm for incrementally learning consistent filter expressions in the DSL from very few positive and negative examples. A DAG-based data structure is used to succinctly represent a large number of filter expressions, and two corresponding operators are defined for algorithmically handling positive and negative examples, namely, the intersection and subtraction operators. FIDEX is able to learn data filters for 452 out of 460 real-world data filtering tasks in real time (0.22s), using only 2.2 positive string instances and 2.7 negative string instances on average.",
      "Affiliations": [
        "UT Austin",
        "Microsoft Research",
        "Microsoft Research"
      ],
      "AffiliationsString": "UT Austin, Microsoft Research",
      "Authors": [
        "xinyuwang",
        "sumitgulwani",
        "rishabhsingh"
      ],
      "Key": "splash-2016-oopsla-fidex-filtering-spreadsheet-data-using-examples",
      "PersonsString": "Xinyu Wang, Sumit Gulwani and Rishabh Singh",
      "Title": "FIDEX: Filtering Spreadsheet Data using Examples",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-fidex-filtering-spreadsheet-data-using-examples"
    },
    {
      "Abstract": "In this session the following awards are handed out \n \n ACM SRC Awards \n John Vlissides Award (doctoral symposium)",
      "Affiliations": [
        "Tufts University",
        "University of Utah"
      ],
      "AffiliationsString": "Tufts University, University of Utah",
      "Authors": [
        "samguyer",
        "matthewflatt"
      ],
      "Key": "splash-2016-keynotes-student-awards",
      "PersonsString": "Sam Guyer and Matthew Flatt",
      "Title": "Student Awards",
      "Type": "Awards",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-student-awards"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Athens"],
      "AffiliationsString": "University of Athens",
      "Authors": ["yannissmaragdakis"],
      "Key": "splash-2016-keynotes-oopsla-2016-program-chair-s-report",
      "PersonsString": "Yannis Smaragdakis",
      "Title": "OOPSLA 2016 Program Chair's Report",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-oopsla-2016-program-chair-s-report"
    },
    {
      "Abstract": "Designing efficient concurrent objects often requires abandoning the standard specification technique of linearizability in favor of more relaxed correctness conditions. However, the variety of alternatives makes it difficult to choose which condition to employ, and how to compose them when using objects specified by different conditions. \nIn this work, we propose a uniform alternative in the form of Hoare logic, which can explicitly capture\u2013in the auxiliary state\u2013the interference of environment threads. We demonstrate the expressiveness of our method by verifying a number of concurrent objects and their clients, which have so far been specified only by non-standard conditions of concurrency-aware linearizability, quiescent, and quantitative quiescent consistency. We report on the implementation of the ideas in an existing Coq-based tool, providing the first mechanized proofs for all the examples in the paper.",
      "Affiliations": [
        "University College London",
        "IMDEA Software Institute",
        "IMDEA Software Institute",
        "IMDEA Software Institute"
      ],
      "AffiliationsString": "University College London, IMDEA Software Institute",
      "Authors": [
        "ilyasergey",
        "aleksandarnanevski",
        "anindyabanerjee",
        "germanandresdelbianco"
      ],
      "Key": "splash-2016-oopsla-hoare-style-specifications-as-correctness-conditions-for-non-linearizable-concurrent-objects",
      "PersonsString": "Ilya Sergey, Aleksandar Nanevski, Anindya Banerjee and Germán Andrés Delbianco",
      "Title": "Hoare-Style Specifications as Correctness Conditions for Non-linearizable Concurrent Objects",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-hoare-style-specifications-as-correctness-conditions-for-non-linearizable-concurrent-objects"
    },
    {
      "Abstract": "Program comprehension is an essential process in programming and many researchers report that it tends to take up to a half of a programmers\u2019 time during their work with a source code. Integrated development environments (IDEs) facilitate this process but there still are restricted possibilities for narrowing the gap between the concerns of the problem domain and the source code. In our work we leverage the projectional properties of modern IDEs to make them able to process concern-related metadata and to provide customizable code projections. These projections preserve the original code structure while provide alternative perspective on it regarding the contained concerns. We also plan to evaluate the effect our code projection will have on program comprehension tasks.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["janjuhar"],
      "Key": "splash-2016-ds-integrating-concerns-with-development-environments",
      "PersonsString": "Ján Juhár",
      "Title": "Integrating Concerns with Development Environments",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-integrating-concerns-with-development-environments"
    },
    {
      "Abstract": "The majority of modern programming languages provide concurrency and object-orientation in some form. However, object-oriented concurrency remains cumbersome in many situations. We introduce the language OrcO, Orc with concurrent Objects, which enables a flexible style of concurrent object-oriented programming. OrcO extends the Orc programming language by adding abstractions for programming-in-the-large; namely objects, classes, and inheritance. OrcO objects are designed to be orthogonal to concurrency, allowing the concurrent structure and object structure of a program to evolve independently. This paper describes OrcO's goals and design and provides examples of how OrcO can be used to deftly handle events, object management, and object composition.",
      "Affiliations": [
        "The University of Texas at Austin, Texas, USA",
        "Google, Inc.",
        "The University of Texas at Austin",
        "UT Austin"
      ],
      "AffiliationsString": "The University of Texas at Austin, Texas, USA, Google, Inc., The University of Texas at Austin, UT Austin",
      "Authors": [
        "arthurpeters",
        "davidkitchin",
        "johnthywissen",
        "williamcook"
      ],
      "Key": "splash-2016-oopsla-orco-a-concurrency-first-approach-to-objects",
      "PersonsString": "Arthur Michener Peters, David Kitchin, John A. Thywissen and William Cook",
      "Title": "OrcO: A Concurrency-First Approach to Objects",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-orco-a-concurrency-first-approach-to-objects"
    },
    {
      "Abstract": "Git is a widely used version control system that is powerful but complicated. Its complexity may not be an inevitable consequence of its power but rather evidence of flaws in its design. To explore this hypothesis, we analyzed the design of Git using a theory that identifies concepts, purposes, and misfits. Some well-known difficulties with Git are described, and explained as misfits in which underlying concepts fail to meet their intended purpose. Based on this analysis, we designed a reworking of Git (called Gitless) that attempts to remedy these flaws. \nTo correlate misfits with issues reported by users, we conducted a study of Stack Overflow questions. And to determine whether users experienced fewer complications using Gitless in place of Git, we conducted a small user study. Results suggest our approach can be profitable in identifying, analyzing, and fixing design problems.",
      "Affiliations": [
        "MIT CSAIL",
        "MIT"
      ],
      "AffiliationsString": "MIT CSAIL, MIT",
      "Authors": [
        "santiagoperezderosso",
        "danieljackson"
      ],
      "Key": "splash-2016-oopsla-an-experiment-in-software-design",
      "PersonsString": "Santiago Perez De Rosso and Daniel Jackson",
      "Title": "Purposes, Concepts, Misfits, and a Redesign of Git",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-an-experiment-in-software-design"
    },
    {
      "Abstract": "Existing approaches for detecting type errors in unsafe languages are limited. Static analysis methods are imprecise, and often require source-level changes, while most dynamic methods check only memory properties (bounds, liveness, etc.), owing to a lack of run-time type information. This paper describes libcrunch, a system for binary-compatible run-time type checking of unmodified unsafe code, currently focusing on C. Practical experience shows that our prototype implementation is easily applicable to many real codebases without source-level modification, correctly flags programmer errors with a very low rate of false positives, offers a very low run-time overhead, and covers classes of error caught by no previously existing tool.",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["stephenkell"],
      "Key": "splash-2016-oopsla-dynamically-diagnosing-type-errors-in-unsafe-code",
      "PersonsString": "Stephen Kell",
      "Title": "Dynamically Diagnosing Type Errors in Unsafe Code",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-dynamically-diagnosing-type-errors-in-unsafe-code"
    },
    {
      "Abstract": "We present short programs that demonstrate the unsoundness of Java and Scala's current type systems. In particular, these programs provide parametrically polymorphic functions that can turn any type into any type without (down)casting. Fortunately, parametric polymorphism was not integrated into the Java Virtual Machine (JVM), so these examples do not demonstrate any unsoundness of the JVM. Nonetheless, we discuss broader implications of these findings on the field of programming languages.",
      "Affiliations": [
        "EPFL",
        "Cornell University"
      ],
      "AffiliationsString": "EPFL, Cornell University",
      "Authors": [
        "nadaamin",
        "rosstate"
      ],
      "Key": "splash-2016-oopsla-java-and-scala-s-type-systems-are-unsound-the-existential-crisis-of-null-pointers",
      "PersonsString": "Nada Amin and Ross Tate",
      "Title": "Java and Scala's Type Systems are Unsound: The Existential Crisis of Null Pointers",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-java-and-scala-s-type-systems-are-unsound-the-existential-crisis-of-null-pointers"
    },
    {
      "Abstract": "Brzozowski derivatives, well known in the context of regular expressions, have recently been rediscovered to give a simplified explanation to parsers of context-free languages. We add derivatives as a novel first-class feature to a standard parser combinator language. First-class derivatives enable an inversion of the control flow, allowing to implement modular parsers for languages that previously required separate pre-processing steps or cross-cutting modifications of the parsers. We show that our framework offers new opportunities for reuse and supports a modular definition of interesting use cases of layout-sensitive parsing.",
      "Affiliations": [
        "University of Tübingen, Germany",
        "University of Tübingen, Germany",
        "University of Tübingen, Germany"
      ],
      "AffiliationsString": "University of Tübingen, Germany",
      "Authors": [
        "jonathanbrachthauser",
        "tillmannrendel",
        "klausostermann"
      ],
      "Key": "splash-2016-oopsla-parsing-with-first-class-derivatives",
      "PersonsString": "Jonathan Immanuel Brachthäuser, Tillmann Rendel and Klaus Ostermann",
      "Title": "Parsing with First-Class Derivatives",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-parsing-with-first-class-derivatives"
    },
    {
      "Abstract": "Existing programming language access control frameworks do not meet the needs of all software components. We propose an expressive framework for implementing access control monitors for components. The basis of the framework is a novel concept: the authority environment. An authority environment associates rights with an execution context. The building blocks of access control monitors in our framework are authorization contracts: software contracts that manage authority environments. We demonstrate the expressiveness of our framework by implementing a diverse set of existing access control mechanisms and writing custom access control monitors for three realistic case studies.",
      "Affiliations": [
        "Harvard University",
        "Harvard University",
        "Northwestern University",
        "University of Utah",
        "Harvard University"
      ],
      "AffiliationsString": "Harvard University, Northwestern University, University of Utah",
      "Authors": [
        "scottmoore",
        "christosdimoulas",
        "robbyfindler",
        "matthewflatt",
        "stephenchong"
      ],
      "Key": "splash-2016-oopsla-extensible-access-control-with-authorization-contracts",
      "PersonsString": "Scott Moore, Christos Dimoulas, Robby Findler, Matthew Flatt and Stephen Chong",
      "Title": "Extensible Access Control with Authorization Contracts",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-extensible-access-control-with-authorization-contracts"
    },
    {
      "Abstract": "Aliasing is a known source of challenges in the context of imperative object-oriented languages, which have led to important advances in type systems for aliasing control. However, their large-scale adoption has turned out to be a surprisingly difficult challenge. While new language designs show promise, they do not address the need of aliasing control in existing languages. \nThis paper presents a new approach to isolation and uniqueness in an existing, widely-used language, Scala. The approach is unique in the way it addresses some of the most important obstacles to the adoption of type system extensions for aliasing control. First, adaptation of existing code requires only a minimal set of annotations. Only a single bit of information is required per class. Surprisingly, the paper shows that this information can be provided by the object-capability discipline, widely-used in program security. We formalize our approach as a type system and prove key soundness theorems. The type system is implemented for the full Scala language, providing, for the first time, a sound integration with Scala's local type inference. Finally, we empirically evaluate the conformity of existing Scala open-source code on a corpus of over 75,000 LOC.",
      "Affiliations": [
        "KTH Royal Institute of Technology",
        "Google Stockholm, Sweden"
      ],
      "AffiliationsString": "KTH Royal Institute of Technology, Google Stockholm, Sweden",
      "Authors": [
        "philipphaller",
        "alexloiko"
      ],
      "Key": "splash-2016-oopsla-lacasa-lightweight-affinity-and-object-capabilities-in-scala",
      "PersonsString": "Philipp Haller and Alex Loiko",
      "Title": "LaCasa: Lightweight Affinity and Object Capabilities in Scala",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-lacasa-lightweight-affinity-and-object-capabilities-in-scala"
    },
    {
      "Abstract": "This is a meeting of the Onward! Steering Committee; invitation only.",
      "Affiliations": ["HPI"],
      "AffiliationsString": "HPI",
      "Authors": ["roberthirschfeld"],
      "Key": "splash-2016-steering-committee-meetings-onward-steering-committee-meeting",
      "PersonsString": "Robert Hirschfeld",
      "Title": "Onward Steering Committee Meeting",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/splash-2016-steering-committee-meetings-onward-steering-committee-meeting"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "splash-2016-social-wednesday-poster-reception",
      "PersonsString": "",
      "Title": "Wednesday Poster Reception",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-social-wednesday-poster-reception"
    },
    {
      "Abstract": "",
      "Affiliations": ["Microsoft Research, Cambridge"],
      "AffiliationsString": "Microsoft Research, Cambridge",
      "Authors": ["simonpaytonjones"],
      "Key": "splash-2016-splash-e-the-dream-of-a-lifetime-shaping-how-our-children-learn-computing",
      "PersonsString": "Simon Peyton Jones",
      "Title": "The dream of a lifetime: Shaping how our children learn computing",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-e-the-dream-of-a-lifetime-shaping-how-our-children-learn-computing"
    },
    {
      "Abstract": "Recent years have seen a rise in distributed systems for interactive, large-scale data processing. Cutting-edge systems focus on reducing latency and increasing expressiveness in order to provide an interactive and rich experience to more and varied users coming from emerging fields such as data science. Meanwhile, the languages and runtimes underlying such systems face numerous challenges in the context of the severely demanding needs of these new distributed systems; popular languages and runtimes like Scala and the JVM (a) limit the customizability of fundamental operations like serialization, and (b) expose low-level distribution-related errors to application developers and end users when trying to distribute core language features, such as functions. This talk presents two systems that (a) give more control over these primitives to distributed systems builders thereby enabling important optimizations, and (b) increase the reliability of distributing functions and objects. Theoretical, experimental, and empirical results are used in the validation of our work.",
      "Affiliations": ["Ecole Polytechnique Federale de Lausanne"],
      "AffiliationsString": "Ecole Polytechnique Federale de Lausanne",
      "Authors": ["heathermiller"],
      "Key": "splash-2016-splash-i-language-support-for-distributed-systems",
      "PersonsString": "Heather Miller",
      "Title": "Language Support for Distributed Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-language-support-for-distributed-systems"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Macquarie University, Australia",
        "Macquarie University, Australia",
        "Macquarie University"
      ],
      "AffiliationsString": "Macquarie University, Australia, Macquarie University",
      "Authors": [
        "scottbuckley",
        "tonysloane",
        "matthewroberts"
      ],
      "Key": "splash-2016-posters-specifying-css-layout-with-reference-attribute-grammars",
      "PersonsString": "Scott Buckley, Tony Sloane and Matthew Roberts",
      "Title": "Specifying CSS Layout with Reference Attribute Grammars",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-specifying-css-layout-with-reference-attribute-grammars"
    },
    {
      "Abstract": "We introduce a framework allowing domain experts to manipulate computational terms in the interest of deriving better, more efficient implementations.It employs deductive reasoning to generate provably correct efficient implementations from a very high-level specification of an algorithm, and inductive constraint-based synthesis to improve automation. Semantic information is encoded into program terms through the use of refinement types. \nIn this paper, we develop the technique in the context of a system called Bellmania that uses solver-aided tactics to derive parallel divide-and-conquer implementations of dynamic programming algorithms that have better locality and are significantly more efficient than traditional loop-based implementations. Bellmania includes a high-level language for specifying dynamic programming algorithms and a calculus that facilitates gradual transformation of these specifications into efficient implementations. These transformations formalize the divide-and conquer technique; a visualization interface helps users to interactively guide the process, while an SMT-based back-end verifies each step and takes care of low-level reasoning required for parallelism. \nWe have used the system to generate provably correct implementations of several algorithms, including some important algorithms from computational biology, and show that the performance is comparable to that of the best manually optimized code.",
      "Affiliations": [
        "MIT CSAIL",
        "MIT",
        "Stony Brook University",
        "MIT",
        "MIT",
        "MIT",
        "MIT CSAIL"
      ],
      "AffiliationsString": "MIT CSAIL, MIT, Stony Brook University",
      "Authors": [
        "shacharitzhaky",
        "rohitsingh",
        "rezaulchowdhury",
        "kuatyessenov",
        "yongquanlu",
        "charleseleiserson",
        "armandosolarlezama"
      ],
      "Key": "splash-2016-oopsla-deriving-divide-and-conquer-dynamic-programming-algorithms-using-solver-aided-transformations",
      "PersonsString": "Shachar Itzhaky, Rohit Singh, Rezaul Chowdhury, Kuat Yessenov, Yongquan Lu, Charles E. Leiserson and Armando Solar-Lezama",
      "Title": "Deriving Divide-and-Conquer Dynamic Programming Algorithms using Solver-Aided Transformations",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-deriving-divide-and-conquer-dynamic-programming-algorithms-using-solver-aided-transformations"
    },
    {
      "Abstract": "File systems are often used to store persistent application data, butmanipulating file systems using standard APIs can be difficult forprogrammers. Forest is a domain-specific language that bridges the gapbetween the on-disk and in-memory representations of file systemdata. Given a high-level specification of the structure, contents, andproperties of a collection of directories, files, and symbolic links,the Forest compiler generates tools for loading, storing, andvalidating that data. Unfortunately, the initial implementation ofForest offered few mechanisms for controlling cost\u2014e.g., therun-time system could load gigabytes of data, even if only a few byteswere needed. This paper introduces Incremental Forest (iForest), anextension to Forest with an explicit $\\textit{delay}$ construct thatprogrammers can use to precisely control costs. We describe the designof iForest using a series of running examples, present a formalsemantics in a core calculus, and define a simple cost model thataccurately characterizes the resources needed to use a givenspecification. We propose $\\textit{skins}$, which allow programmers tomodify the delay structure of a specification in a compositional way,and develop a static type system for ensuring compatibility betweenspecifications and skins. We prove the soundness and completeness ofthe type system and a variety of algebraic properties of skins. Wedescribe an OCaml implementation and evaluate its performance onapplications developed in collaboration with watershed hydrologists.",
      "Affiliations": [
        "Cornell University",
        "University of Pennsylvania",
        "",
        "Tufts University",
        "Cornell University"
      ],
      "AffiliationsString": "Cornell University, University of Pennsylvania, , Tufts University",
      "Authors": [
        "jonathandilorenzo",
        "richardzhang",
        "erinmenzies",
        "kathleenfisher",
        "natefoster"
      ],
      "Key": "splash-2016-oopsla-incremental-forest-a-dsl-for-efficiently-managing-filestores",
      "PersonsString": "Jonathan DiLorenzo, Richard Zhang, Erin Menzies, Kathleen Fisher and Nate Foster",
      "Title": "Incremental Forest: A DSL for Efficiently Managing Filestores",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-incremental-forest-a-dsl-for-efficiently-managing-filestores"
    },
    {
      "Abstract": "Distributed applications are traditionally developed using separate modules for each component in the distributed system, which can even be written in different programming languages. Those modules react on events such as user input, which are produced by other modules, and may in turn produce new events to be handled by different modules. Thus, most distributed applications are reactive in nature. Distributed event-based data flow makes it is hard to reason about the system and therefore makes the development of distributed systems challenging. In this paper, we present language abstractions for distributed reactive programming easing the development of such applications and supporting varied distributed architectures.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["pascalweisenburger"],
      "Key": "splash-2016-ds-multitier-reactive-abstractions",
      "PersonsString": "Pascal Weisenburger",
      "Title": "Multitier Reactive Abstractions",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-multitier-reactive-abstractions"
    },
    {
      "Abstract": "Validating optimizing compilers is challenging because it ishard to generate valid test programs (i.e., those that do notexpose any undefined behavior). Equivalence Modulo Inputs(EMI) is an effective, promising methodology to tackle thisproblem. Given a test program with some inputs, EMI mutatesthe program to derive variants that are semanticallyequivalent w.r.t. these inputs. The state-of-the-art instantiationsof EMI are Orion and Athena, both of which relyon deleting code from or inserting code into code regionsthat are not executed under the inputs. Although both havedemonstrated their ability in finding many bugs in GCC andLLVM, they are still limited due to their mutation strategiesthat operate only on dead code regions. \nThis paper presents a novel EMI technique that allowsmutation in the entire program (i.e., both live and dead regions).By removing the restriction of mutating only the deadregions, our technique significantly increases the EMI variantspace. It also helps to more thoroughly stress test compilersas compilers must optimize mutated live code, whereasmutated dead code might be eliminated. Finally, our techniquealso makes compiler bugs more noticeable as miscompilationson mutated dead code may not be observable. \nWe have realized the proposed technique in Hermes.The evaluation demonstrates Hermes\u2019s effectiveness. In 13months, Hermes found 168 confirmed, valid bugs in GCCand LLVM, of which 132 have already been fixed.",
      "Affiliations": [
        "University of California, Davis",
        "Microsoft",
        "University of California, Davis"
      ],
      "AffiliationsString": "University of California, Davis, Microsoft",
      "Authors": [
        "chengniansun",
        "vule",
        "zhendongsu"
      ],
      "Key": "splash-2016-oopsla-finding-compiler-bugs-via-live-code-mutation",
      "PersonsString": "Chengnian Sun, Vu Le and Zhendong Su",
      "Title": "Finding Compiler Bugs via Live Code Mutation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-finding-compiler-bugs-via-live-code-mutation"
    },
    {
      "Abstract": "Stateless model checking is a powerful technique for testing concurrent programs, but suffers from exponential state space explosion when the test input parameters are too large. Several reduction techniques can mitigate this explosion, but even after pruning equivalent interleavings, the state space size is often intractable. Most prior tools are limited to preempting only on synchronization APIs, which reduces the space further, but can miss unsynchronized thread communication bugs. Data race detection, another concurrency testing approach, focuses on suspicious memory access pairs during a single test execution. It avoids concerns of state space size, but may report races that do not lead to observable failures, which jeopardizes a user\u2019s willingness to use the analysis. \nWe present Quicksand, a new stateless model checking framework which manages the exploration of many state spaces using different preemption points. It uses state space estimation to prioritize jobs most likely to complete in a fixed CPU budget, and it incorporates data-race analysis to add new preemption points on the fly. Preempting threads during a data race\u2019s instructions can automatically classify the race as buggy or benign, and uncovers new bugs not reachable by prior model checkers. It also enables full verification of all possible schedules when every data race is verified as benign within the CPU budget. In our evaluation, Quicksand found 1.25x as many bugs and verified 4.3x as many tests compared to prior model checking approaches.",
      "Affiliations": [
        "Carnegie Mellon University",
        "Carnegie Mellon University"
      ],
      "AffiliationsString": "Carnegie Mellon University",
      "Authors": [
        "benblum",
        "garthgibson"
      ],
      "Key": "splash-2016-oopsla-stateless-model-checking-with-data-race-preemption-points",
      "PersonsString": "Ben Blum and Garth Gibson",
      "Title": "Stateless Model Checking with Data-Race Preemption Points",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-stateless-model-checking-with-data-race-preemption-points"
    },
    {
      "Abstract": "The utility of objects derives to a large degree form the fact that objects are natural modules, that is, building blocks from which larger modules are defined. Static type systems are essential for fine grained control what information is exposed in a module, and, conversely, what one is free to change inside a module. A good module or object system should follow three principles: \n \n Everything can be nested in a module. \n Everything can be parameterized with a module. \n Module types are interfaces, which can be abstracted. \n\nIn this talk I present DOT, a particularly simple calculus that can express systems following these principles. DOT has been developed as the foundation of the next version of Scala. I will also report on dotty, a new Scala compiler that implements the constructs of DOT in its core data structures and that synthesizes object oriented and functional programming concepts in several interesting new patterns.",
      "Affiliations": ["EPFL, Switzerland"],
      "AffiliationsString": "EPFL, Switzerland",
      "Authors": ["martinodersky"],
      "Key": "splash-2016-keynotes-splash-2016-keynote-martin-odersky",
      "PersonsString": "Martin Odersky",
      "Title": "SPLASH 2016 Keynote: From DOT to Dotty -- Foundations and Types for Objects As Modules",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-splash-2016-keynote-martin-odersky"
    },
    {
      "Abstract": "Detecting concurrency-induced bugs in multithreaded libraries can be challenging due to the intricacies associated with their manifestation. This includes invocation of multiple methods, synthesis of inputs to the methods to reach the failing location, and crafting of thread interleavings that cause the erroneous behavior. Neither fuzzing-based testing techniques nor over-approximate static analyses are well positioned to detect such subtle defects while retaining high accuracy alongside satisfactory coverage. \nIn this paper, we propose a directed, iterative and scalable testing engine that combines the strengths of static and dynamic analysis to help synthesize concurrent executions to expose complex concurrency-induced bugs. Our engine accepts as input the library, its client (either sequential or concurrent) and a specification of correctness. Then, it iteratively refines the client to generate an execution that can break the input specification. Each step of the iterative process includes statically identifying sub-goals towards the goal of failing the specification, generating a plan toward meeting these goals, and merging of the paths traversed dynamically with the plan computed statically via constraint solving to generate a new client. The engine reports full reproduction scenarios, guaranteed to be true, for the bugs it finds. \nWe have created a prototype of our approach named MINION. We validated MINION by applying it to well-tested concurrent classes from popular Java libraries, including the latest versions of openjdk and google-guava. We were able to detect 31 real crashes across 10 classes in a total of 23 minutes, including previously unknown bugs. Comparison with three other tools reveals that combined, they report only 9 of the 31 crashes (and no other crashes beyond MINION). This is because several of these bugs manifest under deeply nested path conditions (observedmaximum of 11), deep nesting of method invocations (observed maximum of 6) and multiple refinement iterations to generate the crash-inducing client.",
      "Affiliations": [
        "Indian Institute of Science, Bangalore",
        "IBM Research, USA",
        "Indian Institute of Science, Bangalore"
      ],
      "AffiliationsString": "Indian Institute of Science, Bangalore, IBM Research, USA",
      "Authors": [
        "malavikasamak",
        "omertripp",
        "muralikrishnaramanathan"
      ],
      "Key": "splash-2016-oopsla-directed-synthesis-of-failing-concurrent-executions",
      "PersonsString": "Malavika Samak, Omer Tripp and Murali Krishna Ramanathan",
      "Title": "Directed Synthesis of Failing Concurrent Executions",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-directed-synthesis-of-failing-concurrent-executions"
    },
    {
      "Abstract": "The performance of contemporary object oriented languages depends onoptimizations such as devirtualization, inlining, and specialization, and these in turndepend on precise call graph analysis. Existing call graph analysesdo not take advantage of the information provided by the rich typesystems of contemporary languages, in particular generic type arguments.Many existing approaches analyze Java bytecode, in which generic typeshave been erased.This paper shows that this discarded information is actually very usefulas the context in a context-sensitive analysis, where itsignificantly improves precision and keepsthe running time small. Specifically, we propose and evaluate call graphconstruction algorithms in which the contexts of a method are (i) thetype arguments passed to its type parameters, and (ii) the static typesof the arguments passed to its term parameters.The use of static types from the caller as context is effective because it allows more precise dispatch of call sites inside the callee. \nOur evaluation indicates that the average number of contexts required per method is small.We implement the analysis in the Dotty compiler for Scala,and evaluate it on programs that use the type-parametric Scalacollections library and on the Dotty compiler itself.The context-sensitive analysis runs 1.4x faster than a context-insensitiveone and discovers 20\\% more monomorphic call sites at the same time. When appliedto method specialization, the imprecision in a context-insensitivecall graph would require the average method to be cloned 22 times,whereas the context-sensitivecall graph indicates a much more practical 1.00 to 1.50 clones per method. \nWe applied the proposed analysis to automatically specialize generic methods.The resulting automatic transformation achieves the same performance as state-of-the-art techniques requiring manual annotations, while reducing the size of the generated bytecode by up to 5$\\times$.",
      "Affiliations": [
        "EPFL",
        "EPFL, Switzerland",
        "University of Waterloo",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, EPFL, Switzerland, University of Waterloo",
      "Authors": [
        "dmytropetrashko",
        "vladureche",
        "ondrejlhotak",
        "martinodersky"
      ],
      "Key": "splash-2016-oopsla-call-graphs-for-languages-with-parametric-polymorphism",
      "PersonsString": "Dmytro Petrashko, Vlad Ureche, Ondřej Lhoták and Martin Odersky",
      "Title": "Call Graphs for Languages with Parametric Polymorphism",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-call-graphs-for-languages-with-parametric-polymorphism"
    },
    {
      "Abstract": "Byte addressable non-volatile memory (NVRAM) is likely to supplement, and perhaps eventually replace, DRAM. Applications can then persist data structures directly in memory instead of serializing them and storing them onto a durable block device. However, failures during execution can leave data structures in NVRAM unreachable or corrupt. In this paper, we present Makalu, a system that addresses non-volatile memory management. Makalu offers an integrated allocator and recovery-time garbage collector that maintains internal consistency, avoids NVRAM memory leaks, and is efficient, all in the face of failures. \nWe show that a careful allocator design can support a less restrictive and a much more familiar programming model than existing persistent memory allocators. Our allocator significantly reduces the per allocation persistence overhead by lazily persisting non-essential metadata and by employing a post-failure recovery-time garbage collector. Experimental results show that the resulting online speed and scalability of our allocator are comparable to well-known transient allocators, and significantly better than state-of-the-art persistent allocators.",
      "Affiliations": [
        "Rice University, USA",
        "",
        "Google"
      ],
      "AffiliationsString": "Rice University, USA, , Google",
      "Authors": [
        "kumudbhandari",
        "dhruvachakrabarti1",
        "hansjboehm"
      ],
      "Key": "splash-2016-oopsla-makalu-fast-recoverable-allocation-of-non-volatile-memory",
      "PersonsString": "Kumud Bhandari, Dhruva Chakrabarti and Hans-J. Boehm",
      "Title": "Makalu: Fast Recoverable Allocation of Non-volatile Memory",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-makalu-fast-recoverable-allocation-of-non-volatile-memory"
    },
    {
      "Abstract": "Writing high-performance GPU implementations of graph algorithmscan be challenging. In this paper, we argue that three optimizationscalled throughput optimizations are key to high-performancefor this application class.These optimizations describe a large implementation space making it unrealistic for programmers to implement them by hand. \nTo address this problem, we have implemented these optimizations in a compiler thatproduces CUDA code from an intermediate-level program representationcalled IrGL.Compared to state-of-the-art handwritten CUDA implementations of eight graph applications,code generated by the IrGL compiler is up to 5.95x times faster (median 1.4x) for five applications and nevermore than 30% slower for the others. Throughput optimizations contribute an improvementup to 4.16x (median 1.4x) to the performance of unoptimized IrGL code.",
      "Affiliations": [
        "University of Texas at Austin, USA",
        "University of Texas at Austin, USA"
      ],
      "AffiliationsString": "University of Texas at Austin, USA",
      "Authors": [
        "sreepathipai",
        "keshavpingali"
      ],
      "Key": "splash-2016-oopsla-a-compiler-for-throughput-optimization-of-graph-algorithms-on-gpus",
      "PersonsString": "Sreepathi Pai and Keshav Pingali",
      "Title": "A Compiler for Throughput Optimization of Graph Algorithms on GPUs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-a-compiler-for-throughput-optimization-of-graph-algorithms-on-gpus"
    },
    {
      "Abstract": "Web pages define their appearance using Cascading Style Sheets, a modular language for layout of tree-structured documents. In principle, using CSS is easy: the developer specifies declarative constraints on the layout of an HTML document (such as the positioning of nodes in the HTML tree), and the browser solves the constraints to produce a box-based rendering of that document. In practice, however, the subtleties of CSS semantics make it difficult to develop stylesheets that produce the intended layout across different user preferences and browser settings. \nThis paper presents the first mechanized formalization of a substantial fragment of the CSS semantics. This formalization is equipped with an efficient reduction to the theory of quantifier-free linear real arithmetic, enabling effective automated reasoning about CSS stylesheets and their behavior. We implement this reduction in Cassius, a solver-aided framework for building semantics-aware tools for CSS. To demonstrate the utility of Cassius, we prototype new tools for automated verification, debugging, and synthesis of CSS code. We show that these tools work on fragments of real-world websites, and that Cassius is a practical first step toward solver-aided programming for the web.",
      "Affiliations": [
        "University of Washington",
        "University of Washington"
      ],
      "AffiliationsString": "University of Washington",
      "Authors": [
        "pavelpanchekha",
        "eminatorlak"
      ],
      "Key": "splash-2016-oopsla-automated-reasoning-for-web-page-layout",
      "PersonsString": "Pavel Panchekha and Emina Torlak",
      "Title": "Automated Reasoning for Web Page Layout",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-automated-reasoning-for-web-page-layout"
    },
    {
      "Abstract": "Surveys and questionnaires are widely used for both exploratory and confirmatory data analysis. However, the design of survey artifacts remains more art than science. In particular, we know that the survey design itself can bias participants\u2019 responses in ways that may be difficult to detect post hoc. Consequently, there are few systematic ways to address flaws in the design of the survey instrument.\nThis talk will present the SurveyMan language and runtime system. SurveyMan is a randomization-first tabular language for designing, debugging, and deploying surveys on the web. We will walk through the construction of example surveys to illustrate how SurveyMan\u2019s language features address potential biases. We will then show how the language features allow us to apply constraints to the survey, and how a particular survey structure implies or preclude analyses.",
      "Affiliations": ["University of Massachusetts, Amherst"],
      "AffiliationsString": "University of Massachusetts, Amherst",
      "Authors": ["emmatosch"],
      "Key": "splash-2016-splash-i-surveyman",
      "PersonsString": "Emma Tosch",
      "Title": "Designing and Debugging Surveys with SurveyMan",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-surveyman"
    },
    {
      "Abstract": "Announcement of SPLASH 2017",
      "Affiliations": ["University of British Columbia"],
      "AffiliationsString": "University of British Columbia",
      "Authors": ["gailmurphy"],
      "Key": "splash-2016-keynotes-splash-2017",
      "PersonsString": "Gail Murphy",
      "Title": "SPLASH 2017",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-splash-2017"
    },
    {
      "Abstract": "Hardware-based enclave protection mechanisms, such as Intel\u2019sSGX, ARM\u2019s TrustZone, and Apple\u2019s Secure Enclave,can protect code and data from powerful low-level attackers.In this work, we use enclaves to enforce strong application-specificinformation security policies. \nWe present $IMP_E$, a novel calculus that captures theessence of SGX-like enclave mechanisms, and show that asecurity-type system for $IMP_E$ can enforce expressive confidentialitypolicies (including erasure policies and delimitedrelease policies) against powerful low-level attackers,including attackers that can arbitrarily corrupt non-enclavecode, and, under some circumstances, corrupt enclave code.We present a translation from an expressive security-typedcalculus (that is not aware of enclaves) to $IMP_E$. Thetranslation automatically places code and data into enclavesto enforce the security policies of the source program.",
      "Affiliations": [
        "",
        "Harvard University"
      ],
      "AffiliationsString": ", Harvard University",
      "Authors": [
        "anithagollamudi",
        "stephenchong"
      ],
      "Key": "splash-2016-oopsla-automatic-enforcement-of-expressive-security-policies-using-enclaves",
      "PersonsString": "Anitha Gollamudi and Stephen Chong",
      "Title": "Automatic Enforcement of Expressive Security Policies using Enclaves",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-automatic-enforcement-of-expressive-security-policies-using-enclaves"
    },
    {
      "Abstract": "JavaScript is the most popular programming language for client-side Web applications, and Node.js has popularized the language for server-side computing, too.In this domain, the minimal support for parallel programming remains however a major limitation.In this paper we introduce a novel parallel programming abstraction called {\\it Generic Messages} (GEMs).GEMs allow one to combine message passing and shared-memory parallelism, extending the classes of parallel applications that can be built with Node.js.GEMs have customizable semantics and enable several forms of thread safety, isolation, and concurrency control.GEMs are designed as convenient JavaScript abstractions that expose high-level and safe parallelism models to the developer.Experiments show that GEMs outperform equivalent Node.js applications thanks to their usage of shared memory.",
      "Affiliations": [
        "Oracle Labs",
        "Università della Svizzera italiana (USI)",
        "Johannes Kepler University Linz",
        "University of Lugano"
      ],
      "AffiliationsString": "Oracle Labs, Università della Svizzera italiana (USI), Johannes Kepler University Linz, University of Lugano",
      "Authors": [
        "danielebonetta",
        "lucasalucci",
        "stefanmarr",
        "walterbinder"
      ],
      "Key": "splash-2016-oopsla-gems-shared-memory-parallel-programming-for-node-js",
      "PersonsString": "Daniele Bonetta, Luca Salucci, Stefan Marr and Walter Binder",
      "Title": "GEMs: Shared-Memory Parallel Programming for Node.js",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-gems-shared-memory-parallel-programming-for-node-js"
    },
    {
      "Abstract": "A key problem in parallel programming is how data is {\\em partitioned}:divided into subsets that can be operated on in parallel and, indistributed memory machines, spread across multiple address spaces. \nWe present a {\\em dependent partitioning} framework that allows anapplication to concisely describe relationships between partitions.Applications first establish {\\em independent partitions}, which may containarbitrary subsets of application data, permitting the expression ofarbitrary application-specific data distributions.{\\em Dependent partitions} are then derived from these using the{\\em dependent partitioning operations} provided by the framework.By directly capturing inter-partition relationships, our frameworkcan soundly and precisely reason about programs to perform importantprogram analyses crucial to ensuring correctnessand achieving good performance.As an example of the reasoning made possible,we present a static analysis thatdischarges most consistency checks on partitioned data during compilation. \nWe describe an implementation of our framework within Regent, a languagedesigned for the Legion programming model. The use of dependent partitioningconstructs results in a 86-96\\% decrease in the lines of code required to describethe partitioning,eliminates many of the expensive dynamic checks required for soundnessby the current Regent partitioning implementation, and speeds up thecomputation of partitions by 2.6-12.7X even on a single thread.Additionally, we show that a distributed implementation incorporated into the theLegion runtime system allows partitioning of data sets that are too large tofit on a single node and yields a further 29X speedup of partitioningoperations on 64 nodes.",
      "Affiliations": [
        "Stanford University",
        "NVIDIA Research",
        "Microsoft Research India",
        "",
        "Stanford University"
      ],
      "AffiliationsString": "Stanford University, NVIDIA Research, Microsoft Research India, ",
      "Authors": [
        "seantreichler",
        "michaelbauer",
        "rahulsharma",
        "elliottslaughter",
        "alexaiken"
      ],
      "Key": "splash-2016-oopsla-dependent-partitioning",
      "PersonsString": "Sean Treichler, Michael Bauer, Rahul Sharma, Elliott Slaughter and Alex Aiken",
      "Title": "Dependent Partitioning",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-dependent-partitioning"
    },
    {
      "Abstract": "This paper introduces SignalJ, a lightweight extension of Java with reactive values. A reactive value in SignalJ is either primitive (source) or depends on other reactive values (dependent). Each reactive value is typed with a \\emph{signal type}, which ensures that the dependent reactive values are functional and any changes of the source values are propagated to all the dependent reactive values. SignalJ also provides \\emph{handlers} of reactive values that are called whenever the monitored reactive value is updated. With these features, SignalJ declaratively specifies dataflows within an application in a functional manner, which enables effective implementation of reactive software. The syntax of SignalJ is almost identical to that of Java 8 except that it introduces a new modifier, \\texttt{signal}, to represent signal types.",
      "Affiliations": ["Ritsumeikan University"],
      "AffiliationsString": "Ritsumeikan University",
      "Authors": ["tetsuokamina"],
      "Key": "splash-2016-posters-introducing-lightweight-reactive-values-to-java",
      "PersonsString": "Tetsuo Kamina",
      "Title": "Introducing Lightweight Reactive Values to Java",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-introducing-lightweight-reactive-values-to-java"
    },
    {
      "Abstract": "The ability to replicate and reproduce scientific results has become an increasingly important topic for many academic disciplines. In computer science and, more specifically, programming languages (PL) and software engineering (SE) research, contributions of scientific work rely on developed algorithms, tools and prototypes, quantitative evaluations, and other computational analyses. Published code and data come with many undocumented assumptions, dependencies, and configurations that are internal knowledge and make reproducibility hard to achieve. This tutorial presents how Docker containers can overcome these issues and aid the reproducibility of research artifacts in PL and SE and discusses their applications in the field. It discusses challenges of reproducibility and provides a walk-through of how to make a use case research artifact available in a Docker container. The tutorial concludes with challenges of reproducibility in general and limitations of container technology.",
      "Affiliations": ["University of Zurich"],
      "AffiliationsString": "University of Zurich",
      "Authors": ["jurgencito"],
      "Key": "splash-2016-splash-i-using-docker-containers-to-improve-reproducibility-in-pl-se-research",
      "PersonsString": "Jürgen Cito",
      "Title": "Using Docker Containers to Improve Reproducibility in PL/SE Research",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-using-docker-containers-to-improve-reproducibility-in-pl-se-research"
    },
    {
      "Abstract": "In 2014 the National Curriculum in England was re-launched. Remarkably, it now requires that every child learns computer science, including programming, from primary school onwards. In effect, computer science has become an entirely new foundational subject discipline at school, alongside maths and natural science.\nThis seismic change gives us a huge opportunity and an equally-huge challenge. The opportunity is to shape how computer science becomes a vibrant reality in every classroom, in England certainly but then the world. But who will train the teachers? Who will find out whether discovery-based learning works better than more scaffolded approaches, or vice versa? What the right balance between plugged and unplugged activities is? How to convey the essence of computational thinking without it becoming buried in the myriad details of modern computer systems? How to assess the things we want students to learn, rather than assessing the things that are easy to measure? How can we exploit the symbiosis between maths and computing?\nIn my talk I\u2019ll sketch the UK context, and the events that led to our astonishing 100% policy success. I\u2019ll say a bit more about the challenges we face, and in particular I\u2019ll elaborate on our desperate need for help from researchers in programming languages and computing education. The SPLASH community is perfectly placed to lead the charge, and now is the time to do so.",
      "Affiliations": ["Microsoft Research, Cambridge"],
      "AffiliationsString": "Microsoft Research, Cambridge",
      "Authors": ["simonpaytonjones"],
      "Key": "splash-2016-splash-i-the-dream-of-a-lifetime-shaping-how-our-children-learn-computing",
      "PersonsString": "Simon Peyton Jones",
      "Title": "SPLASH-I/E Keynote: The dream of a lifetime: Shaping how our  children learn computing",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-the-dream-of-a-lifetime-shaping-how-our-children-learn-computing"
    },
    {
      "Abstract": "Please note that PLMW is a full-day event, to create a relaxed environment for the students to interact with each other and the speakers, we ask people with an interest in PLMW to not attend specific sessions but rather take part in the workshop and join for the whole day.",
      "Affiliations": ["Inria/LIP6"],
      "AffiliationsString": "Inria/LIP6",
      "Authors": ["julialawall"],
      "Key": "splash-2016-plmw-programing-languages-research-in-an-open-source-setting-the-coccinelle-experience",
      "PersonsString": "Julia Lawall",
      "Title": "Programing Languages Research in an Open Source Setting: the Coccinelle Experience",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-programing-languages-research-in-an-open-source-setting-the-coccinelle-experience"
    },
    {
      "Abstract": "Stencils are a new approach to Graphical/Web User Interface (GWUI) construction based on combining multiple domain-specific languages with powerful implementation strategies. The strategies convey all the knowledge about how to build any application, that it has menus, saving and loading, graphic rendering, editing, styles, etc. The domain-specific languages express just what is unique about a particular application, which is the mapping between stored models and their presentation format. Because the programmers unique intent, essentially the specification of their application, is explicit, the underlying strategy can make many smart decisions about how to make the application run. This talk will include demos on the progress of the Ensō project.",
      "Affiliations": ["UT Austin"],
      "AffiliationsString": "UT Austin",
      "Authors": ["williamcook"],
      "Key": "splash-2016-splash-i-orc",
      "PersonsString": "William Cook",
      "Title": "Stencils: Graphical User Interfaces in Ensō",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-orc"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "splash-2016-ds-lightning-talks",
      "PersonsString": "",
      "Title": "Lightning Talks",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-lightning-talks"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Google",
        "University of California, Irvine"
      ],
      "AffiliationsString": "Google, University of California, Irvine",
      "Authors": [
        "emersonmurphyhill",
        "cristalopes"
      ],
      "Key": "splash-2016-keynotes-onward-program-chair-s-report",
      "PersonsString": "Emerson Murphy-Hill and Crista Lopes",
      "Title": "Onward Program Chair's Report",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-onward-program-chair-s-report"
    },
    {
      "Abstract": "Please note that PLMW is a full-day event, to create a relaxed environment for the students to interact with each other and the speakers, we ask people with an interest in PLMW to not attend specific sessions but rather take part in the workshop and join for the whole day.",
      "Affiliations": ["University of Southern Denmark"],
      "AffiliationsString": "University of Southern Denmark",
      "Authors": ["ulrikschultz"],
      "Key": "splash-2016-plmw-welcome-and-overview",
      "PersonsString": "Ulrik Schultz",
      "Title": "Welcome and overview",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-welcome-and-overview"
    },
    {
      "Abstract": "Despite the growing popularity of GPGPU programming, there is not yeta portable and formally-specified barrier that one can use tosynchronise across workgroups. Moreover, the occupancy-bound executionmodel of GPUs breaks assumptions inherent in traditional softwareexecution barriers, exposing them to deadlock. We present anoccupancy discovery protocol that dynamically discovers a safeestimate of the occupancy for a given GPU and kernel, allowing for astarvation-free (and hence, deadlock-free) inter-workgroup barrier byrestricting the number of workgroups according to this estimate. Weimplement this idea by adapting an existing, previously non-portable,GPU inter-workgroup barrier to use OpenCL 2.0 atomic operations, andprove that the barrier meets its natural specification in terms ofsynchronisation. \nWe assess the portability of our approach over eight GPUs spanningfour vendors, comparing the performance of our method againstalternative methods. Our key findings include: (1)~the recall of ourdiscovery protocol is nearly 100\\%; (2)~runtime comparisons varysubstantially across GPUs and applications; and (3)~our methodprovides portable and safe inter-workgroup synchronisation across theapplications we study.",
      "Affiliations": [
        "Imperial College London",
        "Imperial College London",
        "University of Kent",
        "University of Utah",
        "University of Utah"
      ],
      "AffiliationsString": "Imperial College London, University of Kent, University of Utah",
      "Authors": [
        "tylersorensen",
        "alastairdonaldson",
        "markbatty",
        "ganeshgopalakrishnan",
        "zvonimirrakamaric"
      ],
      "Key": "splash-2016-oopsla-portable-inter-workgroup-barrier-synchronisation-for-gpus",
      "PersonsString": "Tyler Sorensen, Alastair Donaldson, Mark Batty, Ganesh Gopalakrishnan and Zvonimir Rakamaric",
      "Title": "Portable Inter-workgroup Barrier Synchronisation for GPUs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-portable-inter-workgroup-barrier-synchronisation-for-gpus"
    },
    {
      "Abstract": "Software development is moving to the web. At Cloud9 we\u2019re building a web-based IDE with sophisticated, responsive language tooling: code completers, refactoring tools, and so on. But we can\u2019t simply \u201cport\u201d such tools to the web, since its client/server model comes with latency, bandwidth limitations, and a great asymmetry of information and computing power. This talk shows language-parametric techniques that overcome these hurdles when building a responsive code completer. We show how to specify syntactic and semantic properties of a language for this purpose, and how these specifications can be used for caching, precaching, predicting, and reusing completions.",
      "Affiliations": ["Cloud9"],
      "AffiliationsString": "Cloud9",
      "Authors": ["lennartkats"],
      "Key": "splash-2016-splash-i-responsive-language-tooling-for-cloud-based-ides",
      "PersonsString": "Lennart Kats",
      "Title": "Responsive Language Tooling For Cloud-based IDEs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-responsive-language-tooling-for-cloud-based-ides"
    },
    {
      "Abstract": "Idris is a general purpose functional programming language with full dependent types, building on state-of-the-art techniques in programming language research. In a dependently typed language, types are a first class language construct. Types can be parameterised by values, so that required properties of a program can be captured in the type system and verified by a type checker. This includes functional properties (does the program give the correct answer?) and extra-functional properties (does the program run within specified resource constraints?)\nIn this talk, I\u2019ll introduce Idris, and show how to use types to help direct program construction. I\u2019ll use a series of examples to show how to use it to verify realistic and important properties of software, from simple properties such as bounds verification of list functions, to more complex properties of communicating and distributed systems.",
      "Affiliations": ["University of St Andrews"],
      "AffiliationsString": "University of St Andrews",
      "Authors": ["edwinbrady"],
      "Key": "splash-2016-splash-i-type-driven-development-in-idris",
      "PersonsString": "Edwin Brady",
      "Title": " Type-driven Development in Idris",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-type-driven-development-in-idris"
    },
    {
      "Abstract": "The C/C++11 concurrency model balances two goals: it is relaxed enough to be efficiently implementable and (leaving aside the ``thin-air'' problem) it is strong enough to give useful guarantees to programmers. It is mathematically precise and has been used in verification research and compiler testing. However, the model is expressed in an axiomatic style, as predicates on complete candidate executions. This suffices for computing the set of allowed executions of a small litmus test, but it does not directly support the incremental construction of executions of larger programs. It is also at odds with conventional operational semantics, as used implicitly in the rest of the C/C++ standards. \nOur main contribution is the development of an operational model for C/C++11 concurrency. This covers all the features of the previous formalised axiomatic model, and we have a mechanised proof that the two are equivalent, in Isabelle/HOL. We also integrate this semantics with an operational semantics for sequential C (described elsewhere); the combined semantics can incrementally execute programs in a small fragment of C. \nDoing this uncovered several new aspects of the C/C++11 model: we show that one cannot build an equivalent operational model that simply follows program order, sequential consistent order, or the synchronises-with order. The first negative result is forced by hardware-observable behaviour, but the latter two are not, and so might be ameliorated by changing C/C++11. More generally, we hope that this work, with its focus on incremental construction of executions, will inform the future design of new concurrency models.",
      "Affiliations": [
        "University of Cambridge",
        "University of Cambridge",
        "University of Cambridge"
      ],
      "AffiliationsString": "University of Cambridge",
      "Authors": [
        "kyndylannienhuis",
        "kayvanmemarian",
        "petersewell"
      ],
      "Key": "splash-2016-oopsla-an-operational-semantics-for-c-c-11-concurrency",
      "PersonsString": "Kyndylan Nienhuis, Kayvan Memarian and Peter Sewell",
      "Title": "An Operational Semantics for C/C++11 Concurrency",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-an-operational-semantics-for-c-c-11-concurrency"
    },
    {
      "Abstract": "This paper presents Apex, a system that can automaticallygenerate explanations for programming assignment bugs,regarding where the bugs are and how the root causes led to theruntime failures. It works by comparing the passing executionof a correct implementation (provided by the instructor) andthe failing execution of the buggy implementation (submittedby the student). The technique overcomes a number oftechnical challenges caused by syntactic and semantic differencesof the two implementations. It collects the symbolic traces ofthe executions and matches assignment statements in the twoexecution traces by reasoning about symbolic equivalence.It then matches predicates by aligning the controldependences of the matched assignment statements, avoiding directmatching of path conditions which are usually quite different.Our evaluation shows that Apex is every effective for 205buggy real world student submissions of 4 programmingassignments, and a set of 15 programming assignment type ofbuggy programs collected from stackoverflow.com,precisely pinpointing the root causes and capturing the causalityfor 94.5% of them. The evaluation on a standard benchmarkset with over 700 student bugs shows similar results. A userstudy in the classroom shows that Apex has substantiallyimproved student productivity.",
      "Affiliations": [
        "Purdue University",
        "Purdue University",
        "Purdue University",
        "Purdue University",
        "Purdue University",
        "Purdue University",
        "Purdue University"
      ],
      "AffiliationsString": "Purdue University",
      "Authors": [
        "dohyeongkim",
        "yonghwikwon",
        "pengliu",
        "ilukkim",
        "davidmitchelperry",
        "xiangyuzhang",
        "gustavorodriguezrivera"
      ],
      "Key": "splash-2016-oopsla-apex-automatic-programming-assignment-error-explanation",
      "PersonsString": "Dohyeong Kim, Yonghwi Kwon, Peng Liu, I Luk Kim, David Mitchel Perry, Xiangyu Zhang and Gustavo Rodriguez-Rivera",
      "Title": "Apex: Automatic Programming Assignment Error Explanation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-apex-automatic-programming-assignment-error-explanation"
    },
    {
      "Abstract": "We produce software systems at an ever increasing rate. On the one hand, this is great. On the other hand, our ability to get rid of older systems does not keep up with that pace. Let\u2019s take an example: a not-so-long-ago study showed that there are some 10\u2019000 mainframe systems still in use containing some 200 billion lines of code. These systems are probably older than most developers. This shows that software is not that soft, and that once in use, systems produce long lasting consequences. We cannot continue to disregard how we will deal with software systems at a later time.\nEngineers spend as much as half of the effort on understanding software systems and the percentage grows with the size and age of the system. In essence, software engineering is more about dealing with existing systems than it is about building them. Two decades ago, Richard Gabriel coined the idea of software habitability. Indeed, given that engineers spend a significant part of their active life inside software systems, it is desirable for that system to be suitable for humans to live there. We go further and introduce the concept of software environmentalism as a systematic discipline to pursue and achieve habitability.\nWe must build our systems with recycling in mind. We have to be able to understand these systems in the future and be able to reuse and evolve them as needed.\nEngineers have the right to build upon assessable systems and have the responsibility of producing assessable systems. For example, even if code has often a textual shape, it is not text. Hence, reading is not the most appropriate approach to deal with code. The same applies to logs, configurations and anything else related to a software system. It\u2019s all data, and data is best dealt with through tools. Not any tools would do either. We need custom tools that can deal with specific details. No system should get away without dedicated tools that help us take it apart and recycle it effectively.\nWho should build those tools? Engineers. This implies that they have to be empowered to do it. We need to go back to the drawing board to (1) construct moldable development environments that help us drill into the context of systems effectively, (2) reinvent our underlying languages and technologies so that we can build assessable systems all the way down, and (3) reeducate our perception of what software engineering is.\nBecause of the spread and impact of the software industry, we need to look at software development as a problem of environmental proportions. As builders of the future world, we have to take this responsibility seriously.",
      "Affiliations": ["feenk.com"],
      "AffiliationsString": "feenk.com",
      "Authors": ["tudorgirba"],
      "Key": "splash-2016-splash-i-software-environmentalism",
      "PersonsString": "Tudor Gîrba",
      "Title": "Software Environmentalism",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-software-environmentalism"
    },
    {
      "Abstract": "First-class functions dramatically increase expressiveness,at the expense of static guarantees.In ALGOL or PASCAL, functions could be passed as argumentsbut never escape their defining scope.Therefore, function arguments could serve as temporary accesstokens or capabilities, enabling callees to perform someaction, but only for the duration of the call.In modern languages, such programming patterns areno longer available. \nThe central thrust of this paper is to re-introducesecond-class functions and other values alongsidefirst-class entities in modern languages.We formalize second-class values with stack-boundedlifetimes as an extension to simply-typed $\\lambda$ calculus,and for richer type systems such as F$_{&lt;:}$ and systemswith path-dependent types.We generalize the binary first- vs second-classdistinction to arbitrary privilege lattices, with theunderlying type lattice as a special case. In this setting,abstract types naturally enable privilege parametricity.We prove type soundness and lifetime properties in Coq. \nWe implement our system as an extension of Scala,and present several case studies.First, we modify the Scala Collections library and addprivilege annotations to all higher-order functions.Privilege parametricity is key to retain the high degreeof code-reuse between sequential and parallel as well aslazy and eager collections.Second, we use scoped capabilities to introduce a modelof checked exceptions in the Scala library, withonly few changes to the code.Third, we employ second-class capabilities for memorysafety in a region-based off-heap memory library.",
      "Affiliations": [
        "",
        "",
        "Purdue University",
        "Purdue University",
        "Purdue University, USA"
      ],
      "AffiliationsString": ", Purdue University, Purdue University, USA",
      "Authors": [
        "leoosvald",
        "gregoryessertel",
        "xilunwu",
        "lilliamigonzalezalayon",
        "tiarkrompf"
      ],
      "Key": "splash-2016-oopsla-gentrification-gone-too-far-affordable-2nd-class-values-for-fun-and-co-effect",
      "PersonsString": "Leo Osvald, Gregory Essertel, Xilun Wu, Lilliam I Gonzalez Alayon and Tiark Rompf",
      "Title": "Gentrification Gone too Far? Affordable 2nd-Class Values for Fun and (Co-)Effect",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-gentrification-gone-too-far-affordable-2nd-class-values-for-fun-and-co-effect"
    },
    {
      "Abstract": "The networking activity is split into two parts: \n \n The first part takes place in the end of the second session, just before lunch \n The second part takes place in the last half hour of the lunch break, just before the third session",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "splash-2016-plmw-networking-activity-1",
      "PersonsString": "",
      "Title": "Networking activity (before and after lunch)",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-networking-activity-1"
    },
    {
      "Abstract": "There are several advantages of multitenancy: the serving of multiple tenants, each with its own privileges, from the same instance of a software system. Although the naming convention in Actor systems \u2013 actor names cannot be guessed \u2013 naturally supports multitenancy, there is no explicit way of managing the resource competition between tenants. There are models for coordinating resource use in Actor systems; however, they are difficult to implement for efficient implementations of Actors. This paper presents our efforts in implementing resource coordination support for Actor systems implemented using the Akka library.",
      "Affiliations": [
        "University of Saskatchewan ",
        ""
      ],
      "AffiliationsString": "University of Saskatchewan , ",
      "Authors": [
        "ahmedabdelmoamen",
        "nadeemjamali"
      ],
      "Key": "splash-2016-posters-supporting-resource-bounded-multitenancy-in-akka",
      "PersonsString": "Ahmed Abdel Moamen and Nadeem Jamali",
      "Title": "Supporting Resource Bounded Multitenancy in Akka",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-supporting-resource-bounded-multitenancy-in-akka"
    },
    {
      "Abstract": "A meeting of the SPLASH steering committee; invitation only.",
      "Affiliations": ["Australian National University, Data61, and Purdue University"],
      "AffiliationsString": "Australian National University, Data61, and Purdue University",
      "Authors": ["tonyhosking"],
      "Key": "splash-2016-steering-committee-meetings-splash-steering-committee-meeting",
      "PersonsString": "Tony Hosking",
      "Title": "SPLASH Steering Committee Meeting",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/splash-2016-steering-committee-meetings-splash-steering-committee-meeting"
    },
    {
      "Abstract": "Programmers routinely trade space for time to increase performance, often in theform of caching or memoization. In managed languages like Java or JavaScript,however, this space-time tradeoff is complex. Using more space translates intohigher garbage collection costs, especially at the limit of availablememory. Existing runtime systems provide limited support forspace-sensitive algorithms, forcing programmers into difficult and often brittlechoices about provisioning. \nThis paper presents \\emph{prioritized garbage collection}, a cooperativeprogramming language and runtime solution to this problem. Prioritized GCprovides an interface similar to soft references, called \\emph{priorityreferences}, which identify objects that the collector can reclaim eagerly ifnecessary. The key difference is an API for defining the policy that governswhen priority references are cleared and in what order. Application codespecifies a priority value for each reference and a target memory bound. Thecollector reclaims references, lowest priority first, until the total memoryfootprint of the cache fits within the bound. We use this API to implement aspace-aware least-recently-used (LRU) cache, called a \\emph{Sache}, that is adrop-in replacement for existing caches, such as Google's Guava library. Thegarbage collector automatically grows and shrinks the Sache in response toavailable memory and workload with minimal provisioning information from theprogrammer. Using a Sache, it is almost impossible for an application toexperience a memory leak, memory pressure, or an out-of-memory crash caused bysoftware caching.",
      "Affiliations": [
        "Tufts University",
        "Tufts University",
        "University of Massachusetts, Amherst"
      ],
      "AffiliationsString": "Tufts University, University of Massachusetts, Amherst",
      "Authors": [
        "diogenesnunez",
        "samguyer",
        "emeryberger"
      ],
      "Key": "splash-2016-oopsla-prioritized-garbage-collection-explicit-gc-support-for-software-caches",
      "PersonsString": "Diogenes Nunez, Sam Guyer and Emery Berger",
      "Title": "Prioritized Garbage Collection: Explicit GC Support for Software Caches",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-prioritized-garbage-collection-explicit-gc-support-for-software-caches"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["ericjul"],
      "Key": "splash-2016-ds-how-to-get-your-ph-d-done",
      "PersonsString": "Eric Jul",
      "Title": "How to get your Ph.D. DONE",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-how-to-get-your-ph-d-done"
    },
    {
      "Abstract": "Energy harvesting computers enable general-purpose computing using energy collected from their environment. Energy-autonomy of such devices has great potential, but their intermittent power supply poses a challenge. Intermittent program execution compromises progress and leaves state inconsistent. This work describes Chain: a new model for programming intermittent devices. \nA Chain program is a set of programmer-defined tasks that compute and exchange data through channels. Chain guarantees forward progress at task granularity. A task is restartable and never sees inconsistent state, because its input and output channels are separated. Our system supports language features for expressing advanced data exchange patterns and for encapsulating reusable functionality. \nChain fundamentally differs from state-of-the-art checkpointing approaches and does not incur the associated overhead. We implement Chain as C language extensions and a runtime library. We used Chain to implement four applications: machine learning, encryption, compression, and sensing. In experiments, Chain ensured consistency where prior approaches failed and improved throughput by 2-7x over the leading state-of-the-art system.",
      "Affiliations": [
        "Carnegie Mellon University",
        "Carnegie Mellon University"
      ],
      "AffiliationsString": "Carnegie Mellon University",
      "Authors": [
        "alexeicolin",
        "brandonlucia"
      ],
      "Key": "splash-2016-oopsla-chain-tasks-and-channels-for-reliable-intermittent-programs",
      "PersonsString": "Alexei Colin and Brandon Lucia",
      "Title": "Chain: Tasks and Channels for Reliable Intermittent Programs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-chain-tasks-and-channels-for-reliable-intermittent-programs"
    },
    {
      "Abstract": "The use of a standard calling convention throughout a binary can bloat code size and negatively impact power consumption, flash memory costs, and chip size in embedded or otherwise size-critical domains. This is particularly true in \u201ccompressed\u201d instruction sets, such as the 16-bit ARM Thumb instruction set, used in virtually all smart phones and in many other smaller-scale embedded devices. Here, we examine the extent of the problem in modern embedded software. We found that between 6-17% of the code in typical binaries represents overhead necessary for implementing the calling convention. Finally, we propose a method of reducing this overhead by assigning calling conventions per-procedure during register allocation, and discuss solutions to scalability problems with this approach.",
      "Affiliations": ["University of Tokyo"],
      "AffiliationsString": "University of Tokyo",
      "Authors": ["josephcaldwell"],
      "Key": "splash-2016-posters-reducing-procedure-call-bloat-in-arm-binaries",
      "PersonsString": "Joseph Caldwell",
      "Title": "Reducing Procedure Call Bloat in ARM Binaries",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-reducing-procedure-call-bloat-in-arm-binaries"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "splash-2016-ds-welcome",
      "PersonsString": "",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-welcome"
    },
    {
      "Abstract": "Virtual Reality (VR) is projected to have it\u2019s first billion dollar year in 2016 (Deloitte report) and to become a 35 billion dollar market by 2025 (Goldman Sachs report). Initially much of that market is dominated by hardware and gaming, but serious data analytics applications in healthcare, engineering, earth observation, military applications and education form 12 billion dollars of the projected market in 2025.\nSimultaneously, one of the fastest growing segments of the IT industry is data science. There is a profound shortage of people who are domain experts, able to program analyses, and understand how to leverage cloud data centres to explore vast amounts of data. One solution to the deluge of data is to train more data scientists. Another solution is to make better tools so as to reduce the technical level of expertise required for domain experts to derive interesting insights from data. Emerging technology such as VR, 3D input devices and Natural Language Processing (NLP) could now provide the platform for a new set of rich interactive tools to allow groups of individuals to collaboratively explore complex data sets in a way that is accessible and approachable to the broader community.\nThis presentation provides a survey of opportunities and challenges associated of leveraging VR and NLP using case studies from cloud computing dashboards, ocean monitoring systems, and bioinformatics. What interaction mechanisms are most effective at promoting engagement? What are the most seamless ways of elucidating the inter-relationship of disparate data sets? What are the best models for group interactions in a virtual environment? Specifically, the potential impact on user experience relative to common interaction scenarios with current tools will be identified in this presentation.",
      "Affiliations": [
        "Qvirt",
        "University of Victoria"
      ],
      "AffiliationsString": "Qvirt, University of Victoria",
      "Authors": [
        "derekjacoby",
        "yvonnecoady"
      ],
      "Key": "splash-2016-splash-i-exploratory-analysis-in-virtual-reality-the-new-frontier",
      "PersonsString": "Derek Jacoby and Yvonne Coady",
      "Title": "Exploratory Analysis in Virtual Reality: The New Frontier",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-exploratory-analysis-in-virtual-reality-the-new-frontier"
    },
    {
      "Abstract": "Depending on the purpose of a language, its design will be completely different: the syntax may be textual, graphical, tabular, or a mix of those. It may be highly expressive, allowing users to define their own abstractions, or restricted, simplifying the language for non-programmer end users. The degree of formality may be different, depending on the domain for which the language is built and the assurances one must be able to make about the correctness of programs. Depending on performance requirements, a simple AST interpreter may be good enough for executing programs, or one may need an optimizing generator.\nI this talk, I revisit a number of languages we have built over the last five years. For each of them, I discuss the core design decisions as well as the drivers in the domain that led to those decisions. The talk includes languages for embedded software, insurance product definition, security analysis, health algorithms, engine control and system engineering. All of the languages discussed have been designed with and for industrial customers and have been implemented on the basis of the open source Jetbrains MPS language workbench.",
      "Affiliations": ["itemis, Germany"],
      "AffiliationsString": "itemis, Germany",
      "Authors": ["markusvlter"],
      "Key": "splash-2016-splash-i-experience-with-language-design-in-mps",
      "PersonsString": "Markus Völter",
      "Title": "How Domain Requirements Shape Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-experience-with-language-design-in-mps"
    },
    {
      "Abstract": "In this session the Onward! Most Notable Paper Award will be handed out.",
      "Affiliations": [
        "Oracle Labs",
        "HPI"
      ],
      "AffiliationsString": "Oracle Labs, HPI",
      "Authors": [
        "guylsteelejr",
        "roberthirschfeld"
      ],
      "Key": "splash-2016-keynotes-onward-most-notable-paper-award",
      "PersonsString": "Guy L. Steele Jr. and Robert Hirschfeld",
      "Title": "Onward! Most Notable Paper Award",
      "Type": "Awards",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-onward-most-notable-paper-award"
    },
    {
      "Abstract": "In this session the following awards will be handed out: \n \n OOPSLA\u201916 paper awards (SIGPLAN distinghuished papers) \n Distinguished Artifact Awards",
      "Affiliations": [
        "University of Athens",
        "Ohio State University"
      ],
      "AffiliationsString": "University of Athens, Ohio State University",
      "Authors": [
        "yannissmaragdakis",
        "michaelbond"
      ],
      "Key": "splash-2016-keynotes-sigplan-oopsla-awards",
      "PersonsString": "Yannis Smaragdakis and Michael Bond",
      "Title": "OOPSLA Awards",
      "Type": "Awards",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-sigplan-oopsla-awards"
    },
    {
      "Abstract": "We present a language-independent verification framework that can be instantiated with an operational semantics to automatically generate a program verifier. The framework treats both the operational semantics and the program correctness specifications as reachability rules between matching logic patterns, and uses the sound and relatively complete reachability logic proof system to prove the specifications using the semantics. We instantiate the framework with the semantics of one academic language, KernelC, as well as with three recent semantics of real-world languages, C, Java, and JavaScript, developed independently of our verification infrastructure. We evaluate our approach empirically and show that the generated program verifiers can check automatically the full functional correctness of challenging heap-manipulating programs implementing operations on list and tree data structures, like AVL trees. This is the first approach that can turn the operational semantics of real-world languages into correct-by-construction automatic verifiers.",
      "Affiliations": [
        "University of Illinois at Urbana-Champaign",
        "University of Illinois at Urbana-Champaign",
        "University of Illinois at Urbana-Champaign",
        "Runtime Verification, Inc.",
        "University of Illinois at Urbana-Champaign"
      ],
      "AffiliationsString": "University of Illinois at Urbana-Champaign, Runtime Verification, Inc.",
      "Authors": [
        "andreistefanescu",
        "daejunpark",
        "shijiaoyuwen",
        "yilongli",
        "grigorerosu"
      ],
      "Key": "splash-2016-oopsla-semantics-based-program-verifiers-for-all-languages",
      "PersonsString": "Andrei Stefanescu, Daejun Park, Shijiao Yuwen, Yilong Li and Grigore Rosu",
      "Title": "Semantics-Based Program Verifiers for All Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-semantics-based-program-verifiers-for-all-languages"
    },
    {
      "Abstract": "&lt;p&gt;Bounded model checking based debugging solutions search for mutations of program expressions that produce the expected output for a currently failing test. However, the current localization tools are not &lt;i&gt;regression aware&lt;/i&gt;: they do not use information from the passing tests in their localization formula. On the other hand, the current repair tools attempt to guarantee &lt;i&gt;regression freedom&lt;/i&gt;: when provided with a set of passing tests, they guarantee that none of these tests can break due to the suggested repair patch, thereby constructing a large repair formula.&lt;/p&gt; \n&lt;p&gt;In this paper, we propose &lt;i&gt;regression awareness&lt;/i&gt; as a means to improve the quality of localization and to scale repair. To enable regression awareness, we summarize the proof of correctness of each passing test by computing Craig Interpolants over a symbolic encoding of the passing execution, and use these summaries as additional soft constraints while synthesizing altered executions corresponding to failing tests. Intuitively, these additional constraints act as roadblocks, thereby discouraging executions that may damage the proof of a passing test. We use a partial MAXSAT solver to relax the proofs in a systematic way, and use a ranking function that penalizes mutations that damage the existing proofs.&lt;/p&gt; \n&lt;p&gt;We have implemented our algorithms into a tool, TINTIN, that enables &lt;i&gt;regression aware&lt;/i&gt; localization and repair. For localizations, our strategy is effective in extracting a superior ranking of suspicious locations: on a set of 52 different versions across 12 different programs spanning three benchmark suites, TINTIN achieves a saving of developer effort by almost 45% (in terms of the locations that must be examined by a developer to reach the ground-truth repair) in the worst case and 27% in the average case over existing techniques. For automated repairs, on our set of benchmarks, TINTIN achieves a 2.3X speedup over existing techniques without sacrificing much on the ranking of the repair patches: the ground-truth repair appears as the topmost suggestion in more than 70% of our benchmarks.&lt;/p&gt;",
      "Affiliations": [
        "IIT Kanpur, India",
        "IIT Kanpur, India",
        "IIT Kanpur, India"
      ],
      "AffiliationsString": "IIT Kanpur, India",
      "Authors": [
        "rohanbavishi",
        "awanishpandey",
        "subhajitroy"
      ],
      "Key": "splash-2016-oopsla-to-be-precise-regression-aware-debugging",
      "PersonsString": "Rohan Bavishi, Awanish Pandey and Subhajit Roy",
      "Title": "To Be Precise: Regression Aware Debugging",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-to-be-precise-regression-aware-debugging"
    },
    {
      "Abstract": "In computer science, we usually take a technical view of programming languages, defining them as precise, formal ways of specifying computer behavior. This view shapes much of the research and development that we do on programming languages, determining the questions we ask about them, the improvements we make to them, and how we teach people to use them. But to many people (even software engineers) programming languages are not purely technical things, but socio-technical things. In this talk, I discuss several alternative views of programming languages, and how these views can reshape how we design, evolve, and use programming languages in research and practice.",
      "Affiliations": ["University of Washington, USA"],
      "AffiliationsString": "University of Washington, USA",
      "Authors": ["andrewko"],
      "Key": "splash-2016-keynotes-splash-2016-keynote-ko",
      "PersonsString": "Andrew J. Ko",
      "Title": "SPLASH 2016 Keynote: A Human View of Programming Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-splash-2016-keynote-ko"
    },
    {
      "Abstract": "Classically, CS curricula address language design, implementation, metaprogramming (analysis, transformation, generation) in undergraduate courses on compiler construction and programming languages and maybe also software re-/reverse engineering. More recently, the discipline of software language engineering (SLE) has suggested to bundle a related skill set. In this tutorial, SLE is presented in a broad manner on the grounds of the presenter\u2019s emerging SLE textbook. The tutorial integrates language syntax, semantics, types, implementation, and various aspects and applications of metaprogramming. The presenter\u2019s approach can be further characterized as follows: i) do not pull in too much of compiler construction so that a separate course remains viable; ii) approach programming language theory (interpreters, type systems, etc.) in a metaprogramming-oriented manner, as it is also useful for DSLs; iii) commit to one central programming language for illustration which is Haskell by the presenter\u2019s choice; iv) prioritize runnable, representative illustrations over formal content; v) provide extensive further reading pointers so that one can easily scale up to a more research-oriented Master-level course; vi) point out and encourage exploration of SLE technology options without trying to cover various technologies in one book.",
      "Affiliations": ["University of Koblenz-Landau, Germany"],
      "AffiliationsString": "University of Koblenz-Landau, Germany",
      "Authors": ["ralflammel"],
      "Key": "splash-2016-splash-i-the-basic-skill-set-of-software-language-engineering",
      "PersonsString": "Ralf Lämmel",
      "Title": "The basic skill set of software language engineering",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-the-basic-skill-set-of-software-language-engineering"
    },
    {
      "Abstract": "Are static types a penance that programmers do to achieve over-the-top levels of assurance that their programs are correct? Can the rockstars of agile full-stack Web application development afford to stop hacking away long enough to throw in some types, or would their competition just eat their breakfasts?\nI will demonstrate how, in the Ur/Web programming language, static types enable new levels of code reuse and automatic code generation. We know that programmers can often save substantial effort by using metaprogramming tools that crawl the syntax of programs and output new programs. Ur/Web enables similar benefits based on ideas from dependent type systems, replacing explicit syntax-tree analysis by reduction of terms with rich polymorphic types. As a bonus, the compiler delivers lean and lightning-fast native code and guarantees invulnerability to the most common security problems of the Web.\nI\u2019ll start with a few examples of programming in Ur/Web with extensible record types, which are the key feature for polymorphism over database schemas and similar bedrock elements of today\u2019s Web apps. We\u2019ll develop a few increasingly fancy metaprograms that build applications specialized to database schemas. I\u2019ll wrap up by demoing the Ur/Web People Organizer, a full-fledged framework for rapid application assembly by instantiating schema-polymorphic components, in use for a few production applications with a few hundred users between them.\nThe Ur/Web implementation is available online as open source.",
      "Affiliations": ["MIT CSAIL"],
      "AffiliationsString": "MIT CSAIL",
      "Authors": ["adamchlipala"],
      "Key": "splash-2016-splash-i-rapid-development-of-web-applications-with-typed-metaprogramming-in-ur-web",
      "PersonsString": "Adam Chlipala",
      "Title": "Rapid Development of Web Applications with Typed Metaprogramming in Ur/Web",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-rapid-development-of-web-applications-with-typed-metaprogramming-in-ur-web"
    },
    {
      "Abstract": "Scala\u2019s type system unifies aspects of ML modules, object- oriented, and functional programming. The Dependent Object Types (DOT) family of calculi has been proposed as a new theoretic foundation for Scala and similar expressive languages. Unfortunately, type soundness has only been established for restricted subsets of DOT. In fact, it has been shown that important Scala features such as type refinement or a subtyping relation with lattice structure break at least one key metatheoretic property such as environment narrowing or invertible subtyping transitivity, which are usually required for a type soundness proof.The main contribution of this paper is to demonstrate how, perhaps surprisingly, even though these properties are lost in their full generality, a rich DOT calculus that includes recursive type refinement and a subtyping lattice with intersection types can still be proved sound. The key insight is that subtyping transitivity only needs to be invertible in code paths executed at runtime, with contexts consisting entirely of valid runtime objects, whereas inconsistent subtyping contexts can be permitted for code that is never executed.",
      "Affiliations": [
        "Purdue University, USA",
        "EPFL"
      ],
      "AffiliationsString": "Purdue University, USA, EPFL",
      "Authors": [
        "tiarkrompf",
        "nadaamin"
      ],
      "Key": "splash-2016-oopsla-type-soundness-for-dependent-object-types-dot-",
      "PersonsString": "Tiark Rompf and Nada Amin",
      "Title": "Type Soundness for Dependent Object Types (DOT)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-type-soundness-for-dependent-object-types-dot-"
    },
    {
      "Abstract": "When one object makes a request of another, why do we expect that the second object\u2019s behavior correctly satisfies the first object\u2019s wishes? The need to cope with such principal-agent problems shapes programming practice as much as it shapes human organizations and economies. However, the literature about such plan coordination issues among humans is almost disjoint from the literature about these issues among objects. Even the terms used are unrelated.\nInstead, these fields have much to learn from each other\u2014both from their similarities and from the causes of their differences. We propose a framework for thinking about decision alignment as a bridge between these disciplines.",
      "Affiliations": [
        "Google Inc.",
        "eRights.org"
      ],
      "AffiliationsString": "Google Inc., eRights.org",
      "Authors": [
        "markmiller",
        "billtulloh"
      ],
      "Key": "splash-2016-splash-i-the-elements-of-decision-alignment-large-programs-as-complex-organizations",
      "PersonsString": "Mark Miller and Bill Tulloh",
      "Title": "The elements of decision alignment: Large programs as complex organizations",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-the-elements-of-decision-alignment-large-programs-as-complex-organizations"
    },
    {
      "Abstract": "I have been repeatedly quoted (and tweeted) as having remarked more than once over the last decade, \u201cIf it\u2019s worth telling yourself (or another programmer), it\u2019s worth telling the compiler.\u201d In this talk, I will try to explain in more detail what I meant by this. In particular, I have noticed that programming languages provide lots of ways to annnotate one thing, but not very many good ways to talk about relationships among multiple things (other than regard to one as a \u201cserver\u201d to which an annotation is attached and the others as \u201cclients\u201d). As a very simple example, we don\u2019t even yet have a relatively standard way to say such simple things as \u201cThus-and-so value is an identity for this binary operation\u201d or \u201cthis operation distributes over that operation\u201d. Algebraic constraints are one way to express some such constraints, but where in a program should they be placed? How can they be generalized and abstracted? Does object-oriented design make this task easier or harder? I am particularly interested in what we might want to say in the future to a compiler that incorporates a full-blown theorem prover. This talk will be a sort of oral essay, raising more questions than it answers.",
      "Affiliations": ["Oracle Labs"],
      "AffiliationsString": "Oracle Labs",
      "Authors": ["guylsteelejr"],
      "Key": "splash-2016-splash-i-splash-i-keynote-guy-steele",
      "PersonsString": "Guy L. Steele Jr.",
      "Title": "SPLASH-I Keynote: How to Tell a Compiler What We Think We Know?",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-splash-i-keynote-guy-steele"
    },
    {
      "Abstract": "Internet Service Providers (ISPs) use the Border Gateway Protocol (BGP) to announce and exchange routes for de- livering packets through the internet. ISPs must carefully configure their BGP routers to ensure traffic is routed reli- ably and securely. Correctly configuring BGP routers has proven challenging in practice, and misconfiguration has led to worldwide outages and traffic hijacks. This paper presents Bagpipe, a system that enables ISPs to declaratively express BGP policies and that automatically verifies that router configurations implement such policies. The novel initial network reduction soundly reduces policy verification to a search for counterexamples in a finite space. An SMT-based symbolic execution engine performs this search efficiently. Bagpipe reduces the size of its search space using predicate abstraction and parallelizes its search using symbolic variable hoisting. Bagpipe's policy specification language is expressive: we expressed policies inferred from real AS configurations, policies from the literature, and policies for 10 Juniper TechLibrary configuration scenarios. Bagpipe is efficient: we ran it on three ASes with a total of over 240,000 lines of Cisco and Juniper BGP configuration. Bagpipe is effective: it revealed 19 policy violations without issuing any false positives.",
      "Affiliations": [
        "University of Washington",
        "University of Washington",
        "University of Washington",
        "University of Washington",
        "University of Washington",
        "University of Washington"
      ],
      "AffiliationsString": "University of Washington",
      "Authors": [
        "konstantinweitz",
        "dougwoos",
        "eminatorlak",
        "michaeldernst",
        "arvindkrishnamurthy",
        "zacharytatlock"
      ],
      "Key": "splash-2016-oopsla-scalable-verification-of-router-control-plane-configurations-with-an-smt-solver",
      "PersonsString": "Konstantin Weitz, Doug Woos, Emina Torlak, Michael D. Ernst, Arvind Krishnamurthy and Zachary Tatlock",
      "Title": "Scalable Verification of Border Gateway Protocol Configurations with an SMT Solver",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-scalable-verification-of-router-control-plane-configurations-with-an-smt-solver"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "MIT CSAIL",
        "Stanford University",
        "VMware"
      ],
      "AffiliationsString": "MIT CSAIL, Stanford University, VMware",
      "Authors": [
        "talwagner",
        "ericschkufza",
        "udiwieder"
      ],
      "Key": "splash-2016-posters-a-sampling-based-approach-to-accelerating-queries-in-log-management-systems",
      "PersonsString": "Tal Wagner, Eric Schkufza and Udi Wieder",
      "Title": "A Sampling-based Approach to Accelerating Queries in Log Management Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-a-sampling-based-approach-to-accelerating-queries-in-log-management-systems"
    },
    {
      "Abstract": "Inevitable uncertainty about the validity of object transformation code that hinders the practical adoption of release-level dynamic software updates (DSU): programmers have a hard job in validating their transformers in general, and administrators have a hard job in validating delivered transformers right before update installation to their specific systems. This motivates us to look into mechanisms for DSU systems and their transformer programming that ease the programmer\u2019s job while maintaining sufficient DSU runtime performance.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["martinalexanderneumann"],
      "Key": "splash-2016-ds-towards-practical-release-level-dynamic-software-updating-on-stock-java",
      "PersonsString": "Martin Alexander Neumann",
      "Title": "Towards Practical Release-Level Dynamic Software Updating on Stock Java",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-towards-practical-release-level-dynamic-software-updating-on-stock-java"
    },
    {
      "Abstract": "Beneath the surface, software usually depends on complex linker behaviour to work as intended. Even linking hello_world.c is surprisingly involved, and systems software such as libc and operating system kernels rely on a host of linker features. But linking is poorly understood by working programmers and has largely been neglected by language researchers. \nIn this paper we survey the many use-cases that linkers support and the poorly specified linker-speak by which they are controlled: metadata in object files, command-line options, and linker-script language. We provide the first validated formalisation of a realistic executable and linkable format (ELF), and capture aspects of the Application Binary Interfaces for four mainstream platforms (AArch64, AMD64, Power64, and IA32). Using these, we develop an executable specification of static linking, covering (among other things) enough to link small C programs (we use the example of bzip2) into a correctly running executable. We provide our specification in Lem and Isabelle/HOL forms. This is the first formal specification of mainstream linking. We have used the Isabelle/HOL version to prove a sample correctness property for one case of AMD64 ABI relocation, demonstrating that the specification supports formal proof, and as a first step towards the much more ambitious goal of verified linking. \nOur work should enable several novel strands of research, including linker-aware verified compilation and program analysis, and better languages for controlling linking.",
      "Affiliations": [
        "University of Cambridge",
        "University of Cambridge",
        "University of Cambridge"
      ],
      "AffiliationsString": "University of Cambridge",
      "Authors": [
        "stephenkell",
        "dominicpmulligan",
        "petersewell"
      ],
      "Key": "splash-2016-oopsla-the-missing-link-explaining-elf-static-linking-semantically",
      "PersonsString": "Stephen Kell, Dominic P. Mulligan and Peter Sewell",
      "Title": "The Missing Link: Explaining ELF Static Linking, Semantically",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-the-missing-link-explaining-elf-static-linking-semantically"
    },
    {
      "Abstract": "We present a type system and inference algorithm for a rich subset of JavaScript equipped with objects, structural subtyping, prototype inheritance, and first-class methods. The type system supports abstract and recursive objects, and is expressive enough to accommodate several standard benchmarks with only minor workarounds. The invariants enforced by the types enable an ahead-of-time compiler to carry out optimizations typically beyond the reach of static compilers for dynamic languages. Unlike previous inference techniques for prototype inheritance, our algorithm uses a combination of lower and upper bound propagation to infer types and discover type errors in all code, including uninvoked functions. The inference is expressed in a simple constraint language, designed to leverage off-the-shelf fixed point solvers. We prove soundness for both the type system and inference algorithm. An experimental evaluation showed that the inference is powerful, handling the aforementioned benchmarks with no manual type annotation, and that the inferred types enable effective static compilation.",
      "Affiliations": [
        "Samsung Research America",
        "Drexel University",
        "Carnegie Mellon University\t",
        "Samsung Research America",
        "Samsung Research America",
        "Samsung Research America",
        "Samsung Electronics"
      ],
      "AffiliationsString": "Samsung Research America, Drexel University, Carnegie Mellon University\t, Samsung Electronics",
      "Authors": [
        "satishchandra",
        "colingordon",
        "jeanbaptistejeannin",
        "coleschlesinger",
        "manusridharan",
        "franktip",
        "youngilchoi1"
      ],
      "Key": "splash-2016-oopsla-type-inference-for-static-compilation-of-javascript",
      "PersonsString": "Satish Chandra, Colin Gordon, Jean-Baptiste Jeannin, Cole Schlesinger, Manu Sridharan, Frank Tip and Young-il Choi",
      "Title": "Type Inference for Static Compilation of JavaScript",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-type-inference-for-static-compilation-of-javascript"
    },
    {
      "Abstract": "Frameworks inspired by the actor model have recently attracted much attention. Actor systems promise transparent concurrency and distribution by combining message passing with a strong failure model. In this work, we re-examine distribution transparency and find that reliability breaks the promise in several dimensions. Solutions for regaining awareness of failures are briefly discussed.",
      "Affiliations": [
        "",
        "",
        "HAW Hamburg"
      ],
      "AffiliationsString": ", HAW Hamburg",
      "Authors": [
        "raphaelhiesgen",
        "dominikcharousset",
        "thomascschmidt"
      ],
      "Key": "splash-2016-posters-reconsidering-reliability-in-distributed-actor-systems",
      "PersonsString": "Raphael Hiesgen, Dominik Charousset and Thomas C. Schmidt",
      "Title": "Reconsidering Reliability in Distributed Actor Systems",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-reconsidering-reliability-in-distributed-actor-systems"
    },
    {
      "Abstract": "In this demo we will build a scalable social network application from the ground-up in 45 minutes. By scalable we mean that our social network needs to scale beyond the capabilities of a relational database, and perform well regardless of the data size. Traditional Web frameworks such as Ruby-on-Rails or Django that are built around relational databases and object-relational mappings do not provide such scalability out of the box. At the absence of framework support, developers often resort to writing imperative code for accessing a database (e.g., a NoSQL database) and for denormalizing the data (creating redundant data that is stored according to query patterns).\nTo achieve our goal of creating a scalable application in 45 minutes we turn to a declarative approach to Web applications. In our approach, the application\u2019s logic is represented as a set of declarative rules, written in the Turing-complete language Cloudlog. These rules are stored in the database alongside user data. Rules can be applied at either query time or at update time. The latter kind provides a declarative way to express denormalization.\nWith logic expressed declaratively, an application is defined, not implemented. This allows robust applications to be built fast. We will demonstrate the creation of such an application using nothing but (open source) declarative languages: Cloudlog with Cedalion on the server side, and HTML with AngularJS directives on the client side.",
      "Affiliations": [
        "University of Haifa",
        "Open University and Technion IIT"
      ],
      "AffiliationsString": "University of Haifa, Open University and Technion IIT",
      "Authors": [
        "boazrosenan",
        "davidhlorenz"
      ],
      "Key": "splash-2016-splash-i-define-your-app-don-t-implement-it-building-a-scalable-social-network-in-45-minutes",
      "PersonsString": "Boaz Rosenan and David H. Lorenz",
      "Title": "Define Your App, Don\u2019t Implement It: Building a Scalable Social Network in 45 minutes",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-define-your-app-don-t-implement-it-building-a-scalable-social-network-in-45-minutes"
    },
    {
      "Abstract": "Programming languages for Software-Defined Networks (SDNs) provide higher abstractions on top of hardware-based APIs like OpenFlow. Researchers started to develop SDN programming languages based on mathematical foundations, which makes these languages amenable to verification and allows network administrators to answer questions about correctness of their policies, reachability within the network and performance of the network. However, these languages are only able to capture a limited set of properties and lack support for fully automated verification. In this paper we first highlight different issues of existing programming languages enabling network verification for SDNs and describe ongoing research on a new SDN language that tackles the aforementioned issues.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["matthiaseichholz"],
      "Key": "splash-2016-ds-language-support-for-verifiable-sdns",
      "PersonsString": "Matthias Eichholz",
      "Title": "Language Support for Verifiable SDNs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-language-support-for-verifiable-sdns"
    },
    {
      "Abstract": "How do you build a successful CS Outreach program? What does functional programming have to do with pedagogy, and how do the features of a language influence the shape and sequence of a curriculum? This presentation will appeal to language designers, teachers and professionals alike, using our Bootstrap program as a case study with which to answer these questions.\nI will first discuss the evolution of the CS-Ed community in the United States, whose character has changed dramatically over the past few years. I will specifically address CSPdWeek (\u201cCS Professional Development Week\u201d), which is the distillation of a collaborative approach between three of the largest, research-based curricula in the US. I will discuss the tremendous opportunity that comes from using language-level approaches to build bridges between computer science and other disciplines, using Bootstrap as a case-study in how to do this successfully.",
      "Affiliations": ["Brown University"],
      "AffiliationsString": "Brown University",
      "Authors": ["emmanuelschanzer"],
      "Key": "splash-2016-splash-i-bootstrap",
      "PersonsString": "Emmanuel Schanzer",
      "Title": "Bootstrap: Build Bridges, not Walls",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-bootstrap"
    },
    {
      "Abstract": "Many languages have support for automatic type inference. But when inferencefails, the reported error messages can be unhelpful, highlighting a codelocation far from the source of the problem. Several lines of work have emergedproposing error reports derived from correcting sets: a set of program pointsthat, when fixed, produce a well-typed program. Unfortunately, these approachesare tightly tied to specific languages; targeting a new language requiresencoding a type inference algorithm for the language in a custom constraintsystem specific to the error reporting tool. \nWe show how to produce correcting set-based error reports by leveraging existingtype inference implementations, easing the burden of adoption and, as typeinference algorithms tend to be efficient in practice, producing error reportsof comparable quality to similar error reporting tools orders of magnitudefaster. Many type inference algorithms are already formulated as dual phases oftype constraint generation and solving; rather than (re)implementing typeinference in an error explanation tool, we isolate the solving phase and treatit as an oracle for solving typing constraints. Given any set of typingconstraints, error explanation proceeds by iteratively removing conflictingconstraints from the initial constraint set until discovering a subset on whichthe solver succeeds; the constraints removed form a correcting set. Ourapproach is agnostic to the semantics of any particular language or type system,instead leveraging the existing type inference engine to give meaning toconstraints.",
      "Affiliations": [
        "University of Washington",
        "Samsung Research America",
        "Samsung Research America",
        "Samsung Research America"
      ],
      "AffiliationsString": "University of Washington, Samsung Research America",
      "Authors": [
        "calvinloncaric",
        "satishchandra",
        "manusridharan",
        "coleschlesinger"
      ],
      "Key": "splash-2016-oopsla-a-practical-framework-for-type-inference-error-explanation",
      "PersonsString": "Calvin Loncaric, Satish Chandra, Manu Sridharan and Cole Schlesinger",
      "Title": "A Practical Framework for Type Inference Error Explanation",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-a-practical-framework-for-type-inference-error-explanation"
    },
    {
      "Abstract": "The rise of elastically scaling applications that frequently deploy new machines has led to the adoption of DevOps practices across the cloud engineering stack. So-called configuration management tools utilize scripts that are based on declarative resource descriptions and make the system converge to the desired state. It is crucial for convergent configurations to be able to gracefully handle transient faults, e.g., network outages when downloading and installing software packages. In this paper we introduce a conceptual framework for asserting reliable convergence in configuration management. Based on a formal definition of configuration scripts and their resources, we utilize state transition graphs to test whether a script makes the system converge to the desired state under different conditions. In our generalized model, configuration actions are partially ordered, often resulting in prohibitively many possible execution orders. To reduce this problem space, we define and analyze a property called preservation, and we show that if preservation holds for all pairs of resources, then convergence holds for the entire configuration. Our implementation builds on Puppet, but the approach is equally applicable to other frameworks like Chef, Ansible, etc. We perform a comprehensive evaluation based on real world Puppet scripts and show the effectiveness of the approach. Our tool is able to detect all idempotence and convergence related issues in a set of existing Puppet scripts with known issues as well as some hitherto undiscovered bugs in a large random sample of scripts.",
      "Affiliations": [
        "Vienna University of Technology",
        "Vienna University of Technology",
        "TU Wien"
      ],
      "AffiliationsString": "Vienna University of Technology, TU Wien",
      "Authors": [
        "oliverhanappi",
        "waldemarhummer",
        "schahramdustdar"
      ],
      "Key": "splash-2016-oopsla-asserting-reliable-convergence-for-configuration-management-scripts",
      "PersonsString": "Oliver Hanappi, Waldemar Hummer and Schahram Dustdar",
      "Title": "Asserting Reliable Convergence for Configuration Management Scripts",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-asserting-reliable-convergence-for-configuration-management-scripts"
    },
    {
      "Abstract": "Please note that PLMW is a full-day event, to create a relaxed environment for the students to interact with each other and the speakers, we ask people with an interest in PLMW to not attend specific sessions but rather take part in the workshop and join for the whole day.",
      "Affiliations": ["Northeastern University"],
      "AffiliationsString": "Northeastern University",
      "Authors": ["janvitek"],
      "Key": "splash-2016-plmw-my-twenty-five-years-in-oo",
      "PersonsString": "Jan Vitek",
      "Title": "My Twenty-Five Years in OO",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-my-twenty-five-years-in-oo"
    },
    {
      "Abstract": "Language workbenches are widely used to implement domain-specific languages (DSLs) and their accompanying integrated development environments (IDEs). They help to define the abstract syntax, concrete syntax(es), type system, and transformations for the languages. However, there are other language aspects, specifically program analyses and optimizations, that are also crucial to a language implementation, but state-of-the-art language workbenches has only limited support for them. The high implementation effort for these language aspects is justifiable for a general-purpose language (GPL), but is not justifiable for DSLs because of their different development economies. To this end, I conduct research on dedicated support for analyses and optimizations for DSLs in language workbenches. My main goal is to develop declarative meta-languages that help to define static program analyses and that capture and automate patterns and techniques of optimizations. The research directions are directly driven by industrial need, and upon successful completion, the results would be applied in projects centered around DSLs for high-performance computing (HPC), insurance, and concurrent embedded systems.",
      "Affiliations": ["itemis AG / TU Delft"],
      "AffiliationsString": "itemis AG / TU Delft",
      "Authors": ["tamasszabo"],
      "Key": "splash-2016-ds-dedicated-support-for-analyses-and-optimizations-in-language-workbenches",
      "PersonsString": "Tamás Szabó",
      "Title": "Dedicated Support for Analyses and Optimizations in Language Workbenches",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-dedicated-support-for-analyses-and-optimizations-in-language-workbenches"
    },
    {
      "Abstract": "The LogicBlox smart database system brings together transaction processing, business logic, analytics, live programming and machine learning in one integrated environment. Several of our technical achievements have come about by adapting techniques from programming languages for databases. In this talk I will give an overview of the LogicBlox system, then focus on our approach to parallel transaction processing. Called \u2018Transaction Repair,\u2019 it is a method for scalable transaction processing without locks that achieves full serializability. It can demonstrate parallel speedup even in inimical scenarios where all pairs of transactions have significant read-write conflicts. It builds on established techniques from programming languages: declarative languages, purely functional data structures, incremental computation, and fixpoint analysis.",
      "Affiliations": ["LogicBlox"],
      "AffiliationsString": "LogicBlox",
      "Authors": ["toddveldhuizen"],
      "Key": "splash-2016-splash-i-fast-datalog",
      "PersonsString": "Todd Veldhuizen",
      "Title": "Fast Datalog",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-fast-datalog"
    },
    {
      "Abstract": "Persistence and distribution are two important aspects in distributed applications that are commonly managed explicitly and separately. This paper presents Spray, a programming paradigm for distributed applications that combines these two concept in one abstraction: a persistent distributed heap.",
      "Affiliations": ["Computer Science Department - University of Pisa"],
      "AffiliationsString": "Computer Science Department - University of Pisa",
      "Authors": ["marcograndi"],
      "Key": "splash-2016-ds-spray-programming-with-a-persistent-distributed-heap",
      "PersonsString": "Marco Grandi",
      "Title": "Spray: Programming with a Persistent Distributed Heap",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-spray-programming-with-a-persistent-distributed-heap"
    },
    {
      "Abstract": "This paper introduces a novel type-and-effect calculus, first-class effects, where the computational effect of an expression can be programmatically reflected, passed around as values, and analyzed at run time. A broad range of designs &quot;hard-coded&quot; in existing effect-guided analyses \u2014 from thread scheduling, version-consistent software updating, to data zeroing \u2014 can be naturally supported through the programming abstractions. The core technical development is a type system with a number of features, including a hybrid type system that integrates static and dynamic effect analyses, a refinement type system to verify application-specific effect management properties, a double-bounded type system that computes both over-approximation of effects and their under-approximation. We introduce and establish a notion of soundness called trace consistency, defined in terms of how the effect and trace correspond. The property sheds foundational insight on &quot;good&quot; first-class effect programming.",
      "Affiliations": [
        "Iowa State University",
        "",
        "Iowa State University, USA"
      ],
      "AffiliationsString": "Iowa State University, , Iowa State University, USA",
      "Authors": [
        "yuhenglong",
        "yudavidliu",
        "hrideshrajan"
      ],
      "Key": "splash-2016-oopsla-first-class-effect-reflection-for-effect-guided-programming",
      "PersonsString": "Yuheng Long, Yu David Liu and Hridesh Rajan",
      "Title": "First-Class Effect Reflection for Effect-Guided Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-first-class-effect-reflection-for-effect-guided-programming"
    },
    {
      "Abstract": "Whole-program optimizations are powerful tools that can dramatically improve performance, size and other aspects of programs. Because they depend on global knowledge, they must typically be reapplied to the whole program when small changes are made, which makes them too slow for the development cycle. This is an issue for some environments that require, or benefit a lot from, whole-program optimizations, such as compilation to JavaScript or to the Dalvik VM, because their development cycle is slowed down either by the lack of optimizations, or by the time spent on applying them. \nWe present a new approach to designing incremental whole-program optimizers for object-oriented and functional languages: when part of a program changes, only the portions affected by the changes are reoptimized. An incremental optimizer using this approach for Scala.js, the Scala to JavaScript compiler, demonstrates speedups from 10x to 100x compared to its batch version. As a result, the optimizer's running time becomes insignificant compared to separate compilation, making it fit for use on every compilation run during the development cycle. We also show how to parallelize the incremental algorithm to take advantage of multicore hardware.",
      "Affiliations": [
        "EPFL, Switzerland",
        "EPFL, Switzerland"
      ],
      "AffiliationsString": "EPFL, Switzerland",
      "Authors": [
        "sebastiendoeraene",
        "tobiasschlatter"
      ],
      "Key": "splash-2016-oopsla-parallel-incremental-whole-program-optimizations-for-scala-js",
      "PersonsString": "Sébastien Doeraene and Tobias Schlatter",
      "Title": "Parallel Incremental Whole-Program Optimizations for Scala.js",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-parallel-incremental-whole-program-optimizations-for-scala-js"
    },
    {
      "Abstract": "Please note that PLMW is a full-day event, to create a relaxed environment for the students to interact with each other and the speakers, we ask people with an interest in PLMW to not attend specific sessions but rather take part in the workshop and join for the whole day.",
      "Affiliations": ["Northeastern University"],
      "AffiliationsString": "Northeastern University",
      "Authors": ["matthiasfelleisen"],
      "Key": "splash-2016-plmw-real-researchers-allow-passion-to-guide-them",
      "PersonsString": "Matthias Felleisen",
      "Title": "Real Researchers Allow Passion to Guide Them",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-real-researchers-allow-passion-to-guide-them"
    },
    {
      "Abstract": "The history of programming paradigms shows a progression from low-level machine-oriented constructs towards high-level application-oriented abstractions. Agent-Oriented Programming introduces an abstraction layer inspired by humans and human society, to ease the development of programs and systems featuring levels of concurrency, reactivity, decentralization, autonomy, flexibility. In this tutorial, leading researchers of the agent-oriented programming community will introduce and discuss the main concepts and features behind this paradigm, using state-of-art agent programming languages, platforms, technologies. The tutorial will include both live-coding, based on some simple programming examples that will be developed and run on the fly, and the discussion of more complex examples, taken from real-world applications and projects.",
      "Affiliations": [
        "LIP6",
        "Universiteit Utrecht",
        "",
        "PUCRS",
        "Delft University of Technology, Netherlands",
        "University College Dublin",
        "University of Bologna, Italy"
      ],
      "AffiliationsString": "LIP6, Universiteit Utrecht, , PUCRS, Delft University of Technology, Netherlands, University College Dublin, University of Bologna, Italy",
      "Authors": [
        "amalelfallahsegrouchni",
        "johnjulesmeyer",
        "mehdidastani",
        "rafaelbordini",
        "koenhindriks",
        "remcollier",
        "alessandroricci"
      ],
      "Key": "splash-2016-splash-i-agent-oriented-programming",
      "PersonsString": "Amal El Fallah-Segrouchni, John-Jules Meyer, Mehdi Dastani, Rafael Bordini, Koen Hindriks, Rem Collier and Alessandro Ricci",
      "Title": "Agent-Oriented Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-agent-oriented-programming"
    },
    {
      "Abstract": "What do we know about software development? A whole lot and at the same time surprisingly little. Some of the things that we know came to us through folklore, stories of how something happened in a specific project, for a specific programming language. One such element of folklore is the assumption that software developers spend around 50% of their time on testing and debugging. While no-one would disagree that these phases are essential in software development, the real effort it takes is unknown. What is more, also the things that software engineers are struggling with during testing or debugging are not know to us. In this talk, we will analyse how developers perform developer testing, how they use Continuous Integration related to testing and how debugging is done. From a research perspective, but also from a very practical developer-oriented perspective. This talk goes to show that both researchers and developers can benefit from software analytics.",
      "Affiliations": ["TU Delft"],
      "AffiliationsString": "TU Delft",
      "Authors": ["andyzaidman"],
      "Key": "splash-2016-splash-i-fact-or-fiction-what-software-analytics-can-do-for-us-developers-and-researchers-",
      "PersonsString": "Andy Zaidman",
      "Title": "Fact or fiction? What software analytics can do for us (developers and researchers)",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-fact-or-fiction-what-software-analytics-can-do-for-us-developers-and-researchers-"
    },
    {
      "Abstract": "In the session the following awards will be handed out: \n \n SIGPLAN Programming Languages Software Award \n SIGPLAN Ph.D. Dissertation Award",
      "Affiliations": ["University of Athens"],
      "AffiliationsString": "University of Athens",
      "Authors": ["yannissmaragdakis"],
      "Key": "splash-2016-keynotes-sigplan-awards",
      "PersonsString": "Yannis Smaragdakis",
      "Title": "SIGPLAN Awards",
      "Type": "Awards",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-sigplan-awards"
    },
    {
      "Abstract": "Mendix is a development environment based on a number of generic modeling languages. The meta model for these languages has originally (10 years ago!) been implemented in C#. Over the last few years the functionality of Mendix is broadening, for example with an Open Model SDK and a Web Modeler. As a result of this, there has been a need to use the meta model at more and more places and in more and more different technologies.\nTo guarantee consistency between all usages of the meta model Mendix decided several years ago to make the meta model explicit (move it out of C#), and formalize it. From this formal model the different usages of the meta model is now being generated in many different forms like e.g C#, JSON, TypeScript, documentation, visualizations, and Scala.\nAs a result old, handwritten, code is being removed from the code base, and new functionality (like the fore mentioned SDK) can be added relatively quickly. Changing any of the generated artefacts can be done much quicker than when changing the handwritten equivalent ensuring that Mendix can remain agile in its own development.\nThis presentation shows how this formalization was done, which choices have been made and why. It also shows some of the changes in the way of working of Mendix R&amp;D, and will show some specifics of how we are using Xtext (and working arounds its restrictions) to develop the meta model tooling.",
      "Affiliations": ["Independent "],
      "AffiliationsString": "Independent ",
      "Authors": ["joswarmer"],
      "Key": "splash-2016-splash-i-making-mendix-meta-model-driven",
      "PersonsString": "Jos Warmer",
      "Title": "Making Mendix Meta Model Driven",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-making-mendix-meta-model-driven"
    },
    {
      "Abstract": "We present RDIT, a novel dynamic technique to detect data races in multithreaded programs with incomplete trace information, i.e., in the presence of missing events. RDIT is both precise and maximal: it does not report any false alarms and it detects a maximal set of true traces from the observed incomplete trace. RDIT is underpinned by a sound BarrierPair model that abstracts away the missing events by capturing the invocation data of their enclosing methods. By making the least conservative abstraction that a missing method introduces synchronization only when it has a memory address in scope that overlaps with other events or other missing methods, and by formulating maximal thread causality as logical constraints, RDIT guarantees to precisely detect races with maximal capability. RDIT has been applied in seven real-world large concurrent systems and has detected dozens of true races with zero false alarms. Comparatively, existing algorithms such as Happens-Before, Causal- Precedes, and Maximal-Causality which are known to be precise all report many false alarms when missing synchronizations.",
      "Affiliations": [
        "Texas A&M University",
        "Texas A&M University"
      ],
      "AffiliationsString": "Texas A&M University",
      "Authors": [
        "jeffhuang",
        "arunkrishnakumarrajagopalan"
      ],
      "Key": "splash-2016-oopsla-precise-and-maximal-race-detection-from-incomplete-traces",
      "PersonsString": "Jeff Huang and Arun Krishnakumar Rajagopalan",
      "Title": "Precise and Maximal Race Detection from Incomplete Traces",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-precise-and-maximal-race-detection-from-incomplete-traces"
    },
    {
      "Abstract": "In this paper we introduce a new approach for learning precise and general probabilistic models of code based on decision tree learning. Our approach directly benefits an emerging class of statistical programming tools which leverage probabilistic models of code learned over large codebases (e.g., GitHub) to make predictions about new programs (e.g., code completion, repair, etc). \nThe key idea is to phrase the problem of learning a probabilistic model of code as learning a decision tree in a domain specific language over abstract syntax trees (called TGen). This allows us to condition the prediction of a program element on a dynamically computed context. Further, our problem formulation enables us to easily instantiate known decision tree learning algorithms such as ID3, but also to obtain new variants we refer to as ID3+ and E13, not previously explored and ones that outperform ID3 in prediction accuracy. \nOur approach is general and can be used to learn a probabilistic model of any programming language. We implemented our approach in a system called Deep3 and evaluated it for the challenging task of learning probabilistic models of JavaScript and Python. Our experimental results indicate that Deep3 predicts elements of JavaScript and Python code with precision above 82% and 69%, respectively. Further, Deep3 often significantly outperforms state-of-the-art approaches in overall prediction accuracy.",
      "Affiliations": [
        "ETH Zurich, Switzerland",
        "",
        "ETH Zurich"
      ],
      "AffiliationsString": "ETH Zurich, Switzerland, , ETH Zurich",
      "Authors": [
        "veselinraychev",
        "pavolbielik",
        "martinvechev"
      ],
      "Key": "splash-2016-oopsla-probabilistic-model-for-code-with-decision-trees",
      "PersonsString": "Veselin Raychev, Pavol Bielik and Martin Vechev",
      "Title": "Probabilistic Model for Code with Decision Trees",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-probabilistic-model-for-code-with-decision-trees"
    },
    {
      "Abstract": "Attribute grammars decorate the nodes of a program's parse tree with attributes whose values are defined by equations encoding the (static) semantics of a programming language. We show how replacing the equations of an attribute grammar with equivalent constraints that can be solved by a constraint solver allows us to compute repairs of a malformed program solely from a specification that was originally designed for checking its well-formedness. We present two repair modes \u2014 shallow and deep fixing \u2014 whose computed repair alternatives are guaranteed to repair every error on which they are invoked. While shallow fixing may introduce new errors, deep fixing never does; to make it tractable, we implement it using neighborhood search. We demonstrate the feasibility of our approach by implementing it on top of ExtendJ, an attribute grammar based Java compiler, and by applying it to an example from the Java EE context, detecting and fixing well-formedness errors (both real and injected) in a body of 14 open-source subject programs.",
      "Affiliations": [
        "Fernuniversität",
        "Fernuniversität in Hagen",
        "Fernuniversität in Hagen"
      ],
      "AffiliationsString": "Fernuniversität, Fernuniversität in Hagen",
      "Authors": [
        "friedrichsteimann",
        "jorghagemann",
        "bastianulke"
      ],
      "Key": "splash-2016-oopsla-computing-repair-alternatives-for-malformed-programs-using-constrained-attribute-grammars",
      "PersonsString": "Friedrich Steimann, Jörg Hagemann and Bastian Ulke",
      "Title": "Computing Repair Alternatives for Malformed Programs using Constraint Attribute Grammars",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-computing-repair-alternatives-for-malformed-programs-using-constrained-attribute-grammars"
    },
    {
      "Abstract": "Smartphone apps create and handle a large variety of \u201cinstance\u201d data that has to persist across runs, such as the current navigation route, workout results, antivirus settings, or game state. Due to the nature of the smartphone platform, an app can be paused, sent into background, or killed at any time. If the instance data is not saved and restored between runs, in addition to data loss, partially-saved or corrupted data can crash the app upon resume or restart. While smartphone platforms offer API support for data-saving and data-retrieving operations, the use of this API is ad-hoc: left to the programmer, rather than enforced by the compiler. We have observed that several categories of bugs\u2014including data loss, failure to resume/restart or resuming/restarting in the wrong state\u2014are due to incorrect handling of instance data and are easily triggered by just pressing the \u2018Home\u2019; or \u2018Back\u2019; buttons. To help address this problem, we have constructed a tool chain for Android (the KREfinder static analysis and the KREreproducer input generator) that helps find and reproduce such incorrect handling. We have evaluated our approach by running the static analysis on 324 apps, of which 49 were further analyzed manually. Results indicate that our approach is (i) effective, as it has discovered 49 bugs, including in popular Android apps, and (ii) efficient, completing on average in 61 seconds per app. More generally, our approach helps determine whether an app saves too much or too little state.",
      "Affiliations": [
        "University of Central Missouri, USA",
        "University of California at Riverside, USA",
        "New Jersey Institute of Technology, USA"
      ],
      "AffiliationsString": "University of Central Missouri, USA, University of California at Riverside, USA, New Jersey Institute of Technology, USA",
      "Authors": [
        "zhiyongshan",
        "tanzirulazim",
        "iulianneamtiu"
      ],
      "Key": "splash-2016-oopsla-finding-resume-and-restart-errors-in-android-applications",
      "PersonsString": "Zhiyong Shan, Tanzirul Azim and Iulian Neamtiu",
      "Title": "Finding Resume and Restart Errors in Android Applications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-finding-resume-and-restart-errors-in-android-applications"
    },
    {
      "Abstract": "We introduce a novel approach for using futures to automatically parallelize the execution of pure method calls.Our approach is built on three new techniques to address the challenge of automatic parallelization via future synthesis: candidate future synthesis, parallelism benefit analysis, and threshold expression synthesis. During {\\em candidate future synthesis}, our system annotates pure method calls as async expressions and synthesizes a parallel program with future objects and their type declarations.Next, the system performs a {\\em parallel benefit analysis} to determine which async expressions may need to be executed sequentially due to overhead reasons, based on execution profile information collected from multiple test inputs. Finally, {\\em threshold expressionsynthesis} uses the output from parallelism benefit analysis to synthesize predicate expressions that can be used to determine at runtime if a specific pure method call should be executed sequentially or in parallel. \nWe have implemented our approach, and the results obtained from an experimental evaluation of the complete system on a range of sequential Java benchmarks are very encouraging. Our evaluation shows that our approach can provide significant parallel speedups of up to 7.4$\\times$ (geometric mean of 3.69$\\times$) relative to the sequential programs when using 8 processor cores, withzero programmer effort beyond providing the sequential program and test cases for parallelism benefit analysis.",
      "Affiliations": [
        "Rice University, USA",
        "Rice University, USA"
      ],
      "AffiliationsString": "Rice University, USA",
      "Authors": [
        "rishisurendran",
        "viveksarkar"
      ],
      "Key": "splash-2016-oopsla-automatic-parallelization-of-pure-method-calls-via-conditional-future-synthesis",
      "PersonsString": "Rishi Surendran and Vivek Sarkar",
      "Title": "Automatic Parallelization of Pure Method Calls via Conditional Future Synthesis",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-automatic-parallelization-of-pure-method-calls-via-conditional-future-synthesis"
    },
    {
      "Abstract": "We are in the multi-core era. Dynamically-typed languages are in widespread use, but their support for multithreading still lags behind. One of the reasons is that the sophisticated techniques they use to efficiently represent their dynamic object models are often unsafe in multithreaded environments. \nThis paper defines safety requirements for dynamic object models in multithreaded environments. Based on these requirements, a language-agnostic and thread-safe object model is designed that maintains the efficiency of sequential approaches. This is achieved by ensuring that field reads do not require synchronization and field updates only need to synchronize on objects shared between threads. \nBasing our work on JRuby+Truffle, we show that our safe object model has zero overhead on peak performance for thread-local objects and only 3% average overhead on parallel benchmarks where field updates require synchronization. Thus, it can be a foundation for safe and efficient multithreaded VMs for a wide range of dynamic languages.",
      "Affiliations": [
        "Johannes Kepler University",
        "Johannes Kepler University Linz",
        "Oracle Labs",
        "Johannes Kepler University Linz"
      ],
      "AffiliationsString": "Johannes Kepler University, Johannes Kepler University Linz, Oracle Labs",
      "Authors": [
        "benoitdaloze",
        "stefanmarr",
        "danielebonetta",
        "hanspetermossenbock"
      ],
      "Key": "splash-2016-oopsla-efficient-and-thread-safe-objects-for-dynamically-typed-languages",
      "PersonsString": "Benoit Daloze, Stefan Marr, Daniele Bonetta and Hanspeter Mössenböck",
      "Title": "Efficient and Thread-Safe Objects for Dynamically-Typed Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-efficient-and-thread-safe-objects-for-dynamically-typed-languages"
    },
    {
      "Abstract": "Machine-code slicing is an important primitive for building binaryanalysis and rewriting tools, such as taint trackers, faultlocalizers, and partial evaluators.However, it is not easy to create a machine-code slicer that exhibitsa high level of precision.Moreover, the problem of creating such a tool is compounded by thefact that a small amount of local imprecision can be amplified via cascadeeffects. \nMost instructions in instruction sets such as Intel's IA-32 and ARMare multi-assignments: they have several inputs and several outputs(registers, flags, and memory locations).This aspect of the instruction set introduces a granularity issueduring slicing:there are often instructions at which we would like the slice toinclude only a subset of the instruction's semantics,whereas the slice is forced to include the entire instruction.Consequently, the slice computed by state-of-the-art tools is veryimprecise, often including essentially the entire program. \nThis paper presents an algorithm to slice machine code more accurately.To counter the granularity issue, our algorithm performsslicing at the microcode level, instead of the instruction level,and obtains a more precise microcode slice.To reconstitute a machine-code program from a microcode slice,our algorithm uses machine-code synthesis.Our experiments on IA-32 binaries of FreeBSD utilities show that, incomparison to slices computed by a state-of-the-art tool, ouralgorithm reduces the size of backward slices by33%, and forward slices by 70%.",
      "Affiliations": [
        "University of Wisconsin - Madison",
        "University of Wisconsin - Madison and Grammatech Inc."
      ],
      "AffiliationsString": "University of Wisconsin - Madison, University of Wisconsin - Madison and Grammatech Inc.",
      "Authors": [
        "venkateshsrinivasan",
        "thomasreps"
      ],
      "Key": "splash-2016-oopsla-an-improved-algorithm-for-slicing-machine-code",
      "PersonsString": "Venkatesh Srinivasan and Thomas Reps",
      "Title": "An Improved Algorithm for Slicing Machine Code",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-an-improved-algorithm-for-slicing-machine-code"
    },
    {
      "Abstract": "Successful software applications, even when diligently maintained, tend towards the complex and brittle with the passage of time. This perpetual challenge of software engineering is the direct result of two fundamental forces that reinforce each other. First, the rate of change in computing is faster than in almost any other human endeavor, resulting in constant pressure to support more features. Second, the primacy of not disrupting production means that code, once released, is exceedingly hard to modify, let alone decommission. In this talk, I present two complementary projects at Goldman Sachs that seek to meet this challenge head-on. At the component level, Java Slang Integration (JSI) enables the piecemeal migration of functionality from the firm\u2019s proprietary scripting language to languages running in the Java virtual machine. More importantly, it greatly simplifies fine-grained comparison testing of components written against both platforms, giving us high confidence that they are functionally equivalent. At the service level, the Dash Bouncer serves as an application-level proxy mediating HTTP flows at the boundary of the firm\u2019s network. Following security best practices, its primary remit is to perform semantic validation on requests and responses, thus protecting internal resources. However as a welcome side effect, it also encourages application owners to a service-oriented architecture. In my talk, I motivate, overview, and reflect on both efforts, emphasizing that continuous software evolution is by far preferable over wholesale replacement and in fact entirely feasible.",
      "Affiliations": ["Goldman Sachs"],
      "AffiliationsString": "Goldman Sachs",
      "Authors": ["robertgrimm"],
      "Key": "splash-2016-splash-i-adventures-in-software-evolution",
      "PersonsString": "Robert Grimm",
      "Title": "Adventures in Software Evolution",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-adventures-in-software-evolution"
    },
    {
      "Abstract": "",
      "Affiliations": ["Northeastern University"],
      "AffiliationsString": "Northeastern University",
      "Authors": ["janvitek"],
      "Key": "splash-2016-plmw-what-to-do-at-splash",
      "PersonsString": "Jan Vitek",
      "Title": "What to do at SPLASH",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-what-to-do-at-splash"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of British Columbia",
        "University of British Columbia"
      ],
      "AffiliationsString": "University of British Columbia",
      "Authors": [
        "giovanniviviani",
        "gailmurphy"
      ],
      "Key": "splash-2016-posters-removing-stagnation-from-modern-code-review",
      "PersonsString": "Giovanni Viviani and Gail Murphy",
      "Title": "Removing Stagnation from Modern Code Review",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-removing-stagnation-from-modern-code-review"
    },
    {
      "Abstract": "Please note that PLMW is a full-day event, to create a relaxed environment for the students to interact with each other and the speakers, we ask people with an interest in PLMW to not attend specific sessions but rather take part in the workshop and join for the whole day.",
      "Affiliations": [
        "EPFL",
        "Delft University of Technology",
        "Northeastern University"
      ],
      "AffiliationsString": "EPFL, Delft University of Technology, Northeastern University",
      "Authors": [
        "nadaamin",
        "casperbachpoulsen",
        "vincentstamour"
      ],
      "Key": "splash-2016-plmw-panel-young-researchers",
      "PersonsString": "Nada Amin, Casper Bach Poulsen and Vincent St-Amour",
      "Title": "Panel: Young Researchers",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-panel-young-researchers"
    },
    {
      "Abstract": "Pony is an actor-model, capabilities-secure, native programming language. I will talk about reference capabilities (a type system for data-race freedom influenced by object capabilities and deny guarantee reasoning), the ORCA and MAC protocols for fully concurrent no-stop-the-world garbage collection of both objects and actors, and extending Pony to the distributed setting.",
      "Affiliations": ["Imperial College London"],
      "AffiliationsString": "Imperial College London",
      "Authors": ["sylvanclebsch"],
      "Key": "splash-2016-splash-i-pony-co-designing-a-type-system-and-a-runtime",
      "PersonsString": "Sylvan Clebsch",
      "Title": "Pony: Co-designing a Type System and a Runtime",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-pony-co-designing-a-type-system-and-a-runtime"
    },
    {
      "Abstract": "",
      "Affiliations": ["Delft University of Technology, Netherlands"],
      "AffiliationsString": "Delft University of Technology, Netherlands",
      "Authors": ["eelcovisser"],
      "Key": "splash-2016-keynotes-splash-2016-general-chair-s-report",
      "PersonsString": "Eelco Visser",
      "Title": "SPLASH 2016 General Chair's Report",
      "Type": "Other",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-splash-2016-general-chair-s-report"
    },
    {
      "Abstract": "Machine-code synthesis is the problem of searching for an instruction sequence thatimplements a semantic specification, given as a formula in quantifier-free bit-vector logic (QFBV).Instruction sets like Intel's IA-32 have around 43,000 unique instruction schemas;this huge instruction pool, along with the exponential cost inherent in enumerative synthesis,results in an enormous search space for a machine-code synthesizer: even forrelatively small specifications, the synthesizer might take several hours or days tofind an implementation. In this paper, we present several improvements to the algorithmsused in a state-of-the-art machine-code synthesizer McSynth.In addition to a novel pruningheuristic, our improvements incorporate anumber of ideas known from the literature, which we adapt in novel ways for the purposeof speeding up machine-code synthesis.Our experiments for Intel's IA-32 instruction set show that our improvementsenable synthesis of code for 12 out of 14 formulas on which McSynth times out,speeding up the synthesis time by at least 1981X, and forthe remaining formulas, speeds up synthesis by 3X.",
      "Affiliations": [
        "University of Wisconsin - Madison",
        "University of Wisconsin - Madison, USA",
        "University of Wisconsin - Madison and Grammatech Inc."
      ],
      "AffiliationsString": "University of Wisconsin - Madison, University of Wisconsin - Madison, USA, University of Wisconsin - Madison and Grammatech Inc.",
      "Authors": [
        "venkateshsrinivasan",
        "tusharsharma",
        "thomasreps"
      ],
      "Key": "splash-2016-oopsla-speeding-up-machine-code-synthesis",
      "PersonsString": "Venkatesh Srinivasan, Tushar Sharma and Thomas Reps",
      "Title": "Speeding Up Machine-Code Synthesis",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-speeding-up-machine-code-synthesis"
    },
    {
      "Abstract": "",
      "Affiliations": ["Australian National University, Data61, and Purdue University"],
      "AffiliationsString": "Australian National University, Data61, and Purdue University",
      "Authors": ["tonyhosking"],
      "Key": "splash-2016-keynotes-splash-steering-committee-report",
      "PersonsString": "Tony Hosking",
      "Title": "SPLASH Steering Committee Report",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-splash-steering-committee-report"
    },
    {
      "Abstract": "Cooperative statistical debugging is an effective approach fordiagnosing production-run failures. To quickly identify failurepredictors from the huge program predicate space, existing techniquesrely on random or heuristics-guided predicate sampling at the userside. However, none of them can satisfy the requirements of low cost,low diagnosis latency, and high diagnosis quality simultaneously,which are all indispensable for statistical debugging to be practical. \nThis paper presents a new technique that tackles the abovechallenges. We formulate the technique as an instanceof abstraction refinement, whereefficient abstract-level profiling is first applied to thewhole program and its execution brings information that can pinpointsuspicious coarse-grained entities that need to be refined.The refinement profiles a corresponding set of fine-grained entities,and generates feedback that determines what to prune and what torefine next. The process is fully automated, and more importantly,guided by a mathematically rigorous analysis that guarantees that ourapproach produces the same debugging results as an exhaustiveanalysis in deterministic settings. \nWe have implemented this technique for both C and Java on both singlemachine and distributed system. A thorough evaluation demonstratesthat our approach yields (1) an order of magnitude reductionin the user-side runtime overhead even compared to a sampling-basedapproach and (2) two orders of magnitude reduction in the size ofdata transferred over the network, completely automatically withoutsacrificing any debugging capability.",
      "Affiliations": [
        "University of California, Irvine",
        "University of California, Irvine",
        "",
        "University of California, Irvine",
        "University of Chicago"
      ],
      "AffiliationsString": "University of California, Irvine, , University of Chicago",
      "Authors": [
        "zhiqiangzuo",
        "lufang1",
        "siauchengkhoo",
        "guoqingharryxu",
        "shanlu"
      ],
      "Key": "splash-2016-oopsla-low-overhead-and-fully-automated-statistical-debugging-with-abstraction-refinement",
      "PersonsString": "Zhiqiang Zuo, Lu Fang, Siau-Cheng Khoo, Harry Xu and Shan Lu",
      "Title": "Low-Overhead and Fully Automated Statistical Debugging with Abstraction Refinement",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-low-overhead-and-fully-automated-statistical-debugging-with-abstraction-refinement"
    },
    {
      "Abstract": "Refactoring engines may have overly weak conditions, overly strong conditions, and transformation issues related to the refactoring definitions. We find that 84% of the test suites of Eclipse and JRRT are concerned to those kinds of bugs. However, the engines still have them. Researchers have proposed a number of techniques for testing refactoring engines. Nevertheless, they may have limitations related to the program generator, time consumption, kinds of bugs, automation, and debugging. We propose and implement a technique to scale testing of refactoring engines. We improve expressiveness of a program generator and use a technique to skip some test inputs to improve performance. Moreover, we propose new oracles to detect behavioral changes using change impact analysis, overly strong conditions using mutation testing, and transformation issues. We evaluate our technique in 28 refactoring implementations of Java (Eclipse and JRRT) and C (Eclipse) and find 119 bugs. The technique reduces the time in 96% using skips while missing only 6% of the bugs. Using the new oracle to identify overly strong conditions, it detects more bugs and facilitates the debugging activity different from previous works. Finally, we evaluate refactoring implementations of Eclipse and JRRT using the input programs of their refactoring test suites and find a number of bugs not detected by the developers.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["melinamongiovi"],
      "Key": "splash-2016-ds-scaling-testing-of-refactoring-engines",
      "PersonsString": "Melina Mongiovi",
      "Title": "Scaling Testing of Refactoring Engines",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-scaling-testing-of-refactoring-engines"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Karlsruhe Institute of Technology, Vincenz-Priessnitz-Str. 1, Karlsruhe, Germany",
        "Karlsruhe Institute of Technology, Vincenz-Priessnitz-Str. 1, Karlsruhe, Germany"
      ],
      "AffiliationsString": ", Karlsruhe Institute of Technology, Vincenz-Priessnitz-Str. 1, Karlsruhe, Germany",
      "Authors": [
        "martinalexanderneumann",
        "christophtobiasbach",
        "stefankratochwil"
      ],
      "Key": "splash-2016-posters-libdsu-towards-hot-swapping-dynamically-linked-libraries-on-stock-linux",
      "PersonsString": "Martin Alexander Neumann, Christoph Tobias Bach and Stefan Kratochwil",
      "Title": "libDSU: Towards Hot-Swapping Dynamically Linked Libraries on Stock Linux",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-libdsu-towards-hot-swapping-dynamically-linked-libraries-on-stock-linux"
    },
    {
      "Abstract": "Not all programming languages can be supported by huge expert engineering teams to make them as fast as major languages such as Java and JavaScript. Two technologies from Oracle Labs are making it easy to achieve similar results with much less work. Truffle is a framework for writing language interpreters on top of the JVM, and Graal is a new JVM dynamic compiler that makes them fast with very modest effort.\nWe\u2019ll use Ruby to give a concrete example of how we have taken a large existing language with much accidental and historical complexity and with a modest team and time have given it performance to rival Java and JavaScript.",
      "Affiliations": [
        "Oracle Labs",
        "Oracle Labs"
      ],
      "AffiliationsString": "Oracle Labs",
      "Authors": [
        "adamwelc",
        "chrisseaton"
      ],
      "Key": "splash-2016-splash-i-truffle-and-graal-fast-programming-languages-with-modest-effort",
      "PersonsString": "Adam Welc and Chris Seaton",
      "Title": "Truffle and Graal: Fast Programming Languages With Modest Effort",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-truffle-and-graal-fast-programming-languages-with-modest-effort"
    },
    {
      "Abstract": "Transactional memory (TM) has long been advocated as a promising pathway to more automated concurrency control for scaling concurrent programs running on parallel hardware. Software TM (STM) has the benefit of being able to run general transactional programs, but at the significant cost of overheads imposed to log memory accesses, mediate access conflicts, and maintain other transaction metadata. Recently, hardware manufacturers have begun to offer commodity hardware TM (HTM) support in their processors wherein the transaction metadata is maintained \u201cfor free\u201d in hardware. However, HTM approaches are only best-effort: they cannot successfully run all transactional programs, whether because of hardware capacity issues (causing large transactions to fail), or compatibility restrictions on the processor instructions permitted within hardware transactions (causing transactions that execute those instructions to fail). In such cases, programs must include failure-handling code to attempt the computation by some other software means, since retrying the transaction would be futile. Thus, a canonical use of HTM is lock elision: replacing lock regions with transactions, retrying some number of times in the case of conflicts, but falling back to locking when HTM fails for other reasons.\nHere, we describe how software and hardware schemes can combine seamlessly into a hybrid system in support of transactional programs, allowing use of low-cost HTM when it works, but reverting to STM when it doesn\u2019t. We describe heuristics used to make this choice dynamically and automatically, but allowing the transition back to HTM opportunistically. Our implementation is for an extension of Java having syntax for both open and closed nested transactions, and boosting, running on the OpenJDK, with dynamic injection of STM mechanisms (into code variants used under STM) and HTM instructions (into code variants used under HTM). Both schemes are compatible to allow different threads to run concurrently with either mechanism, while preserving transaction safety. Using a standard synthetic benchmark we demonstrate that HTM offers significant acceleration of both closed and open nested transactions, while yielding parallel scaling up to the limits of the hardware, whereupon scaling in software continues but with the penalty to throughput imposed by software mechanisms.",
      "Affiliations": [
        "Purdue University",
        "Australian National University, Data61, and Purdue University",
        "University of Massachusetts Amherst"
      ],
      "AffiliationsString": "Purdue University, Australian National University, Data61, and Purdue University, University of Massachusetts Amherst",
      "Authors": [
        "keithchapman",
        "tonyhosking",
        "eliotmoss"
      ],
      "Key": "splash-2016-oopsla-hybrid-stm-htm-for-nested-transactions-on-openjdk",
      "PersonsString": "Keith Chapman, Tony Hosking and Eliot Moss",
      "Title": "Hybrid STM/HTM for Nested Transactions on OpenJDK",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-hybrid-stm-htm-for-nested-transactions-on-openjdk"
    },
    {
      "Abstract": "Recent advances in networking hardware have led to a new generation of Remote Memory Access (RMA) networks in which processors from different machines can communicate directly, bypassing the operating system and allowing higher performance. Researchers and practitioners have proposed libraries and programming models for RMA to enable the development of applications running on these networks, \nHowever, the memory models implied by these RMA libraries and languages are often loosely specified, poorly understood, and differ depending on the underlying network architecture and other factors. Hence, it is difficult to precisely reason about the semantics of RMA programs or how changes in the network architecture affect them. \nWe address this problem with the following contributions: (i) a \\emph{coreRMA} language which serves as a common foundation, formalizing the essential characteristics of RMA programming; (ii) complete axiomatic semantics for that language; (iii) integration of our semantics with an existing constraint solver, enabling us to exhaustively generate \\emph{coreRMA} programs (litmus tests) up to a specified bound and check whether the tests satisfy their specification; and (iv) extensive validation of our semantics on real-world RMA systems.We generated and ran $7441$ litmus tests using each of the low-level RMA network APIs: DMAPP, VPI Verbs, and Portals 4. Our results confirmed that our model successfully captures behaviors exhibited by these networks. Moreover, we found RMA programs that behave inconsistently with existing documentation, confirmed by network experts. \nOur work provides an important step towards understanding existing RMA networks, thus influencing the design of future RMA interfaces and hardware.",
      "Affiliations": [
        "",
        "University of Waterloo, Canada",
        "ETH Zurich",
        "ETH Zurich"
      ],
      "AffiliationsString": ", University of Waterloo, Canada, ETH Zurich",
      "Authors": [
        "andreidan",
        "patricklam",
        "torstenhoefler",
        "martinvechev"
      ],
      "Key": "splash-2016-oopsla-modeling-and-analysis-of-remote-memory-access-programming",
      "PersonsString": "Andrei Dan, Patrick Lam, Torsten Hoefler and Martin Vechev",
      "Title": "Modeling and Analysis of Remote Memory Access Programming",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-modeling-and-analysis-of-remote-memory-access-programming"
    },
    {
      "Abstract": "Announcement of the Proceedings of the ACM journal series that will be used as publication venue for OOPSLA 2017 and beyond.",
      "Affiliations": ["University of California, Irvine"],
      "AffiliationsString": "University of California, Irvine",
      "Authors": ["cristalopes"],
      "Key": "splash-2016-keynotes-proceedings-of-the-acm",
      "PersonsString": "Crista Lopes",
      "Title": "Proceedings of the ACM",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-proceedings-of-the-acm"
    },
    {
      "Abstract": "We present a novel technique for automatic program correction in MOOCs, capable of fixing both syntactic and semantic errors without manual, problem specific correction strategies. Given an incorrect student program, it \\emph{generates} candidate programs from a distribution of likely corrections, and checks each candidate for correctness against a test suite.\nThe key observation is that in MOOCs many programs share similar code fragments, and the seq2seq neural network model, used in the natural-language processing task of machine translation, can be modified and trained to recover these fragments.\nExperiment shows our scheme can correct 29\\% of all incorrect submissions and out-performs state of the art approach which requires manual, problem specific correction strategies.",
      "Affiliations": [
        "",
        "MIT",
        "MIT CSAIL",
        "MIT"
      ],
      "AffiliationsString": ", MIT, MIT CSAIL",
      "Authors": [
        "yewenpu",
        "karthiknarasimhan",
        "armandosolarlezama",
        "reginabarzilay"
      ],
      "Key": "splash-2016-posters-sk_p-a-neural-program-corrector-for-moocs",
      "PersonsString": "Yewen Pu, Karthik Narasimhan, Armando Solar-Lezama and Regina Barzilay",
      "Title": "sk_p: a neural program corrector for MOOCs",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-sk_p-a-neural-program-corrector-for-moocs"
    },
    {
      "Abstract": "Developing a type system with a soundness proof is hard. The VeriTaS project aims at simplifying the development of sound type systems through automation of soundness proofs and through automated derivation of efficient type checkers from sound type system specifications. Within the VeriTaS project, I focus on developing an interface for the verification of progress and preservation proofs which shall automate standard parts such proofs. To achieve this, I propose to identify recurring proof strategies in progress and preservation proofs from the literature, to develop a format for abstractly representing these proof strategies, and to mechanize them by integrating with existing theorem provers.",
      "Affiliations": ["TU Darmstadt"],
      "AffiliationsString": "TU Darmstadt",
      "Authors": ["sylviagrewe"],
      "Key": "splash-2016-ds-veritas-verification-of-type-system-specifications",
      "PersonsString": "Sylvia Grewe",
      "Title": "VeriTaS: Verification of Type System Specifications",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-ds-veritas-verification-of-type-system-specifications"
    },
    {
      "Abstract": "This is a meeting of the SPLASH 2017 organizing committee meeting; invitation only.",
      "Affiliations": ["University of British Columbia"],
      "AffiliationsString": "University of British Columbia",
      "Authors": ["gailmurphy"],
      "Key": "splash-2016-steering-committee-meetings-splash-2017-organizing-committee-meeting",
      "PersonsString": "Gail Murphy",
      "Title": "SPLASH 2017 Organizing Committee Meeting",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/splash-2016-steering-committee-meetings-splash-2017-organizing-committee-meeting"
    },
    {
      "Abstract": "With increasing amounts of data available on the web and a diverse range of users interested in programmatically accessing that data, web automation must become easier. Automation helps users complete many tedious interactions, such as scraping data, completing forms, or transferring data between websites.However, writing web automation scripts typically requires an expert programmer because the writer must be able to reverse engineer the target webpage. We have built a record and replay tool, Ringer, that makes web automation accessible to non-coders. Ringer takes a user demonstration as input and creates a script that interacts with the page as a user would.This approach makes Ringer scripts more robust to webpage changes because user-facing interfaces remain relatively stable compared to the underlying webpage implementations. We evaluated our approach on benchmarks recorded on real webpages and found that it replayed 4x more benchmarks than a state-of-the-art replay tool.",
      "Affiliations": [
        "UC Berkeley",
        "University of California, Berkeley",
        "University of Washington, USA",
        "Microsoft Research"
      ],
      "AffiliationsString": "UC Berkeley, University of California, Berkeley, University of Washington, USA, Microsoft Research",
      "Authors": [
        "shaonbarman",
        "sarahchasins",
        "rastislavbodik",
        "sumitgulwani"
      ],
      "Key": "splash-2016-oopsla-ringer-web-automation-by-demonstration",
      "PersonsString": "Shaon Barman, Sarah Chasins, Rastislav Bodik and Sumit Gulwani",
      "Title": "Ringer: Web Automation by Demonstration",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-ringer-web-automation-by-demonstration"
    },
    {
      "Abstract": "Semantic subtyping is an approach for defining sound andcomplete procedures to decide subtyping for expressive types,including union and intersection types; although it has beenexploited especially in functional languages for XML basedprogramming, recently it has been partially investigated inthe context of object-oriented languages, and a sound andcomplete subtyping algorithm has been proposed for recordtypes, but restricted to immutable fields, with union andrecursive types interpreted coinductively to support cyclicobjects.In this work we address the problem of studying semanticsubtyping for imperative object-oriented languages, wherefields can be mutable; in particular, we add read/write fieldannotations to record types, and, besides union, we considerintersection types as well, while maintaining coinductiveinterpretation of recursive types. In this way, we get a richernotion of type with a flexible subtyping relation, able toexpress a variety of type invariants useful for enforcing staticguarantees for mutable objects.The addition of these features radically changes the defi-nition of subtyping, and, hence, the corresponding decisionprocedure, and surprisingly invalidates some subtyping lawsthat hold in the functional setting.We propose an intuitive model where mutable record val-ues contain type information to specify the values that can becorrectly stored in fields. Such a model, and the correspond-ing subtyping rules, require particular care to avoid circularitybetween coinductive judgments and their negations which,by duality, have to be interpreted inductively.A sound and complete subtyping algorithm is provided,together with a prototype implementation.",
      "Affiliations": [
        "University of Genova",
        ""
      ],
      "AffiliationsString": "University of Genova, ",
      "Authors": [
        "davideancona",
        "andreacorradi"
      ],
      "Key": "splash-2016-oopsla-semantic-subtyping-for-imperative-object-oriented-languages",
      "PersonsString": "Davide Ancona and Andrea Corradi",
      "Title": "Semantic Subtyping for Imperative Object-Oriented Languages",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-semantic-subtyping-for-imperative-object-oriented-languages"
    },
    {
      "Abstract": "An account of our experiences when building systems for useful static analysis. We describe the construction of Tricorder, the internal static analysis pipeline at Google, and the lessons learnt about how to make such tools useful. Next, we describe Shipshape, the open-source version of Tricorder. Finally, we describe Tricium, the static analysis pipeline which will bring the benefits of Tricorder to Chromium.",
      "Affiliations": ["Google"],
      "AffiliationsString": "Google",
      "Authors": ["emmasoderberg"],
      "Key": "splash-2016-splash-i-from-tricorder-to-tricium-useful-static-analysis-and-the-importance-of-workflow-integration",
      "PersonsString": "Emma Söderberg",
      "Title": "From Tricorder to Tricium: Useful Static Analysis and the Importance of Workflow Integration",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-from-tricorder-to-tricium-useful-static-analysis-and-the-importance-of-workflow-integration"
    },
    {
      "Abstract": "Verifying concurrent programs is challenging due to the exponentially large thread interleaving space. The problem is exacerbated by relaxed memory models such as Total Store Order (TSO) and Partial Store Order (PSO) which further explode the interleaving space by reordering instructions. A recent advance, Maximal Causality Reduction (MCR), has shown great promise to improve verification effectiveness by maximally reducing redundant explorations. However, the original MCR only works for the Sequential Consistency (SC) memory model, but not for TSO and PSO. In this paper, we develop novel extensions to MCR by solving two key problems under TSO and PSO: 1) generating interleavings that can reach new states by encoding the operational semantics of TSO and PSO with first-order logical constraints and solving them with SMT solvers, and 2) enforcing TSO and PSO interleavings by developing novel replay algorithms that allow executions out of the program order. We show that our approach successfully enables MCR to effectively explore TSO and PSO interleavings. We have compared our approach with a recent Dynamic Partial Order Reduction (DPOR) algorithm for TSO and PSO and a SAT-based stateless model checking approach. Our results show that our approach is much more effective than the other approaches for both state-space exploration and bug finding \u2013 on average it explores 5-10X fewer executions and finds many bugs that the other tools cannot find.",
      "Affiliations": [
        "Texas A&M University",
        "Texas A&M University"
      ],
      "AffiliationsString": "Texas A&M University",
      "Authors": [
        "shiyouhuang",
        "jeffhuang"
      ],
      "Key": "splash-2016-oopsla-maximal-causality-reduction-for-tso-and-pso",
      "PersonsString": "Shiyou Huang and Jeff Huang",
      "Title": "Maximal Causality Reduction for TSO and PSO",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-maximal-causality-reduction-for-tso-and-pso"
    },
    {
      "Abstract": "With the advent of alternative energy and the Internet of Things, there is suddenly a plethora of new technologies that will require major restructuring of cities. Some examples are autonomous vehicles, solar energy, unmanned aerial vehicles, and smart homes and buildings. In order to establish sound public policies, all these new technologies can greatly benefit from urban simulations, to measure their impact on the city and its people before the policies are defined.\nYet, despite all the reasons why complex simulations are desirable for decision and policy making, and despite advances in computing power, large distributed simulations of urban areas are still rarely used, with most of their adoption in military applications. The reality is that developing distributed simulations is much harder than developing non-distributed ones, and requires a much higher level of software engineering expertise, which usually modeling and simulation experts don\u2019t have.\nMy students and I have been exploring how some of the ideas underlying Aspect-Oriented Programming can help overcome the design challenges faced by distributed simulations, as applied to urban simulations. There are many similarities between the concept of aspect (as given by AOP) and the general concept of \u201caspect of a city\u201d that urban planning researchers routinely use. This talk looks at urban simulations from a socio-technical systems design perspective, and puts forward the idea that non-traditional decompositions are not just beneficial for these applications, but are likely the only way to develop realistic urban simulations. I will present a data-oriented framework that we are developing called the Spacetime framework, specifically designed for enabling large, collaborative, and decentralized simulations, and will show how it is being used in practice.",
      "Affiliations": ["University of California, Irvine"],
      "AffiliationsString": "University of California, Irvine",
      "Authors": ["cristalopes"],
      "Key": "splash-2016-splash-i-simulating-cities-the-spacetime-framework",
      "PersonsString": "Crista Lopes",
      "Title": "Simulating Cities: The Spacetime Framework",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-simulating-cities-the-spacetime-framework"
    },
    {
      "Abstract": "In this session the OOPSLA 10-year Most Influential Paper Award will be handed out",
      "Affiliations": ["Delft University of Technology, Netherlands"],
      "AffiliationsString": "Delft University of Technology, Netherlands",
      "Authors": ["eelcovisser"],
      "Key": "splash-2016-keynotes-oopsla-10-year-most-influential-paper-award",
      "PersonsString": "Eelco Visser",
      "Title": "OOPSLA 10-year Most Influential Paper Award",
      "Type": "Awards",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-oopsla-10-year-most-influential-paper-award"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of California, Berkeley"],
      "AffiliationsString": "University of California, Berkeley",
      "Authors": ["brianharvey"],
      "Key": "splash-2016-splash-e-snap-scheme-disguised-as-scratch",
      "PersonsString": "Brian Harvey",
      "Title": "Snap!: Scheme Disguised as Scratch",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-e-snap-scheme-disguised-as-scratch"
    },
    {
      "Abstract": "We introduce a correspondence between Web applications and domain specific languages (DSLs), which derives a comparison of their ecosystems. We note that while most Web applications today are implemented in ways that correspond to external DSLs, very little attention is given to methods corresponding to internal DSLs. We contribute such a method, and demonstrate an application implemented this way.",
      "Affiliations": [
        "Open University and Technion IIT",
        "University of Haifa"
      ],
      "AffiliationsString": "Open University and Technion IIT, University of Haifa",
      "Authors": [
        "davidlorenz",
        "boazrosenan"
      ],
      "Key": "splash-2016-posters-a-web-application-is-a-domain-specific-language",
      "PersonsString": "David H. Lorenz and Boaz Rosenan",
      "Title": "A Web Application is a Domain-Specific Language",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-posters-a-web-application-is-a-domain-specific-language"
    },
    {
      "Abstract": "Please note that PLMW is a full-day event, to create a relaxed environment for the students to interact with each other and the speakers, we ask people with an interest in PLMW to not attend specific sessions but rather take part in the workshop and join for the whole day.",
      "Affiliations": ["Portland State University"],
      "AffiliationsString": "Portland State University",
      "Authors": ["andrewblack"],
      "Key": "splash-2016-plmw-why-programming-languages-matter",
      "PersonsString": "Andrew Black",
      "Title": "Why Programming Languages Matter",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-plmw-why-programming-languages-matter"
    },
    {
      "Abstract": "Snap! is a visual, blocks-based programming language powerful enough to support serious computer science courses. It has first class procedures, to support arbitrary control structures; first class lists, to support arbitrary data structures; and first class continuations, partly to justify the title of this talk, but also useful to allow users to build multithreading independent of the thread scheduler built into Snap! itself. It also includes an object system with prototype-based inheritance, which we argue is the right choice in a language for learners.\nI\u2019ll also briefly discuss the \u201cBeauty and Joy of Computing\u201d course that has informed the design of Snap!, as part of a wider effort to bring computer science to an audience outside its usual population of white and Asian males.",
      "Affiliations": ["University of California, Berkeley"],
      "AffiliationsString": "University of California, Berkeley",
      "Authors": ["brianharvey"],
      "Key": "splash-2016-splash-i-snap",
      "PersonsString": "Brian Harvey",
      "Title": "Snap!: Scheme Disguised as Scratch",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-splash-i-snap"
    },
    {
      "Abstract": "Practical programs share large modules of code. However, many program analyses are ineffective at reusing analysis results for shared code across programs. We present POLYMER, an analysis optimizer to address this problem. POLYMER runs the analysis offline on a corpus of training programs and learns analysis facts over shared code. It prunes the learnt facts to eliminate intermediate computations and then reuses these pruned facts to accelerate the analysis of other programs that share code with the training corpus.We have implemented POLYMER to accelerate analyses specified in Datalog, and apply it to optimize two analyses for Java programs: a call-graph analysis that is flow- and context-insensitive, and a points-to analysis that is flow- and context-sensitive. We evaluate the resulting analyses on ten programs from the DaCapo suite that share the JDK library. POLYMER achieves average speedups of 2.6&times; for the call- graph analysis and 5.2&times; for the points-to analysis.",
      "Affiliations": [
        "Georgia Tech",
        "Georgia Institute of Technology",
        "Georgia Tech",
        "Georgia Tech"
      ],
      "AffiliationsString": "Georgia Tech, Georgia Institute of Technology",
      "Authors": [
        "sulekhakulkarni",
        "ravimangal",
        "xinzhang",
        "mayurnaik"
      ],
      "Key": "splash-2016-oopsla-accelerating-program-analyses-by-cross-program-training",
      "PersonsString": "Sulekha Kulkarni, Ravi Mangal, Xin Zhang and Mayur Naik",
      "Title": "Accelerating Program Analyses by Cross-Program Training",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-oopsla-accelerating-program-analyses-by-cross-program-training"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "splash-2016-social-monday-poster-reception",
      "PersonsString": "",
      "Title": "Monday Poster Reception",
      "Type": "Social Event",
      "URL": "http://2016.splashcon.org/event/splash-2016-social-monday-poster-reception"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Stellenbosch University",
        "CWI & University of Groningen"
      ],
      "AffiliationsString": "Stellenbosch University, CWI & University of Groningen",
      "Authors": [
        "berndfischer",
        "tijsvanderstorm"
      ],
      "Key": "splash-2016-steering-committee-meetings-gpce-sle-steering-committee-meeting",
      "PersonsString": "Bernd Fischer and Tijs van der Storm",
      "Title": "GPCE/SLE Steering Committee Meeting",
      "Type": "Meeting",
      "URL": "http://2016.splashcon.org/event/splash-2016-steering-committee-meetings-gpce-sle-steering-committee-meeting"
    },
    {
      "Abstract": "",
      "Affiliations": ["Delft University of Technology, Netherlands"],
      "AffiliationsString": "Delft University of Technology, Netherlands",
      "Authors": ["eelcovisser"],
      "Key": "splash-2016-keynotes-welcome-to-splash-2016",
      "PersonsString": "Eelco Visser",
      "Title": "Welcome to SPLASH 2016",
      "Type": "Day opening",
      "URL": "http://2016.splashcon.org/event/splash-2016-keynotes-welcome-to-splash-2016"
    },
    {
      "Abstract": "The third round of the Student Research Competition at OOPSLA consists of 10-minute talks by the student finalists.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "splash-2016-src-phase-3-talks",
      "PersonsString": "",
      "Title": "Phase 3 Talks",
      "Type": "Talk",
      "URL": "http://2016.splashcon.org/event/splash-2016-src-phase-3-talks"
    }
  ],
  "Name": "SPLASH 2016",
  "People": [
    {
      "Affiliation": "IBM Research",
      "Bio": "Marco Pistoia, Ph.D. has worked for IBM Corporation since January 1996 and is currently an IBM Distinguished Researcher and Senior Manager at the IBM Thomas J. Watson Research Center in New York, where he manages the Mobile Enterprise Software research group. In January 2010, he was one of 38 IBM employees worldwide to be bestowed the title of IBM Master Inventor. In June 2016, he was nominated the Chair of the Mobile Computing Professional Interest Community at IBM Research. He is the inventor of 115 patents granted by the United States Patent and Trademark Office, and 171 patent applications. Dr. Pistoia has designed and implemented numerous analysis components and contributed large amounts of code to several IBM products. Dr. Pistoia has lectured at 22 top universities in 9 countries worldwide. He has written 10 books and published numerous papers and journal articles on various aspects of Program Analysis, Language-Based Security and Mobile Computing. In the course of his career, Dr. Pistoia received three ACM Distinguished Paper Awards (2007, 2011 and 2014). In September 2007, the Italian Ministry of Education, University and Research, the National Committee of the Italian Presidents of Faculties of Sciences and Technologies, and Confindustria, Italy\u2019s leading organization representing all the Italian manufacturing and service companies, presented Pistoia as one of the 70 most successful Italian mathematicians who graduated from an Italian university between the years 1980 and 2000. His biography was published in the book \u201cMatematici al Lavoro\u201d.",
      "Key": "marcopistoia",
      "Name": "Marco Pistoia",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-pistoia",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marcopistoia/d620373b-14a7-4f04-90a8-285c72a6c4cb/small.jpg"
    },
    {
      "Affiliation": "University of Washington",
      "Key": "dougwoos",
      "Name": "Doug Woos",
      "URL": "www.dougwoos.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/dougwoos/53f166f3-4886-4bc7-b995-a4602c46c576/small.jpg"
    },
    {
      "Affiliation": "Oregon State University",
      "Key": "martinerwig",
      "Name": "Martin Erwig",
      "URL": "http://oregonstate.edu/~erwig/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/martinerwig/8fd12ecd-2d70-44d3-a670-d5ef12393f9c/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "mikegodfrey",
      "Name": "Mike Godfrey",
      "URL": "http://plg.uwaterloo.ca/~migod/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mikegodfrey/009cc522-73e7-4889-9919-c4e3358e8125/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "floriserich",
      "Name": "Floris Erich"
    },
    {
      "Affiliation": "Lockheed Martin Aeronautics Company",
      "Key": "ademolapeteradejokun",
      "Name": "Ademola Peter Adejokun",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ademolapeteradejokun/5dd71506-eab0-476a-8161-6b66773dba5f/small.jpg"
    },
    {
      "Affiliation": "University of Nevada, Las Vegas ",
      "Bio": "Andreas Stefik is an Assistant Professor in the Department of Computer Science at the University of Nevada, Las Vegas, NV, USA. He completed his Ph.D. in computer science at Washington State University in 2008 and also holds a bachelor\u2019s degree in music. Stefik\u2019s research focuses on computer programming languages and development environments, with an emphasis on how competing language designs impact people in practice. He won the 2011 Java Innovation Award for his work on the National Science Foundation funded Sodbeans programming environment and is the inventor of the Quorum Programming Language.",
      "Key": "andreasstefik",
      "Name": "Andreas Stefik",
      "URL": "http://web.cs.unlv.edu/stefika/index.php",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andreasstefik/00dc2029-b769-4771-89b4-6018da3b92dc/small.jpg"
    },
    {
      "Affiliation": "HPI",
      "Bio": "Robert Hirschfeld is a Professor of Computer Science at the Hasso Plattner Institute at the University of Potsdam, Germany. There he founded and leads the Software Architecture Group which is concerned with fundamental elements and structures of software. Methods and tools are developed for improving the comprehension and design of complex and interesting systems.\nHe served as a visiting professor at the Tokyo Institute of Technology (東京工業大学) and The University of Tokyo (東京大学), Japan.\nRobert was a senior researcher with DoCoMo Euro-Labs, the European research facility of NTT DoCoMo Japan, where he worked on infrastructure components for next generation mobile communication systems with a focus on dynamic service adaptation and context-oriented programming.\nPrior to joining DoCoMo Euro-Labs, he was a principal engineer at Windward Solutions in Sunnyvale, California, where he designed and implemented distributed object systems, consulted in the area of object database technologies, and developed innovative software products and applications.\nRobert received a Ph.D. in Computer Science from the Ilmenau University of Technology, Germany.",
      "Key": "roberthirschfeld",
      "Name": "Robert Hirschfeld",
      "URL": "http://www.hirschfeld.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/roberthirschfeld/994ef4df-a890-4f16-bc1b-73b117dab33c/small.jpg"
    },
    {
      "Affiliation": "CERT",
      "Key": "loriflynn",
      "Name": "Lori Flynn",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/loriflynn/0210b471-13a0-4da9-b99a-dd1b1e00c1bc/small.jpg"
    },
    {
      "Affiliation": "Bundeswehr University Munich",
      "Bio": "Sonja Schimmler is a Postdoc at Universit&auml;t der Bundeswehr M&uuml;nchen. In her research, she focuses on tool creation and tool integration for (visual) domain-specific languages, and currently focuses on tracking the evolution of text and diagrams.",
      "Key": "sonjaschimmler",
      "Name": "Sonja Schimmler",
      "URL": "http://www.unibw.de/sonja.schimmler",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sonjaschimmler/02602164-5367-4177-9952-56bfa837457c/small.jpg"
    },
    {
      "Affiliation": "University of Magdeburg, Germany",
      "Key": "ivonneschroter",
      "Name": "Ivonne Schröter"
    },
    {
      "Affiliation": "University of L'Aquila",
      "Key": "rominaeramo",
      "Name": "Romina Eramo",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rominaeramo/706a84c6-9770-460b-8581-f2ea97ab221d/small.jpg"
    },
    {
      "Affiliation": "University of Kansas",
      "Bio": "Andrew (Andy) Gill was born and educated in Scotland, and has spent his professional career in the United States. Andy received his Ph.D. from the University of Glasgow in 1996, then spent three years in industry as a compiler developer, and a year in academia as a principal project scientist. He co-founded Galois in 2000, a technology transfer company that used language technologies to create trustworthiness in critical systems. In 2008 he returned to academia and research, joining the University of Kansas and the Information and Telecommunication Technology Center.\nAndy believes that functional languages like Haskell are a great medium for expressing algorithms and solving problems. Since returning to academia, he has targeted the application areas of telemetry and signal processing, specializing in generating high performance circuits from specifications. His research interests include optimization, language design, debugging, and dependability. The long-term goal of his research is to offer engineers and practitioners the opportunity to write clear and high-level executable specifications that can realistically be compiled into efficient implementations.",
      "Key": "andygill",
      "Name": "Andy Gill",
      "URL": "http://ku-fpg.github.io/people/andygill/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andygill/02d84431-d97e-43e1-8872-d62bcc3bd266/small.jpg"
    },
    {
      "Affiliation": "Iowa State University, USA",
      "Bio": "Hridesh Rajan is a full professor of computer science at Iowa State University, where he has been since 2005. Professor Rajan earned his MS and Ph.D. from the University of Virginia in 2004 and 2005 respectively. Professor Rajan\u2019s recent research and educational activities are aimed at decreasing the barrier to entry to data-driven sciences to broaden participation. His work on the Boa project is aimed at invention and refinement of cyberinfrastructures that democratize data-driven science. His work on the Midwest Big Data Summer School is experimenting with broadly accessible data science curricula. Professor Rajan was the founding general chair of the Midwest Big Data Summer School. Professor Rajan\u2019s research interests also include programming language design and implementation, and software engineering. He leads two research projects: Panini, whose goals are to enable modular reasoning about concurrent programs, and Boa that was established in Summer 2012 as an end-to-end infrastructure for analyzing large-scale software repositories and other open data sets. Professor Rajan is the director of the Laboratory for Software Design at Iowa State University, director of graduate admissions and recruitment for the computer science department, chair of the curriculum committee for the data science educational programs at Iowa State University, and chair of the information technology committee for the university. Professor Rajan serves on the steering committee of the Midwest Big Data Hub, a consortium of universities in the Midwest region of the United States focussed on promoting data science activities. Professor Rajan is a recipient of the National Science Foundation CAREER award in 2009, LAS Award for Early Achievement in Research in 2010, and a Big-12 Fellowship in 2012. He is a senior member of ACM, and a member of IEEE, and AAAS.",
      "Key": "hrideshrajan",
      "Name": "Hridesh Rajan",
      "URL": "http://www.cs.iastate.edu/~hridesh",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/hrideshrajan/02f05609-596b-44b9-b918-6c3cfb9f44ff/small.jpg"
    },
    {
      "Affiliation": "Grinnell College, USA",
      "Key": "thunguyen",
      "Name": "Thu Nguyen"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "elisagonzalezboix",
      "Name": "Elisa Gonzalez Boix",
      "URL": "http://soft.vub.ac.be/~egonzale",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/elisagonzalezboix/0375fe76-c1c0-460c-abe6-96b9b804d394/small.jpg"
    },
    {
      "Affiliation": "Cognitec",
      "Bio": "David Nolen is a software engineer for Cognitect. He enjoys making music, writing JavaScript, writing ClojureScript, and exploring new approaches to user interface programming.",
      "Key": "davidnolen",
      "Name": "David Nolen",
      "URL": "https://www.crunchbase.com/person/david-nolen#/entity",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidnolen/0419e542-726d-42cd-a8b5-a0b595754beb/small.jpg"
    },
    {
      "Affiliation": "Carleton University, Canada",
      "Bio": "Robert Biddle is Professor of Human-Computer Interaction in the School of Computer Science at Carleton University in Ottawa, Canada. His research covers both human and technical aspects of the design of interactive computer systems. Robert\u2019s research work is on usable computer security, on human aspects of computer games and hyper-media, and on collaborative software development processes. For details of publications and current projects, please see http://hotsoft.carleton.ca/",
      "Key": "robertbiddle",
      "Name": "Robert Biddle",
      "URL": "https://www.scs.carleton.ca/people/faculty/robert-biddle",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robertbiddle/04850e4c-d264-4979-a3a9-fa43cdc70719/small.jpg"
    },
    {
      "Affiliation": "TU Braunschweig, Germany",
      "Key": "matthiaskowal",
      "Name": "Matthias Kowal"
    },
    {
      "Affiliation": "University of Antwerp, Belgium",
      "Key": "bartmeyers",
      "Name": "Bart Meyers"
    },
    {
      "Affiliation": "University of Campinas (UNICAMP)",
      "Bio": "Guido Araujo received his Ph.D. degree from Princeton University in 1997. He worked as a compiler consultant for Conexant Semiconductor Systems and Mindspeed Technologies from 1997 \u2013 2000 (California, USA). He is currently a Full Professor of Computer Science and Engineering at the University of Campinas (UNICAMP), Sao Paulo, Brazil.",
      "Key": "guidoaraujo",
      "Name": "Guido Araujo",
      "URL": "https://guidoaraujo.wordpress.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guidoaraujo/0540fc97-283c-414e-b4fa-d79da63d987e/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "kyndylannienhuis",
      "Name": "Kyndylan Nienhuis"
    },
    {
      "Affiliation": "CWI, Netherlands",
      "Key": "jurgenvinju",
      "Name": "Jurgen Vinju",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jurgenvinju/31e5a54c-e7a3-4c37-b0c9-ca2254e3ef59/small.jpg"
    },
    {
      "Affiliation": "Oregon State University, USA",
      "Bio": "PhD student at Oregon State University. I am interested in making lives of software engineers better, as well as educating the next generation of software engineers. I can also be found on twitter as @michaelhilton",
      "Key": "michaelhilton",
      "Name": "Michael Hilton",
      "URL": "http://web.engr.oregonstate.edu/~hiltonm/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelhilton/3238b4ed-0589-4042-b8c9-c968b8d13aea/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Key": "seanmcdirmid",
      "Name": "Sean McDirmid",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/seanmcdirmid/06d3fe62-96c9-41c3-b746-c3cd17a6ac60/small.jpg"
    },
    {
      "Affiliation": "Altran",
      "Key": "jiazhang",
      "Name": "Jia Zhang"
    },
    {
      "Affiliation": "University of Paderborn, Germany",
      "Key": "anthonyanjorin1",
      "Name": "Anthony Anjorin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/anthonyanjorin1/158aeedd-1bac-498b-9521-79557507e112/small.jpg"
    },
    {
      "Affiliation": "University of Washington",
      "Key": "konstantinweitz",
      "Name": "Konstantin Weitz",
      "URL": "http://konne.me",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/konstantinweitz/7ca25205-f53e-4659-a16a-511b86ab20f2/small.jpg"
    },
    {
      "Affiliation": "University of Passau",
      "Key": "norbertsiegmund",
      "Name": "Norbert Siegmund",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/norbertsiegmund/076ee5f3-bf5d-4d9d-907f-0977287183a4/small.jpg"
    },
    {
      "Affiliation": "University Lille 1 and INRIA",
      "Key": "romainrouvoy",
      "Name": "Romain Rouvoy",
      "URL": "http://www.lifl.fr/~rouvoy/"
    },
    {
      "Affiliation": "Ulm University, Germany",
      "Key": "jorgdomaschka",
      "Name": "Jörg Domaschka",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jorgdomaschka/80e84aa7-f60a-4fe0-8a82-df554264147a/small.jpg"
    },
    {
      "Affiliation": "Waseda University, Japan",
      "Key": "mamorushimaoka",
      "Name": "Mamoru Shimaoka"
    },
    {
      "Affiliation": "University of Applied Sciences Rapperswil, Switzerland",
      "Bio": "Mirko is a lecturer and researcher at HSR University of Applied Sciences in Rapperswil, Switzerland. He teaches Java and Scala, Mobile and GUI Engineering, Parallel Programming and Cloud Computing. He\u2019s also an (infrequent) contributor to the Scala IDE and started the scala-refactoring project.",
      "Key": "mirkostocker",
      "Name": "Mirko Stocker",
      "URL": "http://www.hsr.ch",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mirkostocker/087c3d73-61c7-4ebe-86d0-0274087e8a51/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Key": "hansjboehm",
      "Name": "Hans-J. Boehm",
      "URL": "http://hboehm.info",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/hansjboehm/08aaa74d-c145-4c6b-af0a-19bbf4d6767a/small.jpg"
    },
    {
      "Affiliation": "1plusX, Switzerland",
      "Key": "lukaswegmann",
      "Name": "Lukas Wegmann"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "brandonlucia",
      "Name": "Brandon Lucia",
      "URL": "http://brandonlucia.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/brandonlucia/16fdd4eb-8f38-4c24-b29c-fa7ed8a15fb8/small.jpg"
    },
    {
      "Affiliation": "itemis AG / TU Delft",
      "Bio": "Tam&aacute;s Szab&oacute; works as a Software Engineer for itemis in Stuttgart and he is a PhD student at TU Delft. His focus is on DSLs, incremental computations, concurrency and static program analysis.",
      "Key": "tamasszabo",
      "Name": "Tamás Szabó",
      "URL": "https://szabta89.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tamasszabo/09f09be8-d54c-4e35-93d5-144b9643961b/small.jpg"
    },
    {
      "Affiliation": "Viewpoints Research Institute",
      "Key": "yoshikiohshima",
      "Name": "Yoshiki Ohshima"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "didiervojtisek",
      "Name": "Didier Vojtisek",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/didiervojtisek/e2c3c377-1633-4d05-92fb-d5d4f54c2cda/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "andreidan",
      "Name": "Andrei Dan"
    },
    {
      "Affiliation": " TRAME Team, ESEO , France",
      "Key": "fredericjouault",
      "Name": "Frédéric Jouault"
    },
    {
      "Affiliation": "IBM Research, USA",
      "Bio": "Priya Nagpurkar is a research staff member and manager at I.B.M.\u2019s T.J. Watson Research Center. She currently manages the Cloud DevOps group in the Cloud Platform and Services department. Priya and her group work on tools and technologies to enable the next generation of DevOps capabilities for cloud environments. Her research interests include program analysis, software testing, debugging, and performance analysis and optimization, especially for distributed systems.\nHer previous work at IBM focused on characterizing and optimizing emerging workloads across different layers of the application and system stack, with an emphasis on language runtimes and processor architecture and design. Priya received her Ph.D. in Computer Science from the University of California, Santa Barbara in September 2007",
      "Key": "priyanagpurkar",
      "Name": "Priya Nagpurkar",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-pnagpurkar",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/priyanagpurkar/0a854a5f-c51e-4cd6-8696-f891afaaee64/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "stefanreichhart",
      "Name": "Stefan Reichhart"
    },
    {
      "Affiliation": "University of Parma, Italy",
      "Key": "stefaniamonica",
      "Name": "Stefania Monica"
    },
    {
      "Affiliation": "University of L'Aquila, Italy",
      "Key": "henrymuccini",
      "Name": "Henry Muccini",
      "URL": "http://www.henrymuccini.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/henrymuccini/819226f2-85c3-475b-b5fb-3c0db9054262/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "reginabarzilay",
      "Name": "Regina Barzilay"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Bio": "I am a postdoctoral researcher at TU Darmstadt in Germany, from where I previously obtained a Ph.D. in computer science. My research interests span a variety of topics related to the design and analysis of dependable software systems from operating system design to system-level test efficiency.",
      "Key": "stefanwinter",
      "Name": "Stefan Winter",
      "URL": "http://www.stefan-winter.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stefanwinter/0b037858-81a3-488d-8ac9-92f2f1207f72/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "elliottslaughter",
      "Name": "Elliott Slaughter"
    },
    {
      "Affiliation": "University of Montreal",
      "Key": "eugenesyriani",
      "Name": "Eugene Syriani",
      "URL": "http://www.iro.umontreal.ca/~syriani",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/eugenesyriani/9ab60fb5-0bb0-4e75-8978-f14d7c10fc0e/small.jpg"
    },
    {
      "Affiliation": "University of L'Aquila, Italy",
      "Bio": "Mirco Franzago is a PhD student in Information and Communication Technologies (Software Engineering and Intelligent Systems curriculum) at the Department of Information Engineering, Computer Science and Mathematics (DISIM) - University of L\u2019Aquila, Italy. His research focuses on collaborative software engineering, model-driven engineering and mobile enabled systems, especially on how MDE techniques can be exploited to support stakeholders\u2019 collaboration during the design and development of complex and mobile-enabled software systems. He is program committee member and reviewer for international conferences and workshops in his fields of interest.",
      "Key": "mircofranzago",
      "Name": "Mirco Franzago",
      "URL": "https://www.linkedin.com/in/mirco-franzago-32007728",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mircofranzago/641f9a4a-8412-4dbe-92fd-1a868c213f62/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "yewenpu",
      "Name": "Yewen Pu"
    },
    {
      "Affiliation": "Northeastern University",
      "Key": "paleyli",
      "Name": "Paley Li",
      "URL": "https://palez.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/paleyli/bc493d20-e860-45af-b8a2-983009975a82/small.jpg"
    },
    {
      "Affiliation": "MetaCase",
      "Key": "stevenkelly",
      "Name": "Steven Kelly",
      "URL": "http://www.metacase.com/blogs/stevek/blogView"
    },
    {
      "Affiliation": "University of Colorado, Boulder",
      "Bio": "I\u2019m interested in designing PL-based abstractions for settings in which humans and computers cooperate to create and process information. In particular, I\u2019ve co-created abstractions for Incremental Computing (See Adapton for details) and for Secure Multiparty Computation (See Wysteria for details).\nI am an assistant professor in the Department of Computer Science at University of Colorado Boulder. I am a co-director of the CU Programming Languages and Verification group (CUPLV). Before joining CU, I was a postdoc researcher working with Michael Hicks, Jeff Foster, David Van Horn and the PLUM group at the University of Maryland. As a PhD student, I was advised by Umut Acar.",
      "Key": "matthewahammer",
      "Name": "Matthew Hammer",
      "URL": "http://matthewhammer.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthewahammer/0f8bb7ab-bcde-4522-beb0-8fb15d612e1b/small.jpg"
    },
    {
      "Affiliation": "University of Massachusetts, Amherst",
      "Bio": "Emery Berger is a Professor in the School of Computer Science at the University of Massachusetts Amherst, the flagship campus of the UMass system. See his home page for more information.",
      "Key": "emeryberger",
      "Name": "Emery Berger",
      "URL": "http://www.cs.umass.edu/~emery/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/emeryberger/0c66cc81-817e-44ca-a091-433c30336f59/small.jpg"
    },
    {
      "Affiliation": "IBM Canada",
      "Key": "markstoodley",
      "Name": "Mark Stoodley"
    },
    {
      "Affiliation": "Trinity College Dublin, Ireland",
      "Bio": "Rob joined the Knowledge and Data Engineering Group at Trinity College Dublin in 2008 as part of the HEA-funded NEMBES (Networked Embedded Systems) project looking at semantic mapping applications to sensor management systems in smart buildings. Since 2009 he has worked in the SFI-funded FAME (Federated Autonomic Management of End to End Communications Services) project. His current research interests include Linked Data, flexible distributed systems and network management. Prior to joining TCD Rob worked in the Ericsson Network Management Research centre, a couple of networks/data-comms focused startups and Enterprise Ireland\u2019s Teltec telecommunications research centre at Dublin City University. He has extensive experience of both academic and industrial collaborative research projects and international standardization. He is a graduate of Dublin City University (BSc in Applied Physics and PhD in Electronic Engineering) and Queens University Belfast (MSc in Computational Science).",
      "Key": "robbrennan",
      "Name": "Rob Brennan",
      "URL": "http://people.tcd.ie/Profile?Username=rbrenna",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robbrennan/0cc2ecf1-5069-422c-9b65-12555d69acb8/small.jpg"
    },
    {
      "Affiliation": "University of California at Riverside, USA",
      "Key": "tanzirulazim",
      "Name": "Tanzirul Azim",
      "URL": "http://www.tanzirul.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tanzirulazim/0cd9bc46-8aef-4d7f-9f37-279fdc47dbb4/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "erinmenzies",
      "Name": "Erin Menzies"
    },
    {
      "Affiliation": "Politecnico di Milano, Italy",
      "Key": "andreamauri",
      "Name": "Andrea Mauri",
      "URL": "http://www.andreamauri.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andreamauri/6695a14b-a434-466f-b88a-86f315143fdc/small.jpg"
    },
    {
      "Affiliation": "University of Parma, Italy",
      "Key": "federicobergenti",
      "Name": "Federico Bergenti"
    },
    {
      "Affiliation": "University of Nebraska",
      "Key": "mattdwyer",
      "Name": "Matt Dwyer",
      "URL": "http://cse.unl.edu/~dwyer/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mattdwyer/0d6e2ab1-5d0c-4ecf-8ab1-953ec84fc252/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "markvandenbrand",
      "Name": "Mark van den Brand"
    },
    {
      "Affiliation": "University of Utah",
      "Key": "williamebyrd",
      "Name": "William E. Byrd",
      "URL": "http://webyrd.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/williamebyrd/2a4d1ebd-5e55-4fdd-a807-8f7b593d0445/small.jpg"
    },
    {
      "Affiliation": "MDE Systems Inc.",
      "Key": "brucetrask",
      "Name": "Bruce Trask"
    },
    {
      "Affiliation": "Federal University of Campina Grande",
      "Key": "larissabraz",
      "Name": "Larissa Braz",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/larissabraz/0eb9c1b2-2a06-41e6-8e02-2090bc2dcd23/small.jpg"
    },
    {
      "Affiliation": "University of Bern",
      "Key": "jankurs",
      "Name": "Jan Kurš"
    },
    {
      "Affiliation": "Agilent Technologies",
      "Key": "korbinianmolitorisz",
      "Name": "Korbinian Molitorisz",
      "URL": "https://www.linkedin.com/in/korbinianmolitorisz",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/korbinianmolitorisz/0f4eacd6-2d89-435d-b401-e17e10146467/small.jpg"
    },
    {
      "Affiliation": "Federal University of Minas Gerais, Brazil",
      "Key": "fernandomagnoquintaopereira",
      "Name": "Fernando Magno Quintão Pereira",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/fernandomagnoquintaopereira/8f86b14f-fbc3-49a4-9f4f-1a8216564d39/small.jpg"
    },
    {
      "Affiliation": "University of Tübingen",
      "Key": "julianjabs",
      "Name": "Julian Jabs"
    },
    {
      "Affiliation": "University of Tübingen, Germany",
      "Key": "klausostermann",
      "Name": "Klaus Ostermann",
      "URL": "http://ps.informatik.uni-tuebingen.de",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/klausostermann/3b2188f0-6472-4a18-b97c-765414c990c8/small.jpg"
    },
    {
      "Affiliation": "Georgia Tech",
      "Key": "sulekhakulkarni",
      "Name": "Sulekha Kulkarni"
    },
    {
      "Affiliation": "University of California, Irvine",
      "Key": "rohanachar",
      "Name": "Rohan Achar",
      "URL": "https://www.linkedin.com/in/rohan-achar-89172068",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rohanachar/10a23381-56b6-4091-9a5b-4da1990fe379/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Key": "jonathanprotzenko",
      "Name": "Jonathan Protzenko",
      "URL": "https://jonathan.protzenko.fr",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathanprotzenko/203c9e40-1cbf-40d3-b59f-da4a4c305361/small.jpg"
    },
    {
      "Affiliation": "IBM Research, USA",
      "Key": "omertripp",
      "Name": "Omer Tripp",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/omertripp/824fc342-e946-4af2-9b28-c64235de2ee5/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Bio": "I am a Senior Lecturer in the School of Engineering and Computer Science at Victoria University of Wellington, New Zealand.\nI am originally from Moscow, Russia with a background in Mathematics. I have completed my PhD in programming languages in 2006 and took up a job as a Lecturer in Software Engineering at Victoria University of Wellington. During my studies I took short breaks to work as a Visiting Researcher at Purdue University, and Software Engineer at two Wellington start-ups. I spent 2013 on sabbatical at Carnegie Mellon University in Pittsburgh, PA, USA.\nResearch Interests: programming languages.",
      "Key": "alexpotanin",
      "Name": "Alex Potanin",
      "URL": "http://ecs.victoria.ac.nz/Main/AlexPotanin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alexpotanin/10be929e-e000-431d-95dd-3eb3ab35a1cd/small.jpg"
    },
    {
      "Affiliation": "Inria Lille\u2013Nord Europe, France Mines Douai, IA, Univ. Lille, France",
      "Key": "pablotesone",
      "Name": "Pablo Tesone"
    },
    {
      "Affiliation": "FCT / Universidade Nova de Lisboa",
      "Key": "ankicabarisic",
      "Name": "Ankica Barisic",
      "URL": "http://citi.di.fct.unl.pt/member/member.php?id=155",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ankicabarisic/1100fb81-7ec1-4896-ac3f-5f377ebea436/small.jpg"
    },
    {
      "Affiliation": "Martin-Luther-University Halle-Wittenberg",
      "Key": "christianberg",
      "Name": "Christian Berg"
    },
    {
      "Affiliation": "Bartlett School of Architecture, UCL",
      "Key": "robertaish",
      "Name": "Robert Aish"
    },
    {
      "Affiliation": "University of British Columbia, Canada",
      "Key": "felipebanadosschwerter",
      "Name": "Felipe Bañados Schwerter",
      "URL": "http://www.cs.ubc.ca/~fbanados",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/felipebanadosschwerter/11b91685-ef5e-4fe6-9078-6c76497ab4bf/small.jpg"
    },
    {
      "Affiliation": "TU Hamburg, Germany",
      "Key": "sandroschulze",
      "Name": "Sandro Schulze",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sandroschulze/123b7b3d-2abe-4de8-9e00-809b6c602110/small.jpg"
    },
    {
      "Affiliation": "Imperial College London",
      "Bio": "Alastair F. Donaldson is a Senior Lecturer in the Department of Computing at Imperial College London, where he leads the Multicore Programming Group. Prior to joining Imperial, he was a Visting Researcher at Microsoft Research Redmond, a Postdoctoral Research Fellow at the University of Oxford, a Research Engineer at Codeplay Software Ltd., and a PhD student at the University of Glasgow.",
      "Key": "alastairdonaldson",
      "Name": "Alastair Donaldson",
      "URL": "http://www.doc.ic.ac.uk/~afd",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alastairdonaldson/55258969-e1da-48a3-b9b2-8c02297874f0/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "yudavidliu",
      "Name": "Yu David Liu"
    },
    {
      "Affiliation": "INRIA Grenoble Rhône-Alpes",
      "Key": "jaimearias",
      "Name": "Jaime Arias",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jaimearias/d4346fef-ebba-4c93-9d9e-6ce52953b937/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "mehdidastani",
      "Name": "Mehdi Dastani",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mehdidastani/c170839d-3303-4073-aff9-a6bec298947c/small.jpg"
    },
    {
      "Affiliation": "AtlanMod, France",
      "Key": "massimotisi1",
      "Name": "Massimo Tisi",
      "URL": "http://www.massimotisi.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/massimotisi1/13b0633c-9c48-4992-9625-1d663eb448c3/small.jpg"
    },
    {
      "Affiliation": "University of Groningen, The Netherlands",
      "Key": "jorgeaperez",
      "Name": "Jorge A. Perez",
      "URL": "http://www.jperez.nl",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jorgeaperez/4e196e9f-a731-4e6d-9291-594dde28347f/small.jpg"
    },
    {
      "Affiliation": "Indian Institute of Science, Bangalore",
      "Bio": "Murali Krishna Ramanathan is an Assistant Professor in the Department of Computer Science and Automation at Indian Institute of Science, Bangalore. Before IISc, he was a member of the core analysis team at Coverity Inc. building program analysis tools for bug detection in industrial codebases, with an emphasis on finding concurrency defects. He received his PhD in Computer Science from Purdue University.",
      "Key": "muralikrishnaramanathan",
      "Name": "Murali Krishna Ramanathan",
      "URL": "http://www.csa.iisc.ernet.in/~muralikrishna",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/muralikrishnaramanathan/52304999-046a-4d35-a2ed-9eb9ca2db709/small.jpg"
    },
    {
      "Affiliation": "San Jose State University",
      "Key": "markstamp",
      "Name": "Mark Stamp"
    },
    {
      "Affiliation": "Universita della Svizzera italiana (USI)",
      "Key": "andreamocci",
      "Name": "Andrea Mocci",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andreamocci/11ecb0a4-e8cc-429f-b886-cc941e37da5f/small.jpg"
    },
    {
      "Affiliation": "University of Maryland at College Park",
      "Key": "tudordumitras",
      "Name": "Tudor Dumitras"
    },
    {
      "Affiliation": "Y Combinator Research",
      "Key": "patrickdubroy",
      "Name": "Patrick Dubroy",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/patrickdubroy/809e3776-4917-4397-a6c5-b85d7a3e7839/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "aminebenelallam",
      "Name": "Amine Benelallam"
    },
    {
      "Affiliation": "Hasso-Plattner-Institute, Potsdam",
      "Key": "timfelgentreff",
      "Name": "Tim Felgentreff",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/timfelgentreff/1cdb8c05-2513-4508-ab46-dcae9a44d4c4/small.jpg"
    },
    {
      "Affiliation": "University of Hong Kong",
      "Key": "yanlinwang",
      "Name": "Yanlin Wang",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yanlinwang/6c005236-8794-46c9-9353-de9912fe9c74/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "kuatyessenov",
      "Name": "Kuat Yessenov"
    },
    {
      "Affiliation": "",
      "Key": "martinalexanderneumann",
      "Name": "Martin Alexander Neumann",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/martinalexanderneumann/dc3493fb-1a2a-46d2-acb7-d53401ad99fe/small.jpg"
    },
    {
      "Affiliation": "George Mason University",
      "Bio": "Thomas LaToza is an Assistant Professor of Computer Science at George Mason University. He has degrees in psychology and computer science from the University of Illinois and a PhD in software engineering from Carnegie Mellon University. His research is in the area of human aspects of software development, encompassing empirical and design work on environments for programming, software design, and collaboration. He has been active in bringing human subjects studies to the investigation of software development activity and the evaluation of software development tools and has conducted over 20 studies with software developers, including observational studies, surveys, interviews, field deployments, and controlled experiments. He has served on various program committees and is currently the co-chair of the Sixth Workshop on the Evaluation and Usability of Programming Languages and Tools.",
      "Key": "thomaslatoza",
      "Name": "Thomas LaToza",
      "URL": "https://cs.gmu.edu/~tlatoza/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomaslatoza/15d092bd-ce67-4277-a1a8-cb2d5bbeed8b/small.jpg"
    },
    {
      "Affiliation": "University of Parma, Italy",
      "Key": "eleonoraiotti",
      "Name": "Eleonora Iotti"
    },
    {
      "Affiliation": "",
      "Key": "haoyuanzhang",
      "Name": "Haoyuan Zhang"
    },
    {
      "Affiliation": "University of Pennsylvania",
      "Key": "richardzhang",
      "Name": "Richard Zhang"
    },
    {
      "Affiliation": "University of Waterloo",
      "Key": "mariannarapoport",
      "Name": "Marianna Rapoport",
      "URL": "http://mrapoport.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mariannarapoport/16cf1626-66ce-417e-85e8-27e2479a9351/small.jpg"
    },
    {
      "Affiliation": "Ulm University, Germany",
      "Key": "athanasiostsitsipas",
      "Name": "Athanasios Tsitsipas",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/athanasiostsitsipas/329cf5c4-8da7-44ed-919b-d9af05d5c221/small.jpg"
    },
    {
      "Affiliation": "IIT Kanpur, India",
      "Key": "awanishpandey",
      "Name": "Awanish Pandey",
      "URL": "http://cse.iitk.ac.in/users/awpandey/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/awanishpandey/9a2337aa-110e-4703-ad26-c19c52b06ccf/small.jpg"
    },
    {
      "Affiliation": "University of Glasgow",
      "Key": "jeremysinger",
      "Name": "Jeremy Singer",
      "URL": "http://www.dcs.gla.ac.uk/~jsinger",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeremysinger/18814499-545c-4767-a610-91c56806b76a/small.jpg"
    },
    {
      "Affiliation": "UC San Diego",
      "Bio": "I am a 5th year PhD student in Programming Systems group of UCSD, supervised by Ranjit Jhala. My research interests include static program verification and type systems. I am working on LiquidHaskell, a static verifier for Haskell based on Liquid Types.",
      "Key": "nikivazou",
      "Name": "Niki Vazou",
      "URL": "http://goto.ucsd.edu/~nvazou/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nikivazou/8cc6ddec-154b-47e9-b40d-c66e78476391/small.jpg"
    },
    {
      "Affiliation": "University of Versailles, France",
      "Key": "pablooliveira",
      "Name": "Pablo Oliveira",
      "URL": "www.sifflez.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pablooliveira/1991d8b0-0c69-4add-bc96-593860986870/small.jpg"
    },
    {
      "Affiliation": "Grinnell College, USA",
      "Key": "logangoldberg",
      "Name": "Logan Goldberg"
    },
    {
      "Affiliation": "Università della Svizzera italiana",
      "Key": "andrearosa",
      "Name": "Andrea Rosà",
      "URL": "http://www.inf.usi.ch/phd/rosaa",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andrearosa/56bfbe88-343d-473c-b65b-a085469b0cae/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "johannesemerich",
      "Name": "Johannes Emerich",
      "URL": "http://johannes.emerich.de",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johannesemerich/77b6e065-27ca-487a-b4a9-7a0705ece8d8/small.jpg"
    },
    {
      "Affiliation": "Imperial College London",
      "Bio": "Sylvan Clebsch is the designer of the Pony programming language. He has worked in industry for 24 years, on fintech, milsims, video games, peer networking, VOIP, identity management, crypto, embedded OSes, and now programming languages. He works at Microsoft Research Cambridge.",
      "Key": "sylvanclebsch",
      "Name": "Sylvan Clebsch",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sylvanclebsch/1a9819f3-1e95-455b-a7a2-303ac1b427e5/small.jpg"
    },
    {
      "Affiliation": "Vienna University of Technology",
      "Key": "oliverhanappi",
      "Name": "Oliver Hanappi",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/oliverhanappi/b661b4bd-12e6-442c-99d0-85595eaa977c/small.jpg"
    },
    {
      "Affiliation": "IBM",
      "Key": "stephenjfink",
      "Name": "Stephen J Fink",
      "URL": "http://researcher.ibm.com/researcher/view.php?person=us-sjfink",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stephenjfink/1b2d1b61-e2d8-48fb-b1fa-706facdd1853/small.jpg"
    },
    {
      "Affiliation": "Federico II University of Naples",
      "Key": "annalanzaro",
      "Name": "Anna Lanzaro",
      "URL": "http://wpage.unina.it/anna.lanzaro",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/annalanzaro/1b665f65-4ba2-40d8-82da-47ad7ecdf6b5/small.jpg"
    },
    {
      "Affiliation": "Keio University, Japan",
      "Key": "shingotakada",
      "Name": "Shingo Takada",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shingotakada/b770fa42-79a9-499c-a5a6-67af8dcb778b/small.jpg"
    },
    {
      "Affiliation": "University of Lugano",
      "Key": "matthiashauswirth",
      "Name": "Matthias Hauswirth",
      "URL": "http://www.inf.usi.ch/faculty/hauswirth/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthiashauswirth/1bb462e0-0ec1-4106-a51c-7834290fa535/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "dhruvachakrabarti1",
      "Name": "Dhruva Chakrabarti"
    },
    {
      "Affiliation": "The University of Texas at Austin",
      "Key": "johnthywissen",
      "Name": "John A. Thywissen",
      "URL": "https://www.cs.utexas.edu/~jthywiss/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johnthywissen/a59b898f-ba1c-46fa-882e-674375d12dec/small.jpg"
    },
    {
      "Affiliation": "SUNY Buffalo, USA",
      "Bio": "I am an Assistant Professor at State University of New York (SUNY) Buffalo.\nResearch Interests: my research interests fall broadly into three categories: programming languages, software engineering, and systems. More specifically I am interested in language, compiler, and runtime design targeted at concurrent/parallel systems. I am also interested in real-time Java as well as embedded and real-time systems. Specifically I am working on high assurance software for embedded and mixed-criticality systems.",
      "Key": "lukaszziarek",
      "Name": "Lukasz Ziarek",
      "URL": "http://www.cse.buffalo.edu/~lziarek/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lukaszziarek/1c4f356b-36d8-4005-9971-d4daf8b69ec7/small.jpg"
    },
    {
      "Affiliation": "itemis AG",
      "Key": "saschalisson",
      "Name": "Sascha Lisson"
    },
    {
      "Affiliation": "Raincode, Belgium",
      "Key": "vadimzaytsev",
      "Name": "Vadim Zaytsev",
      "URL": "http://grammarware.net",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/vadimzaytsev/1d5ae214-714f-427b-886d-a6c4521070e1/small.jpg"
    },
    {
      "Affiliation": "University of Sussex",
      "Bio": "I started as a Lecturer at Sussex in September 2013 after completing my PhD and MSc here within the Department of Informatics. My PhD research explored computer game creation as a writing development activity for young people aged 11-15, and involved the participatory design of software tools to support multimodal and interactive narrative creation.\nPast projects I have worked on at Sussex include: \u2022InQbate, a technology rich space designed to support creativity in teaching and learning \u2022The Flip project, which involved the design and evaluation of a visual programming language for young people \u2022The Terence project, which explored the potential for story-based games to support poor comprehenders\nPrior to Sussex I worked at further education college, and obtained a BA (Hons) in Philosophy from the University of Warwick.",
      "Key": "katehowland",
      "Name": "Kate Howland",
      "URL": "http://www.sussex.ac.uk/profiles/172510",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/katehowland/1d8db67d-2551-4e44-b9fa-d3b189a1e5d0/small.jpg"
    },
    {
      "Affiliation": "University of Tokyo",
      "Key": "shigeruchiba",
      "Name": "Shigeru Chiba",
      "URL": "http://www.csg.ci.i.u-tokyo.ac.jp/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shigeruchiba/1d928b34-05ce-48e7-8788-f910ca8f9d6e/small.jpg"
    },
    {
      "Affiliation": "University of Washington",
      "Bio": "Emina Torlak is an Assistant Professor at the University of Washington, working at the intersection of programming languages, formal methods, and software engineering. She received her Bachelors (2003), Masters (2004), and Ph.D. (2009) degrees from MIT, and subsequently worked at IBM Research, LogicBlox, and as a research scientist at U.C. Berkeley. Her research focuses on developing automated tools and programming models for computer-aided design, verification, and synthesis of software. She is the creator of the Kodkod constraint solver, which has been used in over 70 academic and industrial tools for software engineering. Emina has applied her expertise to a broad range of problems, from verification of memory-consistency models to generation of test data for decision support applications. Her current work on the Rosette solver-aided language integrates constraint solvers into programming languages to support computer-aided verification, debugging, and synthesis of code, making programming a collaboration between humans and machines.",
      "Key": "eminatorlak",
      "Name": "Emina Torlak",
      "URL": "https://homes.cs.washington.edu/~emina/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/eminatorlak/1db2607a-1cfd-4797-9ece-eec1da33afef/small.jpg"
    },
    {
      "Affiliation": "UC Berkeley",
      "Key": "shaonbarman",
      "Name": "Shaon Barman"
    },
    {
      "Affiliation": "National Central University",
      "Key": "weijenwang",
      "Name": "Wei-Jen Wang",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/weijenwang/1ddc929f-f459-4889-bd89-e2f29134ad36/small.jpg"
    },
    {
      "Affiliation": "Tampere University of Technology",
      "Key": "tommimikkonen1",
      "Name": "Tommi Mikkonen",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tommimikkonen1/5879911e-0985-4744-a3c4-c1b9f80c144d/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "ilukkim",
      "Name": "I Luk Kim"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "coenderoover",
      "Name": "Coen De Roover",
      "URL": "http://soft.vub.ac.be/~cderoove/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/coenderoover/1ea29c7f-5493-4bf7-a6d7-c4448288e78e/small.jpg"
    },
    {
      "Affiliation": "EPFL",
      "Bio": "Nada Amin is a member of the Scala team at EPFL, where she studies type systems and hacks on programming languages. She has contributed to Clojure\u2019s core.logic and Google\u2019s Closure compiler. She\u2019s loved helping others learn to program ever since tutoring SICP as an undergraduate lab assistant at MIT.",
      "Key": "nadaamin",
      "Name": "Nada Amin",
      "URL": "http://people.epfl.ch/nada.amin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nadaamin/1eca4799-92bb-46ee-8324-9781234a2a73/small.jpg"
    },
    {
      "Affiliation": "University of Southern Denmark",
      "Key": "ulrikschultz",
      "Name": "Ulrik Schultz",
      "URL": "http://www.mmmi.sdu.dk/~ups",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ulrikschultz/1ed69d23-99db-475c-a395-81baecbfdfe1/small.jpg"
    },
    {
      "Affiliation": "TU Braunschweig, Germany",
      "Key": "michaelnieke",
      "Name": "Michael Nieke"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "julianafranco",
      "Name": "Juliana Franco",
      "URL": "https://www.doc.ic.ac.uk/~jvicent1/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/julianafranco/8ce89869-ec9f-4b6c-83af-7f99cc57d109/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "alexeicolin",
      "Name": "Alexei Colin"
    },
    {
      "Affiliation": "MIT",
      "Key": "mattmccutchen",
      "Name": "Matt McCutchen",
      "URL": "http://web.mit.edu/rmccutch/www/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mattmccutchen/5f5b99a5-df96-4458-b1a6-a6aa75aa10c7/small.jpg"
    },
    {
      "Affiliation": "TU Darmstadt, Germany",
      "Key": "guidosalvaneschi",
      "Name": "Guido Salvaneschi",
      "URL": "http://www.guidosalvaneschi.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guidosalvaneschi/1fbfa716-633f-4d20-a2f4-9b597eff754c/small.jpg"
    },
    {
      "Affiliation": "Vienna University of Technology",
      "Key": "waldemarhummer",
      "Name": "Waldemar Hummer"
    },
    {
      "Affiliation": "Portland State University",
      "Bio": "My research interests are in the area of programming languages, operating systems, object-oriented systems and distributed computing, and more specifically in the region where they overlap (such as language design for distributed Object-oriented computing.) My favorite system for trying out ideas is Squeak Smalltalk. I have written a few Squeak goodies that I believe are generally useful. I have been actively working on Traits with the folks from SCG in Bern; see Nathanael Sch&auml;rli\u2019s Traits page for details. I\u2019m a co-author of two books on Smalltalk programming, Squeak by Example, and Pharo By Example.",
      "Key": "andrewblack",
      "Name": "Andrew Black",
      "URL": "http://www.cs.pdx.edu/~black",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andrewblack/1fd1995e-c355-4998-8a3d-a9cea8adef10/small.jpg"
    },
    {
      "Affiliation": "Hewlett Packard Labs",
      "Key": "duli",
      "Name": "Du Li",
      "URL": "http://www.labs.hpe.com/people/du_li/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/duli/16f67688-cd19-4c29-84fd-1b967e96a8d8/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "juliendeantoni",
      "Name": "Julien DeAntoni",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/juliendeantoni/8d996d69-181b-4952-ba94-51e370f02163/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "PhD student at EPFL in the LAMP group working on Dotty, the next-generation Scala compiler.",
      "Key": "guillaumemartres",
      "Name": "Guillaume Martres",
      "URL": "http://guillaume.martres.me",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guillaumemartres/34840d2d-eb20-4dd2-8797-de6a5d8ce474/small.jpg"
    },
    {
      "Affiliation": "University Institute of Lisbon, Portugal",
      "Key": "andresantos1",
      "Name": "André L. Santos"
    },
    {
      "Affiliation": "OSCAR TECHNOLOGY, Japan",
      "Key": "kazuhikosuzuki",
      "Name": "Kazuhiko Suzuki"
    },
    {
      "Affiliation": "Microsoft Research India",
      "Bio": "Rahul Sharma is a researcher at Microsoft Research India. He received a Ph.D. in Computer Science from Stanford University, where he was advised by Prof. Alex Aiken. Before coming to Stanford, he graduated with a B.Tech. from IIT Delhi. His research interests include program analysis, compilers, machine learning, and secure cloud computing.",
      "Key": "rahulsharma",
      "Name": "Rahul Sharma",
      "URL": "http://cs.stanford.edu/people/sharmar",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rahulsharma/6d60eca8-356f-4141-af5d-4c6af0fadcd8/small.jpg"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Bio": "Gul Agha is Professor of Computer Science at the University of Illinois at Urbana-Champaign. His research is in the area of programming models and languages for open distributed and embedded computation with applications to cloud computing. Dr. Agha is a primary developer of the Actor model of concurrent computation. He is also known for his work on testing, statistical model checking, and sensor networks. Dr. Agha is a Fellow of the Institute for Electrical Engineering and Electronics (IEEE) and a Golden Core of the IEEE Computer Society. Dr. Agha is a past Editor-in-Chief of IEEE Concurrency: Parallel, Distributed and Mobile Computing, and of ACM Computing Surveys. He has given over one hundred lectures at universities and research laboratories and over dozens of invited and keynote lectures. Dr. Agha is a co-founder of the startup Embedor Technologies which is developing sensor network solutions for applications in the Internet of Things.",
      "Key": "gulagha",
      "Name": "Gul Agha",
      "URL": "http://osl.cs.illinois.edu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gulagha/20fab947-5f26-4e6f-899e-fc92ff7dcc61/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Key": "davidbacon",
      "Name": "David Bacon",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-bacon",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidbacon/210b30d3-5c44-4919-a020-84b092a5977f/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "quentinstievenart",
      "Name": "Quentin Stiévenart"
    },
    {
      "Affiliation": "",
      "Key": "christianlengauer",
      "Name": "Christian Lengauer"
    },
    {
      "Affiliation": "Lund University, Sweden",
      "Key": "johanthorsberg",
      "Name": "Johan Thorsberg",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johanthorsberg/9a56c0a6-32c7-416b-bb42-c161b64218cd/small.jpg"
    },
    {
      "Affiliation": "Katholieke Universiteit Leuven",
      "Key": "dimitrivanlanduyt",
      "Name": "Dimitri Van Landuyt"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Key": "milosgligoric",
      "Name": "Milos Gligoric",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/milosgligoric/23376100-f8c5-437d-b3ad-3381a5736fbf/small.jpg"
    },
    {
      "Affiliation": "North Carolina State University",
      "Key": "justinsmith",
      "Name": "Justin Smith",
      "URL": "http://www4.ncsu.edu/~jssmit11/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/justinsmith/23571230-5666-4ab0-a546-8793a507f164/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Bio": "I did my Bachelor\u2019s and PhD degrees at the University of Cambridge. My initial research background was in operating systems, hypervisors and the like, with a little networking and distributed systems thrown in. Moving some way up the stack, my PhD work centred on the programmer-facing problem of building software by composition of ill-matched components, for which I developed the Cake language. From January 2011 until March 2012 I was a James Martin Fellow in the Department of Computer Science at the University of Oxford, mostly focused on program analysis and the problem of combining state-space methods (e.g. symbolic execution) with syntactic methods (e.g. type checking). From May 2012 to May 2013, I was a postdoctoral researcher at USI\u2019s Faculty of Informatics in Lugano, Switzerland, working on programmer-facing dynamic analysis infrastructure for Java-like virtual machines. From May until October 2013 I was temporarily a Research Assistant at Oracle Labs, on the Alphabet Soup project, working on native object code and debugging support in the Truffle/SubstrateVM stack. Since 2013 I have been a Research Associate back at the University of Cambridge Computer Laboratory, working on various topics with robustness in low-level programming as a recurring theme. I have also worked (some time ago) for Opal Telecom and ARM, and (more recently) and as a consultant for Ellexus.",
      "Key": "stephenkell",
      "Name": "Stephen Kell",
      "URL": "http://www.cl.cam.ac.uk/~srk31/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stephenkell/23a0979c-a65f-4a75-a026-e222edb5e74c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "olivierbarais",
      "Name": "Olivier Barais"
    },
    {
      "Affiliation": "University of Waterloo",
      "Key": "gregorrichards",
      "Name": "Gregor Richards",
      "URL": "http://the.gregor.institute/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gregorrichards/24410268-a45a-448f-9b91-29cf49f6115f/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs, Switzerland",
      "Key": "aleksandarprokopec",
      "Name": "Aleksandar Prokopec",
      "URL": "http://axel22.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/aleksandarprokopec/245bf6eb-c6a9-402b-81f4-5c89da451733/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Bio": "Gilad Bracha is the creator of the Newspeak programming language and a software engineer at Google where he works on Dart. Previously, he was a VP at SAP Labs, a Distinguished Engineer at Cadence, and a Computational Theologist and Distinguished Engineer at Sun. He is co-author of the Java Language Specification, and a researcher in the area of object-oriented programming languages. Prior to joining Sun, he worked on Strongtalk, the Animorphic Smalltalk System. He received his B.Sc in Mathematics and Computer Science from Ben Gurion University in Israel and a Ph.D. in Computer Science from the University of Utah.",
      "Key": "giladbracha",
      "Name": "Gilad Bracha",
      "URL": "bracha.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/giladbracha/24b36882-673c-464e-b947-71f01bab7bd1/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "janjuhar",
      "Name": "Ján Juhár",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/janjuhar/ced6ba70-c8b1-46ff-815b-e915b3b6e2bf/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "paolobientinesi",
      "Name": "Paolo Bientinesi"
    },
    {
      "Affiliation": " INRIA Lille",
      "Bio": "Marcus Denker is a permanent researcher (CR1, with tenure) at INRIA Lille - Nord Europe. Before, he was a postdoc at the PLEIAD lab/DCC University of Chile and the Software Composition Group, University of Bern. His research focuses on reflection and meta-programming for dynamic languages. He is an active participant in the Squeak and Pharo open source communities for many years. Marcus Denker received a PhD in Computer Science from the University of Bern/Switzerland in 2008 and a Dipl.-Inform. (MSc) from the University of Karlsruhe/Germany in 2004. He is a member of ACM, GI and a board-member of ESUG.",
      "Key": "marcusdenker",
      "Name": "Marcus Denker",
      "URL": "http://marcusdenker.de",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marcusdenker/254f67af-8a4c-42f6-bb44-3805a74dc9ae/small.jpg"
    },
    {
      "Affiliation": "University of Pennsylvania",
      "Bio": "Benjamin Pierce is Henry Salvatori Professor of Computer and Information Science at the University of Pennsylvania and a Fellow of the ACM. His research interests include programming languages, type systems, language-based security, computer-assisted formal verification, differential privacy, and synchronization technologies. He is the author of the widely used graduate textbooks Types and Programming Languages and Software Foundations. He has served as co-Editor in Chief of the Journal of Functional Programming, as Managing Editor for Logical Methods in Computer Science, and as editorial board member of Mathematical Structures in Computer Science, Formal Aspects of Computing, and ACM Transactions on Programming Languages and Systems. He is also the lead designer of the popular Unison file synchronizer.",
      "Key": "benjamincpierce",
      "Name": "Benjamin C. Pierce",
      "URL": "http://www.cis.upenn.edu/~bcpierce/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/benjamincpierce/f2ee6f41-5bf7-4a0d-9b8d-71de6a666b1b/small.jpg"
    },
    {
      "Affiliation": "Samsung Research America",
      "Bio": "I am a research engineer with the Advanced Programming Tools team at Samsung Research America. My research focuses on linguistic modeling and verification of software systems and networks.\nPrior to joining SRA, I received a Ph.D. from Princeton University, advised by David Walker.\nFor past and ongoing projects, please visit: http://www.schlesinger.tech",
      "Key": "coleschlesinger",
      "Name": "Cole Schlesinger",
      "URL": "http://www.schlesinger.tech",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/coleschlesinger/026cdfa4-a4e7-40fc-8218-4b61c3a8e12c/small.jpg"
    },
    {
      "Affiliation": "University of {Glasgow, Edinburgh}",
      "Key": "rolyperera",
      "Name": "Roly Perera",
      "URL": "http://dynamicaspects.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rolyperera/25cceac1-1c2c-4c8c-a32a-15c8bd8e0a3b/small.jpg"
    },
    {
      "Affiliation": "Utah State University",
      "Key": "youngwookwon",
      "Name": "Young-Woo Kwon",
      "URL": "http://digital.cs.usu.edu/~young",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/youngwookwon/f2929f8d-301e-4eec-a2ab-f333334d154e/small.jpg"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "jorgkienzle",
      "Name": "Jörg Kienzle",
      "URL": "http:http://www.cs.mcgill.ca/~joerg/Home/Jorgs_Home.html"
    },
    {
      "Affiliation": "Universiteit Gent, Belgium",
      "Key": "christophescholliers",
      "Name": "Christophe Scholliers",
      "URL": "http://soft.vub.ac.be/~cfscholl/"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "sylviagrewe",
      "Name": "Sylvia Grewe",
      "URL": "http://www.stg.tu-darmstadt.de/staff/sylvia_grewe/sylvia_grewe.en.jsp",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sylviagrewe/2689ca88-3a63-46a8-bc67-f79c6f1e915e/small.jpg"
    },
    {
      "Affiliation": "New Jersey Institute of Technology, USA",
      "Bio": "Associate Professor Computer Science Department New Jersey Institute of Technology University Heights Newark, New Jersey USA",
      "Key": "iulianneamtiu",
      "Name": "Iulian Neamtiu",
      "URL": "https://web.njit.edu/~ineamtiu/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/iulianneamtiu/2693125c-c5d9-443b-abfe-5b884c99c735/small.jpg"
    },
    {
      "Affiliation": "IUPUI",
      "Key": "jameshill",
      "Name": "James Hill",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jameshill/26e93bc1-0fd1-42c7-a841-b7d8b70d52a1/small.jpg"
    },
    {
      "Affiliation": "Qvirt",
      "Key": "derekjacoby",
      "Name": "Derek Jacoby",
      "URL": "http://qvirt.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/derekjacoby/27f18226-c2fe-4187-8ee5-e24b525be708/small.jpg"
    },
    {
      "Affiliation": "TU Dresden, Germany",
      "Key": "thomaskuhn",
      "Name": "Thomas Kühn",
      "URL": "http://wwwpub.zih.tu-dresden.de/~s4560758/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomaskuhn/27f52c8b-f2fa-490f-b929-43de28dbc5db/small.jpg"
    },
    {
      "Affiliation": "University of Chile",
      "Key": "johanfabry",
      "Name": "Johan Fabry",
      "URL": "http://pleiad.cl/~jfabry",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johanfabry/a6bfae70-e6f2-43e3-af9d-524815988020/small.jpg"
    },
    {
      "Affiliation": "University of Kansas",
      "Key": "prasadkulkarni1",
      "Name": "Prasad Kulkarni",
      "URL": "http://www.ittc.ku.edu/~kulkarni/"
    },
    {
      "Affiliation": "University of California, Irvine",
      "Bio": "I am interested in developing PL, SE, and systems techniques to solve real-world problems. In the past, I have designed and implemented static and dynamic techniques to find and fix \u201cruntime bloat\u201d that exists widely in object-oriented software. My recent interests center on (1) how to exploit language/compiler techniques to build scalable Big Data systems and (2) how to build Big Data systems to parallelize and scale sophisticated program analyses.",
      "Key": "guoqingharryxu",
      "Name": "Harry Xu",
      "URL": "http://www.ics.uci.edu/~guoqingx",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guoqingharryxu/a0b84f49-dac8-4ff2-8ebf-d5b2577abcfc/small.jpg"
    },
    {
      "Affiliation": "Northwestern University",
      "Key": "spencerpflorence",
      "Name": "Spencer P. Florence"
    },
    {
      "Affiliation": "Magdeburg University",
      "Key": "guntersaake",
      "Name": "Gunter Saake"
    },
    {
      "Affiliation": "University of Texas, Austin",
      "Bio": "Don Batory holds the David Bruton Centennial Professorship in the Department of Computer Science at The University of Texas at Austin. He received a B.S. (1975) and M.Sc. (1977) degrees from Case Institute of Technology, and a Ph.D. (1980) from the University of Toronto. He was a faculty member at the University of Florida in 1981 before he joined the University of Texas in 1983. He was Associate Editor of IEEE Transactions on Software Engineering (1999-2002), Associate Editor of ACM Transactions on Database Systems (1986-1992), member of the ACM Software Systems Award Committee (1989-1993; Committee Chairman in 1992), Program Co-Chair for the 2002 Generative Programming and Component Engineering Conference. He is a proponent of Feature Oriented Software Development (FOSD) and with colleagues (and former students) has recently authored a textbook on the topic. Since 1993, he and his students have written 11 Award Papers for their work in automated program development. He and Lance Tokuda were awarded the Automated Software Engineering 2013 Most Influential Paper Award on their work on program refactorings.",
      "Key": "donbatory",
      "Name": "Don Batory",
      "URL": "http://www.cs.utexas.edu/users/dsb/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/donbatory/b3fc6ed2-20f6-4953-b6b4-566de4e29c65/small.jpg"
    },
    {
      "Affiliation": "University of Bologna",
      "Bio": "PhD Student in Computer Science and Engineering from 2015. My research activities are related to Pervasive Computing. In particular, to model and design Augmented Worlds.",
      "Key": "angelocroatti",
      "Name": "Angelo Croatti",
      "URL": "https://www.unibo.it/sitoweb/a.croatti/en",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/angelocroatti/54aaeb52-28b5-47e0-85c9-a6441d298a59/small.jpg"
    },
    {
      "Affiliation": "Grinnell College",
      "Key": "petermichaelosera",
      "Name": "Peter-Michael Osera",
      "URL": "http://www.cs.grinnell.edu/~osera",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/petermichaelosera/294155a5-5b9d-4695-a9ed-756aab6ce248/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "krzysztofczarnecki",
      "Name": "Krzysztof Czarnecki",
      "URL": "http://swen.uwaterloo.ca/~kczarnec",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/krzysztofczarnecki/ff2f1728-37d8-4088-bc15-1c552672fb4e/small.jpg"
    },
    {
      "Affiliation": "EPFL",
      "Key": "dmytropetrashko",
      "Name": "Dmytro Petrashko"
    },
    {
      "Affiliation": "University of Montreal",
      "Key": "vascosousa",
      "Name": "Vasco Sousa",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/vascosousa/2fbb57d2-99ac-4509-928c-98b3fb8f7d9d/small.jpg"
    },
    {
      "Affiliation": "Grinnell College, USA",
      "Key": "abrahammhaidli",
      "Name": "Abraham Mhaidli"
    },
    {
      "Affiliation": "University of Passau ",
      "Key": "janetsiegmund",
      "Name": "Janet Siegmund",
      "URL": "http://www.infosun.fim.uni-passau.de/spl/people-jsiegmund.php",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/janetsiegmund/2beb8894-ded1-41ef-bbf2-f0f6f815d4c5/small.jpg"
    },
    {
      "Affiliation": "University of Antwerp, Belgium",
      "Key": "istvandavid",
      "Name": "István Dávid"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "michaelhomer",
      "Name": "Michael Homer",
      "URL": "http://ecs.vuw.ac.nz/~mwh",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelhomer/2c3ca989-bf45-4c14-a8c2-e6b567e1260c/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research, Cambridge",
      "Bio": "Simon Peyton Jones, MA, MBCS, CEng, graduated from Trinity College Cambridge in 1980. After two years in industry, he spent seven years as a lecturer at University College London, and nine years as a professor at Glasgow University, before moving to Microsoft Research (Cambridge) in 1998. His main research interest is in functional programming languages, their implementation, and their application. He has led a succession of research projects focused around the design and implementation of production-quality functional-language systems for both uniprocessors and parallel machines. He was a key contributor to the design of the now-standard functional language Haskell, and is the lead designer of the widely-used Glasgow Haskell Compiler (GHC). He has written two textbooks about the implementation of functional languages.\nMore generally, he is interested in language design, rich type systems, software component architectures, compiler technology, code generation, runtime systems, virtual machines, and garbage collection. He is particularly motivated by direct use of principled theory to practical language design and implementation \u2013 that\u2019s one reason he loves functional programming so much.",
      "Key": "simonpaytonjones",
      "Name": "Simon Peyton Jones",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/simonpaytonjones/61daea4a-3a8b-4363-925e-b38fe6eac90d/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "danielebonetta",
      "Name": "Daniele Bonetta"
    },
    {
      "Affiliation": "Iona College",
      "Bio": "Dr. Paolina Centonze has been a professor in the Computer Science Department of Iona College since August 2011. Her areas of research include Language-based Security and Mobile Computing. At Iona College, she has been responsible for extending the Computer Science curricula into the field of Cyber Security. Before joining Iona College, Dr. Centonze was a researcher at IBM\u2019s Thomas J. Watson Research Center, Yorktown Heights, New York. She is a co-author of 13 scientific publications and a co-inventor of 10 US patents and 18 US patent applications. Dr. Centonze received her Ph.D. in Mathematics and M.S. degree in Computer Science from New York University, Polytechnic School of Engineering, Brooklyn, New York, and her B.S. degree in Computer Science from St. John\u2019s University, Queens, New York.",
      "Key": "paolinacentonze",
      "Name": "Paolina Centonze",
      "URL": "http://www.iona.edu/Academics/School-of-Arts-Science/Departments/Computer-Science/Faculty-Staff/Paolina-Centonze.aspx",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/paolinacentonze/d27e2cbf-18fc-4505-98dd-2aebbd55a1bc/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "lukasstadler",
      "Name": "Lukas Stadler",
      "URL": "http://ssw.jku.at/General/Staff/LS/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lukasstadler/879dca17-669b-4d6b-b982-d06c8144264b/small.jpg"
    },
    {
      "Affiliation": "IT University of Copenhagen, Denmark",
      "Key": "andrzejwasowski",
      "Name": "Andrzej Wąsowski",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andrzejwasowski/2d71877d-341c-47bb-bca8-8511fabbb6a1/small.jpg"
    },
    {
      "Affiliation": "Huawei",
      "Key": "gangyu",
      "Name": "Gang Yu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gangyu/2dfd43ef-91bb-4e1e-a674-61b2cd11891d/small.jpg"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "thomasdegueule",
      "Name": "Thomas Degueule",
      "URL": "http://people.irisa.fr/Thomas.Degueule/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomasdegueule/2e167fff-6c93-4a24-b64e-a55a48228b24/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "gerteveldhuijzenvanzanten",
      "Name": "Gert E. Veldhuijzen van Zanten"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "sophiadrossopoulou",
      "Name": "Sophia Drossopoulou",
      "URL": "https://wp.doc.ic.ac.uk/sd/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sophiadrossopoulou/2e225ade-2996-4deb-9193-3c84408bb17a/small.jpg"
    },
    {
      "Affiliation": "Federal University of Pernambuco",
      "Bio": "Assistant Professor @ CIn-UFPE",
      "Key": "leopoldoteixeira",
      "Name": "Leopoldo Teixeira",
      "URL": "http://www.cin.ufpe.br/~lmt",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/leopoldoteixeira/2ec43b71-f614-404e-8789-cdc0d3b0f026/small.jpg"
    },
    {
      "Affiliation": "Uppsala University",
      "Bio": "I am a PhD student working with capability type systems for concurrent and parallel object oriented programming. My advisor is Tobias Wrigstad",
      "Key": "eliascastegren",
      "Name": "Elias Castegren",
      "URL": "http://www.it.uu.se/katalog/elica697",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/eliascastegren/2f217e1e-4781-4f08-ac39-c40c71de555b/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "estherwang",
      "Name": "Esther Wang"
    },
    {
      "Affiliation": "Spotify",
      "Key": "thorbiornfritzon",
      "Name": "Thorbiörn Fritzon"
    },
    {
      "Affiliation": "University of Koblenz-Landau, Germany",
      "Key": "ralflammel",
      "Name": "Ralf Lämmel",
      "URL": "http://softlang.wikidot.com/rlaemmel:home",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ralflammel/302d571f-01c8-4854-8a58-0cddfc7f2512/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "florianmyter",
      "Name": "Florian Myter"
    },
    {
      "Affiliation": "University of Bern",
      "Key": "nevenamilojkovic",
      "Name": "Nevena Milojković",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nevenamilojkovic/a6642bf6-8331-4bf2-8ffc-35dd4ff391f2/small.jpg"
    },
    {
      "Affiliation": "University of Wisconsin, Milwaukee",
      "Key": "johnboyland",
      "Name": "John Boyland",
      "URL": "http://www.cs.uwm.edu/~boyland/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johnboyland/30c6f69a-6399-49ae-8d11-49f54c8f763a/small.jpg"
    },
    {
      "Affiliation": "Poznań University of Technology, Poland",
      "Key": "pawetwojciechowski",
      "Name": "Paweł T. Wojciechowski"
    },
    {
      "Affiliation": "Department of Mathematics and Informatics, Faculty of Sciences, University of Novi Sad",
      "Key": "milanjovic",
      "Name": "Milan Jovic"
    },
    {
      "Affiliation": "Open University and Technion IIT",
      "Bio": "David H. Lorenz is an Associate Professor in the Department of Mathematics and Computer Science at the Open University of Israel. He is currently a Visiting Professor at the Faculty of Computer Science, Technion\u2014Israel Institute of Technology.\nHis research interests include aspect-oriented software engineering, modularity, and programming, particularly involving domain specific languages. He is a steering committee member and the former chair of the Aspect-Oriented Software Association, a non-profit organization whose mission is to be the primary sponsor for the International Conference on the Art, Science, and Engineering of Programming.\nProf. Lorenz received his PhD in computer science from the Technion\u2014Israel Institute of Technology. He\u2019s a member of the ACM and a member of the IEEE. Contact him at the Dept. of Mathematics and Computer Science, Open University of Israel, Raanana 43107, Israel; lorenz@openu.ac.il.",
      "Key": "davidlorenz",
      "Name": "David H. Lorenz",
      "URL": "http://www.openu.ac.il/home/lorenz",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidlorenz/30e82918-3fa5-4f87-af2a-6ea7daf33c24/small.jpg"
    },
    {
      "Affiliation": "Clemson University",
      "Key": "brianmalloy",
      "Name": "Brian Malloy"
    },
    {
      "Affiliation": "University of California, Irvine",
      "Key": "lufang1",
      "Name": "Lu Fang",
      "URL": "http://www.ics.uci.edu/~lfang3/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lufang1/8d13f483-d91d-4e9b-ba15-7f87f4fffbac/small.jpg"
    },
    {
      "Affiliation": "Texas Instruments, India",
      "Bio": "VLSI / EDA professional with more than 14 years experience in Physical Design, STA, Design Support and Scripting, working with industry leaders in respective fields. Currently working as digital place &amp; route engineer in Texas Instruments.\nSpecialties: ICC, EDI, Tempus, PT, Hercules, Digital P&amp;R, Perl",
      "Key": "sinimukundan",
      "Name": "Sini Mukundan",
      "URL": "https://www.linkedin.com/in/sinimukundan",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sinimukundan/32479b4c-0d4a-4019-b06d-63a12316cb2f/small.jpg"
    },
    {
      "Affiliation": "ENS Rennes",
      "Key": "timotheehaudebourg",
      "Name": "Timothée Haudebourg",
      "URL": "http://perso.eleves.ens-rennes.fr/people/Timothee.Haudebourg/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/timotheehaudebourg/7764b957-ab7a-4f35-8021-ef2a9d74ac3e/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Bio": "Jeremy Siek is an Associate Professor of Computer Science in the School of Informatics and Computing at Indiana University. Jeremy teaches courses in programming, programming languages, compilers, logic, and other areas of computer science. Jeremy designs new language features to help programmers create and use software libraries and domain-specific languages, especially generic and high-performance ones. In particular, Jeremy invented the gradual typing approach to mixing static and dynamic type checking within the same language. Prior to that, Jeremy authored the Boost Graph Library and attempted to add concepts to C++. Jeremy is a member of the Programming Languages Group at IU and the Center for Research in Extreme Scale Technologies (CREST).",
      "Key": "jeremysiek",
      "Name": "Jeremy Siek",
      "URL": "http://homes.soic.indiana.edu/jsiek/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeremysiek/3487171a-b808-46eb-b0cc-e2af32fc26a9/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo",
      "Key": "wernerdietl",
      "Name": "Werner Dietl",
      "URL": "https://ece.uwaterloo.ca/~wdietl/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/wernerdietl/349bb50c-98df-4409-9cd8-2cb670ef42cb/small.jpg"
    },
    {
      "Affiliation": "TU Darmstadt, Germany",
      "Key": "stevenarzt",
      "Name": "Steven Arzt",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stevenarzt/a0efbd02-1f12-46ae-b7cd-fec28f5d7b41/small.jpg"
    },
    {
      "Affiliation": "University of Duisburg-Essen",
      "Key": "philipplembken",
      "Name": "Philipp Lembken"
    },
    {
      "Affiliation": "iMinds - Distrinet, KU Leuven",
      "Key": "dominiquedevriese",
      "Name": "Dominique Devriese",
      "URL": "https://distrinet.cs.kuleuven.be/people/dominiqu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/dominiquedevriese/08b1fc2d-d157-4905-9c9a-e1ff279ab345/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University\t",
      "Key": "jeanbaptistejeannin",
      "Name": "Jean-Baptiste Jeannin",
      "URL": "http://www.cs.cmu.edu/~jeannin/"
    },
    {
      "Affiliation": "Georgia Tech",
      "Key": "xinzhang",
      "Name": "Xin Zhang",
      "URL": "http://www.cc.gatech.edu/~xzhang36/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/xinzhang/35e12f58-7d9f-47a7-a46a-d171f4d600b9/small.jpg"
    },
    {
      "Affiliation": "University of Campinas (UNICAMP)",
      "Key": "divinocesarlucas",
      "Name": "Divino Cesar Lucas"
    },
    {
      "Affiliation": "INRIA Rennes",
      "Key": "mohamedboussaa",
      "Name": "Mohamed Boussaa",
      "URL": "https://mboussaa.wordpress.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mohamedboussaa/772ffb1c-f950-4ce0-9263-b57fef8631bd/small.jpg"
    },
    {
      "Affiliation": "University of Virginia",
      "Bio": "Kevin Sullivan received his Ph.D. in Computer Science from the University of Washington in Seattle, Washington in 1994. He joined the University of Virginia as Assistant Professor of Computer Science. He received an NSF Career Award in 1995, the (first) ACM Computer Science Professor of the Year Award from undergraduate students in 1998, a University Teaching Fellowship in 1999, the Harold Morton Jr. Teaching Prize in 2000, and a Virginia Engineering Foundation Endowed Faculty Fellowship in 2003. Kevin\u2019s research addresses systems-level, value-driven software and systems engineering with a focus on non-functional system properties, trade-offs, and the satisfaction of diverse stakeholder value propositions. His current research is funded by the National Science Foundation, the Systems Engineering Research Center, and a U.S. Department of Defense Science of Security Lablet. He has also served as a visiting scientist, consultant, and member of the external technical advisory group for the Carnegie Mellon Software Engineering Institute. His current service activities include serving as Steering Committee Chair of Onward!, on the steering committees of SPLASH and AOSD, and as a co-organizer of several research agenda-settings and community-building meetings in the area of national-scale health information systems. In the fall of 2014, he will teach an advanced undergraduate course on functional programming and constructive logic.",
      "Key": "kevinsullivan",
      "Name": "Kevin Sullivan",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kevinsullivan/36d45e70-635d-445b-8b58-624c50b34204/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "ericjul",
      "Name": "Eric Jul"
    },
    {
      "Affiliation": "Keio University, Japan",
      "Key": "sienayu",
      "Name": "Siena Yu"
    },
    {
      "Affiliation": "UT Austin",
      "Key": "xinyuwang",
      "Name": "Xinyu Wang",
      "URL": "https://www.cs.utexas.edu/~xwang",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/xinyuwang/ccbe37b1-293c-4205-8386-295e20bce0d7/small.jpg"
    },
    {
      "Affiliation": "University of Massachusetts, Amherst",
      "Key": "dimitargochev",
      "Name": "Dimitar Gochev"
    },
    {
      "Affiliation": "ENSTA Bretagne, France",
      "Key": "zoedrey",
      "Name": "Zoé Drey",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zoedrey/7971b2b8-92bc-44fa-9919-e6cde02a46f5/small.jpg"
    },
    {
      "Affiliation": "King's College London",
      "Bio": "I am a Research Associate with the Software Development Team at King\u2019s College London. My interests generally lie in the area of programming languages and tools.",
      "Key": "sarahmount",
      "Name": "Sarah Mount",
      "URL": "http://www.snim2.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sarahmount/38017021-a45f-4132-bde4-a21875cfeade/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "daryamelicherkurilova",
      "Name": "Darya Melicher (Kurilova)",
      "URL": "http://www.cs.cmu.edu/~dkurilov/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/daryamelicherkurilova/dd1aba2a-1ed3-43a6-ae6e-b9905a5a8bc2/small.jpg"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "alexanderkrolik",
      "Name": "Alexander Krolik"
    },
    {
      "Affiliation": "Royal Holloway University of London",
      "Bio": "Adrian Johnstone\u2019s research interests lie in the theory and practice of programming languages and their translators. Recent work centres on (i) the formal properties and applicability of generalised parsing and (ii) the customisation of processor architectures for embedded applications.",
      "Key": "adrianjohnstone",
      "Name": "Adrian Johnstone",
      "URL": "https://www.royalholloway.ac.uk/computerscience/research/CSLE/People/Ajohnstonehome.aspx",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/adrianjohnstone/385a94b8-751d-41c7-bc0c-370d227132c8/small.jpg"
    },
    {
      "Affiliation": "CWI",
      "Key": "pabloinostroza",
      "Name": "Pablo Inostroza",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pabloinostroza/385b3f33-78cb-4bbb-a108-409a7293a8c7/small.jpg"
    },
    {
      "Affiliation": "Kyushu University",
      "Key": "kenjihisazumi",
      "Name": "Kenji Hisazumi"
    },
    {
      "Affiliation": "University of Maryland at College Park",
      "Key": "mukulkulkarni",
      "Name": "Mukul Kulkarni"
    },
    {
      "Affiliation": "Federal University of Santa Catarina, Brazil",
      "Key": "jomihubner",
      "Name": "Jomi Fred Hübner",
      "URL": "http://user.das.ufsc.br/~jomi/home.html"
    },
    {
      "Affiliation": "ETH Zurich",
      "Bio": "I am originally from Sofia, Bulgaria where I was born and grew up. I am an Assistant Professor of Computer Science at ETH Zurich where I lead the Software Reliability Lab. Prior to ETH, I was a Research Staff Member at the IBM T.J. Watson Research Center in New York. I obtained my PhD from Cambridge University, England and my B.Sc. from Simon Fraser University. Before Canada, I studied at the Sofia Math High School in Sofia, Bulgaria. I am interested in program analysis, program synthesis, application of machine learning to programming languages, and concurrency.",
      "Key": "martinvechev",
      "Name": "Martin Vechev",
      "URL": "http://www.srl.inf.ethz.ch/vechev.php",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/martinvechev/39954a88-ba91-4c21-9c3e-01652a4663f2/small.jpg"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "clarkverbrugge",
      "Name": "Clark Verbrugge"
    },
    {
      "Affiliation": "Altran",
      "Key": "marchamilton",
      "Name": "Marc Hamilton"
    },
    {
      "Affiliation": "",
      "Key": "nadeemjamali1",
      "Name": "Nadeem Jamali"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "bradmyers",
      "Name": "Brad Myers",
      "URL": "http://www.cs.cmu.edu/~bam/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/bradmyers/3a10958c-e70f-476c-abcc-984ea2a62ccf/small.jpg"
    },
    {
      "Affiliation": "UNICAMP",
      "Key": "lucasmorais",
      "Name": "Lucas Morais",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lucasmorais/3a1a01b5-3cd3-4a3a-a869-a4ead58d3443/small.jpg"
    },
    {
      "Affiliation": "Brown University",
      "Bio": "PhD student",
      "Key": "justinpombrio1",
      "Name": "Justin Pombrio",
      "URL": "http://justinpombrio.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/justinpombrio1/3a70fb9b-6f81-4b8c-a2cf-497c23ad498d/small.jpg"
    },
    {
      "Affiliation": "Harz University of Applied Sciences, Germany",
      "Key": "thomasleich",
      "Name": "Thomas Leich"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Key": "tomoyukiaotani",
      "Name": "Tomoyuki Aotani",
      "URL": "https://taotani.wordpress.com/"
    },
    {
      "Affiliation": "ARM, Ltd",
      "Key": "emmanuelmendoza",
      "Name": "Emmanuel Mendoza"
    },
    {
      "Affiliation": "",
      "Key": "danielvarro",
      "Name": "Daniel Varro",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/danielvarro/1688661f-7fb9-4553-9aec-c1553ba16f76/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Bio": "I have been a Research Staff Member at IBM\u2019s Thomas J. Watson Research Center since 2000. I work on a range of topics, including static program analysis, software testing and the semantic web. I have also worked on the Jikes Research Virtual Machine (Jikes RVM). My program analysis work has recently been focused on scripting languages like JavaScript and on security analysis of Web applications; our work has been included in IBM products, most notably Rational AppScan products, and I am one of the primary authors of the publicly-available Watson Libraries for Analysis (WALA) program analysis infrastructure. My testing work has been primarily focused on Web applications in the Apollo project, and on finding concurrency bugs using both dynamic execution and model checking. My semantic Web work has been on scalable inference with the SHER project; recently, I have focused on representing RDF data efficiently in an RDBMS. I was educated at the University of Wisconsin-Madison as an undergraduate, and at the University of Illinois at Urbana-Champaign as a graduate student where I worked with Professor Andrew Chien on programming systems for massively-parallel machines.",
      "Key": "juliandolby",
      "Name": "Julian Dolby",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-dolby",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/juliandolby/3bf09bdf-79dc-4296-9119-78c2843e3e78/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Amsterdam",
      "Key": "ivanomalavolta",
      "Name": "Ivano Malavolta",
      "URL": "http://www.ivanomalavolta.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ivanomalavolta/dfb9f596-8c06-4bcd-8e7f-c11f6ffddb1f/small.jpg"
    },
    {
      "Affiliation": "RWTH Aachen University, Germany",
      "Key": "bernhardrumpe",
      "Name": "Bernhard Rumpe",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/bernhardrumpe/3c3ff057-cd9d-43be-b941-0a8622834a80/small.jpg"
    },
    {
      "Affiliation": "University of Groningen, The Netherlands",
      "Bio": "PhD student in the University of Groningen under Prof. Gerard R. de Lavalette and Dr. Jorge A. P&eacute;rez. My main research topic is on models for session-based concurrency and I am currently working on Synchronous Reactive Programming and its relation with session types.",
      "Key": "mauriciocano",
      "Name": "Mauricio Cano",
      "URL": "http://www.mcanog.info",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mauriciocano/9dfbf742-e3eb-49bf-b1fb-9bda9448c5ac/small.jpg"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Key": "daejunpark",
      "Name": "Daejun Park",
      "URL": "http://fsl.cs.illinois.edu/index.php/Daejun_Park",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/daejunpark/cc66b976-9cf3-426b-b6d8-5d84954fe04e/small.jpg"
    },
    {
      "Affiliation": "Ritsumeikan University",
      "Key": "tetsuokamina",
      "Name": "Tetsuo Kamina",
      "URL": "http://www.fse.cs.ritsumei.ac.jp/~kamina/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tetsuokamina/6f2756c4-2d16-4c9c-baf5-d893d114a071/small.jpg"
    },
    {
      "Affiliation": "ASML",
      "Key": "rrhschiffelers",
      "Name": "R.R.H. Schiffelers"
    },
    {
      "Affiliation": "Secure Coding Institute",
      "Key": "robertseacord",
      "Name": "Robert Seacord",
      "URL": "https://www.nccgroup.trust/us/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robertseacord/b4b2638e-5931-4777-b08f-7c99a6db3b4e/small.jpg"
    },
    {
      "Affiliation": "Maynooth University",
      "Bio": "",
      "Key": "jamespower",
      "Name": "James Power",
      "URL": "http://www.cs.nuim.ie/~jpower/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jamespower/973dcc8b-86c6-48a9-b329-d6b910b2bb35/small.jpg"
    },
    {
      "Affiliation": "Intel Corporation",
      "Bio": "Victor Lee (victor.w.lee at intel.com) is a principal engineer and research scientist at Intel\u2019s Parallel Computing Lab. His research interests include emerging applications, application analysis and auto-tuning as well as computer architecture. He is currently working on analyzing the HW/SW interactions between HPC/Big-data applications and modern processor architecture and on developing innovative architecture features to improve application and processor (performance and energy) efficiency. Victor received a B.S. in Electrical Engineering from University of Washington in 1994, S.M. in Electrical Engineering and Computer Science from Massachusetts Institute of Technology in 1996. He joined Intel in 1997 and had worked on many Intel processors include Intel Pentium Pro, Intel Pentium 4, and Intel Itanium processors. In 2002, Victor moved to Intel Labs and spearheaded the many-core research which eventually lead to the Intel Many Integrated Core architecture and the first Intel Xeon Phi coprocessor product.He is a senior member of IEEE. He has 30+ professional publications, 15+ granted patents and more than 30 pending patent applications worldwide.",
      "Key": "victorlee",
      "Name": "Victor Lee",
      "URL": "https://www.linkedin.com/in/victor-lee-b980781",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/victorlee/3e66c1fa-8820-4114-a429-03e7655acd62/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "I am a PhD student at &Eacute;cole polytechnique f&eacute;d&eacute;rale de Lausanne, in the Programming Methods Laboratory (LAMP). My supervisor is Prof. Martin Odersky, best known for designing the Scala programming language.\nI am interested in performance-oriented compilation of high-level language constructs. Convenience and safety make generics great for productivity, but due to the erasure transformation, they perform sub-optimally when used with primitive numeric types. This is where I can help. My main project, dubbed miniboxing, is aimed at compiling generic classes down to very efficient bytecode. It is available at scala-miniboxing.org and can speed up generic code by up to 22x.",
      "Key": "vladureche",
      "Name": "Vlad Ureche",
      "URL": "http://vladureche.ro",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/vladureche/3f030dd7-cdbd-480a-ab6b-168d879b3c97/small.jpg"
    },
    {
      "Affiliation": "University of Magdeburg",
      "Key": "pawelmatuszyk",
      "Name": "Pawel Matuszyk"
    },
    {
      "Affiliation": "Barcelona Supercomputing Center",
      "Key": "jaumebosch",
      "Name": "Jaume Bosch"
    },
    {
      "Affiliation": "National University of Singapore",
      "Key": "weinganchin",
      "Name": "Wei Ngan Chin",
      "URL": "https://www.comp.nus.edu.sg/~chinwn/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/weinganchin/4030cccd-549b-4e79-a582-1de7800d8a8a/small.jpg"
    },
    {
      "Affiliation": "University of California, Davis",
      "Key": "chengniansun",
      "Name": "Chengnian Sun",
      "URL": "http://chengniansun.bitbucket.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/chengniansun/c172ce7d-3932-4fba-979d-8526fa38562d/small.jpg"
    },
    {
      "Affiliation": "RWTH Aachen",
      "Key": "henrikbarthels",
      "Name": "Henrik Barthels"
    },
    {
      "Affiliation": "Waseda University",
      "Key": "keijikimura",
      "Name": "Keiji Kimura ",
      "URL": "http://www.apal.cs.waseda.ac.jp/kimura/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/keijikimura/411b1ddc-af52-4140-80a2-cbd243bea5fe/small.jpg"
    },
    {
      "Affiliation": "LogicBlox",
      "Key": "toddveldhuizen",
      "Name": "Todd Veldhuizen",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/toddveldhuizen/6bcf6a31-92ca-446b-b771-73f3805aeba0/small.jpg"
    },
    {
      "Affiliation": "Middlesex University, London",
      "Key": "tonyclark",
      "Name": "Tony Clark ",
      "URL": "http://www.eis.mdx.ac.uk/staffpages/tonyclark/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tonyclark/416f7600-2bef-49af-b904-fcdd0c36a413/small.jpg"
    },
    {
      "Affiliation": "Samsung Research America",
      "Bio": "Frank Tip is a Principal Engineer in the Frontier Computer Science Lab at Samsung Research America in San Jose, California and an Adjunct Professor at the David R. Cheriton School of Computer Science at the University of Waterloo. Previously, he was a Professor and Cheriton Research Chair in the David R. Cheriton School of Computer Science at the University of Waterloo (2012-2014), and a Research Staff Member and Manager at the Software Technology Department at the IBM T.J. Watson Research Center (1995-2012). He received his PhD in 1995 from the University of Amsterdam.",
      "Key": "franktip",
      "Name": "Frank Tip",
      "URL": "http://www.franktip.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/franktip/41a6c2c2-8e55-4d9e-ba59-2a3e2ea6c6ff/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "balbirbarn",
      "Name": "Balbir Barn"
    },
    {
      "Affiliation": "University of Utah",
      "Key": "matthewflatt",
      "Name": "Matthew Flatt",
      "URL": "http://www.cs.utah.edu/~mflatt/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthewflatt/42189154-8010-40a8-a633-0bd54c2a3fe6/small.jpg"
    },
    {
      "Affiliation": "Harvard University",
      "Key": "scottmoore",
      "Name": "Scott Moore"
    },
    {
      "Affiliation": "University of Chile",
      "Key": "alexandrebergel",
      "Name": "Alexandre Bergel",
      "URL": "http://bergel.eu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alexandrebergel/b098f857-2429-400b-b628-bbc3c26d7c8b/small.jpg"
    },
    {
      "Affiliation": "Seikei University",
      "Bio": "Hiroko Midorikawa is an assistant professor of Seikei University in Tokyo. She joins the JST CREST project in Development of System Software Technologies for Post Peta-scale High Performance Computing. Her group interests include the Software Technology for the Deeper Memory Hierarchy in Post Peta-scale Era. She received B.S. in electrical engineering from Keio University and Ph.D. in computer science from University of Tsukuba. She worked the research laboratory of NEC more than five years.",
      "Key": "hirokomidorikawa",
      "Name": "Hiroko Midorikawa",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/hirokomidorikawa/42ae8b54-b485-4226-a07f-b96dfc1c0013/small.jpg"
    },
    {
      "Affiliation": "University of Gothenburg",
      "Key": "christianberger",
      "Name": "Christian Berger",
      "URL": "http://www.christianberger.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christianberger/42d2090f-4087-47fc-afcf-050496e1980e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "raphaelhiesgen",
      "Name": "Raphael Hiesgen"
    },
    {
      "Affiliation": "Northeastern University",
      "Key": "ryanculpepper",
      "Name": "Ryan Culpepper"
    },
    {
      "Affiliation": "Stanford University",
      "Key": "ericschkufza",
      "Name": "Eric Schkufza"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "thomaskuehne",
      "Name": "Thomas Kuehne",
      "URL": "http://ecs.victoria.ac.nz/Main/ThomasKuehne",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomaskuehne/436b3329-d842-452b-ac4f-be08a7286860/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Bio": "I am a PhD student at the Hasso Plattner Institute at the University of Potsdam. I am part of the Software Architecture group led by Prof. Dr. Robert Hirschfeld. Since October 2011, I have also been part of the HPI Research School after getting my Master\u2019s degree in Software Engineering at the HPI, too.\nMy research activities include the area of building tools for programmers, especially data-driven ones for program comprehension tasks. For this, direct manipulation concepts, dynamic analysis, and cooperation of distributed teams in agile processes play an important role. Additionally, I investigate modularity concepts with respect to critical software quality metrics such as extensibility and maintainability while reasoning about interdependencies between languages and tools.",
      "Key": "marceltaeumel",
      "Name": "Marcel Taeumel",
      "URL": "http://www.taeumel.eu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marceltaeumel/6586e7ac-b7f0-4e44-b127-e1d62530239a/small.jpg"
    },
    {
      "Affiliation": "University of Duisburg-Essen",
      "Key": "timmarter",
      "Name": "Tim Marter"
    },
    {
      "Affiliation": "",
      "Key": "zeljkobajic",
      "Name": "Zeljko Bajic",
      "URL": "http://www.is.pmf.uns.ac.rs/zeljko/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zeljkobajic/7a600257-c1eb-4b1b-85db-76661ac2f2e7/small.jpg"
    },
    {
      "Affiliation": "Technische Universität Braunschweig",
      "Key": "saschality",
      "Name": "Sascha Lity"
    },
    {
      "Affiliation": "Dream Songs, Inc. & IBM Research",
      "Bio": "I used to be Dick Gabriel. Those days are long gone. Now I\u2019m just Dick Gabriel.",
      "Key": "richardpgabriel",
      "Name": "Richard P. Gabriel",
      "URL": "http://dreamsongs.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/richardpgabriel/24ea1eb5-102f-4174-89f2-1338f4a4d6ce/small.jpg"
    },
    {
      "Affiliation": "Technische Universität München",
      "Key": "larshupel",
      "Name": "Lars Hupel",
      "URL": "http://www21.in.tum.de/~hupel/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/larshupel/452e5470-2128-41c4-bbae-955af1136d1e/small.jpg"
    },
    {
      "Affiliation": "University of Washington",
      "Key": "calvinloncaric",
      "Name": "Calvin Loncaric",
      "URL": "https://homes.cs.washington.edu/~loncaric/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/calvinloncaric/964ba2a9-e0ec-4e5b-b7d7-8a335015ad9b/small.jpg"
    },
    {
      "Affiliation": "Università di Torino, Italy",
      "Key": "lucapadovani",
      "Name": "Luca Padovani",
      "URL": "http://www.di.unito.it/~padovani/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lucapadovani/bbc89b77-726c-4e74-9ce4-6292049d4d3e/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "marcoservetto",
      "Name": "Marco Servetto"
    },
    {
      "Affiliation": "King's College London ",
      "Key": "carlfriedrichbolz",
      "Name": "Carl Friedrich Bolz",
      "URL": "http://cfbolz.de/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/carlfriedrichbolz/46cae2bd-da0e-4aac-b65c-b29791b0e635/small.jpg"
    },
    {
      "Affiliation": "Purdue University, USA",
      "Key": "zhiyuanli",
      "Name": "Zhiyuan Li",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zhiyuanli/472f9fe2-83b4-4a58-a928-a3ea9193eb1d/small.jpg"
    },
    {
      "Affiliation": "Eindhoven University of Technology",
      "Key": "jgmmengerink",
      "Name": "J.G.M. Mengerink"
    },
    {
      "Affiliation": "Wellesley College, USA",
      "Key": "jessicacherayil",
      "Name": "Jessica Cherayil"
    },
    {
      "Affiliation": "LIP6",
      "Key": "amalelfallahsegrouchni",
      "Name": "Amal El Fallah-Segrouchni",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/amalelfallahsegrouchni/477d3702-e64e-4716-9c68-0afd2252f171/small.jpg"
    },
    {
      "Affiliation": "University of North Carolina Charlotte",
      "Key": "emmanuelbelloogunu",
      "Name": "Emmanuel Bello-Ogunu"
    },
    {
      "Affiliation": "Ulm University, Germany",
      "Key": "christopherbhauser",
      "Name": "Christopher B. Hauser",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christopherbhauser/fff00da8-bff1-48e7-a187-4b99b7960c50/small.jpg"
    },
    {
      "Affiliation": "HARC / Y Combinator Research",
      "Key": "markoroder",
      "Name": "Marko Röder"
    },
    {
      "Affiliation": "Simon Fraser University",
      "Key": "apalaguha",
      "Name": "Apala Guha",
      "URL": "https://sites.google.com/site/apalaguha/home/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/apalaguha/c3ac9b0a-cf29-427c-9a4b-e967385b5873/small.jpg"
    },
    {
      "Affiliation": "Intel, USA",
      "Bio": "Tim Mattson is a parallel programmer (Ph.D. Chemistry, UCSC, 1985). Tim has been with Intel since 1993 where he has worked with brilliant people on great projects such as: (1) the first TFLOP computer (ASCI Red), (2) the OpenMP API for shared memory programming, (3) the OpenCL programming language for heterogeneous platforms, (4) Intel\u2019s first TFLOP chip (the 80 core research chip), and (5) Intel\u2019s 48 core, SCC research processor. Tim has published extensively including the books Patterns for Parallel Programming (with B. Sanders and B. Massingill, Addison Wesley, 2004), An Introduction to Concurrency in Programming Languages (with M. Sottile and C. Rasmussen, CRC Press, 2009), and the OpenCL Programming Guide (with A Munshi, B. Gaster, J. Fung, and D. Ginsburg, Addison Wesley, 2011).",
      "Key": "timmattson",
      "Name": "tim mattson",
      "URL": "https://www.linkedin.com/in/tim-mattson-70b1774",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/timmattson/48856338-0eca-49e0-9228-4bd2d4471d63/small.jpg"
    },
    {
      "Affiliation": "Open University of Catalonia, France",
      "Key": "salvadormartinez",
      "Name": "Salvador Martínez",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/salvadormartinez/48d38054-81f3-4d0a-ae2d-72b3bf5802fc/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "timcoppieters",
      "Name": "Tim Coppieters"
    },
    {
      "Affiliation": "Ochanomizu University",
      "Key": "kenichiasai",
      "Name": "Kenichi Asai",
      "URL": "http://pllab.is.ocha.ac.jp/~asai/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kenichiasai/49034cf6-cc02-4cf7-bcc5-9a0e71f79839/small.jpg"
    },
    {
      "Affiliation": "Ulm University, Germany",
      "Key": "danielseybold",
      "Name": "Daniel Seybold",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/danielseybold/f0ffc4df-80eb-4959-a9fb-aaec9a38b47a/small.jpg"
    },
    {
      "Affiliation": "VUB",
      "Key": "simonvandewater",
      "Name": "Simon Van de Water",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/simonvandewater/126f746b-8cec-4d57-ad2f-5f32fcfc7a6b/small.jpg"
    },
    {
      "Affiliation": "Steadfast Innovation, USA",
      "Key": "andrewhughes",
      "Name": "Andrew Hughes"
    },
    {
      "Affiliation": "University of Chile",
      "Key": "jurajkubelka",
      "Name": "Juraj Kubelka"
    },
    {
      "Affiliation": "Inria",
      "Key": "guillermopolito",
      "Name": "Guillermo Polito",
      "URL": "guillep.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guillermopolito/fb027991-a37d-4375-8c71-1858ce478695/small.jpg"
    },
    {
      "Affiliation": "University of Kent",
      "Key": "richardjones",
      "Name": "Richard Jones",
      "URL": "http://www.cs.kent.ac.uk/~rej",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/richardjones/4ab3e351-dd58-4e11-99d7-cc8ad8db0ba2/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Key": "ravichandhranmadhavan",
      "Name": "Ravichandhran Madhavan",
      "URL": "http://lara.epfl.ch/~kandhada",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ravichandhranmadhavan/6ae9aa98-39e7-4f8b-a6be-21a7df02d148/small.jpg"
    },
    {
      "Affiliation": "HARC / Y Combinator Research",
      "Key": "alessandrowarth",
      "Name": "Alessandro Warth"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "remigiusmeier",
      "Name": "Remigius Meier",
      "URL": "http://www.remigi.us",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/remigiusmeier/5f562ac2-a459-445d-8fda-66bcd7d8634b/small.jpg"
    },
    {
      "Affiliation": "Stanford University",
      "Key": "alexaiken",
      "Name": "Alex Aiken"
    },
    {
      "Affiliation": "",
      "Key": "hongxinggeng",
      "Name": "Hongxing Geng"
    },
    {
      "Affiliation": "Sensational AG",
      "Bio": "I am a former member of the Phoenix research group at INRIA Bordeaux. I\u2019m now a software engineer at Sensational AG.",
      "Key": "emilieballand",
      "Name": "Emilie Balland",
      "URL": "https://sites.google.com/site/emilieballand/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/emilieballand/4bd93e7a-ea0d-4424-964c-9ea3028d0ebf/small.jpg"
    },
    {
      "Affiliation": "Northwestern University",
      "Key": "robbyfindler",
      "Name": "Robby Findler",
      "URL": "http://www.eecs.northwestern.edu/~robby/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robbyfindler/4bf3e052-d024-4142-a8f6-fbcc298ea17b/small.jpg"
    },
    {
      "Affiliation": "University of Massachusetts Amherst",
      "Key": "eliotmoss",
      "Name": "Eliot Moss"
    },
    {
      "Affiliation": "University of Applied Sciences Rapperswil, Switzerland",
      "Key": "petersommerlad",
      "Name": "Peter Sommerlad"
    },
    {
      "Affiliation": "Purdue University",
      "Bio": "I am an associate professor with the School of Electrical and Computer Engineering at Purdue University. \nMy research area is Programming Languages and Compilers, and my interests lie specifically in developing languages, compilers and runtimes that support efficient programming and high performance on emerging complex architectures.\nI graduated in 2002 with a B.S. in both Computer Science and Computer Engineering from North Carolina State University. I received my Ph.D. in Computer Science from Cornell University. My advisor was Keshav Pingali. While pursuing my Ph.D., I was supported by a Department of Energy High Performance Computer Science (HPCS) Fellowship. After receiving my Ph.D., I joined the Institute for Computational Sciences and Engineering at the University of Texas at Austin as a postdoc, where I worked with the Intelligent Software Systems (ISS) group. Since the fall of 2009, I have been in the School of Electrical and Computer Engineering at Purdue University.",
      "Key": "milindkulkarni",
      "Name": "Milind Kulkarni",
      "URL": "https://engineering.purdue.edu/~milind/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/milindkulkarni/4e109172-3d76-421a-89f6-f355bbd09075/small.jpg"
    },
    {
      "Affiliation": "Tufts University",
      "Bio": "I am an Assistant Professor in the Department of Computer Science at Tufts University.\nResearch interests: I work in a variety of different areas of programming language research, including compilers, optimizations, program analysis, and run-time systems.",
      "Key": "samguyer",
      "Name": "Sam Guyer",
      "URL": "http://www.cs.tufts.edu/~sguyer/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/samguyer/4e3da0ec-5bbf-4f0f-a8b7-1cba312110b8/small.jpg"
    },
    {
      "Affiliation": "University of Marburg",
      "Key": "gabrieletaentzer",
      "Name": "Gabriele Taentzer",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gabrieletaentzer/4e3f1957-7d5c-45b8-b247-0a2c87262ffe/small.jpg"
    },
    {
      "Affiliation": "University of Arizona",
      "Bio": "Jonathan Sprinkle is an Associate Professor of Electrical and Computer Engineering at the University of Arizona. In 2013 he received the NSF CAREER award, and in 2009, he received the UA\u2019s Ed and Joan Biggers Faculty Support Grant for work in autonomous systems. His work has an emphasis for industry impact, and he was recognized with the UA \u201cCatapult Award\u201d by Tech Launch Arizona in 2014, and in 2012 his team won the NSF I-Corps Best Team award. His research interests and experience are in systems control and engineering, and he teaches courses ranging from systems modeling and control to mobile application development and software engineering.",
      "Key": "jonathansprinkle",
      "Name": "Jonathan Sprinkle",
      "URL": "http://csl.arizona.edu/sprinkjm",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathansprinkle/4e6e6e01-1f81-4041-ae8f-fa4892dbcaa3/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "tonyclark1",
      "Name": "Tony Clark"
    },
    {
      "Affiliation": "Eindhoven University of Technology and ASML, the Netherlands",
      "Key": "ramonschiffelers",
      "Name": "Ramon Schiffelers",
      "URL": "https://www.linkedin.com/in/ramon-r-h-schiffelers-b978862",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ramonschiffelers/4f0d394c-428e-404b-852d-136e6c4628fc/small.jpg"
    },
    {
      "Affiliation": "Uppsala University",
      "Bio": "I am an associate professor at Department of Information Technology, Uppsala University, Uppsala, Sweden.",
      "Key": "tobiaswrigstad",
      "Name": "Tobias Wrigstad",
      "URL": "http://wrigstad.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tobiaswrigstad/4f9965d0-7c9e-4e63-bdd4-0539221f9748/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Bio": "Jonathan Aldrich is Associate Professor of Computer Science at Carnegie Mellon University. He is the director of CMU\u2019s Ph.D. and undergraduate minor programs in Software Engineering, and teaches courses in programming languages, software engineering, and program analysis for quality and security. In addition, he serves as a consultant on architecture, design, and legal issues in the software industry. Dr. Aldrich joined the CMU faculty after completing a Ph.D. at the University of Washington and a B.S. at Caltech.\nDr. Aldrich\u2019s research centers on programming languages and type systems that are deeply informed by software engineering considerations. His research contributions include verifying the correct implementation of an architectural design, modular formal reasoning about code, and API protocol specification and verification. For his work on software architecture, Aldrich received a 2006 NSF CAREER award and the 2007 Dahl-Nygaard Junior Prize, given annually for a significant technical contribution to object-oriented programming. Current areas of research focus include extensible programming languages, analysis and type systems for security and productivity, and foundations of object-oriented programming.",
      "Key": "jonathanaldrich",
      "Name": "Jonathan Aldrich",
      "URL": "http://www.cs.cmu.edu/~aldrich/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathanaldrich/500dbc9a-cceb-4453-8b5e-1c949af07087/small.jpg"
    },
    {
      "Affiliation": "Gran Sasso Science Institute, L'Aquila, Italy",
      "Key": "ludovicoiovino",
      "Name": "Ludovico Iovino",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ludovicoiovino/512fa8f0-3ce9-48ae-8143-2ebf54bfe702/small.jpg"
    },
    {
      "Affiliation": "Semmle",
      "Bio": "I am a research engineer at Semmle Ltd. in Oxford. Previously, I was an assistant professor at the School of Computer Engineering of Nanyang Technological University in Singapore; a post-doctoral researcher at IBM T.J. Watson Research Center in New York; and a PhD student at the Department of Computer Science of Oxford University.",
      "Key": "maxschaefer",
      "Name": "Max Schaefer",
      "URL": "http://xiemaisi.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/maxschaefer/51413e36-8f61-4ec5-b08e-7087523e780b/small.jpg"
    },
    {
      "Affiliation": "KTH Royal Institute of Technology",
      "Bio": "Assistant Professor in the School of Computer Science and Communication at KTH Royal Institute of Technology, Sweden.",
      "Key": "philipphaller",
      "Name": "Philipp Haller",
      "URL": "http://www.csc.kth.se/~phaller/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/philipphaller/51edf6da-8b27-4ed7-aa2c-afcf8acaaa06/small.jpg"
    },
    {
      "Affiliation": "Kyushu University",
      "Key": "akirafukuda",
      "Name": "Akira Fukuda"
    },
    {
      "Affiliation": "Australian National University, Data61, and Purdue University",
      "Bio": "I am a professor of computer science, with academic appointments at Purdue University (on leave from August 2015) and the Australian National University, contributing also as a researcher with Data61 (formerly NICTA). I studied computer science at the University of Adelaide, the University of Waikato, and the University of Massachusetts at Ahmerst, receiving BSc, MSc, and PhD degrees, respectively. My research interests lie in the area of programming language implementation, and I work on problems arising in object persistence, object databases, distribution, memory management (garbage collection), managed language runtimes, language virtual machines, optimizing compilers, and architectural support for programming languages and applications.\nI am a Life Member of the Association for Computing Machinery and a Member of the IEEE. I was named a Distinguished Scientist of the ACM in 2012.",
      "Key": "tonyhosking",
      "Name": "Tony Hosking",
      "URL": "https://hosking.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tonyhosking/526cf4a8-9a24-4f85-8aee-47448e3c2937/small.jpg"
    },
    {
      "Affiliation": "Federal University of Minas Gerais, Brazil",
      "Key": "miguelramos",
      "Name": "Miguel Ramos"
    },
    {
      "Affiliation": "OSCAR TECHNOLOGY, Japan",
      "Key": "sachiokamiya",
      "Name": "Sachio Kamiya"
    },
    {
      "Affiliation": "vertamedia",
      "Key": "ruslanshevchenko",
      "Name": "Ruslan Shevchenko"
    },
    {
      "Affiliation": "Raincode, Belgium",
      "Key": "yvesjaradin",
      "Name": "Yves Jaradin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yvesjaradin/e690e7d8-42ca-48bc-adb0-df1d37159c74/small.jpg"
    },
    {
      "Affiliation": "Université catholique de Louvain",
      "Bio": "Christopher Meiklejohn loves distributed systems and programming languages. Previously, Christopher worked at Basho Technologies, Inc. on the distributed key-value store, Riak. Christopher develops a programming language for distributed computation, called Lasp. Christopher is currently a Ph.D. student at the Universit&eacute; catholique de Louvain in Belgium.",
      "Key": "christophermeiklejohn",
      "Name": "Christopher Meiklejohn",
      "URL": "http://christophermeiklejohn.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christophermeiklejohn/534c2b02-1208-4a46-a66d-0ab8d3747cc3/small.jpg"
    },
    {
      "Affiliation": "Ecole Polytechnique Federale de Lausanne",
      "Key": "heathermiller",
      "Name": "Heather Miller",
      "URL": "http://heather.miller.am/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/heathermiller/5470f06d-e4a1-4142-aa4a-5c7f7aa8c8b9/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "kayvanmemarian",
      "Name": "Kayvan Memarian",
      "URL": "http://www.cl.cam.ac.uk/~km569"
    },
    {
      "Affiliation": "KAIST",
      "Key": "changheepark",
      "Name": "Changhee Park",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/changheepark/54761fd3-8ca0-4c51-b32a-ccae43bac431/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Bio": "David (@whileydave) graduated with a PhD from Imperial College London in 2005, and took up a lecturer position at Victoria University of Wellington, NZ. David\u2019s PhD thesis was on efficient algorithms for pointer analysis of C, and his techniques have since been incorporated into GCC. His interests are in programming languages, compilers and static analysis.\nSince 2009, he has been developing the Whiley Programming Language (whiley.org) which is designed specifically to simplify program verification. Prior to that, David developed the Java Compiler Kit (JKit), which is an open source Java Compiler aimed at simplifying static analysis.\nDavid has previously interned at Bell Labs, New Jersey, where he worked on compilers for FPGAs; and also at IBM Hursely, UK, where he worked with the AspectJ development team on profiling systems.",
      "Key": "davidpearce",
      "Name": "David Pearce",
      "URL": "http://homepages.ecs.vuw.ac.nz/~djp/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidpearce/5482ec6d-179f-4303-913b-05a7d5ae1a12/small.jpg"
    },
    {
      "Affiliation": "University of St Andrews",
      "Bio": "I am a Lecturer in Computer Science at the University of St Andrews, interested in type theory, dependently typed functional programming, compilers and domain specific languages (DSLs). I am currently working on the implementation of DSLs for stateful, resource-aware programming, especially for correct network protocol design and implementation, using Idris, a dependently typed functional programming language.\nWhen I\u2019m not doing that, you might find me playing Go (I\u2019m about 1 kyu), walking up a hill, watching a game of cricket, or waiting for a delayed train.\nI\u2019m afraid I also perpetrated the whitespace programming language.",
      "Key": "edwinbrady",
      "Name": "Edwin Brady",
      "URL": "http://www.dcs.st-and.ac.uk/~eb",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/edwinbrady/550b50a8-47ea-423b-b09a-84a4bda79ebb/small.jpg"
    },
    {
      "Affiliation": "Fernuniversität",
      "Key": "friedrichsteimann",
      "Name": "Friedrich Steimann"
    },
    {
      "Affiliation": "University of California at Irvine, USA",
      "Key": "pedromartins",
      "Name": "Pedro Martins",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pedromartins/a0a43f82-df89-446e-bbd7-a3b61abfedfd/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "lilliamigonzalezalayon",
      "Name": "Lilliam I Gonzalez Alayon"
    },
    {
      "Affiliation": "Macquarie University, Australia",
      "Key": "scottbuckley",
      "Name": "Scott Buckley",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/scottbuckley/2deb435f-edfb-4c4a-b5d5-334c176bbc32/small.jpg"
    },
    {
      "Affiliation": "TU Hamburg",
      "Key": "sibylleschupp",
      "Name": "Sibylle Schupp",
      "URL": "https://www.tuhh.de/sts/institute/prof-dr-sibylle-schupp.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sibylleschupp/56cf2909-2d07-4442-9f83-7baf1455e804/small.jpg"
    },
    {
      "Affiliation": "Univeristy of Utah",
      "Key": "timknutson",
      "Name": "Tim Knutson"
    },
    {
      "Affiliation": "PyPy.org",
      "Key": "arminrigo",
      "Name": "Armin Rigo"
    },
    {
      "Affiliation": "University of British Columbia",
      "Key": "ronaldgarcia",
      "Name": "Ronald Garcia",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ronaldgarcia/57bea391-14fa-4906-924c-188871ae7577/small.jpg"
    },
    {
      "Affiliation": "University of Pisa, Italy",
      "Key": "tizianodematteis",
      "Name": "Tiziano De Matteis",
      "URL": "http://www.di.unipi.it/~dematteis"
    },
    {
      "Affiliation": "Technion",
      "Key": "erezpetrank",
      "Name": "Erez Petrank",
      "URL": "http://www.cs.technion.ac.il/~erez/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/erezpetrank/5849b5e5-c8ce-4552-a254-023af14a11e0/small.jpg"
    },
    {
      "Affiliation": "University of Duisburg-Essen",
      "Key": "stefanhanenberg",
      "Name": "Stefan Hanenberg",
      "URL": "http://www.dawis.wiwi.uni-due.de/en/team/stefan-hanenberg/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stefanhanenberg/585ccb2e-1400-47a7-8a8a-93e0b99f5946/small.jpg"
    },
    {
      "Affiliation": "University of Rennes 1, France",
      "Key": "benoitcombemale",
      "Name": "Benoit Combemale",
      "URL": "http://people.irisa.fr/Benoit.Combemale/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/benoitcombemale/5882297a-ff9f-447a-b0d3-64194469217f/small.jpg"
    },
    {
      "Affiliation": "Worcester Polytechnic Institute",
      "Bio": "I am an Associate Professor in Computer Science at Worcester Polytechnic Institute (WPI), MA, USA. I am also Director of the Cybersecurity Program and an Adjunct Research Faculty in the Department of Computer Science at Brown University.\nResearch Interests: I\u2019m interested in various facets of how people learn and use formal systems. Over the years, I\u2019ve increasingly emphasized the human and learning components. Currently, my main projects are Bootstrap: teaching kids to program videogames as a way to reinforce algebra, developing effective error-messages for novice programmers in WeScheme and DrRacket, and how people learn programming through Pyret (a new programming language) and CaptainTeach (a new programming environment with built-in peer-reviewing and support for teaching test-early development).",
      "Key": "kathifisler",
      "Name": "Kathi Fisler",
      "URL": "http://web.cs.wpi.edu/~kfisler/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kathifisler/58a7cf08-9e37-45b0-8ff0-f24d5544de3a/small.jpg"
    },
    {
      "Affiliation": "Tufts University",
      "Bio": "Kathleen Fisher is Professor in the Computer Science Department at Tufts. Previously, she was a Principal Member of the Technical Staff at AT&amp;T Labs Research, a Consulting Faculty Member in the Computer Science Department at Stanford University, and a program manager at DARPA where she started and managed the HACMS and PPAML programs. Kathleen\u2019s research focuses on advancing the theory and practice of programming languages and on applying ideas from the programming language community to the problem of ad hoc data management. The main thrust of her work has been in domain-specific languages to facilitate programming with massive amounts of ad hoc data, including the Hancock system for efficiently building signatures from massive transaction streams and the PADS system for managing ad hoc data. Recently, she has been exploring synergies between machine learning and programming languages and studying how to apply advances in programming languages to the problem of building more secure systems.\nKathleen is an ACM Fellow. She has served as program chair for FOOL, ICFP, CUFP, and OOPSLA and as General Chair for ICFP 2015. Kathleen is past Chair of the ACM Special Interest Group in Programming Languages (SIGPLAN), past Co-Chair of CRA\u2019s Committee on the Status of Women (CRA-W), and a former editor of the Journal of Functional Programming. She is an Associate Editor for TOPLAS.",
      "Key": "kathleenfisher",
      "Name": "Kathleen Fisher",
      "URL": "http://www.cs.tufts.edu/~kfisher",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kathleenfisher/04a1b289-f7fe-4e91-b686-6b34a7a45cb2/small.jpg"
    },
    {
      "Affiliation": "Linköping University, Sweden         ",
      "Key": "christophkessler",
      "Name": "Christoph Kessler",
      "URL": "http://www.ida.liu.se/~chrke",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christophkessler/58db48ea-2721-429e-82b1-d725eeb2ca4d/small.jpg"
    },
    {
      "Affiliation": "Aarhus University",
      "Key": "esbenandreasen",
      "Name": "Esben Andreasen",
      "URL": "http://cs.au.dk/~esbena",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/esbenandreasen/5925e052-51d6-401a-bd56-0b545e30467d/small.jpg"
    },
    {
      "Affiliation": "Technion",
      "Key": "meitalzilberstein",
      "Name": "Meital Zilberstein",
      "URL": "http://www.cs.technion.ac.il/~mbs",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/meitalzilberstein/f1bb4a07-3bfd-4444-985a-0dc5c23fb87a/small.jpg"
    },
    {
      "Affiliation": "University of Wisconsin - Madison",
      "Key": "venkateshsrinivasan",
      "Name": "Venkatesh Srinivasan",
      "URL": "http://cs.wisc.edu/~venk/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/venkateshsrinivasan/f215281b-03ab-4ec8-bf62-81430b85da94/small.jpg"
    },
    {
      "Affiliation": "University of Tübingen, Germany",
      "Key": "paologgiarrusso1",
      "Name": "Paolo G. Giarrusso",
      "URL": "http://ps.informatik.uni-tuebingen.de/team/giarrusso/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/paologgiarrusso1/d2d30ed1-e576-4628-82dc-69d2d98d07b1/small.jpg"
    },
    {
      "Affiliation": "Imperial College London, UK",
      "Key": "luispina",
      "Name": "Luís Pina",
      "URL": "http://www.luispina.me",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/luispina/59cf25ea-45b1-48e6-ac54-2a68a2d6cf4b/small.jpg"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology",
      "Key": "juliarubin",
      "Name": "Julia Rubin",
      "URL": "http://people.csail.mit.edu/mjulia/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/juliarubin/59e7a8b0-b9be-4851-a35f-50b3ffc81201/small.jpg"
    },
    {
      "Affiliation": "Iowa State University",
      "Key": "yuhenglong",
      "Name": "Yuheng Long"
    },
    {
      "Affiliation": "University of Washington",
      "Bio": "Michael D. Ernst is a Professor in the Computer Science &amp; Engineering department at the University of Washington.\nErnst\u2019s research aims to make software more reliable, more secure, and easier (and more fun!) to produce. His primary technical interests are in software engineering, programming languages, type theory, security, program analysis, bug prediction, testing, and verification. Ernst\u2019s research combines strong theoretical foundations with realistic experimentation, with an eye to changing the way that software developers work.\nErnst is an ACM Fellow (2014) and received the inaugural John Backus Award (2009) and the NSF CAREER Award (2002). His research has received an ACM SIGSOFT Impact Paper Award (2013), 8 ACM Distinguished Paper Awards (FSE 2014, ISSTA 2014, ESEC/FSE 2011, ISSTA 2009, ESEC/FSE 2007, ICSE 2007, ICSE 2004, ESEC/FSE 2003), an ECOOP 2011 Best Paper Award, honorable mention in the 2000 ACM doctoral dissertation competition, and other honors. In 2013, Microsoft Academic Search ranked Ernst #2 in the world, in software engineering research contributions over the past 10 years.\nDr. Ernst was previously a tenured professor at MIT, and before that a researcher at Microsoft Research.",
      "Key": "michaeldernst",
      "Name": "Michael D. Ernst",
      "URL": "http://homes.cs.washington.edu/~mernst/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaeldernst/5a17b08c-2fe3-400c-8c3f-fb011ec07285/small.jpg"
    },
    {
      "Affiliation": "Columbia University",
      "Bio": "Jon is currently studying Computer Science under the guidance of Prof Gail Kaiser, working towards a Ph. D at Columbia University, focusing on software testing and program analysis. His most recent publications are Pebbles: Fine-Grained Data Management Abstractions for Modern Operating Systems (OSDI \u201914), Phosphor: Illuminating Dynamic Data Flow in Off-The Shelf JVMs (OOPSLA \u201914), and Unit Test Virtualization with VMVM (ICSE \u201914, ACM SIGSOFT Distinguished Paper award). He has also also worked with Electric Cloud, RentPost, TA\u2019ed at Columbia and done significant freelance work with PHP and MySQL.\nResearch Interests: Reducing Testing Overhead, Release Engineering, Software Engineering, Program Analysis",
      "Key": "jonathanbell",
      "Name": "Jonathan Bell",
      "URL": "http://jonbell.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathanbell/5a59c3b3-4519-4de1-8087-53f5a9f8d9d2/small.jpg"
    },
    {
      "Affiliation": "University of Glasgow",
      "Key": "niallbarr",
      "Name": "Niall Barr",
      "URL": "http://www.niallbarr.me.uk/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/niallbarr/7349d589-133f-491d-aa4e-112179e05a74/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Bio": "I am a Principal Research Staff Member in the Programming Technologies Department at the IBM T.J. Watson Research Center. I joined IBM Research in 1998 after completing my PhD at the University of Washington.\nI am interested in a wide variety of topics in programming language design and implementation including the analysis and optimization of object-oriented languages, virtual machine design and implementation, scalable runtime systems, Just-In-Time compilation, online feedback-directed optimization, and garbage collection. Much of my research is ultimately motivated by a desire to enable programmers to use high-level languages to construct high performance software systems.",
      "Key": "davidgrove",
      "Name": "David Grove",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-groved",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidgrove/5b28b1ea-7426-4f88-92ea-acf2c5cc053f/small.jpg"
    },
    {
      "Affiliation": "Open University and Technion IIT",
      "Bio": "David H. Lorenz is an Associate Professor in the Department of Mathematics and Computer Science at the Open University of Israel. He is currently a Visiting Professor at the Faculty of Computer Science, Technion\u2014Israel Institute of Technology.\nHis research interests include aspect-oriented software engineering and programming, particularly involving domain specific languages. He is the Chair of the Aspect-Oriented Software Association, a non-profit organization whose mission is to be the primary sponsor for the annual Conference on Modularity.\nProf. Lorenz received his PhD in computer science from the Technion\u2014Israel Institute of Technology. He\u2019s a member of the ACM and a member of the IEEE. Contact him at the Dept. of Mathematics and Computer Science, Open University of Israel, Raanana 43107, Israel; lorenz@openu.ac.il.",
      "Key": "davidhlorenz",
      "Name": "David H. Lorenz",
      "URL": "http://www.cs.technion.ac.il/people/dhlorenz/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidhlorenz/abf7530c-7e7e-469a-9213-7d658ca2e3f6/small.jpg"
    },
    {
      "Affiliation": "IBM, Canada",
      "Key": "allankielstra",
      "Name": "Allan Kielstra"
    },
    {
      "Affiliation": "",
      "Key": "annabelsatin",
      "Name": "Annabel Satin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/annabelsatin/5b98918c-16be-453e-a6bd-60d039f73586/small.jpg"
    },
    {
      "Affiliation": "Pomona College",
      "Bio": "Kim B. Bruce has been Reuben C. and Eleanor Winslow Professor of Computer Science at Pomona College since the summer of 2005. He is the Frederick Latimer Wells Professor of Computer Science emeritus at Williams College, where he taught for 28 years. His first position out of graduate school was as an instructor in Mathematics at Princeton University from 1975 to 1977. His research program was originally in the model theory of languages with generalized quantifiers, but his interests turned to programming languages after his stay at M.I.T. His research focus evolved from models of the polymorphic lambda calculus to the study of semantics and type theory. This led to his continuing work in the design of object-oriented languages. His most recent research project involves the design of a new language, Grace, designed for use in the first two years of Computer Science education.",
      "Key": "kimbruce",
      "Name": "Kim Bruce",
      "URL": "http://www.cs.pomona.edu/~kim/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kimbruce/5c9ee770-0879-4067-8b59-9709e6fd7818/small.jpg"
    },
    {
      "Affiliation": "Lund University, Sweden",
      "Key": "gorelhedin1",
      "Name": "Görel Hedin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gorelhedin1/5ca232e8-99d6-44bf-9126-7871acc8cef8/small.jpg"
    },
    {
      "Affiliation": "Uppsala University",
      "Bio": "I\u2019m a PhD student at Uppsala University, working on Aliasing Control. See my web page for all the details!",
      "Key": "stephanbrandauer",
      "Name": "Stephan Brandauer",
      "URL": "http://stbr.me/work",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stephanbrandauer/5cad1385-efaf-456c-ac6d-348726380c3b/small.jpg"
    },
    {
      "Affiliation": "Indian Institute of Science, Bangalore",
      "Bio": "I am a fifth year PhD student in the Department of Computer Science and Automation, IISc Bangalore and a recipient of the Google India PhD fellowship. My research interests are in software engineering and programming languages. For my doctoral dissertation, I have designed and implemented techniques to address the problem of automatically synthesizing clients for detecting concurrency bugs in multi-threaded libraries.",
      "Key": "malavikasamak",
      "Name": "Malavika Samak",
      "URL": "https://sites.google.com/site/malavikasamak/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/malavikasamak/5cf6fefc-aa6b-4fcf-8de4-59ec389f3619/small.jpg"
    },
    {
      "Affiliation": "Northwestern University",
      "Key": "danielfeltey",
      "Name": "Daniel Feltey"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Key": "tobiasschlatter",
      "Name": "Tobias Schlatter"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "thierryrenaux",
      "Name": "Thierry Renaux"
    },
    {
      "Affiliation": "Open University of Catalonia, Spain",
      "Key": "jordicabot",
      "Name": "Jordi Cabot",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jordicabot/5d8c4a20-791b-429d-b81c-24351bdb57ea/small.jpg"
    },
    {
      "Affiliation": "Purdue University, USA",
      "Bio": "Tiark Rompf is an assistant professor at Purdue University. His work focuses on runtime code generation, advanced compiler technology, and associated language support. From 2008 to 2014 he was a member of Martin Odersky\u2019s Scala team at EPFL where he developed the LMS compiler framework and made various contributions to the Scala language and toolchain (delimited continuations, efficient immutable data structures, compiler speedups, type system work).",
      "Key": "tiarkrompf",
      "Name": "Tiark Rompf",
      "URL": "http://tiarkrompf.github.io/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tiarkrompf/5d9a42be-0208-4c50-bfba-382dd5cb6204/small.jpg"
    },
    {
      "Affiliation": "Shibaura Institute of Technology",
      "Key": "midorisugaya",
      "Name": "Midori Sugaya"
    },
    {
      "Affiliation": "Technische Universität Braunschweig",
      "Key": "christophseidl",
      "Name": "Christoph Seidl",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christophseidl/5db28b6f-ff1e-4751-a0dd-c0946c263e44/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "joshuasunshine",
      "Name": "Joshua Sunshine",
      "URL": "http://www.cs.cmu.edu/~jssunshi/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/joshuasunshine/5eb98dac-1e1e-4698-88b5-0ddc47b9d9d7/small.jpg"
    },
    {
      "Affiliation": "Waseda University, Japan",
      "Bio": "Hironori Kasahara has served as a chair or member of 225 society and government committees, including a member of the IEEE CS Board of Governors; chair of CS Multicore STC and CS Japan chapter; associate editor of IEEE Transactions on Computers; vice PC chair of the ACM 1996 ENIAC 50th Anniversary International Conference on Supercomputing; general chair of LCPC; PC member of SC, PACT, PPoPP, and ASPLOS; board member of IEEE Tokyo section; and member of the Earth Simulator committee. \nKasahara received a PhD in 1985 from Waseda University, Tokyo, joined its faculty in 1986, and has been a professor of computer science since 1997 and a director of the Advanced Multicore Research Institute since 2004. \nHe was a visiting scholar at University of California, Berkeley and the University of Illinois at Urbana\u2013Champaign\u2019s Center for Supercomputing R&amp;D.\nHe received the CS Golden Core Member Award, IFAC World Congress Young Author Prize, IPSJ Fellow and Sakai Special Research Award, and the Japanese Minister\u2019s Science and Technology Prize. \nKasahara led Japanese national projects on parallelizing compilers and embedded multicores, and has presented 210 papers, 132 invited talks, and 27 patents. His research has been introduced in 520 newspaper and Web articles.",
      "Key": "hironorikasahara",
      "Name": "Hironori Kasahara",
      "URL": "http://www.kasahara.cs.waseda.ac.jp/kasahara.html.en",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/hironorikasahara/cc3159e7-1918-4dd5-8067-df19200b05e5/small.jpg"
    },
    {
      "Affiliation": "University of Zurich",
      "Bio": "PhD student at the University of Zurich, Research intern at IBM T.J. Watson Research Center interested in how we can make the software development process more data-driven by giving structure to runtime data and providing guidance to developers on how to use it",
      "Key": "jurgencito",
      "Name": "Jürgen Cito",
      "URL": "http://www.ifi.uzh.ch/seal/people/cito.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jurgencito/8f3b8480-88a3-4e18-a139-789c23a8ccb8/small.jpg"
    },
    {
      "Affiliation": "Grinnell College, USA",
      "Key": "joelkatticaran",
      "Name": "Joel Katticaran"
    },
    {
      "Affiliation": "Google",
      "Key": "igorpeshansky",
      "Name": "Igor Peshansky",
      "URL": "https://www.linkedin.com/pub/igor-peshansky/4/72/50a",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/igorpeshansky/a4497efe-632b-4a56-853f-8577a96c7b69/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington, New Zealand",
      "Key": "jamesnoble",
      "Name": "James Noble",
      "URL": "http://homepages.mcs.vuw.ac.nz/~kjx/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jamesnoble/5fd6e0e6-633d-4070-8183-9a4615fea3a2/small.jpg"
    },
    {
      "Affiliation": "Intel Labs",
      "Key": "lindseykuper",
      "Name": "Lindsey Kuper",
      "URL": "http://www.cs.indiana.edu/~lkuper/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lindseykuper/60a744e7-f556-40b2-b14d-877394833333/small.jpg"
    },
    {
      "Affiliation": "R7K Research and Conveyance",
      "Key": "michaelfeathers",
      "Name": "Michael Feathers"
    },
    {
      "Affiliation": "Vienna University of Technology, Austria",
      "Key": "markusraab",
      "Name": "Markus Raab",
      "URL": "http://www.complang.tuwien.ac.at/raab/"
    },
    {
      "Affiliation": "UT Austin",
      "Bio": "William Cook is an Associate Professor in the Department of Computer Sciences at the University of Texas at Austin. His research is focused on object-oriented programming, programming languages, modeling languages, and the interface between programming languages and databases. Prior to joining UT in 2003, Dr. Cook was Chief Technology Officer and co-founder of Allegis Corporation. He was chief architect for several award-winning products, including the eBusiness Suite at Allegis, the Writer\u2019s Solution for Prentice Hall, and the AppleScript language at Apple Computer. At HP Labs his research focused on the foundations of object-oriented languages, including formal models of mixins, inheritance, and typed models of object-oriented languages. He completed his Ph.D. in Computer Science at Brown University in 1989.",
      "Key": "williamcook",
      "Name": "William Cook",
      "URL": "http://www.cs.utexas.edu/~wcook/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/williamcook/4b24e66e-5549-43f6-8e13-8010da47a4bf/small.jpg"
    },
    {
      "Affiliation": "Trent University",
      "Key": "omaralam",
      "Name": "Omar Alam",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/omaralam/d6e9de9f-fc3d-473f-a7bf-07c250aa8de8/small.jpg"
    },
    {
      "Affiliation": "Curbralan",
      "Key": "kevlinhenney",
      "Name": "Kevlin Henney",
      "URL": "https://about.me/kevlin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kevlinhenney/e83c8894-66cf-4938-aa3c-ae2350cb8baa/small.jpg"
    },
    {
      "Affiliation": "University of Tübingen, Germany",
      "Key": "tillmannrendel",
      "Name": "Tillmann Rendel",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tillmannrendel/6234cdde-5d76-471c-b36a-9fb94472f461/small.jpg"
    },
    {
      "Affiliation": "Brown University",
      "Bio": "I am a Professor of Computer Science at Brown University, Providence, RI, USA. You can learn more about me from my Web site.",
      "Key": "shriramkrishnamurthi",
      "Name": "Shriram Krishnamurthi",
      "URL": "http://cs.brown.edu/~sk/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shriramkrishnamurthi/6273fffa-b377-4578-9422-b150fdb9978d/small.jpg"
    },
    {
      "Affiliation": "King's College London",
      "Key": "steffenzschaler",
      "Name": "Steffen Zschaler",
      "URL": "http://www.steffen-zschaler.de/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/steffenzschaler/62b62c24-1a78-45f1-ad8a-512811dd020a/small.jpg"
    },
    {
      "Affiliation": "Bergen University College , Norway",
      "Bio": "Currently I am working at the Modelling group conducting research in theory and application of MDE in various fields like health workflows and verification of such, metamodeling and model transformations. While I was associate professor at Aalesund University College, I was working in the RFF project MUMS (Modelldrevetutvikling av Maritime Simulatorer,) and I am writing a project proposal targetting applications of model-driven engineering in offshore and maritime simulator systems. In my postdoc I worked in the project Building Decision-Support Through Dynamic Workflow Systems, Academia and Industry Working Together for Better Healthcare at StFX (July 2011 - May 2012). I am also involved in other projects such as DPF, SHIP, DISTECH and FORMGRID.",
      "Key": "adrianrutle",
      "Name": "Adrian Rutle",
      "URL": "http://home.hib.no/ansatte/aru/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/adrianrutle/62c2e354-626f-4590-934d-3b29ff171c27/small.jpg"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Key": "willdietz",
      "Name": "Will Dietz",
      "URL": "http://wdtz.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/willdietz/6343d0d9-bbad-4ea7-ac24-8f488be242fd/small.jpg"
    },
    {
      "Affiliation": "University of Duisburg-Essen",
      "Key": "paulbabucke",
      "Name": "Paul Babucke"
    },
    {
      "Affiliation": "Queen Mary University of London",
      "Key": "gretayorsh",
      "Name": "Greta Yorsh",
      "URL": "http://www.eecs.qmul.ac.uk/~gretay/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gretayorsh/6417662f-4ebf-4ccd-a398-43cf25a93c91/small.jpg"
    },
    {
      "Affiliation": "Tufts University",
      "Key": "karlcronburg",
      "Name": "Karl Cronburg",
      "URL": "https://www.linkedin.com/in/karl-cronburg-5a601792",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/karlcronburg/645df514-2766-4c16-b3f0-f08d402cd114/small.jpg"
    },
    {
      "Affiliation": "Johannes Kepler University",
      "Bio": "PhD student in Linz, Austria, researching about parallelism in the context of the JRuby+Truffle project, an implementation of Ruby using the Truffle framework and the Graal dynamic compiler.",
      "Key": "benoitdaloze",
      "Name": "Benoit Daloze",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/benoitdaloze/5ac85d31-cbd8-46c7-9335-363f6336ae85/small.jpg"
    },
    {
      "Affiliation": "University of Maryland, College Park",
      "Bio": "I\u2019m now a professor emeritus from the University of Maryland, College Park, MD, USA. I retired from my position as professor to devote my energies to software development, entrepreneurship, and scalable education.\nResearch Interests: my current activities include The Marmoset Project, FindBugs, learning some new skill sets, and pursuing some ideas I have for a startup. And staying hungry and foolish.",
      "Key": "billpugh",
      "Name": "Bill Pugh",
      "URL": "http://www.cs.umd.edu/~pugh/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/billpugh/64c799b8-a535-4a83-9915-342cdbd8aca6/small.jpg"
    },
    {
      "Affiliation": "Mendix",
      "Key": "meinteboersma",
      "Name": "Meinte Boersma",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/meinteboersma/64ed77c9-13f1-4ef0-a435-499e7cb2be9a/small.jpg"
    },
    {
      "Affiliation": "TU Braunschweig, Germany",
      "Key": "inaschaefer",
      "Name": "Ina Schaefer",
      "URL": "https://www.tu-braunschweig.de/isf/team/schaefer",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/inaschaefer/6565feea-0f49-44fb-8d6c-b5f0113b4339/small.jpg"
    },
    {
      "Affiliation": "University of Athens",
      "Bio": "PhD student and member of the PLAST research group, led by Yannis Smaragdakis.\nInterests: programming language design, stream oriented programming, staging/meta-programming.\n@biboudis",
      "Key": "aggelosbiboudis",
      "Name": "Aggelos Biboudis",
      "URL": "http://biboudis.github.io/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/aggelosbiboudis/656ce7cd-acab-4b87-9b8f-6574e0fd2a3a/small.jpg"
    },
    {
      "Affiliation": "University of British Columbia",
      "Key": "giovanniviviani",
      "Name": "Giovanni Viviani",
      "URL": "https://www.linkedin.com/in/vivianig",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/giovanniviviani/6576ccda-c2f0-4dd0-b837-fe018e2652c8/small.jpg"
    },
    {
      "Affiliation": "Swarthmore College",
      "Key": "joepolitz",
      "Name": "Joe Gibbs Politz",
      "URL": "jpolitz.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/joepolitz/6578cbb6-ed99-47a9-920b-fd37829d9fb6/small.jpg"
    },
    {
      "Affiliation": "Technische Universität Braunschweig",
      "Key": "remolachmann",
      "Name": "Remo Lachmann"
    },
    {
      "Affiliation": "University of Antwerp, Canada",
      "Bio": "Hans Vangheluwe is a Professor in the department of Mathematics and Computer Science at the University of Antwerp in Belgium, an Adjunct Professor in the School of Computer Science at McGill University, Montreal, Canada and an Adjunct Professor at the National University of Defense Technology in Changsha, China. He leads the Modelling, Simulation and Design Lab (MSDL), geographically distributed over Antwerp and Montreal.\nHe publishes in both software engineering and in simulation venues. Some of his contributions are (1) domain-specific visual modelling, simulation and optimization of bio-activated sludge waste-water treatment plants (WWTPs), which has lead to the commercial tool WEST (now part of DHI\u2019s MIKE), (2) work as a founding member of the design team of the language Modelica for the computationally a-causal modelling of physical systems, (3) the development of meta-modelling and model transformation foundations prototyped in the transformation kernel library T-Core and (with Juan de Lara) the visual modelling tool AToM3, (4) the symbolic analysis of model transformations, and (5) the development of efficient real-time and distributed simulators such as PythonPDEVS.\nIn a variety of projects, often with industrial partners, he now develops and applies the theory, techniques and tools for Multi-Paradigm Modelling. In particular, the web-based front-end AToMPM (A Tool for Multi-Paradigm Modelling) for the ModelVerse model repository is currently under development. He currently applies his work mostly in the following application domains: mechatronics (with Siemens SISW and Flanders Make), (embedded systems in) automotive (in the Automotive Partnership Canada NECSIS project, with GM Research, IBM and Malina), and modern computer games. Since 2015, he chairs the European COST Action 1404 on Multi-Paradigm Modelling for Cyber-Physical Systems (MPM4CPS).\nHis most recent interests are in modular modelling language composition (with a focus on semantics), on co-simulation, and on the explicit modelling and optimization of concurrent Model-Based Systems Engineering processes (a.o., dealing with inconsistencies and with early-stage collaboration in inter-disciplinary teams).",
      "Key": "hansvangheluwe",
      "Name": "Hans Vangheluwe",
      "URL": "http://msdl.cs.mcgill.ca/people/hv/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/hansvangheluwe/6625dd23-5a67-4fbc-9a39-eb5e89d1a213/small.jpg"
    },
    {
      "Affiliation": "IT University of Copenhagen, Denmark",
      "Key": "aleksandarsdimovski",
      "Name": "Aleksandar S. Dimovski",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/aleksandarsdimovski/841e9009-5b54-48b4-81b9-86c9d361b1bb/small.jpg"
    },
    {
      "Affiliation": "Harvard University",
      "Key": "christosdimoulas",
      "Name": "Christos Dimoulas",
      "URL": "http://people.seas.harvard.edu/~chrdimo/"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Key": "yukinorisato",
      "Name": "Yukinori Sato",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yukinorisato/6684b250-3f8e-4778-baf2-dd688cb68152/small.jpg"
    },
    {
      "Affiliation": "Middlesex University, UK",
      "Key": "craiganslow",
      "Name": "Craig Anslow",
      "URL": "http://anslow.cpsc.ucalgary.ca/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/craiganslow/66985412-c04f-486c-902a-9fe5f70f7d69/small.jpg"
    },
    {
      "Affiliation": "Eindhoven University of Technology",
      "Key": "loekcleophas",
      "Name": "Loek Cleophas",
      "URL": "http://scholar.google.com/citations?user=dKA2bqcAAAAJ&hl=en",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/loekcleophas/66f727a3-fbab-4c94-84ff-0c48f88ba6c2/small.jpg"
    },
    {
      "Affiliation": "University of Pittsburgh",
      "Key": "annettevee",
      "Name": "Annette Vee",
      "URL": "http://www.annettevee.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/annettevee/6773a507-2915-4fc9-889a-d2dde0f62d34/small.jpg"
    },
    {
      "Affiliation": "Microsoft",
      "Key": "tihamerlevendovszky",
      "Name": "Tihamer Levendovszky",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tihamerlevendovszky/677a18d3-8285-4ed6-afb0-a55968d04548/small.jpg"
    },
    {
      "Affiliation": "Stanford, USA",
      "Bio": "I am a postdoc at Stanford in computer science working with Pat Hanrahan. I also recently received my Ph.D. from Stanford, and did my undergraduate degree at Princeton. I am interested in applying techniques from programming languages to make high-performance programming easier and useable by a wider audience. In particular, I do research in creating high-performance domain-specific languages for domains such as physical simulation, statistics, and image processing. As a part of my Ph.D. research, I also created the Terra programming language, a tool that makes building domain-specific languages easier.",
      "Key": "zacharydevito",
      "Name": "Zachary DeVito",
      "URL": "http://cs.stanford.edu/~zdevito/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zacharydevito/678deffd-e03d-432a-a28f-40791a85b53a/small.jpg"
    },
    {
      "Affiliation": "PUCRS, Brazil",
      "Key": "rafaelheitorbordini",
      "Name": "Rafael H. Bordini"
    },
    {
      "Affiliation": "itemis AG",
      "Key": "berndkolb",
      "Name": "Bernd Kolb",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/berndkolb/ab7d9431-8501-4610-8622-142e7935fab0/small.jpg"
    },
    {
      "Affiliation": "Friedrich-Alexander University of Erlangen-Nürnberg",
      "Key": "daniellohmann",
      "Name": "Daniel Lohmann",
      "URL": "https://www4.cs.fau.de/~lohmann/"
    },
    {
      "Affiliation": "",
      "Key": "fabiostrocco",
      "Name": "Fabio Strocco"
    },
    {
      "Affiliation": "University of Magdeburg",
      "Key": "myraspiliopoulou",
      "Name": "Myra Spiliopoulou"
    },
    {
      "Affiliation": "McGill University",
      "Bio": "In the fall of 2005, I started my PhD in Computer Science at the University of Ottawa under the supervision of Daniel Amyot. Many years earlier, I studied as an undergraduate at the Technische Universit&auml;t Graz in Austria, and received a MSc in Computer Science from Simon Fraser University in 1999. In the same year, I taught second year undergraduate courses in software engineering at Simon Fraser University. After spending almost two years in industry as a research engineer with Strategic Technology at Mitel Networks, I flung a backpack on my shoulders and donned the suit of my alter ego, the traveler, for a three-year travel adventure. Upon my return, I worked as a research engineer with Daniel Amyot and Murray Woodside in the six months leading up to my PhD studies. During the second half of my PhD studies, I taught a third year undergraduate course in software requirements analysis at the University of Ottawa. I completed my PhD studies on the Aspect-oriented User Requirements Notation in the fall of 2010. From the beginning of 2011 to mid 2013, I worked as a postdoctoral fellow with Dorina Petriu at Carleton University, J&ouml;rg Kienzle at McGill University, and Daniel Amyot at the University of Ottawa. Since August 2013, I am an assistant professor in the Department of Electrial and Computer Engineering at McGill University.",
      "Key": "guntermussbacher",
      "Name": "Gunter Mussbacher",
      "URL": "http://www.ece.mcgill.ca/~gmussb1/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guntermussbacher/6901728a-3299-4a8e-99e3-79405accd2cb/small.jpg"
    },
    {
      "Affiliation": "SMU",
      "Key": "frankcoyle",
      "Name": "Frank Coyle"
    },
    {
      "Affiliation": "Texas A&M University",
      "Bio": "Jeff Huang is currently an Assistant Professor in the Department of Computer Science and Engineering at Texas A&amp;M University. His research focuses on developing techniques and tools for improving software performance and reliability based on fundamental program analyses and programming language theory. His research has won awards including ACM SIGSOFT Outstanding Dissertation Award, SIGPLAN PLDI Distinguished Paper Award, SIGPLAN Research Highlights, and Google Faculty Research Award.",
      "Key": "jeffhuang",
      "Name": "Jeff Huang",
      "URL": "http://faculty.cse.tamu.edu/jeff/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeffhuang/69777aef-5f4e-4c62-9228-c2c321f8c8f6/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Bio": "Koen Hindriks (1971) holds a PhD degree from Utrecht University and a MSc degree from the University of Groningen in Computing Science. He spent part of his PhD candidature at the University of Toronto. He is an Associate Professor at the Delft University of Technology in the Department of Electrical Engineering, Mathematics and Computer Science within the Interactive Intelligence section. He is a member of the Board of the Benelux Association for Artificial Intelligence, of the International Society of Applied Intelligence, and of the Delft Robotics Institute. He has published more than 100 papers on agent technology and organized various events in this area, including the 2012 Dagstuhl Seminar on Engineering Multi-Agent Systems, the AAMAS-2013 and AAMAS-2012 Workshop on Cognitive Agents for Virtual Environments, and the AAMAS-2013 and AAMAS-2012 Workshop on Autonomous Robots and Multirobot Systems. He has also given many tutorials in this area at, for example, the European Agents Systems Summer School 2013, 2012, 2009, AAMAS 2009 and 2008, the PRIMA 2009 Agent School, and the Dutch Research School for Information and Knowledge Systems.\nHis research focuses on the analysis, modeling, and development of agent technology that integrates different aspects of intelligence such as reasoning, decision-making, planning, learning and interaction but also integrates aspects such as emotional intelligence. This multi-agent technology has been applied, among others, in micro-simulation of domains such as traffic, logistics and supply chain management, serious gaming, negotiation, socio-cognitive robotics, and user modeling. He has designed and developed the agent programming languages 3APL and GOAL and worked on the verification and specification of agent programs.",
      "Key": "koenhindriks",
      "Name": "Koen Hindriks",
      "URL": "http://ii.tudelft.nl/~koen/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/koenhindriks/a9001aee-3eaa-4546-b58c-4d7300559c5e/small.jpg"
    },
    {
      "Affiliation": "University of Bologna, Italy",
      "Key": "alessandroricci",
      "Name": "Alessandro Ricci",
      "URL": "http://alessandroricci.apice.unibo.it",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alessandroricci/6a154812-1f6f-4b5c-ac4d-1e2ab1af7a15/small.jpg"
    },
    {
      "Affiliation": "McGill University",
      "Bio": "I work under the supervision of Brigitte Pientka and my main research interests are: \n◾ Types systems and formal logic ◾ Programming with binders and HOAS (Beluga) ◾ Temporal logic and other modal logics ◾ Principled approaches to programming language design",
      "Key": "franciscoferreira",
      "Name": "Francisco Ferreira",
      "URL": "http://www.cs.mcgill.ca/~fferre8/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/franciscoferreira/6a40a158-0761-4a84-af0f-15f8e7384b2c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "tamasszabo1",
      "Name": "Tamás Szabó"
    },
    {
      "Affiliation": "Cornell University",
      "Key": "rosstate",
      "Name": "Ross Tate",
      "URL": "http://www.cs.cornell.edu/~ross/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rosstate/cbcbd066-943d-46a2-a301-1f4084076400/small.jpg"
    },
    {
      "Affiliation": "University of Genova",
      "Key": "davideancona",
      "Name": "Davide Ancona",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davideancona/6b141973-0f19-44a4-a11e-bb9877879a62/small.jpg"
    },
    {
      "Affiliation": "Departamento de Computación, FCEyN, UBA",
      "Key": "diegogarbervetsky",
      "Name": "Diego Garbervetsky"
    },
    {
      "Affiliation": "University of Washington",
      "Key": "arvindkrishnamurthy",
      "Name": "Arvind Krishnamurthy"
    },
    {
      "Affiliation": "Aarhus University",
      "Key": "thomassheinze",
      "Name": "Thomas S. Heinze"
    },
    {
      "Affiliation": "Georgia Institute of Technology",
      "Key": "ravimangal",
      "Name": "Ravi Mangal",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ravimangal/6c592ef5-64df-4672-b25b-c59e1c5b256f/small.jpg"
    },
    {
      "Affiliation": "Centrum Wiskunde & Informatica",
      "Key": "theologoszacharopoulos",
      "Name": "Theologos Zacharopoulos",
      "URL": "https://github.com/TheolZacharopoulos/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/theologoszacharopoulos/579c4d83-602f-46dc-b590-c556b3597c1a/small.jpg"
    },
    {
      "Affiliation": "Magdeburg University",
      "Key": "sebastiankrieter",
      "Name": "Sebastian Krieter"
    },
    {
      "Affiliation": "University of Wisconsin - Madison and Grammatech Inc.",
      "Bio": "Thomas W. Reps is the J. Barkley Rosser Professor &amp; Rajiv and Ritu Batra Chair in the Computer Sciences Department of the University of Wisconsin, which he joined in 1985. Reps is the author or co-author of four books and more than one hundred seventy-five papers describing his research (see http://pages.cs.wisc.edu/~reps/). His work has concerned a wide variety of topics, including program slicing, dataflow analysis, pointer analysis, model checking, computer security, code instrumentation, language-based program-development environments, the use of program profiling in software testing, software renovation, incremental algorithms, and attribute grammars.\nHis collaboration with Professor Tim Teitelbaum at Cornell University from 1978 to 1985 led to the creation of two systems\u2014the Cornell Program Synthesizer and the Synthesizer Generator\u2014that explored how to build interactive programming tools that incorporate knowledge about the programming language being supported. The systems that they created were similar to modern program-development environments, such as Microsoft Visual Studio and Eclipse, but pre-dated them by more than two decades. Reps is President of GrammaTech, Inc., which he and Teitelbaum founded in 1988 to commercialize this work.\nAt Wisconsin, Professor Reps and collaborator Professor Susan Horwitz carried out many investigations of program slicing and its applications in software engineering. Reps\u2019s most recent work concerns program analysis, computer security, and software model checking.\nIn 1996, Reps served as a consultant to DARPA to help them plan a project aimed at reducing the impact of the Year 2000 Problem on the U.S. Department of Defense. In 2003, he served on the F/A-22 Avionics Advisory Team, which provided advice to the U.S. Department of Defense about problems uncovered during integration testing of the plane\u2019s avionics software.\nProfessor Reps received his Ph.D. in Computer Science from Cornell University in 1982. His Ph.D. dissertation won the 1983 ACM Doctoral Dissertation Award.\nReps\u2019s 1988 paper on interprocedural slicing, with Susan Horwitz and his then-student David Binkley, was selected as one of the 50 most influential papers from the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), 1979-99. According to Google Scholar, the 1988 paper and the subsequent journal version have received over 1,780 citations.\nHis 2004 paper about analysis of assembly code, with his student Gogul Balakrishnan, received the ETAPS Best-Paper Award for 2004 from the European Association for Programming Languages and Systems (EAPLS). His 2008 paper about a system for generating static analyzers for machine instructions, with his student Junghee Lim, received the ETAPS Best-Paper Award for 2008 from EAPLS. In 2010, his 1984 paper \u201cThe Synthesizer Generator,\u201d with Tim Teitelbaum, received an ACM SIGSOFT Retrospective Impact Paper Award. In 2011, his 1994 paper \u201cSpeeding up slicing,\u201d with Susan Horwitz, Mooly Sagiv, and Genevieve Rosay, also received an ACM SIGSOFT Retrospective Impact Paper Award.\nFour of his students, Gogul Balakrishnan, Akash Lal, Junghee Lim, and Aditya Thakur, have been recipients of the Outstanding Graduate Student Research Award given by the University of Wisconsin Computer Sciences Department. Akash Lal was also a co-recipient of the 2009 SIGPLAN Outstanding Doctoral Dissertation Award, and he was named as one of the 18 awardees selected for the 2011 India TR-35 list (top innovators under 35).\nReps has also been the recipient of an NSF Presidential Young Investigator Award (1986), a Packard Fellowship (1988), a Humboldt Research Award (2000), and a Guggenheim Fellowship (2000). He is also an ACM Fellow (2005). In 2013, Reps was elected a foreign member of Academia Europaea.\nReps has held visiting positions at the Institut National de Recherche en Informatique et en Automatique (INRIA) in Rocquencourt, France (1982-83), the University of Copenhagen, Denmark (1993-94), the Consiglio Nazionale delle Ricerche in Pisa, Italy (2000-2001), and the University Paris Diderot\u2014Paris 7 (2007-2008).",
      "Key": "thomasreps",
      "Name": "Thomas Reps",
      "URL": "http://pages.cs.wisc.edu/~reps/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomasreps/bc5323a6-d318-42c9-a136-d3252ecda280/small.jpg"
    },
    {
      "Affiliation": "Université Catholique de Louvain, Belgium",
      "Bio": "Kim Mens is full Professor in Computer Science at UCL university in Belgium, where he leads the RELEASeD research laboratory on software evolution and software development technology. He holds the degrees of Licentiate in Mathematics, Licentiate in Computer Science, and PhD in Computer Science. His main research interests include software development, software maintenance, software evolution and context-oriented programming with a particular emphasis on programming languages and tool support.",
      "Key": "kimmens",
      "Name": "Kim Mens",
      "URL": "http://www.uclouvain.be/kim.mens",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kimmens/a1ea9374-cbfe-4029-804e-1aa6fe424a70/small.jpg"
    },
    {
      "Affiliation": "Fernuniversität in Hagen",
      "Key": "bastianulke",
      "Name": "Bastian Ulke"
    },
    {
      "Affiliation": "Lund University, Sweden",
      "Key": "joellindholm",
      "Name": "Joel Lindholm",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/joellindholm/1c5e8238-741b-4c75-abb7-1692c39c66ff/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "abhisheksharma",
      "Name": "Abhishek Sharma",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/abhisheksharma/d5699bd6-b4da-4339-84e0-c5acccb94e40/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "joatlee",
      "Name": "Joanne M. Atlee",
      "URL": "https://cs.uwaterloo.ca/~jmatlee/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/joatlee/6e3cb51d-589b-48f5-96ea-ca055b805027/small.jpg"
    },
    {
      "Affiliation": "Royal Holloway University of London",
      "Key": "elizabethscott",
      "Name": "Elizabeth Scott",
      "URL": "https://www.royalholloway.ac.uk/computerscience/research/CSLE/People/EScotthome.aspx",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/elizabethscott/6e861ed6-0780-43cb-835e-faf9e292055b/small.jpg"
    },
    {
      "Affiliation": "University of Oxford",
      "Key": "seyyedshah",
      "Name": "Seyyed Shah",
      "URL": "http://sshah.co.uk",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/seyyedshah/0a0da5c4-f439-49b1-8427-445db72fd938/small.jpg"
    },
    {
      "Affiliation": "Waseda University",
      "Key": "yutarotsunekawa",
      "Name": "Yutaro Tsunekawa"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Key": "jgarrettmorris",
      "Name": "J. Garrett Morris",
      "URL": "http://jgbm.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jgarrettmorris/bfd0d5b6-e65e-403e-882f-089258565ed5/small.jpg"
    },
    {
      "Affiliation": "University of Nice",
      "Key": "philippecollet",
      "Name": "Philippe Collet",
      "URL": "http://www.i3s.unice.fr/~collet/"
    },
    {
      "Affiliation": "Tokai University",
      "Key": "harumiwatanabe",
      "Name": "Harumi Watanabe",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/harumiwatanabe/e78378a6-8cd9-4ee9-ab16-c5f3ec7a3fb2/small.jpg"
    },
    {
      "Affiliation": "Rice University, USA",
      "Key": "rishisurendran",
      "Name": "Rishi Surendran"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "mattiasdewael",
      "Name": "Mattias De Wael"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "luiseduardodesouzaamorim",
      "Name": "Luís Eduardo de Souza Amorim",
      "URL": "https://www.linkedin.com/in/eduardosamorim",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/luiseduardodesouzaamorim/4da06111-f94a-4137-ac9a-354589442343/small.jpg"
    },
    {
      "Affiliation": "Lund University",
      "Key": "gorelhedin",
      "Name": "Gorel Hedin",
      "URL": "http://www.lu.se/lucat/user/09c72b29d3cfd7a5cce05c486b0741f6",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gorelhedin/67d62586-c12d-48bb-85df-fca7764d0332/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "yonghwikwon",
      "Name": "Yonghwi Kwon"
    },
    {
      "Affiliation": "Magdeburg University",
      "Key": "jensmeinicke",
      "Name": "Jens Meinicke"
    },
    {
      "Affiliation": "Northeastern University",
      "Key": "tonygarnockjones",
      "Name": "Tony Garnock-Jones"
    },
    {
      "Affiliation": "Iowa State University",
      "Key": "mehdibagherzadeh",
      "Name": "Mehdi Bagherzadeh",
      "URL": "http://web.cs.iastate.edu/~mbagherz/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mehdibagherzadeh/95dc6f53-51a0-4bf1-b822-7bbe8c4d223a/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel + University Ghent",
      "Key": "jennifersartor1",
      "Name": "Jennifer Sartor"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "paulgrunbacher",
      "Name": "Paul Grünbacher",
      "URL": "http://paul.gruenbacher.at/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/paulgrunbacher/71a2a410-07d9-4aa0-a21e-d376e8796bd8/small.jpg"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "danielegspampinato",
      "Name": "Daniele G. Spampinato"
    },
    {
      "Affiliation": "Metatis sas",
      "Bio": "Enrico Persiani is the owner and lead developer at Metatis sas. He is interested in graphical editors, big data analysis software, and language oriented programming. His actual research interests include language workbenches, graph databases, and code generation. More specifically, his work explores industry wise applicability of model driven technologies using the Whole Platform.",
      "Key": "enricopersiani",
      "Name": "Enrico Persiani",
      "URL": "http://www.metatis.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/enricopersiani/17fad991-452b-4b11-b947-9877477ad3b0/small.jpg"
    },
    {
      "Affiliation": "University of Central Missouri, USA",
      "Key": "zhiyongshan",
      "Name": "Zhiyong Shan",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zhiyongshan/8c0bea0a-5c59-450b-9e06-fce989e2f726/small.jpg"
    },
    {
      "Affiliation": "IMDEA Software Institute",
      "Key": "germanandresdelbianco",
      "Name": "Germán Andrés Delbianco",
      "URL": "http://delbian.co"
    },
    {
      "Affiliation": "University of Maryland at College Park",
      "Key": "kartiknayak",
      "Name": "Kartik Nayak"
    },
    {
      "Affiliation": "State University of New York (SUNY) Oswego",
      "Bio": "Doug Lea is a professor of Computer Science at the State University of New York at Oswego. He is an author of books, articles, reports, and standardization efforts on object oriented software development including those on specification, design and implementation techniques, distributed, concurrent, and parallel object systems, and software reusability; and has served as chair, organizer, or program committee member for many conferences and workshops in these areas. He is the primary author of several widely used software packages and components.",
      "Key": "douglea",
      "Name": "Doug Lea",
      "URL": "http://g.oswego.edu/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/douglea/73af3b45-71a7-4982-94d3-a8dbd7be86a5/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "vincentfoleybourgon",
      "Name": "Vincent Foley-Bourgon"
    },
    {
      "Affiliation": "",
      "Key": "souvikbarat",
      "Name": "Souvik Barat"
    },
    {
      "Affiliation": "Google",
      "Key": "bentitzer",
      "Name": "Ben Titzer"
    },
    {
      "Affiliation": "Aarhus University",
      "Key": "christofferquistadamsen",
      "Name": "Christoffer Quist Adamsen",
      "URL": "http://users-cs.au.dk/cqa/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christofferquistadamsen/73cd1074-4bf5-4041-ae39-85d326b39eb0/small.jpg"
    },
    {
      "Affiliation": "Goldman Sachs",
      "Bio": "Robert Grimm is a Vice President in the Technology Division of Goldman Sachs, where he works on the company\u2019s risk and trading platform. Before joining the firm in 2013, Robert was an Associate Professor of Computer Science at New York University, researching how to leverage programming language technologies to make complex systems easier to build, maintain and extend. He received a Ph.D. in Computer Science from the University of Washington at Seattle in 2002. His honors include the Best Paper award at the 6th ACM International Conference on Distributed Event-Based Systems, a Junior Fellowship at NYU\u2019s Center for Teaching Excellence, and an NSF CAREER award.",
      "Key": "robertgrimm",
      "Name": "Robert Grimm",
      "URL": "http://cs.nyu.edu/rgrimm/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robertgrimm/4ecfa933-29ad-49f2-93ab-6d64fc21c5e5/small.jpg"
    },
    {
      "Affiliation": "PUCRS",
      "Key": "rafaelbordini",
      "Name": "Rafael Bordini",
      "URL": "http://www.inf.pucrs.br/r.bordini/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rafaelbordini/92101327-dca7-497e-97ed-f077d19ba7b8/small.jpg"
    },
    {
      "Affiliation": "Georgia Tech",
      "Key": "mayurnaik",
      "Name": "Mayur Naik",
      "URL": "http://cc.gatech.edu/~naik/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mayurnaik/681e8d43-e5b6-4a09-a8a5-11053f830db6/small.jpg"
    },
    {
      "Affiliation": "Autonomous University of Madrid, Spain",
      "Key": "jesussanchezcuadrado",
      "Name": "Jesús Sánchez Cuadrado",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jesussanchezcuadrado/369a34cf-7d66-4e9c-ab98-8efe10cab0b4/small.jpg"
    },
    {
      "Affiliation": "TU Dresden, Germany",
      "Key": "sebastiangotz",
      "Name": "Sebastian Götz",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sebastiangotz/6439c305-8929-4dec-9733-9c5d1973a9e4/small.jpg"
    },
    {
      "Affiliation": "Samsung Electronics",
      "Key": "youngilchoi1",
      "Name": "Young-il Choi"
    },
    {
      "Affiliation": "Tampere University of Technology",
      "Key": "tommimikkonen",
      "Name": "Tommi Mikkonen",
      "URL": "http://www.cs.tut.fi/~tjm/"
    },
    {
      "Affiliation": "Technische Universität München, fortiss GmbH",
      "Bio": "Bernhard Sch&auml;tz received his Ph.D. and Habilitation degree in Informatics from the Technische Unversit&auml;t M&uuml;nchen. At the fortiss Research and Transfer Institute associated with the Technische Universit&auml;t M&uuml;nchen, he leads the research department \u201cSoftware &amp; Systems Engineering\u201d with the fields of Analysis and Design of Dependable Systems, Optimized Design Space Exploration, Model-Based Engineering Tools, with Smart Grid, Automotive, and Automation as fields of application. \nBernhard Sch&auml;tz specifically works on the use of formally-based modeling techniques for the specification and verification of cyber-physcisl mixed-criticality functional-safety systems. Topics included functional safety, front loading of verification and validation, automated design space exploration techniques in doing space exploration, all with a specific focus on increasing the efficiency of the development process by tool-support. This work has been published in several safety- as well as automotive/aerospace-related conferences, including MODELS, FME (Formal Methods Europe Conference) NASA Formal Methods, DAC (Design Automation Conference), SAE (Annual Conference of the Society of Automotive Engineers), ICSE (International Conference on Software Engineering), or SEFM (Software Engineering and Formal Methods). \nBernhard Sch&auml;tz has also acted as member of several program committees in the field of functional safety, including SAFECOMP (Computer Safety, Reliability, and Security), FMICS (Formal Methods for Industrial Critical Systems), or SIES (International Symposium on Industrial Embedded Systems). He was the Co-Chair of the MODELS 2013 Conference, the FACS 2009 Symposium. He also was a Co-Organizer of the Dagstuhl Seminars on Developing Certifiable Medical Devices, of Model-Based Engineering of Embedded Real-Time Systems, and Cyber-Physical Systems. Furthermore, he is a member of the Editorial Board of the Springer Journal of Software and Systems Modeling. \nBesides his scientific activities, he acts as Lecturer at the Technische Unversit&auml;t M&uuml;nchen, he is co-founder and member of the advisory board of the Validas AG, and works as a consultant (incl. BMW, Bosch, Eurocopter) in the field of Software and Systems Engineering.",
      "Key": "bernhardschatz",
      "Name": "Bernhard Schätz",
      "URL": "http://www4.in.tum.de/~schaetz",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/bernhardschatz/7533aa7d-6702-4b7a-b02d-4ab6a53b1451/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "timcoppieters1",
      "Name": "Tim Coppieters"
    },
    {
      "Affiliation": "IIT Kanpur, India",
      "Key": "subhajitroy",
      "Name": "Subhajit Roy"
    },
    {
      "Affiliation": "Google",
      "Bio": "Toolsmiths have created thousands of powerful and useful software development tools, yet software developers only use a small subset of the available tools, and those that a developer does use are often not fully leveraged. I believe that the solution to this problem can be found by rethinking the design of software development tools, based on a better understanding of why developers use and do not use these tools.\nI am currently a visiting research scientist at Google, and an associate professor at North Carolina State University, where I direct the Developer Liberation Front. My research spans human-computer interaction and software engineering, winning an NSF CAREER Award in 2013 and three ACM SIGSOFT Distinguished Paper Awards. My research problems are informed by and my results influence software development at companies such as ABB, Google, and Microsoft.",
      "Key": "emersonmurphyhill",
      "Name": "Emerson Murphy-Hill",
      "URL": "http://people.engr.ncsu.edu/ermurph3/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/emersonmurphyhill/777ccc26-ff2d-4562-bc3a-c4fe15c2a731/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "pavolbielik",
      "Name": "Pavol Bielik"
    },
    {
      "Affiliation": "TU Darmstadt, Germany",
      "Key": "andrewhabib",
      "Name": "Andrew Habib",
      "URL": "https://www.sola.tu-darmstadt.de/de/software-lab/people/andrew-habib/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andrewhabib/c24a5f80-d2b3-44b9-a5e9-6a91a900ab99/small.jpg"
    },
    {
      "Affiliation": "University of Minnesota",
      "Key": "ericvanwyk",
      "Name": "Eric Van Wyk",
      "URL": "http://cs.umn.edu/~evw",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ericvanwyk/3e91ebed-d1c2-4d28-a408-dddc41b5affc/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Bio": "I am interested in the human-computer interaction challenges involved in helping people comprehend, develop, and maintain software. I am particularly interested in studying how humans clarify complex ideas and instructions among themselves as inspiration for new ways of enhancing human-computer interaction in software engineering. I received an MS in computer science in 1992, then worked as a software engineer in Boulder and Denver, CO, for 15 years before returning to school at Oregon State to pursue a doctorate. I enjoy the work of software engineering, but I was motivated to move into academic research by a desire to improve the tools I was using. \nMy dissertation research involved studying the work practices of scientific modelers (specifically cognitive modelers: psychologists who model cognition in order to understand human behavior). My approach involves designing a tool that can capture and make explicit the changing, task-specific \u201cevaluation abstractions\u201d that are implicit in a modeler&acirc;\u20ac™s exploration of model output. The research has involved qualitative and quantitative empirical methods, language design, and implementation of an experimental tool (an Eclipse plugin implemented in Scala) to support modelers at the Air Force Research Laboratory who use the ACT-R and RML cognitive modeling languages. \nI am currently working as a postdoc at Carnegie Mellon University with Jim Herbsleb, learning more about how people collaborate to build and maintain scientific software.",
      "Key": "christopherbogart",
      "Name": "Christopher Bogart",
      "URL": "http://quetzal.bogarthome.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christopherbogart/78798e61-5921-4ea1-90db-cf79377ac585/small.jpg"
    },
    {
      "Affiliation": "University of Torino",
      "Key": "vivianabono",
      "Name": "Viviana Bono",
      "URL": "http://www.di.unito.it/~bono/index.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/vivianabono/78e8170b-1ce6-47de-ad35-30c761d65e7e/small.jpg"
    },
    {
      "Affiliation": "Sioux Embedded Systems",
      "Key": "klemensschindler",
      "Name": "Klemens Schindler"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "benblum",
      "Name": "Ben Blum"
    },
    {
      "Affiliation": "Eindhoven University of Technology, The Netherlands",
      "Key": "yanjadajsuren",
      "Name": "Yanja Dajsuren",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yanjadajsuren/09e8cd00-81b9-46c4-b8ba-95fec1ce43c8/small.jpg"
    },
    {
      "Affiliation": "Philipps-Universität Marburg",
      "Key": "christophbockisch",
      "Name": "Christoph Bockisch",
      "URL": "https://www.linkedin.com/in/bockisch",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christophbockisch/7a547ae2-e6ab-41a4-ba15-93514079d096/small.jpg"
    },
    {
      "Affiliation": "Autonomous University of Madrid, Spain",
      "Bio": "I\u2019m a Ph.D. in Computer Science (Universidad Aut&oacute;noma de Madrid, 2000), Engineer in Computer Science (Universidad Aut&oacute;noma de Madrid, 1996) and Technical Engineer in Computer Science (Universidad de Castilla la Mancha, 1994). I coordinate the modelling and software engineering research group (miso)",
      "Key": "juandelara",
      "Name": "Juan de Lara",
      "URL": "http://arantxa.ii.uam.es/~jlara/investigacion/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/juandelara/7b4353c1-447c-4bc7-b537-d4507297c37f/small.jpg"
    },
    {
      "Affiliation": "Universiteit Utrecht",
      "Key": "johnjulesmeyer",
      "Name": "John-Jules Meyer",
      "URL": "http://www.cs.uu.nl/staff/jj.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johnjulesmeyer/7b579f7b-7b92-464d-9fc7-a5edc1995d79/small.jpg"
    },
    {
      "Affiliation": "Aalborg University, Denmark",
      "Key": "tommyaagaardchristensen",
      "Name": "Tommy Aagaard Christensen"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Bio": "http://twitter.com/seba0_  http://erdweg.org",
      "Key": "sebastianerdweg",
      "Name": "Sebastian Erdweg",
      "URL": "http://erdweg.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sebastianerdweg/7bb0b3d7-c145-40bc-8743-13c19fccffb3/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "jansrellermeyer",
      "Name": "Jan S. Rellermeyer",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-rellermeyer",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jansrellermeyer/7c19c479-6abf-4084-bf46-fdcdffd9834a/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "timvanderlippe",
      "Name": "Tim van der Lippe",
      "URL": "https://github.com/TimvdLippe",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/timvanderlippe/0fd31328-a6e2-4349-a56e-3cf6a9c5a535/small.jpg"
    },
    {
      "Affiliation": "Oce",
      "Key": "eugenschindler",
      "Name": "Eugen Schindler",
      "URL": "http://schindlerweb.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/eugenschindler/7c531f6e-8674-4422-88c3-cb019bc4865e/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "petersewell",
      "Name": "Peter Sewell",
      "URL": "http://www.cl.cam.ac.uk/~pes20/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/petersewell/ba28b120-f5b2-42d2-90b8-0559f144abee/small.jpg"
    },
    {
      "Affiliation": "Universidad de los Andes",
      "Bio": "I have been working on adaptive systems for the last couple of years. Currently I am approaching adaptive systems from programming language perspective, working on development (programming language design), verification (partial, and incremental techniques), and application (smart environments, CPS, and IoT) of these systems.",
      "Key": "nicolascardozo",
      "Name": "Nicolás Cardozo",
      "URL": "https://profesores.virtual.uniandes.edu.co/ncardozo/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nicolascardozo/4bf0b997-c8f9-4d9f-ba4b-7379d19ab2a3/small.jpg"
    },
    {
      "Affiliation": "MIT CSAIL",
      "Bio": "Graduate student at MIT Theory of Computation group.",
      "Key": "talwagner",
      "Name": "Tal Wagner",
      "URL": "http://www.mit.edu/~talw"
    },
    {
      "Affiliation": "Stanford University",
      "Key": "seantreichler",
      "Name": "Sean Treichler"
    },
    {
      "Affiliation": "University of Vienna, Austria",
      "Key": "siegfriedbenkner",
      "Name": "Siegfried Benkner",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/siegfriedbenkner/7da4a202-83d2-4759-b024-be1e39b78d7c/small.jpg"
    },
    {
      "Affiliation": "NASA Ames Research Center",
      "Key": "ewendenney",
      "Name": "Ewen Denney",
      "URL": "http://ti.arc.nasa.gov/profile/edenney/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ewendenney/7dfac5a8-022e-4e24-9959-5739c5b06557/small.jpg"
    },
    {
      "Affiliation": "University of Amsterdam",
      "Key": "clemensgrelck",
      "Name": "Clemens Grelck",
      "URL": "http://www.science.uva.nl/~grelck",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/clemensgrelck/7e43b626-14a3-4589-9386-2af03faeb07f/small.jpg"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "markuspuschel",
      "Name": "Markus Püschel",
      "URL": "http://people.inf.ethz.ch/markusp/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/markuspuschel/531dfe05-df8b-4f25-acb6-59ea5e4e59ea/small.jpg"
    },
    {
      "Affiliation": "University of Brasilia",
      "Key": "vanderalves",
      "Name": "Vander Alves",
      "URL": "https://sites.google.com/site/vanderalves/home",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/vanderalves/7ed4eaf0-0e07-447a-932a-ab651e691f82/small.jpg"
    },
    {
      "Affiliation": "University of California, Davis",
      "Key": "zhendongsu",
      "Name": "Zhendong Su",
      "URL": "http://web.cs.ucdavis.edu/~su/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zhendongsu/6c82320e-8f16-4eb6-b6e1-0957ef6fe25e/small.jpg"
    },
    {
      "Affiliation": "TU Darmstadt, Germany",
      "Key": "michaeleichberg",
      "Name": "Michael Eichberg"
    },
    {
      "Affiliation": "Federal University of Santa Catarina, Brazil",
      "Key": "maiconrafaelzatelli",
      "Name": "Maicon Rafael Zatelli"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "torstenhoefler",
      "Name": "Torsten Hoefler"
    },
    {
      "Affiliation": "Google, Inc.",
      "Key": "davidkitchin",
      "Name": "David Kitchin"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "cyrusomar",
      "Name": "Cyrus Omar",
      "URL": "http://www.cs.cmu.edu/~comar",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/cyrusomar/6f85cfe7-5130-42cf-9976-450725051201/small.jpg"
    },
    {
      "Affiliation": "RMIT University, Australia",
      "Key": "mariaspichkova",
      "Name": "Maria Spichkova",
      "URL": "http://www.spichkova.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mariaspichkova/75a6dacb-b388-4eb4-98a1-461f6193426b/small.jpg"
    },
    {
      "Affiliation": "McGill University, Canada",
      "Key": "christopherjfpickett",
      "Name": "Christopher J. F. Pickett"
    },
    {
      "Affiliation": "Hasso Plattner Institute, Potsdam",
      "Key": "christophkessler1",
      "Name": "Christoph Kessler"
    },
    {
      "Affiliation": "University of Bern, Switzerland",
      "Bio": "I am a Professor of Computer Science at the Institute of Computer Science (IAM) of the University of Bern, where he founded the Software Composition Group in 1994. I am a co-author of over 200 publications and co-author of the open-source books Object-Oriented Reengineering Patterns and Pharo by Example.",
      "Key": "oscarnierstrasz",
      "Name": "Oscar Nierstrasz",
      "URL": "http://scg.unibe.ch/staff/oscar",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/oscarnierstrasz/81cc0777-4f89-44a6-95ed-7aad65672830/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "danielpelsmaeker",
      "Name": "Daniël Pelsmaeker",
      "URL": "http://virtlink.com/"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "thorstenberger",
      "Name": "Thorsten Berger",
      "URL": "http://gsd.uwaterloo.ca/tberger/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thorstenberger/820416e4-b90d-4ed0-88ef-8dd4bdcb2e4e/small.jpg"
    },
    {
      "Affiliation": "Reykjavik University",
      "Bio": "Marjan Sirjani is a Professor at School of Computer Science at Reykjavik University. Her main research interest is applying formal methods in Software Engineering. She works on modeling and verification of concurrent and distributed systems. Marjan and her research group are pioneers in building model checking tools, compositional verification theories, and state-space reduction techniques for actor-based models. She has been working on analyzing actors since 2001 using the modeling language Rebeca. Rebeca and its extensions are designed to bridge the gap between model-based software development and formal analysis, and has been used for analyzing different network and system applications. She has also worked on coordination languages and is the co-author of the paper proposing Constraint Automata as the compositional formal semantics for the coordination language Reo.",
      "Key": "marjansirjani",
      "Name": "Marjan Sirjani",
      "URL": "http://www.ru.is/faculty/marjan/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marjansirjani/820886ba-14c3-4845-9918-960c6a823d40/small.jpg"
    },
    {
      "Affiliation": "Saarland University of Applied Sciences, Germany",
      "Key": "moritzfey",
      "Name": "Moritz Fey"
    },
    {
      "Affiliation": "University of Houston",
      "Bio": "Albert M. K. Cheng is a Full Professor and former interim Associate Chair of the Computer Science Department at the University of Houston (UH). He has pioneered the response time analysis of real-time Rule-Based Systems (RBS) in 1988, and is now doing the same for Functional Reactive Programming (FRP), which can potentially transform the way we implement next-generation embedded systems. His research interests center on the design, specification, modeling, scheduling, and formal verification of real-time, embedded, and cyber-physical systems, green/power/thermal-aware computing, software engineering, knowledge-based systems, and networking. He is the founding Director of the UH Real-Time Systems Laboratory. Prof. Cheng received the B.A. with Highest Honors (summa cum laude) in Computer Science, graduating Phi Beta Kappa at age 19, the M.S. in Computer Science with a minor in Electrical Engineering at age 21, and the Ph.D. in Computer Science at age 25, all from The University of Texas at Austin, where he held a GTE Foundation Doctoral Fellowship. He has served as a technical consultant for a number of organizations, including IBM and Shell, and was also a Visiting Professor in the Departments of Computer Science at Rice University and at the City University of Hong Kong. He is a co-founder of ZapThru.com, where he is currently the Chief Strategy and Technology Director. \nDr. Cheng is the author/co-author of over 220 refereed publications in leading journals (including IEEE Transactions on Computers, IEEE Transactions on Software Engineering, and IEEE Transactions on Knowledge and Data Engineering) and top-tier conferences (including RTSS, RTAS, RTCSA, ICPADS, ISLPED, LCN, COMPSAC, PADL, IPPS, IPDPS, and ICPP; several articles received Best Paper Awards or were Best Paper Nominees). He has received numerous awards, including the U.S. National Science Foundation Research Initiation Award (now known as CAREER) and the Texas Advanced Research Program Grant (ranking 12th among 373 funded proposals). He has been invited to present seminars, tutorials, panel positions, and keynotes at over 100 conferences, universities, and organizations. He is and has been on the technical program committees (including many program chair positions) of over 250 conferences, symposia, workshops, and editorial boards (including the IEEE Transactions on Software Engineering 1998-2003 and the IEEE Transactions on Computers 2011-2015). Currently, Dr. Cheng is the Editor-in-Chief of the Journal of Software Engineering. \nHe has been the Guest Co-Editor of a 2013 Special Issue on Rigorous Modeling and Analysis of Cyber-Physical Systems of the IEEE Embedded Systems Letters, and the Guest Editor of a 2014-2015 Special Issue on Cyber-Physical Systems of SENSORS. He has been the Program Co-Chair of the System, Models and Algorithms Track of the 2014 IEEE International Conference on Embedded Software and Systems (ICESS), the Program Co-Chair of the 2013 IEEE International Conference on Service Oriented Computing and Applications (SOCA), the Program Vice-Chair of the 2008 International Conference on Embedded and Ubiquitous Computing (EUC), and the Program Chair of the 2001 and 2005 IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS) WIP. He has recently served as the Chair of the First Workshop on Declarative Programming for Real-Time and Cyber-Physical Systems (DPRTCPS) in San Antonio, Texas, USA, December 1, 2015, as well as the Program Chair of the International Symposium on Software Engineering and Applications (SEA), in Marina del Rey, California, USA, October 26-28, 2015. Currently, Dr. Cheng is organizing and chairing the First Workshop on Declarative Cyber-Physical Systems (DCPS) at CPSWeek in Vienna, Austria, April 11-14, 2016. He is the Guest Editor of the 2016 Special Issue on Real-Time and Cyber-Physical Systems of Sensors, and the Guest Co-Editor of the 2016 Special Issue on Real-Time Scheduling on Heterogeneous Multi-core Processors of Microprocessors and Microsystems (MICPRO) - the Elsevier Embedded Hardware Design Journal. \nDr. Cheng is the author of the popular senior/graduate-level textbook entitled Real-Time Systems: Scheduling, Analysis, and Verification (John Wiley &amp; Sons), 2nd printing with updates, 2005. He is a Senior Member of the IEEE, an Honorary Member of the Institute for Systems and Technologies of Information, Control and Communication (INSTICC), and a Fellow of the Institute of Physics (IOP). His recent awards include the Outstanding Leadership Award as Track Chair and the Outstanding Leadership Award as Keynote Speaker at IEEE ICESS 2014, and the 2015 University of Houston\u2019s Lifetime Faculty Award for Mentoring Undergraduate Research for his \u201cExceptional efforts in demonstrating a lasting commitment to undergraduate research.\u201d",
      "Key": "albertcheng",
      "Name": "Albert M. K. Cheng",
      "URL": "http://www2.cs.uh.edu/~acheng/acheng.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/albertcheng/f255c608-fb0a-4cd1-afcf-acd08eb26c8b/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "gregoryessertel",
      "Name": "Gregory Essertel"
    },
    {
      "Affiliation": "TU Delft",
      "Key": "dacoharkes",
      "Name": "Daco Harkes",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/dacoharkes/837f7a57-b2ad-478b-9b3e-b732b35aa7c5/small.jpg"
    },
    {
      "Affiliation": "VMware",
      "Key": "udiwieder",
      "Name": "Udi Wieder"
    },
    {
      "Affiliation": "Martin-Luther-University Halle-Wittenberg",
      "Key": "benjaminsaul",
      "Name": "Benjamin Saul"
    },
    {
      "Affiliation": "IT University of Copenhagen, Denmark",
      "Bio": "I am a PhD Fellow at the IT University of Copenhagen as a part of the VARIETE project, under the supervision of Andrzej Wąsowski and Aleksandar Dimovski.\nMy main research interests include the design and implementation of programming languages, especially in the areas of semantics and type systems. My current project is to investigate how to practically specify and analyse DSL models and transformations, and in my spare time I am also a comitter in the Idris project.",
      "Key": "ahmadsalimalsibahi",
      "Name": "Ahmad Salim Al-Sibahi",
      "URL": "http://alsibahi.xyz",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ahmadsalimalsibahi/9a6a2795-da5b-43a2-9226-f9d65dde0856/small.jpg"
    },
    {
      "Affiliation": "Tohoku University",
      "Key": "olegkiselyov",
      "Name": "Oleg Kiselyov",
      "URL": "http://okmij.org/ftp/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/olegkiselyov/84621097-e32b-4b90-890e-5d4b8d570265/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "charleseleiserson",
      "Name": "Charles E. Leiserson"
    },
    {
      "Affiliation": "University of York",
      "Bio": "I am a Senior Lecturer at the Department of Computer Science of the University of York, where I research and teach automated and model-driven software engineering. I am also an active Eclipse Foundation committer, leading the development of the open-source Epsilon platform under the Eclipse Modelling project.",
      "Key": "dimitriskolovos",
      "Name": "Dimitris Kolovos",
      "URL": "https://www-users.cs.york.ac.uk/dkolovos/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/dimitriskolovos/84fc306f-3cd4-4141-b491-87fbaa83c914/small.jpg"
    },
    {
      "Affiliation": "University of Hong Kong",
      "Key": "brunooliveira",
      "Name": "Bruno C. d. S. Oliveira",
      "URL": "http://www.cs.hku.hk/research/profile.jsp?teacher=bruno",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/brunooliveira/8584a414-0d40-44f0-9572-bed022c6482d/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "timdisney",
      "Name": "Tim Disney"
    },
    {
      "Affiliation": "Poznań University of Technology, Poland",
      "Key": "konradsiek",
      "Name": "Konrad Siek"
    },
    {
      "Affiliation": "Stellenbosch University; and Centre for AI Research, CSIR",
      "Key": "brucewatson",
      "Name": "Bruce Watson"
    },
    {
      "Affiliation": "Facebook",
      "Key": "parthmalani",
      "Name": "Parth Malani",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/parthmalani/863f6da1-af57-493c-b4ad-2e0f02cbd7b1/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "dominicpmulligan",
      "Name": "Dominic P. Mulligan"
    },
    {
      "Affiliation": "Northeastern University",
      "Bio": "Delmar NY -&gt; Cornell University (BS, M.Eng) -&gt; Northeastern University (PhD from Matthias, expected ~2020)",
      "Key": "bengreenman",
      "Name": "Ben Greenman",
      "URL": "http://www.ccs.neu.edu/home/types/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/bengreenman/86a0a64e-4e2b-487a-b630-cde0cc64c032/small.jpg"
    },
    {
      "Affiliation": "University of Glasgow",
      "Bio": "Natalia Chechina is a Research Fellow at the University of Glasgow. She received a PhD degree from Heriot-Watt University, UK in 2011. She then worked as a Research Associate at the University of Glasgow in the RELEASE project (2011-2015 A High-Level Paradigm for Reliable Large-Scale Server Software) sponsored by an EU FP7 STREP (287510).",
      "Key": "nataliachechina",
      "Name": "Natalia Chechina",
      "URL": "http://dcs.gla.ac.uk/~natalia/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nataliachechina/86cdde3d-db59-488c-a587-9b001c2951bf/small.jpg"
    },
    {
      "Affiliation": "Royal Holloway University of London",
      "Bio": "My name is L. Thomas van Binsbergen and I am a PhD student in Computer Science at Royal Holloway University of London, and an MSc graduate of Utrecht University. \nMy work revolves around specifying and prototyping programming languages. I would like to draw your attention to the contributions I made to the Utrecht University Attribute Grammar Compiler (UUAGC) in 2014, implementing algorithms for compile-time scheduling of attribute evaluation based on dependency analysis. \nIn recent years, I have been associated with the PLanCompS project and have developed Haskell tools for defining and executing FunCons: highly reusable and modular components used in the formal specification of programming languages\u2019 semantics. For more information visit http://plancomps.org\nGeneral interest in Computer Science: Teaching, Programming Languages, Algorithm Design, Soundness &amp; Correctness Proofs, Graph Theory and Complexity Analysis, Genetic Programming and Program Synthesis\nParticular aspects of my specialism \u201cSoftware Languages and their Specification\u201d: \n \n Language design and formal semantics \n Generating interpreters based on the formal semantics of a language \n Computational effects: Modelling abnormal control flow like exceptions, and side-effects like Input/Output and variable assignment in pure maths \n Static analysis of programs: type-checkers, sanity-checkers, program manipulation \n Reusable components for both syntax and semantics of languages. \n\nMy interests in Computer Science Education: \n \n Improving the understandability of algorithms by explaining the algorithm at the right level of abstraction, removing unnecessary detail, breaking down algorithms into their core components and defining those components as pure and composable functions \n Tutoring systems for the analysis of student solutions and automated feedback",
      "Key": "lthomasvanbinsbergen",
      "Name": "L. Thomas van Binsbergen",
      "URL": "http://ltvanbinsbergen.nl",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lthomasvanbinsbergen/b276e9a4-2229-45a7-ae0f-e25fb729b0e6/small.jpg"
    },
    {
      "Affiliation": "ENSTA Bretagne, France",
      "Key": "ciprianteodorov",
      "Name": "Ciprian Teodorov",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ciprianteodorov/875f195f-e2d9-4df3-898b-2b0ddb3602ff/small.jpg"
    },
    {
      "Affiliation": "Google Inc.",
      "Key": "weibinsun",
      "Name": "Weibin Sun",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/weibinsun/dfc61bc9-cb99-4136-9c4e-6867c4095ba6/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "benoitbaudry",
      "Name": "Benoit Baudry"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Key": "andreistefanescu",
      "Name": "Andrei Stefanescu"
    },
    {
      "Affiliation": "University of Alabama",
      "Key": "jeffcarver",
      "Name": "Jeff Carver",
      "URL": "http://carver.cs.ua.edu/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeffcarver/88ad0376-192f-4d26-887d-d447f3eb0e59/small.jpg"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "hanspetermossenbock",
      "Name": "Hanspeter Mössenböck",
      "URL": "http://ssw.jku.at/General/Staff/HM/"
    },
    {
      "Affiliation": "Cornell University",
      "Key": "jonathandilorenzo",
      "Name": "Jonathan DiLorenzo"
    },
    {
      "Affiliation": "Huawei America Research Center",
      "Bio": "Haichuan Wang is a Research Scientist at Huawei America Research Center. His research area includes compiler, runtime and parallel computing. He is working on performance improvement of emerging workloads with the combination of compiler and runtime techniques. Wang received his Ph.D. degree in Computer Science from University of Illinois at Urbana-Champaign in May 2015. Before the Ph.D. program, Wang was a Research Staff Member at IBM Research - China, where he was researching on parallel programming models and performance tooling for Java language.",
      "Key": "haichuanwang",
      "Name": "Haichuan Wang",
      "URL": "http://web.engr.illinois.edu/~hwang154/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/haichuanwang/8934ceb5-1251-43b3-b401-38cb0678c0e4/small.jpg"
    },
    {
      "Affiliation": "ETH Zurich, Switzerland",
      "Key": "georgofenbeck",
      "Name": "Georg Ofenbeck",
      "URL": "https://github.com/GeorgOfenbeck"
    },
    {
      "Affiliation": "Sapienza University Rome",
      "Key": "camildemetrescu",
      "Name": "Camil Demetrescu",
      "URL": "http://www.dis.uniroma1.it/~demetres/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/camildemetrescu/d6d70866-6ad9-4516-bfb7-2e1fb26921bd/small.jpg"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign, USA",
      "Key": "weiyang",
      "Name": "Wei Yang",
      "URL": "http://web.engr.illinois.edu/~weiyang3/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/weiyang/899c6006-a204-4475-8677-aef6a325c55b/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "rohitsingh",
      "Name": "Rohit Singh"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "savvassavvides",
      "Name": "Savvas Savvides"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "christianhumer",
      "Name": "Christian Humer"
    },
    {
      "Affiliation": "Nokia Technologies",
      "Key": "anterotaivalsaari",
      "Name": "Antero Taivalsaari"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology",
      "Bio": "I am a graduate student at MIT EECS and CSAIL advised by professor Martin Rinard. I received my bachelor\u2019s degree in Computer Science from Peking University, China. My research interests are in programming languages.",
      "Key": "jiasishen",
      "Name": "Jiasi Shen",
      "URL": "http://people.csail.mit.edu/jiasi/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jiasishen/8ae5f10c-c825-42ea-bf7c-0cf753f245e4/small.jpg"
    },
    {
      "Affiliation": " INRIA Lille",
      "Key": "stephaneducasse",
      "Name": "Stéphane Ducasse",
      "URL": "http://stephane.ducasse.free.fr/"
    },
    {
      "Affiliation": "University of California, Irvine",
      "Bio": "Cristina Videira Lopes is a Professor of Informatics at the University of California, Irvine. Her research focuses on software engineering for large-scale data and systems. She was a founding member of the Xerox PARC team that developed Aspect-Oriented Programming. She is also a prolific software developer in particular for OpenSimulator, a virtual world server. She is also a founder of Encitra, a company specializing in online virtual reality for early-stage sustainable urban redevelopment projects. She claims to be the only person in the world who is both an ACM Distinguished Scientist and Ohloh Kudos Rank 9.",
      "Key": "cristalopes",
      "Name": "Crista Lopes",
      "URL": "https://www.ics.uci.edu/~lopes/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/cristalopes/8b501174-6517-4f1b-9a59-9e59f57d113a/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "joeridekoster",
      "Name": "Joeri De Koster"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "thomaswuerthinger",
      "Name": "Thomas Wuerthinger",
      "URL": "http://www.wuerthinger.net"
    },
    {
      "Affiliation": "Waseda University, Japan",
      "Key": "jixinhan",
      "Name": "Jixin Han"
    },
    {
      "Affiliation": "",
      "Key": "robertocasadei",
      "Name": "Roberto Casadei"
    },
    {
      "Affiliation": "Sofware Languages Lab, Vrije Universiteit Brussel",
      "Key": "angelluisscullpupo",
      "Name": "Angel Luis Scull Pupo"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "umutacar",
      "Name": "Umut Acar"
    },
    {
      "Affiliation": "University of Pisa, Italy",
      "Key": "marcodanelutto",
      "Name": "Marco Danelutto"
    },
    {
      "Affiliation": "IBM Research Lab Zurich",
      "Key": "lydiaychen",
      "Name": "Lydia Y. Chen"
    },
    {
      "Affiliation": "TU Dresden, Germany",
      "Key": "kaybierzynski",
      "Name": "Kay Bierzynski"
    },
    {
      "Affiliation": "Federal University of Lavras, Brazil",
      "Bio": "Ricardo Terra received his Ph.D. degree in Computer Science from Federal University of Minas Gerais, Brazil (2013) with a 1-year internship at the University of Waterloo, Canada. Since 2014, he is an assistant professor in the Department of Computer Science at Federal University of Lavras, Brazil. His research interests include software architecture maintainability and evolvability.",
      "Key": "ricardoterra",
      "Name": "Ricardo Terra",
      "URL": "http://www.dcc.ufla.br/~terra",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ricardoterra/496d42a6-d46e-4b11-be23-bb51d114144c/small.jpg"
    },
    {
      "Affiliation": "University of Erlangen-Nuremberg, Germany",
      "Key": "michaelphilippsen",
      "Name": "Michael Philippsen",
      "URL": "https://www2.cs.fau.de/staff/philippsen/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelphilippsen/8e15df57-ab2c-4f1c-90f9-050484f4037e/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology",
      "Bio": "Takuo Watanabe is an associate professor in the Department of Computer Science at the Tokyo Institute of Technology. He received his Ph. D. from the Department of Information Science at the Tokyo Institute of Technology in 1991. He is working in the area of programming languages, programming methodologies, and formal methods. His research focuses on understanding the nature of reflective behaviors in concurrent systems, inventing new applications of computational reflection, and developing new abstraction mechanisms and programming models for safe/secure systems.",
      "Key": "takuowatanabe",
      "Name": "Takuo Watanabe",
      "URL": "http://www.psg.c.titech.ac.jp/~takuo/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/takuowatanabe/8e49f922-1fee-44c1-b0d9-75f38ea052d1/small.jpg"
    },
    {
      "Affiliation": "TU Vienna, Austria",
      "Key": "manuelwimmer",
      "Name": "Manuel Wimmer",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/manuelwimmer/debab079-8b78-46af-8f24-2ce08001b86f/small.jpg"
    },
    {
      "Affiliation": "University of Washington",
      "Key": "pavelpanchekha",
      "Name": "Pavel Panchekha",
      "URL": "https://pavpanchekha.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pavelpanchekha/0f877de5-10ec-47d3-832c-9a2c4130a1d1/small.jpg"
    },
    {
      "Affiliation": "University of Kent",
      "Key": "ianutting",
      "Name": "Ian Utting",
      "URL": "https://www.cs.kent.ac.uk/people/staff/iau/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ianutting/8fca8e2d-42c9-47cd-8ccf-05b2b03cb541/small.jpg"
    },
    {
      "Affiliation": "Vienna University of Economics and Business",
      "Bio": "I am postdoctoral researcher at the Institute for Information Systems and New Media. I took up a position as research assistant and doctoral researcher in 2004, after having graduated with a Magister degree in International Business Administration from the Vienna University of Economics. During my Magister studies, I was affiliated with various software developing companies, including Unisys Austria in the role of a senior developer. My doctoral thesis was completed successfully in February 2009.\nMy early research activities focused on information system interoperability in the applied field of Technology Enhanced Learning. They were centered around EU-funded research projects, in particular iCamp. Increasingly fascinated by communication middleware itself, I turned to middleware engineering and middleware framework design for distributed object systems. The F/LOSS toolkit xorb for object remoting emerged out of my doctorate research. In my current research, I look at model-driven development of domain-specific languages (e.g. DADA\u201914), feature-oriented software development, and software patterns (e.g. MiniPLoP@ECSA'14). I actively contribute to the Next Scripting Framework and XOTcl.",
      "Key": "stefansobernig",
      "Name": "Stefan Sobernig",
      "URL": "http://nm.wu-wien.ac.at/nm/sobernig",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stefansobernig/8ff07f5c-4b88-4a92-8eb0-854e0304c379/small.jpg"
    },
    {
      "Affiliation": "University College London",
      "Bio": "I am a lecturer (assistant professor) at University College London. \nPrior to joining UCL, I was a postdoctoral researcher at IMDEA Software Institute (Madrid, Spain). I defended my PhD in 2012 in the DistriNet research group at the Department of Computer Sciences of KU Leuven (Belgium). Before that I received my Master degree in Mathematics and Computer Science from Saint Petersburg State University (Russia) in 2008.\nMy research interests dwell in the area of the design and implementation of programming languages, including but not limited to program semantics, certified programming, concurrency and abstract interpretation. I am particularly interested in developing verification techniques and static analyses for higher-order and concurrent programs.",
      "Key": "ilyasergey",
      "Name": "Ilya Sergey",
      "URL": "http://ilyasergey.net",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ilyasergey/9055d956-4117-4d3e-8806-8f590c538261/small.jpg"
    },
    {
      "Affiliation": "Rice University, USA",
      "Key": "viveksarkar",
      "Name": "Vivek Sarkar"
    },
    {
      "Affiliation": "",
      "Key": "melinamongiovi",
      "Name": "Melina Mongiovi",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/melinamongiovi/7ee40713-e123-4ded-96fe-476ecdf5e06d/small.jpg"
    },
    {
      "Affiliation": "Vanderbilt University",
      "Key": "aniruddhagokhale1",
      "Name": "Aniruddha Gokhale",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/aniruddhagokhale1/90cf6872-f3c7-422e-8811-f62e7eb6faf4/small.jpg"
    },
    {
      "Affiliation": "Kyushu University",
      "Bio": "Naoyasu Ubayashi is a Professor at Kyushu University, where he is leading the POSL (Principles of Software Languages) research group. The group is studying on software languages including programming languages, modeling languages, and domain-specific languages. He received his PhD from the University of Tokyo. He is a member of ACM SIGPLAN, IEEE Computer Society, and Information Processing Society of Japan (IPSJ). He received \u201cIPSJ SIG Research Award 2003\u201d from IPSJ.",
      "Key": "naoyasuubayashi",
      "Name": "Naoyasu Ubayashi",
      "URL": "http://posl.ait.kyushu-u.ac.jp/~ubayashi/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/naoyasuubayashi/90f3e77b-f522-47a7-b062-b45eade8082f/small.jpg"
    },
    {
      "Affiliation": "CEA Saclay - NanoInnov",
      "Bio": "S&eacute;bastien G&eacute;rard is research director at CEA and he is leading the LISE laboratory (Laboratory of Model Driven Engineering for Embedded Systems) at CEA LIST (http://www-list.cea.fr/page-_en.html). Working on research issues related to complex and critical system and software design for more than 15 years, his research interests include correct-by-construction specification and design of complex systems, model-based engineering of RT/E systems and visual modeling language engineering. He is the CEA representative at OMG for more than 15 years. In particular, he is the chair of the MARTE standardization task force. He is also leading the open-source project, Papyrus (www.eclipse.org/papyrus), the UML modeling tools of Eclipse. In 1995, he has a diploma in mechanics and aeronautics from the ENSMA high-school, in 2000 he obtained a PhD diploma in Computer Science from the Evry university and in 2013 he got his \u201chabilitation &agrave; diriger des recherches\u201d diploma in the domain of computer science from the Orsay univiersity.",
      "Key": "sebastiangerard",
      "Name": "Sebastian Gerard",
      "URL": "http://www-list.cea.fr/en/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sebastiangerard/916e5012-3ae4-4949-bf14-214ba023e0d8/small.jpg"
    },
    {
      "Affiliation": "IMDEA Software Institute",
      "Key": "borjaarnauderegilbasanez",
      "Name": "Borja Arnau de Régil Basáñez",
      "URL": "https://ergl.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/borjaarnauderegilbasanez/df4e8c06-7edb-4d8b-a448-83fddd032403/small.jpg"
    },
    {
      "Affiliation": "University of Luxembourg, Germany",
      "Key": "benjaminbehringer",
      "Name": "Benjamin Behringer"
    },
    {
      "Affiliation": "Ulm University, Germany",
      "Key": "frankgriesinger",
      "Name": "Frank Griesinger",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/frankgriesinger/917bad93-5bf0-4490-bf88-e685bbb533a7/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research, Redmond",
      "Bio": "Suresh Thummalapenta is a member of the Tools for Software Engineering department at Microsoft, Redmond, USA. His research interests include Automated Software Engineering with emphasis on Software Testing and Mining Software Engineering Data. His main goal is to develop techniques and tools that can help deliver high-quality software more productively.",
      "Key": "sureshthummalapenta",
      "Name": "Suresh Thummalapenta",
      "URL": "http://research.microsoft.com/en-us/people/suthumma/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sureshthummalapenta/91931e12-02d9-4cc4-bba7-a4323449585d/small.jpg"
    },
    {
      "Affiliation": "University of Maryland, College Park",
      "Key": "briannamren",
      "Name": "Brianna M. Ren"
    },
    {
      "Affiliation": "University of Utah",
      "Bio": "Zvonimir Rakamaric is an assistant professor in the School of Computing at the University of Utah. Prior to this, he was a postdoctoral fellow at Carnegie Mellon University in Silicon Valley, where he worked closely with researchers from the Robust Software Engineering Group at NASA Ames Research Center to improve the coverage of testing of NASA\u2019s flight critical systems. Zvonimir received his bachelor\u2019s degree in Computer Science from the University of Zagreb, Croatia; he obtained his M.Sc. and Ph.D. from the Department of Computer Science at the University of British Columbia, Canada.\nZvonimir\u2019s research mission is to improve the reliability and resilience of complex software systems by empowering developers with practical tools and techniques for analysis of their artifacts. He is a recipient of the NSF CAREER Award 2016, Microsoft Research Software Engineering Innovation Foundation (SEIF) Award 2012, Microsoft Research Graduate Fellowship 2008-2010, Silver Medal in the ACM Student Research Competition at the 32nd International Conference on Software Engineering (ICSE) 2010, and the Outstanding Student Paper Award at the 13th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS) 2007.",
      "Key": "zvonimirrakamaric",
      "Name": "Zvonimir Rakamaric",
      "URL": "http://www.zvonimir.info/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zvonimirrakamaric/0138077c-8a38-4c25-a7b6-ae4fc90444d3/small.jpg"
    },
    {
      "Affiliation": "Independent ",
      "Key": "joswarmer",
      "Name": "Jos Warmer",
      "URL": "http://www.openmodeling.nl",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/joswarmer/8e3927db-7f54-421a-9b2f-2193c1a7fe58/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "pengliu",
      "Name": "Peng Liu"
    },
    {
      "Affiliation": "Nokia Bell Labs, Belgium",
      "Key": "tomvancutsem",
      "Name": "Tom Van Cutsem",
      "URL": "http://tvcutsem.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tomvancutsem/9358b281-58e5-4c13-9d65-5abe0c9d08c1/small.jpg"
    },
    {
      "Affiliation": "Imperial College London",
      "Bio": "I\u2019m a PhD student at Imperial College London supervised by Alastair Donaldson. I\u2019m interested in writing and reasoning about GPU programs, especially ones that require non-traditional synchronisation idioms.",
      "Key": "tylersorensen",
      "Name": "Tyler Sorensen",
      "URL": "https://www.doc.ic.ac.uk/~tsorensen/"
    },
    {
      "Affiliation": "University of Groningen",
      "Key": "mirceaflungu",
      "Name": "Mircea F. Lungu",
      "URL": "http://mir.lu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mirceaflungu/1a65ef08-a359-418b-bc41-528701ab48aa/small.jpg"
    },
    {
      "Affiliation": "Central Florida University",
      "Bio": "The long term goal of my research is to better understand how to solve programming problems: how to specify such problems, methods for thinking about such problems, notations for expressing solutions, and ways to check that the solutions are correct. In pursuing this goal, I have worked in two main areas: formal methods and programming languages. formal methods and programming languages.",
      "Key": "garyleavens",
      "Name": "Gary Leavens",
      "URL": "http://www.eecs.ucf.edu/~leavens",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/garyleavens/9457fb09-2491-4cf2-821d-be3b173ddf59/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "xiangyuzhang",
      "Name": "Xiangyu Zhang",
      "URL": "https://www.cs.purdue.edu/homes/xyzhang/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/xiangyuzhang/57d4d88e-c02e-41fc-836c-0e22cdf6b3b8/small.jpg"
    },
    {
      "Affiliation": "University of Athens",
      "Bio": "Research Interests: applied programming languages and software engineering \n \n Language mechanisms for abstraction (declarative languages, program generation, DSLs, modules and components, generics, extensible languages, multi-paradigm programming) \n Program analysis and testing (pointer analysis, automatic test generation, invariant inference, symbolic execution) \n Languages and tools for systems (programming models for concurrency, language support for distributed computing, memory management and program locality)",
      "Key": "yannissmaragdakis",
      "Name": "Yannis Smaragdakis",
      "URL": "http://smaragd.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yannissmaragdakis/950b119c-6d23-4b17-a696-277ccbcefdc3/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Key": "danfriedman",
      "Name": "Dan Friedman"
    },
    {
      "Affiliation": "",
      "Key": "matthiaseichholz",
      "Name": "Matthias Eichholz",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthiaseichholz/952a2c5d-63e9-49f2-a577-b47b67b73b2e/small.jpg"
    },
    {
      "Affiliation": "Google Stockholm, Sweden",
      "Key": "alexloiko",
      "Name": "Alex Loiko"
    },
    {
      "Affiliation": "Inria/LIP6",
      "Bio": "Julia Lawall is a Senior Researcher at Inria Paris-Rocquencourt. Her research interests are in the area of improving the quality of infrastructure software, using a variety of approaches including program analysis, program transformation, and the design of domain-specific languages. She is the main developer of the tool Coccinelle for program matching and transformation in C code. Over 1200 patches based on her research have been accepted into the Linux kernel.",
      "Key": "julialawall",
      "Name": "Julia Lawall",
      "URL": "http://lip6.fr/Julia.Lawall",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/julialawall/22890f3c-a892-4571-b863-0751c14252c4/small.jpg"
    },
    {
      "Affiliation": "University of Bern",
      "Key": "aliakseisyrel",
      "Name": "Aliaksei Syrel"
    },
    {
      "Affiliation": "MPI-SWS, Germany",
      "Bio": "I am interested in programming languages, software verification and approximate computing. My recent research focused on automated verification and synthesis for numerical programs where I have developed techniques and tools for explicit handling of uncertainties such as roundoff, measurement and truncation errors. I did my PhD at EPFL and I am now a tenure-track group leader at MPI-SWS.",
      "Key": "evadarulova",
      "Name": "Eva Darulova",
      "URL": "http://www.mpi-sws.org/~eva/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/evadarulova/957f500c-0afe-4ca6-9a27-11b5d2a25835/small.jpg"
    },
    {
      "Affiliation": "SAP Palo Alto Research Center",
      "Key": "danielingalls",
      "Name": "Daniel Ingalls"
    },
    {
      "Affiliation": "TU Darmstadt, Germany",
      "Bio": "I\u2019m an independent research group leader at TU Darmstadt, where I\u2019m heading the Software Lab. Previously, I was a postdoctoral researcher at the University of California, Berkeley, where I worked with Koushik Sen and George Necula, and a lecturer and postdoctoral researcher at ETH Zurich, where I did my Ph.D. in the group of Thomas Gross. My Ph.D. thesis explores program analyses for automatic and precise error detection. I have studied computer science at TU Dresden and engineering at Ecole Centrale Paris. For writing my diploma thesis I visited the group of Martin Odersky at EPFL in Lausanne. I have received the Software Engineering Award of the Ernst-Denert-Foundation for the best dissertation and the Emmy Noether grant (1.3 million Euro) by the DFG.",
      "Key": "michaelpradel",
      "Name": "Michael Pradel",
      "URL": "http://mp.binaervarianz.de/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelpradel/95ca2aea-09bf-4357-bc72-e43573939f7b/small.jpg"
    },
    {
      "Affiliation": "Aarhus University",
      "Bio": "Associate Professor at Department of Computer Science, Aarhus University, Denmark",
      "Key": "andersmoller",
      "Name": "Anders Møller",
      "URL": "https://cs.au.dk/~amoeller/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andersmoller/95e27cbe-1d69-450c-a898-7bbafe65d0c4/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "tyleretzel",
      "Name": "Tyler Etzel"
    },
    {
      "Affiliation": "University of Oxford",
      "Key": "jameswelch",
      "Name": "James Welch"
    },
    {
      "Affiliation": "Henry M. Gunn High School",
      "Key": "kartikchandra",
      "Name": "Kartik Chandra"
    },
    {
      "Affiliation": "TU/e",
      "Key": "michelreniers",
      "Name": "Michel Reniers"
    },
    {
      "Affiliation": "Federal University of Campina Grande",
      "Key": "flaviomedeiros1",
      "Name": "Flávio Medeiros",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/flaviomedeiros1/978d2f67-6efd-49da-8003-ec51075d3d03/small.jpg"
    },
    {
      "Affiliation": "Northeastern University",
      "Bio": "Jan Vitek is a Professor of Computer Science at Northeastern University. Dr. Vitek was born in Czechoslovakia and educated in Switzerland. Over the years, he worked on topics related to programming languages, their design, use, and implementation. With Noble and Potter, he proposed the notion of flexible alias control which became know as Ownership Types. He led the Ovm project which produced the first real-time Java virtual machine to be flight tested on a ScanEagle drone (he claims no one was harmed). Outcomes of this project include the Schism real-time garbage collector and the FijiVM \u2013 a production VM for embedded systems. More recently, he worked on dynamic languages, trying to make sense of JavaScript and to design a new language called, Thorn. Nowadays, he spends his time with statisticians and data scientists. Jan believes that his 2012 election as Chair of SIGPLAN was an accident; since has been busy trying to rock the boat to ensure this does not happen again. In his spare time, Jan enjoys organizing conferences and sitting on PCs (over 25 in the last decade). He founded the MOS (mobile objects), IWACO (alias control), STOP (gradual typing), and TRANSACT (transactional memory) workshop series. He was the first program chair of VEE and chaired ESOP, ECOOP, Coordination and TOOLS. He was the general chair of PLDI (in Beijing!), ISMM and LCTES. He may still be sitting on the steering committees of ECOOP, JTRES, ICFP, OOPLSA, POPL, PLDI, LCTES, ESOP.",
      "Key": "janvitek",
      "Name": "Jan Vitek",
      "URL": "http://janvitek.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/janvitek/979d71a6-b274-4804-822e-7e754c450897/small.jpg"
    },
    {
      "Affiliation": "University of Lugano",
      "Key": "natenystrom",
      "Name": "Nate Nystrom",
      "URL": "http://www.inf.usi.ch/faculty/nystrom/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/natenystrom/97a33bb1-11c0-4f8c-9305-bd8308ac6a84/small.jpg"
    },
    {
      "Affiliation": "University of Málaga, Spain",
      "Bio": "Antonio Vallecillo is Full Professor of Computer Science at the University of M&aacute;laga. Between 1986 and 1995 he was in the computer industry, working for Fujitsu and ICL in Spain and England. In 1996 he joined the University of M&aacute;laga, where he currently conducts research on model-based software engineering, open distributed processing and software quality. He is the author of 2 books and more than a hundred papers in journals and high-quality conferences. He has organized several international conferences, including ECOOP 2002, and TOOLS 2010, has been the General Chair of the IEEE/ACM MODELS 2013 conference, and will be the General Chair of ECOOP 2017. He has also organized a number of successful Workshops series (WODPEC, MDWE, MDI, VAO) on different ground-breaking research topics. Antonio has served as PC Chair for JISBD, JSWEB, ICMT, TOOLS, ECMFA and QoSA conferences. He is also involved in different standardization activities within AENOR, ISO, ITU-T and the OMG, also being the Spanish representative at IFIP TC2, and the Spanish leader of the AENOR working group on Techniques for Specifying IT Systems. He has been co-editor of International Standards ITU-T Rec. X.906 | ISO/IEC 19793 (UML4ODP) and of the revised versions of RM-ODP Parts 2 and 3 (ITU-T X.902-X.903 | ISO/IEC 10746-2/3). From 2012 to 2016 he has been the \u201cDirector del Centro Internacional de Posgrado y Doctorado\u201d at the University of M&aacute;laga, with the rank of Vice-President, being responsible for all the Postgraduate studies (Master and PhD programmes) of the University of M&aacute;laga, the University\u2019s LifelongLearning (LLL) and Continuing Education (CE) courses, and also the University\u2019s MOOC programs. From September 2014 Antonio Vallecillo is the President of the Spanish Society for Software Engineering and Software Technologies (SISTEDES).",
      "Key": "antoniovallecillo",
      "Name": "Antonio Vallecillo",
      "URL": "http://www.lcc.uma.es/~av",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/antoniovallecillo/ddc4b389-9c00-4abc-9ac6-e199169267b0/small.jpg"
    },
    {
      "Affiliation": "Lakehead University, CA",
      "Key": "ehsanattoofian",
      "Name": "Ehsan Atoofian",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ehsanattoofian/97b31137-8791-47bf-8b9c-ceba7bf05d0f/small.jpg"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Key": "grigorerosu",
      "Name": "Grigore Rosu",
      "URL": "http://fsl.cs.illinois.edu/index.php/Grigore_Rosu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/grigorerosu/5d2acd04-bb45-46a0-a743-4826f3d8086c/small.jpg"
    },
    {
      "Affiliation": "Waseda University, Japan",
      "Key": "hirokimikami",
      "Name": "Hiroki Mikami"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Key": "patrickrein",
      "Name": "Patrick Rein",
      "URL": "http://www.patrickrein.de"
    },
    {
      "Affiliation": "Samsung Research America",
      "Key": "satishchandra",
      "Name": "Satish Chandra",
      "URL": "https://sites.google.com/site/schandraacmorg/"
    },
    {
      "Affiliation": "University of California, Berkeley",
      "Bio": "I\u2019ve been teaching since 1976, ranging from six-year-olds (as a volunteer) to graduate students. I wrote the three-volume Computer Science Logo Style series for teenagers, developed (with UC Berkeley students) the Berkeley Logo interpreter, taught a SICP course at Berkeley for 25 years, wrote (with Matthew Wright) the SICP \u201cprequel\u201d Simply Scheme, developed (with Daniel Garcia and UC Berkeley students) the \u201cBeauty and Joy of Computing\u201d course for non-CS majors, and helped develop (with the brilliant Jens M&ouml;nig) the Snap! visual programming language (Scheme disguised as Scratch) used in the BJC course. Although theoretically retired, I\u2019m currently working with colleagues at Education Development Center to turn BJC into a curriculum package usable in high schools, especially for nontraditional CS students (women and minorities).",
      "Key": "brianharvey",
      "Name": "Brian Harvey",
      "URL": "http://cs.berkeley.edu/~bh",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/brianharvey/e649cc05-e02c-4efe-b665-d1f92905f515/small.jpg"
    },
    {
      "Affiliation": "University of Wisconsin - Madison, USA",
      "Key": "tusharsharma",
      "Name": "Tushar Sharma"
    },
    {
      "Affiliation": "LG Electronics San Jose Lab",
      "Key": "tamerdallou",
      "Name": "Tamer Dallou"
    },
    {
      "Affiliation": "",
      "Key": "normenmuller",
      "Name": "Normen Müller",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/normenmuller/a23bacc2-5ca8-41ef-a7d5-cf011da12870/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "davidmitchelperry",
      "Name": "David Mitchel Perry"
    },
    {
      "Affiliation": "Ryerson University",
      "Key": "ebrahimbagheri",
      "Name": "Ebrahim Bagheri",
      "URL": "http://www.ee.ryerson.ca/~bagheri/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ebrahimbagheri/9acaffba-80ea-47d8-be9f-7897a83af016/small.jpg"
    },
    {
      "Affiliation": "University of Tokyo",
      "Key": "josephcaldwell",
      "Name": "Joseph Caldwell"
    },
    {
      "Affiliation": "PUC-Rio",
      "Bio": "Roberto Ierusalimschy is an Associate Professor of Informatics at PUC-Rio, where he works with programming-language design and implementation. Roberto is also the main designer of the Lua programming language. In 2013 he received the Scientific Merit Award from the Brazilian Computer Society (SBC). Roberto is a Senior Speaker from SBC, a Distinguished Speaker from ACM, and member of the IFIP Working Group on Language Design (IFIP WG 2.16).",
      "Key": "robertoierusalimschy",
      "Name": "Roberto Ierusalimschy",
      "URL": "http://www.inf.puc-rio.br/~roberto",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robertoierusalimschy/17e6e2ea-2b5d-4989-b0ee-0a979ef23be2/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "marcokuhrmann",
      "Name": "Marco Kuhrmann"
    },
    {
      "Affiliation": "Google",
      "Key": "rossmcilroy",
      "Name": "Ross McIlroy",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rossmcilroy/9e08cbad-bc4f-414b-b7a1-9862523f2279/small.jpg"
    },
    {
      "Affiliation": "HAW Hamburg",
      "Key": "thomascschmidt",
      "Name": "Thomas C. Schmidt",
      "URL": "https://www.inet.haw-hamburg.de/members/schmidt",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomascschmidt/9c8d196a-0aa5-469f-8190-fa6e4e797078/small.jpg"
    },
    {
      "Affiliation": "Google Inc.",
      "Bio": "Mark S. Miller is the main designer of the E and Dr. SES distributed object-capability programming languages, inventor of Miller Columns, a pioneer of agoric (market-based secure distributed) computing, an architect of the Xanadu hypertext publishing system, a representative to the EcmaScript committee, and one of Yedalog\u2019s creators.",
      "Key": "markmiller",
      "Name": "Mark Miller",
      "URL": "http://research.google.com/pubs/author35958.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/markmiller/43a4babc-598d-490e-b020-89cb53348c87/small.jpg"
    },
    {
      "Affiliation": "Aarhus University & The Alexandra Institute",
      "Key": "olelehrmannmadsen",
      "Name": "Ole Lehrmann Madsen",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/olelehrmannmadsen/634807f3-473f-49f1-8ab0-2b253a7ca3eb/small.jpg"
    },
    {
      "Affiliation": "EPFL",
      "Key": "jorgevicentecantero",
      "Name": "Jorge Vicente-Cantero",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jorgevicentecantero/304f7c9d-cca2-483f-be68-ab70be74fe9d/small.jpg"
    },
    {
      "Affiliation": "University of Tübingen, Germany",
      "Key": "jonathanbrachthauser",
      "Name": "Jonathan Immanuel Brachthäuser",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathanbrachthauser/f9c0b5dc-9b85-444f-baed-e807673f202d/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "oliviertardieu",
      "Name": "Olivier Tardieu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/oliviertardieu/443dae7a-79e1-40af-8ac3-b4762aca41c5/small.jpg"
    },
    {
      "Affiliation": "University of Utah",
      "Key": "mattmight",
      "Name": "Matt Might"
    },
    {
      "Affiliation": "University of Pisa, Italy",
      "Key": "massimotorquati",
      "Name": "Massimo Torquati",
      "URL": "www.di.unipi.it/~torquati",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/massimotorquati/9f0422f6-d41d-4377-9d57-cf17afdc0972/small.jpg"
    },
    {
      "Affiliation": "CERT/CC, USA",
      "Key": "willdormann",
      "Name": "Will Dormann"
    },
    {
      "Affiliation": "Aalborg University, Denmark",
      "Bio": "Bent Thomsen is an Associate Professor in the department of computer science at Aalborg University, Denmark. He joined the research unit focussing on database and programming technology in April 2002. From September 2008 till January 2015 he was the Group Leader. From February 2015 he has been member of the Departments Research Committee. \nHis research is in programming languages and programming technology with applications in parallel, concurrent, distributed, mobile and embedded systems.\nBent has more than 10 years of industrial research and research management experience. \nBefore joining Aalborg University, he was one of ICL\u2019s (now Fujitsu Services) three Principal Researchers, based at ICL HQ in Bracknell, UK.\nBefore joining ICL, he was the team-leader for the Facile Programming Language team at ECRC in Munich, Germany.\nBent is the author of several book chapters, more than ten journal publications and twenty conference papers.\nBent Thomsen is a Chartered Scientist (CSci), a Chartered IT Professional (CITP), a Chartered Engineer (CEng) and a registered European Engineer (Eur Ing). He is a fellow of the British Computer Society (BCS), a member of the ACM, IEEE, BSC FACS, EAPLS and EATCS. Bent has a B.Sc in Mathematics and an M.Sc in computer science from Aalborg University, Denmark and a Ph.D and DIC from Imperial College, London University, UK.",
      "Key": "bentthomsen",
      "Name": "Bent Thomsen",
      "URL": "http://people.cs.aau.dk/~bt/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/bentthomsen/eb489bfa-f247-43a2-8492-27c34802f471/small.jpg"
    },
    {
      "Affiliation": "University of Colorado Boulder",
      "Key": "boryuhevanchang",
      "Name": "Bor-Yuh Evan Chang",
      "URL": "http://www.cs.colorado.edu/~bec/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/boryuhevanchang/0cbe7e94-aaf8-458b-9670-3892350bc209/small.jpg"
    },
    {
      "Affiliation": "UPMC, France",
      "Key": "remyelsibaie",
      "Name": "Rémy El Sibaïe"
    },
    {
      "Affiliation": "Magdeburg University",
      "Key": "reimarschroter",
      "Name": "Reimar Schröter"
    },
    {
      "Affiliation": "Vivibe LLC",
      "Key": "mehrdadafshari",
      "Name": "Mehrdad Afshari",
      "URL": "https://mehrdad.afshari.me",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mehrdadafshari/e95d0cdb-2542-48dc-885c-a521b3bd3f87/small.jpg"
    },
    {
      "Affiliation": "TU Braunschweig, Germany",
      "Key": "davidwille",
      "Name": "David Wille"
    },
    {
      "Affiliation": "Australian National University ",
      "Bio": "My research interests center on the challenge of making software run faster and more power-efficiently on modern hardware. My primary interests include: microarchitectural support for managed languages, fast and efficient garbage collection, and the design and implementation of virtual machines. As a backdrop to this I have a longstanding interest in role of sound methodology and infrastructure in successful research innovation.",
      "Key": "steveblackburn",
      "Name": "Steve Blackburn",
      "URL": "http://users.cecs.anu.edu.au/~steveb/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/steveblackburn/a0b3a728-b162-4d46-8d8b-7b90b417d405/small.jpg"
    },
    {
      "Affiliation": "TU Vienna, Austria",
      "Key": "erwanbousse",
      "Name": "Erwan Bousse",
      "URL": "http://people.irisa.fr/Erwan.Bousse/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/erwanbousse/5e6cca31-4ae8-4081-956c-53b51fdca8a3/small.jpg"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "lucasbrutschy",
      "Name": "Lucas Brutschy",
      "URL": "http://people.inf.ethz.ch/blucas/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lucasbrutschy/40a41f4b-b8a3-4119-a6fb-51fd18558f29/small.jpg"
    },
    {
      "Affiliation": "University of Parma, Italy",
      "Key": "agostinopoggi",
      "Name": "Agostino Poggi"
    },
    {
      "Affiliation": "University of Waterloo",
      "Key": "jonathaneyolfson",
      "Name": "Jonathan Eyolfson",
      "URL": "https://eyl.io/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathaneyolfson/a121e3fc-6ca4-4157-baa6-090587229d2c/small.jpg"
    },
    {
      "Affiliation": "IK4-IKERLAN Research Center, Spain",
      "Key": "jokingarcia",
      "Name": "Jokin García",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jokingarcia/7c39a000-75af-4284-a652-e33aa9e904ed/small.jpg"
    },
    {
      "Affiliation": "TU Wien",
      "Key": "schahramdustdar",
      "Name": "Schahram Dustdar",
      "URL": "http://dsg.tuwien.ac.at/Staff/sd"
    },
    {
      "Affiliation": "Rensselaer Polytechnic Institute, US",
      "Key": "carlosvarela",
      "Name": "Carlos Varela",
      "URL": "http://www.cs.rpi.edu/~cvarela/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/carlosvarela/a142a30b-a796-48cb-906a-37fd78ff95fe/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "martinhirzel",
      "Name": "Martin Hirzel",
      "URL": "http://hirzels.com/martin/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/martinhirzel/8ffffeeb-b25c-4f90-b2e3-4949c2871a2a/small.jpg"
    },
    {
      "Affiliation": "Rice University, USA",
      "Bio": "I am a PhD student advised by Prof. Vivek Sarkar in the department of computer science at Rice University. My research interest is in understanding and addressing programming and performance challenges associated with the next generation of systems with byte-addressable non-volatile memory (NVRAM).",
      "Key": "kumudbhandari",
      "Name": "Kumud Bhandari",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kumudbhandari/fdd8f703-66aa-440b-a6f3-2e163d5f15b7/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "anithagollamudi",
      "Name": "Anitha Gollamudi"
    },
    {
      "Affiliation": "Oracle Labs",
      "Bio": "Michael Haupt is a member of the Alphabet Soup project in the Virtual Machine Research Group at Oracle Labs.",
      "Key": "michaelhaupt",
      "Name": "Michael Haupt",
      "URL": "https://labs.oracle.com/pls/apex/f?p=labs:bio:0:44",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelhaupt/a27742f3-4845-4c2e-a7f3-41a2bcb82f34/small.jpg"
    },
    {
      "Affiliation": "IRISA / University of Rennes 1",
      "Bio": "I am professor in the computer science department of the University of Rennes 1. I am in charge of the research master in computer science. Previously, I was in charge of the M2 SSI graduate curriculum dedicated to information system security.\nI am a member of CELTIQUE, a joint project-team with Inria Rennes Bretagne Atlantique and the IRISA UMR 6074 laboratory. In 2012 and 2013, I was scientific director of the language and software engineering department of IRISA.\nMy research activities concern the formal verification using the Coq proof assistant of program transformations and semantic properties of programming languages, such as those found in the CompCert compiler. I teach mechanized semantics (in Coq), functional programming (in OCaml), formal methods (using the Why3 tool), and software vulnerabilities. I am coordinator of the LTP (Languages, Types, Proofs) group of the French GDR GPL. This group is funded by CNRS and meets twice a year in a French city.",
      "Key": "sandrineblazy",
      "Name": "Sandrine Blazy",
      "URL": "http://www.irisa.fr/celtique/blazy/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sandrineblazy/a282e0da-5e6e-428c-9d47-3834602b622f/small.jpg"
    },
    {
      "Affiliation": "University of Florida",
      "Key": "beverlysanders",
      "Name": "Beverly Sanders",
      "URL": "http://www.cise.ufl.edu/~sanders/"
    },
    {
      "Affiliation": "IN3 - UOC",
      "Bio": "I\u2019m a postdoctoral fellow in the SOM Research Lab at IN3 UOC, in Barcelona, Spain. Before (2011-2015) I was part of Inria as postdoctoral researcher in the AtlanMod team, at the Ecole des Mines de Nantes, France. I got my PhD in June 2011 in the Modelum team reaseach team, in Murcia, Spain. My advisor was Jesus Garcia Molina and I defined domain-specific languages to obtain models from several technical spaces.\nMy research interests are mainly focused on Model-Driven Engineering (MDE), Model-Driven Modernization (MDM) and Domain-Specific Languages. I am also interested in the applicacion of ADM specifications (e.g., ASTM, KDM and SMM metamodels) as well as other topics such as bridging technical spaces, collaborative development, end-user engineering or mobile application reengineering.",
      "Key": "javierluiscanovasizquierdo",
      "Name": "Javier Luis Cánovas Izquierdo",
      "URL": "http://jlcanovas.es",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/javierluiscanovasizquierdo/a2f943fa-fc08-483a-bd37-cdcae9040efb/small.jpg"
    },
    {
      "Affiliation": "Harvard University",
      "Bio": "Stephen Chong is an Associate Professor of Computer Science in the Harvard School of Engineering and Applied Sciences. Steve\u2019s research focuses on programming languages, information security, and the intersection of these two areas. He is the recipient of an NSF CAREER award, an AFOSR Young Investigator award, and a Sloan Research Fellowship. He received a PhD from Cornell University, and a bachelor\u2019s degree from Victoria University of Wellington, New Zealand.",
      "Key": "stephenchong",
      "Name": "Stephen Chong",
      "URL": "http://people.seas.harvard.edu/~chong/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stephenchong/a347dce1-a7d7-4fd1-9b5c-a09ea63350bc/small.jpg"
    },
    {
      "Affiliation": "OSCAR TECHNOLOGY, Japan",
      "Key": "moriyukitakamura",
      "Name": "Moriyuki Takamura"
    },
    {
      "Affiliation": "itemis, Germany",
      "Key": "markusvlter",
      "Name": "Markus Völter",
      "URL": "http://voelter.de/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/markusvlter/a380d64f-cbd8-4bad-9974-4a6fd1c7fb9f/small.jpg"
    },
    {
      "Affiliation": "NVIDIA Research",
      "Key": "michaelbauer",
      "Name": "Michael Bauer"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Bio": "My research group works on making it easier to write computer programs, mostly using program synthesis, a technique for computer-aided construction of software. Our research agenda is to develop programming languages and tools in which the human is allowed to give incomplete instructions; from these, a complete program is obtained in a dialogue with a \u201cprogrammer assistant.\u201d",
      "Key": "rastislavbodik",
      "Name": "Rastislav Bodik",
      "URL": "http://homes.cs.washington.edu/~bodik",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rastislavbodik/a512558e-de4f-440e-8036-c40f86649639/small.jpg"
    },
    {
      "Affiliation": "University of Applied Sciences Rapperswil, Switzerland",
      "Key": "farhadmehta",
      "Name": "Farhad Mehta"
    },
    {
      "Affiliation": "Grinnell College, USA",
      "Key": "davidchang",
      "Name": "David Chang",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidchang/79f3f16a-25ac-460c-8b60-620f01b55697/small.jpg"
    },
    {
      "Affiliation": "Texas A&M University",
      "Key": "shiyouhuang",
      "Name": "Shiyou Huang"
    },
    {
      "Affiliation": "San Jose State University",
      "Key": "cayhorstmann",
      "Name": "Cay Horstmann",
      "URL": "http://www.horstmann.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/cayhorstmann/c4894fe6-6a6a-4fe3-8d18-ca2f0ae8aae4/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "Viktor Kuncak is an associate professor in the EPFL School of Computer and Communication Sciences, where he leads the Laboratory for Automated Reasoning and Analysis (http://lara.epfl.ch). He works in formal methods with emphasis on algorithms and tools, such as Leon (http://leon.epfl.ch). He received a PhD degree from the Massachusetts Institute of Technology (MIT) in 2007. He was a program co-chair of FMCAD 2014 and VMCAI 2012, and led an international COST Action to establish standardized formats for verification and synthesis (Rich Model Toolkit). His invited talks include those at LOPSTR, SYNT, ICALP, CSL, RV, VMCAI, and SMT. He received an ACM SIGSOFT distinguished paper award for work on automated testing. His work on software synthesis procedures was published in the Communications of the ACM as a Research Highlight article. His recent work on Implicit Programming, funded by a European Research Council (ERC) grant, aims to bridge the gap between human goals and their computational realizations.",
      "Key": "viktorkuncak",
      "Name": "Viktor Kuncak",
      "URL": "http://lara.epfl.ch/~kuncak/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/viktorkuncak/78636806-30c9-45e6-8dc3-f26d91a04f02/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "michaelcarbin",
      "Name": "Michael Carbin",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelcarbin/fd0efe40-41d3-4eaf-b227-c8fe1a9f6e96/small.jpg"
    },
    {
      "Affiliation": "Google",
      "Key": "benltitzer",
      "Name": "Ben L. Titzer"
    },
    {
      "Affiliation": "INRIA",
      "Key": "manuelserrano",
      "Name": "Manuel Serrano",
      "URL": "http://www-sop.inria.fr/members/Manuel.Serrano/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/manuelserrano/a638fa58-19b5-4a00-9a5f-b6c5f150a752/small.jpg"
    },
    {
      "Affiliation": "University of Magdeburg",
      "Key": "julianaalvespereira",
      "Name": "Juliana Alves Pereira",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/julianaalvespereira/8e209e68-4f4c-4c4d-a3d8-3956c50a8c1d/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "leoosvald",
      "Name": "Leo Osvald"
    },
    {
      "Affiliation": "Aalborg University, Denmark",
      "Key": "svetomirkurtev",
      "Name": "Svetomir Kurtev"
    },
    {
      "Affiliation": "Macquarie University",
      "Key": "matthewroberts",
      "Name": "Matthew Roberts",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthewroberts/a78a10ea-b572-42c2-8c72-c43fb5d0a1de/small.jpg"
    },
    {
      "Affiliation": "Cloud9",
      "Key": "lennartkats",
      "Name": "Lennart Kats",
      "URL": "http://lennart.cl/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lennartkats/100fe49e-c285-4b96-b0bc-67203091bf0b/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "dohyeongkim",
      "Name": "Dohyeong Kim"
    },
    {
      "Affiliation": "CWI, Netherlands",
      "Key": "michaelsteindorfer",
      "Name": "Michael Steindorfer",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelsteindorfer/1d2e6e2c-7121-47e7-8e8b-b850c6494a4d/small.jpg"
    },
    {
      "Affiliation": "University of California, Santa Cruz",
      "Key": "cormacflanagan",
      "Name": "Cormac Flanagan",
      "URL": "http://users.soe.ucsc.edu/~cormac/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/cormacflanagan/fd454a8e-4230-4fa5-a4da-1d16a1027de3/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "christiandietrich",
      "Name": "Christian Dietrich"
    },
    {
      "Affiliation": "University of Utah",
      "Key": "ganeshgopalakrishnan",
      "Name": "Ganesh Gopalakrishnan",
      "URL": "http://www.cs.utah.edu/~ganesh"
    },
    {
      "Affiliation": "Oregon State University, USA",
      "Key": "spencerhubbard",
      "Name": "Spencer Hubbard",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/spencerhubbard/1a999806-5ae4-4779-93cc-b8260ecf738c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "mirkoviroli",
      "Name": "Mirko Viroli"
    },
    {
      "Affiliation": "UPMC, France",
      "Key": "emmanuelchailloux",
      "Name": "Emmanuel Chailloux"
    },
    {
      "Affiliation": "",
      "Key": "mirkoviroli1",
      "Name": "Mirko Viroli"
    },
    {
      "Affiliation": "Maynooth University, Ireland",
      "Key": "josejuandominguezveiga",
      "Name": "Jose Juan Dominguez Veiga",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/josejuandominguezveiga/014c9663-5304-454b-8b65-e5d0198964b0/small.jpg"
    },
    {
      "Affiliation": "École des Mines de Nantes, France",
      "Key": "jacquesnoye",
      "Name": "Jacques Noyé",
      "URL": "http://www.emn.fr/z-info/noye/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jacquesnoye/bb253644-ac93-4d56-9da6-926e1d444b76/small.jpg"
    },
    {
      "Affiliation": "ARM, UK",
      "Bio": "Strategist and technologist with broad experience in academic and industrial research and development.\nKey technology areas: Memory system architecture; Volatile and Non-Volatile Memories; Memory interfaces; Interconnect architecture; Networks on Chip (NoC); Performance and power modelling; Full-System simulation.",
      "Key": "andreashansson",
      "Name": "Andreas Hansson",
      "URL": "https://www.linkedin.com/in/ahansson",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andreashansson/a9cef077-5e49-42a5-9a56-e04bd4f7cae4/small.jpg"
    },
    {
      "Affiliation": "University of Texas at Austin, USA",
      "Key": "keshavpingali",
      "Name": "Keshav Pingali",
      "URL": "http://www.cs.utexas.edu/~pingali/"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "aharonabadi",
      "Name": "Aharon Abadi",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=il-AHARONA"
    },
    {
      "Affiliation": "Computer Science Department - University of Pisa",
      "Bio": "I\u2019m a PhD Student in Computer Science at University of Pisa.",
      "Key": "marcograndi",
      "Name": "Marco Grandi",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marcograndi/39b0a8c7-5860-4f57-8ea4-223ae3a80fe1/small.jpg"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "gustavosantos",
      "Name": "Gustavo Santos"
    },
    {
      "Affiliation": "UFCSPA, Brazil",
      "Key": "maiconbernardino",
      "Name": "Maicon Bernardino",
      "URL": "https://www.facebook.com/maiconbernardino?fref=nf",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/maiconbernardino/ab95a44e-0ff5-4850-bc22-63f637c10268/small.jpg"
    },
    {
      "Affiliation": "INRIA Grenoble Rhône-Alpes",
      "Key": "hyeonseungim",
      "Name": "Hyeonseung Im"
    },
    {
      "Affiliation": "Oracle Labs",
      "Bio": "Guy L. Steele Jr. (A.B., 1975, Harvard College; S.M., 1977, and Ph.D., 1980, MIT) is a Software Architect at Oracle Labs. He has taught at Carnegie-Mellon University, and worked for Tartan Laboratories, Thinking Machines Corporation, and Sun Microsystems.\nHe is author or co-author of five books: Common Lisp: The Language, C: A Reference Manual, The Hacker\u2019s Dictionary, The High Performance Fortran Handbook, and The Java Language Specification. He has published more than two dozen papers on the subject of the Lisp language and Lisp implementation, including a series with Gerald Jay Sussman that defined the Scheme dialect of Lisp. His paper \u201cData Parallel Algorithms\u201d with W. Daniel Hillis (December 1986) has been cited more than 1100 times.\nHe has been given the Grace Murray Hopper Award (1988), the ACM SIGPLAN Programming Languages Achievement Award (1996), and the Harry H. Goode Memorial Award (2007). He is an ACM Fellow, IEEE Fellow, Fellow of the American Academy of Arts and Sciences, and a Member of the National Academy of Engineering of the United States of America.\nHe has served on accredited standards committees X3J11 (C language) and X3J3 (Fortran), and served as chairman of X3J13 (Common Lisp). He was also a member of the IEEE committee that produced the IEEE Standard for the Scheme Programming Language, IEEE Std 1178-1990. At Thinking Machines Corporation he co-developed the languages Connection Machine Lisp, C*, and Connection Machine Fortran. At Sun Microsystems (and now at Oracle) he has advised the evolution of the Java programming language; he also led the design of Fortress, an object-oriented mathematical language intended to support high-performance computing. He designed the original EMACS command set and was the first person to port TeX.\nHe is a member of Tech Squares, the Plus-level Modern Western Square Dance club at MIT, and a square dance caller (currently Mainstream through C3A). At SPLASH 2011 he gave a presentation and demonstration on the structure of square-dance singing calls.\nAt Oracle labs, he is responsible for research in language design and implementation strategies, and architectural and software support for programming languages.",
      "Key": "guylsteelejr",
      "Name": "Guy L. Steele Jr.",
      "URL": "https://labs.oracle.com/pls/apex/f?p=labs:bio:0:120",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guylsteelejr/ad5264ea-e27b-4f9a-8f05-dc43a1298204/small.jpg"
    },
    {
      "Affiliation": "University of Massachusetts, Amherst",
      "Key": "emmatosch",
      "Name": "Emma Tosch",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/emmatosch/ad5dba44-1c48-4d17-b229-3d5a8ebf7644/small.jpg"
    },
    {
      "Affiliation": "King's College London",
      "Bio": "I am a programmer and Reader in Software Development in the Department of Informatics at King\u2019s College London where I lead the Software Development Team. I am an EPSRC Fellow. I co-founded Elbatrop.",
      "Key": "laurietratt",
      "Name": "Laurence Tratt",
      "URL": "http://tratt.net/laurie/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/laurietratt/ad7505c9-d7a9-4a04-a26b-c4e755ba54de/small.jpg"
    },
    {
      "Affiliation": "Applied Duality, Inc.",
      "Key": "erikmeijer",
      "Name": "Erik Meijer",
      "URL": "https://www.linkedin.com/in/erikmeijer1",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/erikmeijer/ad799b15-f812-473a-b8d1-36f445148aec/small.jpg"
    },
    {
      "Affiliation": "TU Braunschweig, Germany",
      "Key": "thomasthm",
      "Name": "Thomas Thüm",
      "URL": "http://wwwiti.cs.uni-magdeburg.de/~tthuem/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomasthm/40265175-8542-41e0-99da-32c82ed8da97/small.jpg"
    },
    {
      "Affiliation": "University of Wisconsin\u2013Madison",
      "Key": "benliblit",
      "Name": "Ben Liblit",
      "URL": "http://pages.cs.wisc.edu/~liblit/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/benliblit/9d2b43b2-f312-47d7-8337-f97fd0597591/small.jpg"
    },
    {
      "Affiliation": "University of Nebraska-Lincoln",
      "Key": "witawassrisaan",
      "Name": "Witawas Srisa-an",
      "URL": "http://cse.unl.edu/~witty/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/witawassrisaan/addcc605-b5e3-4433-ba9f-3d424b967735/small.jpg"
    },
    {
      "Affiliation": "Brown University",
      "Bio": "Emmanuel Schanzer is a co-director of the Bootstrap Project link and lead organizer of CSPdWeek. Earlier he studied computer science at Cornell, worked at Microsoft, taught mathematics at an under-resourced secondary school, served as primary school academic coach, and earned a doctorate in mathematics education from the Harvard Graduate School of Education. He mixes a mean old-fashioned.",
      "Key": "emmanuelschanzer",
      "Name": "Emmanuel Schanzer",
      "URL": "http://www.BootstrapWorld.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/emmanuelschanzer/e675e08e-3b01-4b0c-a10c-2fd19eb46bba/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "nadeemjamali",
      "Name": "Nadeem Jamali"
    },
    {
      "Affiliation": "University of Freiburg",
      "Key": "peterthiemann",
      "Name": "Peter Thiemann",
      "URL": "http://www2.informatik.uni-freiburg.de/~thiemann/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/peterthiemann/ae14eef6-2154-4c02-bd47-31f88b5be583/small.jpg"
    },
    {
      "Affiliation": "Texas A&M University",
      "Key": "arunkrishnakumarrajagopalan",
      "Name": "Arun Krishnakumar Rajagopalan"
    },
    {
      "Affiliation": "Australian National University, Australia",
      "Key": "xiyang",
      "Name": "Xi Yang",
      "URL": "https://yangxi.github.io/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/xiyang/af2483ce-eecd-4e3e-817d-1f08da148cc0/small.jpg"
    },
    {
      "Affiliation": "Aarhus University",
      "Key": "gianlucamezzetti",
      "Name": "Gianluca Mezzetti"
    },
    {
      "Affiliation": "Federico II University of Naples",
      "Bio": "I am a post-doc researcher in the field of software dependability. I currently work with the DIETI department of the Federico II University of Naples, Italy, and with the CINI laboratory (Consorzio Interuniversitario Nazionale per l\u2019Informatica) of the same university. I also collaborate with the CISUC research centre of the University of Coimbra, Portugal. In 2011, I received a PhD degree in computer engineering, with a thesis entitled \u201cAchieving Representative Faultloads in Software Fault Injection\u201d.",
      "Key": "robertonatella",
      "Name": "Roberto Natella",
      "URL": "http://wpage.unina.it/roberto.natella/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robertonatella/af444427-11cc-458e-b841-a315485c87a2/small.jpg"
    },
    {
      "Affiliation": "TU Dresden, Germany",
      "Key": "uweamann",
      "Name": "Uwe Aßmann",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/uweamann/2b7ac8f7-db1b-4039-b5c8-2d54f07ca2c8/small.jpg"
    },
    {
      "Affiliation": "University of Pisa, Italy",
      "Key": "gabrielemencagli",
      "Name": "Gabriele Mencagli"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "miquelpericas",
      "Name": "Miquel Pericàs",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/miquelpericas/afff46cd-e82c-4616-8a93-84a35ee55836/small.jpg"
    },
    {
      "Affiliation": "RWTH Aachen",
      "Key": "diegofabregattraver",
      "Name": "Diego Fabregat-Traver"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "rodrigoqueiroz",
      "Name": "Rodrigo Queiroz"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "jensnicolay",
      "Name": "Jens Nicolay",
      "URL": "https://soft.vub.ac.be/~jnicolay/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jensnicolay/307f2d75-b933-43f4-ae6c-1cb9a2db8e92/small.jpg"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "matthiasgrimmer",
      "Name": "Matthias Grimmer",
      "URL": "http://ssw.jku.at/General/Staff/Grimmer/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthiasgrimmer/b0e74632-1a41-4ecf-8f2c-074f5cd8de04/small.jpg"
    },
    {
      "Affiliation": "IMDEA Software Institute",
      "Key": "aleksandarnanevski",
      "Name": "Aleksandar Nanevski"
    },
    {
      "Affiliation": "FZI Research Center for Information Technology",
      "Key": "sofiaananieva",
      "Name": "Sofia Ananieva",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sofiaananieva/3ab03797-1b9e-4577-a55e-0b5011d53656/small.jpg"
    },
    {
      "Affiliation": "KAIST",
      "Bio": "I am an Assistant Professor in the Department of Computer Science at the Korea Advanced Institute of Science and Technology, Korea.\nResearch Interests: - SAFE, Scalable analysis framework for JavaScript - Analysis and performance enhancement of medical image processing - Scalable, accurate, and practical program analyses - Programming environments for debugging and testing - Proof assistants for programming languages and program analyses",
      "Key": "sukyoungryu",
      "Name": "Sukyoung Ryu",
      "URL": "http://plrg.kaist.ac.kr/ryu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sukyoungryu/b1a12193-c3af-4eac-9dae-2e835406a801/small.jpg"
    },
    {
      "Affiliation": "Università della Svizzera italiana (USI)",
      "Key": "lucasalucci",
      "Name": "Luca Salucci"
    },
    {
      "Affiliation": "University of Alabama",
      "Key": "jeffgray",
      "Name": "Jeff Gray",
      "URL": "http://gray.cs.ua.edu/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeffgray/b2993a4c-47e1-4c11-b2cf-171adb23d5e4/small.jpg"
    },
    {
      "Affiliation": "MIT CSAIL",
      "Key": "santiagoperezderosso",
      "Name": "Santiago Perez De Rosso"
    },
    {
      "Affiliation": "Waseda University, Japan",
      "Key": "rinafujino",
      "Name": "Rina Fujino"
    },
    {
      "Affiliation": "University of Maribor",
      "Key": "marjanmernik",
      "Name": "Marjan Mernik",
      "URL": "http://lpm.feri.um.si/en/members/mernik/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marjanmernik/b2cda924-3f0c-4ac3-8ad8-5dad6fc38a3c/small.jpg"
    },
    {
      "Affiliation": "UFCG, Brazil",
      "Key": "rohitgheyi",
      "Name": "Rohit Gheyi"
    },
    {
      "Affiliation": "Budapest University of Technology and Economics",
      "Key": "istvanrath",
      "Name": "István Ráth",
      "URL": "http://istvanrath.net",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/istvanrath/b3252808-8e7d-43ec-82fa-8dca41097cb1/small.jpg"
    },
    {
      "Affiliation": "Chapman University",
      "Key": "adriannistor",
      "Name": "Adrian Nistor",
      "URL": "http://www1.chapman.edu/~anistor/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/adriannistor/b37f0654-3d89-4db9-8c76-c9277eea6904/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh",
      "Key": "ricardohonoratozimmer",
      "Name": "Ricardo Honorato-Zimmer",
      "URL": "https://homepages.inf.ed.ac.uk/s1066652/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ricardohonoratozimmer/b3c5a38b-6c9a-43cd-8dab-2b928d9babe7/small.jpg"
    },
    {
      "Affiliation": "Karlsruhe Institute of Technology, Vincenz-Priessnitz-Str. 1, Karlsruhe, Germany",
      "Key": "christophtobiasbach",
      "Name": "Christoph Tobias Bach"
    },
    {
      "Affiliation": "Martin-Luther-University Halle-Wittenberg",
      "Key": "wolfzimmermann",
      "Name": "Wolf Zimmermann"
    },
    {
      "Affiliation": "University of Waterloo",
      "Key": "derekrayside",
      "Name": "Derek Rayside",
      "URL": "https://ece.uwaterloo.ca/~drayside/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/derekrayside/b4af0d46-a7e3-45b9-a01b-c119ec153f39/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Bio": "Judith Bishop is director of Computer Science at Microsoft Research. Her role is to create strong links between Microsoft\u2019s research groups and universities globally, through encouraging projects, supporting conferences, and engaging directly in research. Her expertise spans programming languages, software engineering, and distributed systems with a strong practical bias. Her current projects are Orleans and Code Hunt, and she worked previously on TouchDevelop and Try F#. She received her PhD from the University of Southampton and was a professor in South Africa for many years, with visiting positions in the United Kingdom, Germany, Canada, Italy, and the United States. She was general co-chair of ICSE 2010 and co-chair of several Microsoft Research summits. She serves frequently on editorial, program, and award committees. She has written 16 books on programming, which have been translated into six languages. Judith received the ACM Distinguished Educator Award in 2014, the IFIP Silver Core and Outstanding Service Award in 2006, and South Africa\u2019s Distinguished Woman Scientist of the Year in 2005.",
      "Key": "judithbishop",
      "Name": "Judith Bishop",
      "URL": "http://research.microsoft.com/~jbishop",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/judithbishop/40a48935-9084-4bac-9a7f-b0b29c5b4c70/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "benjaminchung",
      "Name": "Benjamin Chung"
    },
    {
      "Affiliation": "IIT Kanpur, India",
      "Bio": "A final-year undergraduate in Computer Science at IIT Kanpur",
      "Key": "rohanbavishi",
      "Name": "Rohan Bavishi",
      "URL": "http://home.iitk.ac.in/~rbavishi",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rohanbavishi/9512af7a-f463-4f18-9edd-f4634cd69487/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "tobiasdurschmid",
      "Name": "Tobias Dürschmid"
    },
    {
      "Affiliation": "University of Passau",
      "Bio": "Prof. Dr. Sven Apel holds the Chair of Software Product Lines at the University of Passau, Germany. The chair is funded by the esteemed Emmy-Noether and Heisenberg Programs of the German Research Foundation (DFG). Prof. Apel received his Ph.D. in Computer Science in 2007 from the University of Magdeburg, Germany. His research interests include novel programming paradigms, software engineering and product lines, and formal and empirical methods. He is the author or co-author of over a hundred peer-reviewed scientific publications. Sven Apel is a member of the Young Academy of Europe and the IFIP Working Group 2.11 (Program Generation). He serves regularly in program committees of top-ranked international conferences, he is member of the editorial boards of IEEE Software and Empirical Software Engineering, and he will be program-committee co-chair of the 31st International Conference on Automated Software Engineering (ASE). His work has received awards by the Ernst-Denert Foundation and the Karin-Witte Foundation.",
      "Key": "svenapel",
      "Name": "Sven Apel",
      "URL": "http://www.infosun.fim.uni-passau.de/spl/apel/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/svenapel/b5c4fdbc-a895-4a13-a7b8-41881529ece1/small.jpg"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Bio": "I am a Professor of Computer Science at the Technical University of Darmstadt, Germany.\nMy research focuses on software development paradigms and tools.\nOn the paradigms side, I develop programming languages to enable the visions of \u201csoftware as a service (SaaS)\u201d and \u201csoftware product-lines\u201d by providing large-scale module concepts with built-in support for adaptability and extensibility.\nOn the tools side, I work on intelligent software-development environments that guide developers to increase the development productivity and the software quality. Such environment leverage web-based resources to automatically generate and recommend established programming rules and patterns; they also enable architects to explicitly specify such patterns to be enforced during development.\nI have (co)authored over 100 scientific publications in renowned publication venues in software engineering and programming languages. I regularly serve on steering committees, program committees, and editorial boards of top tier conferences and journals in software engineering and programming languages.",
      "Key": "miramezini",
      "Name": "Mira Mezini",
      "URL": "http://www.stg.tu-darmstadt.de/staff/mira_mezini/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/miramezini/8e9ce50d-5266-482f-8510-cf2da66e77ae/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "pascalweisenburger",
      "Name": "Pascal Weisenburger",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pascalweisenburger/bf663f00-24ac-4d12-919b-ef1e2ff8e128/small.jpg"
    },
    {
      "Affiliation": "TU Dresden, Germany",
      "Key": "sebastianrichly",
      "Name": "Sebastian Richly",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sebastianrichly/3aa4917d-daa0-40d5-9570-9716db1b5859/small.jpg"
    },
    {
      "Affiliation": "University of Minnesota",
      "Key": "lucaskramer",
      "Name": "Lucas Kramer"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "maartenvandercammen",
      "Name": "Maarten Vandercammen"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Key": "mikaelmayer",
      "Name": "Mikaël Mayer"
    },
    {
      "Affiliation": "Grinnell College, USA",
      "Key": "nikotakayesu",
      "Name": "Niko Takayesu"
    },
    {
      "Affiliation": "Steadfast Innovation, USA",
      "Key": "anthonylenz",
      "Name": "Anthony Lenz"
    },
    {
      "Affiliation": "Victoria University of Wellington, New Zealand",
      "Key": "stuartmarshall1",
      "Name": "Stuart Marshall"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "adamwelc",
      "Name": "Adam Welc",
      "URL": "http://www.adamwelc.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/adamwelc/b918a711-d2d2-4271-a53d-611eeb1001f8/small.jpg"
    },
    {
      "Affiliation": "Technical University of Košice, Slovakia",
      "Key": "matussulir",
      "Name": "Matúš Sulír"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "mickjordan",
      "Name": "Mick Jordan"
    },
    {
      "Affiliation": "University of Bremen",
      "Bio": "Martin Gogolla is professor for Computer Science at University of Bremen, Germany and is the head of the Research Group Database Systems. His research interests include software development with object-oriented approaches, formal methods in system design, semantics of languages, and formal speciﬁcation. Before joining University of Bremen he worked for the University of Dortmund and the Technical University of Braunschweig. His professional activities include: Teaching computer science; publications in journals and conference proceedings; publication of two books; speaker to university and industrial colloquia; referee for journals and conferences; organizer of workshops and conferences (e.g., the UML conference); member in international and national program committees; contributor to international computer science standards (OCL 2.0 as part of UML 2.0).",
      "Key": "martingogolla",
      "Name": "Martin Gogolla",
      "URL": "http://www.db.informatik.uni-bremen.de/~gogolla/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/martingogolla/b92ff4c4-e225-4a9b-a151-f742f1653b27/small.jpg"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Key": "winglam",
      "Name": "Wing Lam",
      "URL": "http://winglam2.web.engr.illinois.edu/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/winglam/b9c1be95-c751-4e40-9c5d-d57e6cf974cd/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Key": "sumitgulwani",
      "Name": "Sumit Gulwani",
      "URL": "http://research.microsoft.com/en-us/um/people/sumitg/index.html"
    },
    {
      "Affiliation": "",
      "Key": "betsypepels",
      "Name": "Betsy Pepels"
    },
    {
      "Affiliation": "Huawei America Lab",
      "Bio": "Peng Wu joined Huawei US research lab in 2014 as Chief Scientist on Multicore and Parallel System Software. She now serves as the director for the newly founded Programming Technologies Lab in the Central Software Institute of Huawei. As the first director of the Programming Technologies Lab, she is interested in all aspects of programming systems including programming models, (dynamic) language VMs, and intelligent programming services.\nBefore joining Huawei, Peng Wu was a research staff member at IBM T.J. Watson research center for more than a decade. During her IBM years, she has made major contribution to IBM\u2019s product C/C++/Fortran compilers and Java VM and has done extensive research on SIMD programming, scripting languages VM, trace compilation, transactional memory, and software-hardware co-design. She held more than 20 patents.\nPeng Wu received her PhD in computer science from University of Illinois, Urbana-Champaign in 2001. She continues to be actively engaged in the research community. She has co-authored more than 30 papers (including a best paper award in PACT\u201912) and has helped organize and served as PCs in many technical conferences. She is also an adjunct professor in the Department of Computer Science at University of Illinois, Urbana-Champaign since 2012. For more information, check out http://pengwu.wordpress.com/.",
      "Key": "pengwu",
      "Name": "Peng Wu",
      "URL": "http://pengwu.wordpress.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pengwu/bad8c16f-f285-424a-baaa-770a6f60bd5d/small.jpg"
    },
    {
      "Affiliation": "Technische Universität Braunschweig",
      "Key": "franzefurchtegott",
      "Name": "Franz E. Fürchtegott"
    },
    {
      "Affiliation": "University of Maryland at College Park",
      "Key": "soumyaindela",
      "Name": "Soumya Indela"
    },
    {
      "Affiliation": "Oracle Labs",
      "Key": "vojinjovanovic",
      "Name": "Vojin Jovanovic",
      "URL": "https://www.linkedin.com/in/vojin-jovanovic-71092357",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/vojinjovanovic/bc61756b-06f5-4e74-b109-73d5f6548e05/small.jpg"
    },
    {
      "Affiliation": "Stellenbosch University",
      "Bio": "Bernd Fischer is professor in the Division of Computer Science at Stellenbosch University. His research area is automated software engineering, in particular logic-based (in the broadest sense) techniques. He has worked on specification-based component reuse and program synthesis; his work now focusses on program verification, in particular software model checking. He previously worked at TU Braunschweig, NASA Ames Research Center, and University of Southampton.",
      "Key": "berndfischer",
      "Name": "Bernd Fischer",
      "URL": "http://www.cs.sun.ac.za/~bfischer/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/berndfischer/bced6ebc-71eb-467d-9b2e-da47ee61d832/small.jpg"
    },
    {
      "Affiliation": "MIT CSAIL",
      "Key": "armandosolarlezama",
      "Name": "Armando Solar-Lezama",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/armandosolarlezama/7befe52d-6968-4786-9841-408800f80c71/small.jpg"
    },
    {
      "Affiliation": "CWI",
      "Key": "joukestoel",
      "Name": "Jouke Stoel"
    },
    {
      "Affiliation": "ARC Technology Ltd.",
      "Key": "neilmather",
      "Name": "Neil Mather"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "svenkeidel",
      "Name": "Sven Keidel",
      "URL": "http://svenkeidel.de",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/svenkeidel/ab471b3c-b080-4e22-9fbf-bfd968239411/small.jpg"
    },
    {
      "Affiliation": "University of Maryland, College Park",
      "Bio": "Michael Hicks is a Professor in the Computer Science department and UMIACS at the University of Maryland, where he co-directs the laboratory for Programming Languages research (PLUM); he is the former Director of the Maryland Cybersecurity Center (MC2). \nHis research focuses on using programming languages and analyses to improve the security, reliability, and availability of software. He is perhaps best known for his work exploring dynamic software updating, which is a technique by which software can be updated without shutting it down. He has explored the design of new programming languages and analysis tools for helping programmers find bugs and software vulnerabilities, and for identifying suspicious or incorrect program executions. \nHis recent work has combined ideas from PL and cryptography, e.g., to ensure privacy preserving computations. He also leads the development of a new security-oriented programming contest, \u201cbuild-it, break-it, fix-it,\u201d which has been offered to the public and to students in his Coursera class on software security. He is the co-editor of the Programming Languages Enthusiast blog and Tweets at @michael_w_hicks.",
      "Key": "michaelhicks",
      "Name": "Michael Hicks",
      "URL": "http://www.cs.umd.edu/~mwh/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelhicks/be3b6b70-83c7-40b3-aa7a-0512363a80fb/small.jpg"
    },
    {
      "Affiliation": "University of California at Riverside, USA",
      "Key": "yongjianhu",
      "Name": "Yongjian Hu",
      "URL": "http://www.cs.ucr.edu/~yhu009",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yongjianhu/4fd1d7cc-abda-42f5-b323-4352b2b43522/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Bio": "Christian Wimmer is a researcher at Oracle Labs, working on the Maxine VM, the Graal compiler, the Truffle dynamic language infrastructure, as well as on other projects that involve dynamic compilation and optimizations. His research interests span from compilers, virtual machines, and secure systems to component-based software architectures. He received a Dr. techn. degree in computer science (advisor: Prof. Hanspeter Moessenboeck) from the Johannes Kepler University Linz, Austria. Before joining Oracle, he was a postdoctoral researcher at the Department of Computer Science of the University of California, Irvine, working with Prof. Michael Franz. Christian has been working on Truffle and Graal since the beginning of the projects.",
      "Key": "christianwimmer",
      "Name": "Christian Wimmer",
      "URL": "http://www.christianwimmer.at/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christianwimmer/beb116b5-723d-482b-8d54-f831e01ab501/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "thomassmith",
      "Name": "Thomas Smith"
    },
    {
      "Affiliation": "DCC, Universidad de Chile",
      "Key": "miguelcampusano",
      "Name": "Miguel Campusano",
      "URL": "http://pleiad.cl/people/mcampusa",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/miguelcampusano/ef1d754a-3d1e-458d-8a3c-4a28321c7499/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "karthiknarasimhan",
      "Name": "Karthik Narasimhan"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Key": "gabrielkonat",
      "Name": "Gabriël Konat",
      "URL": "https://www.linkedin.com/in/gabrielkonat",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gabrielkonat/cd028411-ffa4-49b0-ae34-3545bdde1caf/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "garthgibson",
      "Name": "Garth Gibson"
    },
    {
      "Affiliation": "Virginia Tech",
      "Key": "elitilevich",
      "Name": "Eli Tilevich",
      "URL": "http://people.cs.vt.edu/~tilevich",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/elitilevich/10b9c85c-8a75-4acb-a0fe-e00c91dd0bb6/small.jpg"
    },
    {
      "Affiliation": "University of Lisbon, Portugal",
      "Key": "vascovasconcelos",
      "Name": "Vasco Vasconcelos",
      "URL": "http://www.di.fc.ul.pt/~vv/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/vascovasconcelos/c0582914-8205-41c8-9553-a79cbac6bd20/small.jpg"
    },
    {
      "Affiliation": "Nanjing University",
      "Bio": "I am an associate professor in the Department of Computer Science &amp; Technology at Nanjing University, China. At the same time, I am also a research member of the Software Engineering Group (SEG) led by Prof. Xuandong Li , my Ph.D. supervisor. I received the B.Sc. (CUMT), M.Eng. (NJU) and Ph.D. (NJU) degrees in Computer Science in 2001, 2004 and 2009, respectively. From Sep 2007 to Sep 2008, I worked in the INRIA AtlanMod team led by Prof. Jean B&eacute;zivin, my co-supervisor in France. Currently, I am working at SnT of Luxembourg University as a visiting scholar in the SVV Lab led by Prof. Lionel Briand. The visiting period is from March to September, 2013.",
      "Key": "tianzhang",
      "Name": "Tian Zhang",
      "URL": "http://cs.nju.edu.cn/zhangtian/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tianzhang/c0e131a3-4aad-4b07-a14f-dcc1b66df99c/small.jpg"
    },
    {
      "Affiliation": "Karlsruhe Institute of Technology, Vincenz-Priessnitz-Str. 1, Karlsruhe, Germany",
      "Key": "stefankratochwil",
      "Name": "Stefan Kratochwil"
    },
    {
      "Affiliation": "EPFL",
      "Key": "jocelynboullier",
      "Name": "Jocelyn Boullier"
    },
    {
      "Affiliation": "University of Amsterdam, Netherlands",
      "Key": "boryanagoncharenko",
      "Name": "Boryana Goncharenko",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/boryanagoncharenko/ad5ff30a-32f0-4a36-90be-a1dd9a66bd99/small.jpg"
    },
    {
      "Affiliation": "Drexel University",
      "Key": "colingordon",
      "Name": "Colin Gordon",
      "URL": "https://cs.drexel.edu/~csgordon/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/colingordon/d990db47-1ece-4016-bce5-b764428bd0ee/small.jpg"
    },
    {
      "Affiliation": "Hewlett-Packard Labs",
      "Key": "duli1",
      "Name": "Du Li",
      "URL": "http://www.labs.hpe.com/people/du_li/"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "xilunwu",
      "Name": "Xilun Wu"
    },
    {
      "Affiliation": "IK4-IKERLAN, Spain",
      "Key": "salvadortrujillo",
      "Name": "Salvador Trujillo",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/salvadortrujillo/c286bfd1-73ca-4783-8f74-19ad9451074c/small.jpg"
    },
    {
      "Affiliation": "National University SOKENDAI, Japan",
      "Key": "zhenjianghu",
      "Name": "Zhenjiang Hu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zhenjianghu/c2919126-bd51-4f20-be2b-a3d0e5ce9743/small.jpg"
    },
    {
      "Affiliation": "Rio de Janeiro State University",
      "Key": "franciscosantanna",
      "Name": "Francisco Sant'Anna",
      "URL": "http://www.ceu-lang.org/chico",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/franciscosantanna/1f911a5d-2e99-444d-a3cc-07d7cd77804b/small.jpg"
    },
    {
      "Affiliation": "IMDEA Software Institute",
      "Key": "alessandragorla",
      "Name": "Alessandra Gorla",
      "URL": "http://software.imdea.org/~alessandra.gorla/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alessandragorla/5a9b6ab8-13ee-41f1-9ffd-71a73a890f02/small.jpg"
    },
    {
      "Affiliation": "feenk.com",
      "Bio": "Tudor G&icirc;rba obtained his PhD in 2005 from the University of Bern, and he acts as software environmentalist at feenk gmbh, a consulting and coaching company that he co-founded.\nHe leads the work on the Moose platform for software and data analysis, he founded the Glamorous Toolkit project for rethinking the IDE, and he is a board member of the Pharo live programming environment.\nHe advocates that software assessment must be recognized as a critical software engineering activity, and he authored the humane assessment method to help teams to rethink the way they manage large software systems and data sets.\nTudor also argues that storytelling should be prominent in software development.\nIn 2014, he won the prestigious Dahl-Nygaard Junior Prize for his work on modeling and visualization of evolution and interplay of large numbers of objects.",
      "Key": "tudorgirba",
      "Name": "Tudor Gîrba",
      "URL": "http://tudorgirba.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tudorgirba/c39658b2-c86f-4c62-a57d-57f158cc5b51/small.jpg"
    },
    {
      "Affiliation": "Oracle Labs",
      "Bio": "Chris Seaton is a Research Manager at the Virtual Machine Group in Oracle Labs, where he leads the work to implement Ruby using the next generation of Java Virtual Machine technology, and other projects.\nBefore this he completed a PhD at the University of Manchester under the supervision of Doctor Mikel Luj&aacute;n, where he researched programming languages and irregular parallelism. Before that, he completed an MEng at the University of Bristol on languages with mutable syntax and semantics.\nIn his spare time he used to develop an award winning medical app that is the first app regulated as a medical device in the UK, and ran a consultancy to help clients such as the NHS to develop revolutionary medical software.",
      "Key": "chrisseaton",
      "Name": "Chris Seaton",
      "URL": "http://chrisseaton.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/chrisseaton/c3defaf7-3438-49cb-901d-4fda6803e2b2/small.jpg"
    },
    {
      "Affiliation": "University of Auckland",
      "Key": "kellyblincoe",
      "Name": "Kelly Blincoe",
      "URL": "http://kblincoe.github.io/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kellyblincoe/382e92b4-5991-4963-aff5-84ff38bfdc72/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "keithchapman",
      "Name": "Keith Chapman",
      "URL": "http://keith-chapman.com/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/keithchapman/c4025cae-acc2-409e-a9f2-008fcc9e6b15/small.jpg"
    },
    {
      "Affiliation": "Université Catholique de Louvain, Belgium",
      "Key": "nicolaslaurent",
      "Name": "Nicolas Laurent",
      "URL": "http://norswap.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nicolaslaurent/06e7f9ad-35c2-411a-ab44-ca69618b95a8/small.jpg"
    },
    {
      "Affiliation": "University of Maryland, College Park",
      "Bio": "I am a Professor in the Computer Science Department and UMIACS at the University of Maryland, College Park. I am a member of the programming languages group at Maryland. The goal of my research is to develop practical tools and techniques to improve software quality. I am interested in programming languages, software engineering, advanced static type systems, scalable constraint-based analysis, and building tools that implement my ideas.",
      "Key": "jeffreysfoster",
      "Name": "Jeffrey S. Foster",
      "URL": "http://www.cs.umd.edu/~jfoster",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeffreysfoster/c4d2ef3c-70e2-49b8-b3e5-50b3b8ebe9f0/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "prasadkulkarni",
      "Name": "Prasad Kulkarni"
    },
    {
      "Affiliation": "University of Hildesheim",
      "Key": "klausschmid",
      "Name": "Klaus Schmid",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/klausschmid/c628865f-5fce-4271-94ae-71c978d79200/small.jpg"
    },
    {
      "Affiliation": " University of North Dakota",
      "Bio": "I am an assistant professor at University of North Dakota, and was previously a post-doctoral researcher and adjunct professor at Rensselaer Polytechnic Institute. I am currently the information director of the ACM Computing Surveys Journal. My main research interest is collaborative computational science using large scale distributed and high performance computing environments, with particular focus on evolutionary algorithms, neural networks, computer vision and simulation.  \n I have been the main developer and community liaison of the MilkyWay@Home volunteer computing project from the time of its creation in 2007. MilkyWay@Home uses volunteered computers to determine the origin and structure of the Milky Way Galaxy with the help of different evolutionary algorithms, maximum likelihood evaluation and n-body simulation. MilkyWay@Home has grown to over 25,000 volunteers from over 150 countries, who are contributing around 400 teraflops of computing power [boincstats.com], faster than many supercomputers. I have also implemented versions of this software which are also currently being used by astrophysicists on RPI's BlueGene/L supercomputer and various cluster computing environments.  \n In a continuation of my work interacting with the public and developing open source volunteer computing systems, I have also been working on other volunteer computing and crowd sourcing projects, such as Wildlife@Home, which combines crowd sourcing with volunteer computing to analyze avian nesting video to gain a better understanding of the behavior of different federally protected species, SubsetSum@Home which is studying a problem in theoretical computer science, and DNA@Home which is currently under development for finding protein binding sites in DNA and other bioinformatics purposes. These projects are all part of the Citizen Science Grid hosted here at the University of North Dakota.  \n I collaborate with professors Jim Higgins and Brandon Wild on the National General Aviation Database (NGAFID), a project for data mining aviation data to help improve safety in general aviation.  \n I have also been a main contributor in the development of both the compiler and runtime of SALSA, a programming language based on the actor model of computation. SALSA enables easy development of concurrent and transparently distributed applications by following actor semantics.",
      "Key": "travisdesell",
      "Name": "Travis Desell",
      "URL": "http://people.cs.und.edu/~tdesell/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/travisdesell/c6aed16b-79be-4d4e-9b0c-32cc624b0c4a/small.jpg"
    },
    {
      "Affiliation": "Stony Brook University",
      "Key": "rezaulchowdhury",
      "Name": "Rezaul Chowdhury"
    },
    {
      "Affiliation": "Google",
      "Bio": "My mission is to make program analysis usable at Google. I received my computer science Ph.D. from the University of California at Santa Cruz, where I worked with my advisors Cormac Flanagan and Jim Whitehead on a variety of research topics related to Programming Languages (PL), Software Engineering (SE) and Human Computer Interaction (HCI).",
      "Key": "caitlinsadowski",
      "Name": "Caitlin Sadowski",
      "URL": "http://research.google.com/pubs/CaitlinSadowski.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/caitlinsadowski/c6c542fb-8a78-4352-96fe-47661563e0ef/small.jpg"
    },
    {
      "Affiliation": "Siemens AG",
      "Key": "christophelsner",
      "Name": "Christoph Elsner",
      "URL": "https://www4.cs.fau.de/~elsner/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christophelsner/c97ec7c5-eb7a-4886-8c92-a000eabd9a1f/small.jpg"
    },
    {
      "Affiliation": "University of Bern, Switzerland",
      "Bio": "Andrei Chiș is a PhD student at University of Bern in the Software Composition Group. Prior to this, he got a master and a bachelor degree in software engineering from the \u201cPolitehnica\u201d University of Timișoara, under the supervision of Radu Marinescu, with theses in the area of software visualisation. \nHe maintains that development environments have to be moldable, that is, they have to be aware of the application under development and the developer\u2019s tasks and enable rapid and effective customization to new applications and development tasks. His current research focuses on build new solutions that make that vision possible as part of the Glamorous Toolkit team. He is also a contributor to Pharo, a live, Smalltalk-inspired programming language and environment, and Moose, a platform for software and data analysis.",
      "Key": "andreichis",
      "Name": "Andrei Chiş",
      "URL": "http://www.andreichis.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andreichis/c7504ba8-ff29-4d8a-87a1-09ead023e49a/small.jpg"
    },
    {
      "Affiliation": "National University SOKENDAI, Japan",
      "Key": "yongzhezhang",
      "Name": "Yongzhe Zhang",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yongzhezhang/f42789be-f292-4b93-8f61-fea1c9726707/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo",
      "Key": "ondrejlhotak",
      "Name": "Ondřej Lhoták",
      "URL": "http://plg.uwaterloo.ca/~olhotak/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ondrejlhotak/c8993376-f990-467f-ad5e-a3441eb2d6aa/small.jpg"
    },
    {
      "Affiliation": "University of Texas at Austin, USA",
      "Key": "sreepathipai",
      "Name": "Sreepathi Pai",
      "URL": "http://users.ices.utexas.edu/~sreepai/"
    },
    {
      "Affiliation": "Macquarie University, Australia",
      "Key": "franckcassez",
      "Name": "Franck Cassez"
    },
    {
      "Affiliation": "",
      "Key": "andreacorradi",
      "Name": "Andrea Corradi"
    },
    {
      "Affiliation": "University of Washington",
      "Bio": "Assistant Professor at UW",
      "Key": "zacharytatlock",
      "Name": "Zachary Tatlock",
      "URL": "https://homes.cs.washington.edu/~ztatlock/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zacharytatlock/87af1196-2d8d-4bd5-a692-018d3939a00f/small.jpg"
    },
    {
      "Affiliation": "Wolters Kluwer, Germany",
      "Bio": "Christian Dirschl is Chief Content Architect and head of Content Strategy and Architecture at Wolters Kluwer Germany. He is responsible for the content structures, metadata, taxonomies, and thesauri within Wolters Kluwer Germany. He manages text mining and automatic topical classification projects. He also represents Wolters Kluwer Germany in international research projects like LOD2, ALIGNED or WDAqua. Christian has worked with Wolters Kluwer Germany since 2001. Before that, he worked as an international IT consultant in several software companies. Christian has a Master of Arts degree in Information Science from the University of Regensburg. He is based in Munich, Germany.",
      "Key": "christiandirschl",
      "Name": "Christian Dirschl",
      "URL": "http://solutions.wolterskluwer.com/blog/author/christian-dirschl/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christiandirschl/c95461ae-8a1c-4075-af46-cbad86bb2b0a/small.jpg"
    },
    {
      "Affiliation": "Waseda University",
      "Key": "taichitomioka",
      "Name": "Taichi Tomioka"
    },
    {
      "Affiliation": "METOP Magdeburg, Germany",
      "Key": "andykenner",
      "Name": "Andy Kenner"
    },
    {
      "Affiliation": "ETH Zurich",
      "Bio": "I have worked on the software and architecture of a variety of experimental computer systems. As a graduate student at Stanford, I participated in the (Stanford) MIPS project. At Carnegie Mellon, I was part of the Warp, iWarp and Fx projects. My current projects focus on compilers and network-aware applications.",
      "Key": "thomasgross",
      "Name": "Thomas Gross",
      "URL": "http://www.lst.ethz.ch/people/trg.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/thomasgross/ca65de6e-569f-454e-a0b4-46a1e639cf16/small.jpg"
    },
    {
      "Affiliation": "Hewlett-Packard Enterprise",
      "Key": "shuyingliang1",
      "Name": "Shuying Liang",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shuyingliang1/38f391b4-c5da-48b6-bd94-d02611199572/small.jpg"
    },
    {
      "Affiliation": "eRights.org",
      "Bio": "Bill Tulloh was the founder of the Agorics Project at George Mason University, and has spent more than 20 years researching the intersection of economics and programming.",
      "Key": "billtulloh",
      "Name": "Bill Tulloh"
    },
    {
      "Affiliation": "National Institute of Informatics, Japan",
      "Key": "hsiangshangko",
      "Name": "Hsiang-Shang Ko",
      "URL": "https://researchmap.jp/joshko/?lang=english",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/hsiangshangko/9c5db602-95a9-413b-a2d8-a4121be09c2c/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "Manohar Jonnalagedda is a PhD student at the Programming Methods lab at EPFL. He is interested in embedded DSLs, their expressivity and their performance. He has worked on generative programming for parser combinators and optimized data structures.",
      "Key": "manoharjonnalagedda",
      "Name": "Manohar Jonnalagedda",
      "URL": "http://people.epfl.ch/manohar.jonnalagedda",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/manoharjonnalagedda/cae1f2b8-14b3-402b-b682-3d0e15aee0af/small.jpg"
    },
    {
      "Affiliation": "University of California, Santa Cruz",
      "Bio": "Chris is a postdoctoral researcher with the Expressive Intelligence Studio at UC Santa Cruz. She works at the intersection of AI and Programming Languages to create knowledge representation schema, design tools, and generative algorithms for interactive media.",
      "Key": "chrismartens",
      "Name": "Chris Martens",
      "URL": "http://www.cs.cmu.edu/~cmartens/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/chrismartens/cb326a42-477f-42a3-a9b5-9bdc389ebfcd/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "thomashaustin",
      "Name": "Thomas H. Austin"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "maltelochau",
      "Name": "Malte Lochau",
      "URL": "http://www.es.tu-darmstadt.de",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/maltelochau/cb4842c5-2704-4e42-8ba5-d527a23888fc/small.jpg"
    },
    {
      "Affiliation": "Raytheon Integrated Defense Systems USA",
      "Key": "johnslaby",
      "Name": "John Slaby",
      "URL": "https://www.linkedin.com/in/john-slaby-51b964",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johnslaby/cb746a95-880c-4e0c-9304-801ce918576b/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Key": "jasonhemann",
      "Name": "Jason Hemann",
      "URL": "http://hemann.pl"
    },
    {
      "Affiliation": "University of Maryland at College Park, USA",
      "Key": "davidvanhorn",
      "Name": "David Van Horn",
      "URL": "https://www.cs.umd.edu/~dvanhorn/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidvanhorn/cc0927db-2b84-4b7f-9d56-8f1deb64f524/small.jpg"
    },
    {
      "Affiliation": "University of Illinois at Urbana-Champaign",
      "Key": "shijiaoyuwen",
      "Name": "Shijiao Yuwen"
    },
    {
      "Affiliation": "Logicblox",
      "Key": "shanshanhuang",
      "Name": "Shan Shan Huang",
      "URL": "http://www.freeflygeek.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shanshanhuang/cc71e4e6-e6e9-42da-9f20-fed68b9f5abd/small.jpg"
    },
    {
      "Affiliation": "California Polytechnic State University, USA",
      "Key": "davidjanzen",
      "Name": "David S. Janzen"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "christiankastner",
      "Name": "Christian Kästner",
      "URL": "http://www.cs.cmu.edu/~ckaestne/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/christiankastner/564f35f8-0d62-4bb4-b2f6-e556ecfe9117/small.jpg"
    },
    {
      "Affiliation": "University of Kent",
      "Key": "markbatty",
      "Name": "Mark Batty",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/markbatty/cd72f168-235c-4de1-8152-62da106563c9/small.jpg"
    },
    {
      "Affiliation": "Faculty of Computer Science, UAIC, Iasi, Romania",
      "Key": "radumereuta",
      "Name": "Radu Mereuta"
    },
    {
      "Affiliation": "University of Chicago",
      "Key": "shanlu",
      "Name": "Shan Lu",
      "URL": "http://people.cs.uchicago.edu/~shanlu/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shanlu/ff4a1ab8-c007-457e-9a06-6740135b2289/small.jpg"
    },
    {
      "Affiliation": "Technion",
      "Key": "shiryadid",
      "Name": "Shir Yadid",
      "URL": "http://www.cs.technion.ac.il/~shiry/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shiryadid/ce07437c-7b6c-470a-98f4-b54ea265c668/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "guidowachsmuth",
      "Name": "Guido Wachsmuth",
      "URL": "https://www.linkedin.com/in/guidowachsmuth",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guidowachsmuth/ce5ac67e-8361-43ad-84f1-d246bdb8d2b6/small.jpg"
    },
    {
      "Affiliation": "Mines Douai",
      "Key": "nourybouraqadi",
      "Name": "Noury Bouraqadi"
    },
    {
      "Affiliation": "",
      "Key": "carmentorreslopez",
      "Name": "Carmen Torres Lopez"
    },
    {
      "Affiliation": "Microsoft",
      "Bio": "I am a Research Software Engineer at Microsoft, working on the Microsoft Program Synthesis using Examples (PROSE) framework. I obtained my PhD in 2015 at UC Davis, advised by Zhendong Su and Sumit Gulwani. My research is about developing novel and practical techniques to help improve the quality of critical software (e.g., compilers and database engines) and make programming accessible for end users. My work has led to the discovery of hundreds of bugs in GCC and LLVM, most of which have been fixed, and shipped in various Microsoft products.",
      "Key": "vule",
      "Name": "Vu Le",
      "URL": "http://vuminhle.com"
    },
    {
      "Affiliation": "",
      "Key": "siauchengkhoo",
      "Name": "Siau-Cheng Khoo",
      "URL": "http://www.comp.nus.edu.sg/~khoosc/"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Key": "elmervanchastelet",
      "Name": "Elmer van Chastelet",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/elmervanchastelet/55ccc9a8-327f-423a-ae20-01391b394a05/small.jpg"
    },
    {
      "Affiliation": "Magdeburg University",
      "Key": "mustafaalhajjaji",
      "Name": "Mustafa Al-Hajjaji"
    },
    {
      "Affiliation": "Google",
      "Key": "emmasoderberg",
      "Name": "Emma Söderberg",
      "URL": "http://research.google.com/pubs/EmmaSoederberg.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/emmasoderberg/2edc9865-4e98-41ee-a89e-1568465852e0/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Key": "dmitrypetrashko",
      "Name": "Dmitry Petrashko"
    },
    {
      "Affiliation": "University of Illinois",
      "Bio": "I am a Ph.D. Student in Computer Science at University of Illinois at Urbana-Champaign, working with Prof. Grigore Rosu on program transformation using rewriting.",
      "Key": "cosminradoi",
      "Name": "Cosmin Radoi",
      "URL": "http://cosmin.radoi.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/cosminradoi/d067606c-135e-40a6-97b9-cfb971ef2970/small.jpg"
    },
    {
      "Affiliation": "Yokohama National University, Japan",
      "Key": "kimiokuramitsu",
      "Name": "Kimio Kuramitsu"
    },
    {
      "Affiliation": "Korea University",
      "Key": "hakjoooh",
      "Name": "Hakjoo Oh"
    },
    {
      "Affiliation": "Runtime Verification, Inc.",
      "Key": "yilongli",
      "Name": "Yilong Li"
    },
    {
      "Affiliation": "MIT CSAIL, USA",
      "Key": "ivankuraj",
      "Name": "Ivan Kuraj",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ivankuraj/6a79beec-4cad-43a2-8ab0-2d344476a0dc/small.jpg"
    },
    {
      "Affiliation": "Samsung Research America",
      "Key": "manusridharan",
      "Name": "Manu Sridharan",
      "URL": "http://manu.sridharan.net",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/manusridharan/d15277d7-f9fc-4098-8372-6fbb3024b64d/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Key": "benjaminlivshits",
      "Name": "Ben Livshits",
      "URL": "http://research.microsoft.com/en-us/um/people/livshits/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/benjaminlivshits/d1757c2f-5dba-4a15-b39b-9bd4eab16c3a/small.jpg"
    },
    {
      "Affiliation": "Seattle University",
      "Key": "richardleblanc",
      "Name": "Richard Leblanc",
      "URL": "https://www.linkedin.com/in/richleblanc",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/richardleblanc/d193f963-8c58-4fe7-9273-855d8948f14b/small.jpg"
    },
    {
      "Affiliation": "University of Haifa",
      "Bio": "Education \n \n 2013 - Present: PhD Candidate, The University of Haifa, Israel. \n 2008 - 2012: MSc in Computer Science, The Open University of Israel. \n 1996 - 2000: BA in Computer Science, The Technion - Israel Institute of Technology. \n\nProfessional Experience:\nI currently work part time as a Software Architect in GE Healthcare. I previously held software engineering jobs in the Telecom and Semiconductor Equipment industries.",
      "Key": "boazrosenan",
      "Name": "Boaz Rosenan",
      "URL": "https://cloudalion.org/about/boazs-page/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/boazrosenan/3e5b46c9-da0c-4cdc-b3f7-aebfdcf40ab2/small.jpg"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "lucasbrutschy1",
      "Name": "lucas brutschy"
    },
    {
      "Affiliation": "Innopolis University",
      "Key": "albertosillitti",
      "Name": "Alberto Sillitti",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/albertosillitti/4e4196f0-cbc4-40d4-8d98-7b5fbe78bf2b/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh",
      "Key": "philipwadler",
      "Name": "Philip Wadler",
      "URL": "http://homepages.inf.ed.ac.uk/wadler/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/philipwadler/d24c1dce-db51-4de2-afbc-f058d379fa82/small.jpg"
    },
    {
      "Affiliation": "Lund University",
      "Key": "niklasfors",
      "Name": "Niklas Fors",
      "URL": "http://cs.lth.se/niklas_fors"
    },
    {
      "Affiliation": "Julia SRL, Italy",
      "Bio": "Pietro has been a research scientist at Julia since February 2016. He is currently working on the application of Julia to the analysis of CIL (.Net bytecode) programs obtained from the compilation of C# code. Pietro\u2019s main research interests are:\n\u2022Static analysis via abstract interpretation \u2022Java bytecode and CIL/MSIL \u2022Mobile software, and in particular Android and iOS applications \u2022Multithreaded programs \u2022The Scala programming language\nPietro was a Research Staff Member in the group of Mobile Enterprise Software led by Marco Pistoia from July 2013 to December 2015. \nBefore joining IBM Research, Pietro was a lecturer at ETH of Zurich in the Programming methodology group under the supervision of Peter Mueller from April 2009 to July 2013.\nPreviously, he obtained the PhD degree in Computer Science from the Ecole Polytechnique of Paris and the Universita\u2019 Ca\u2019 Foscari of Venice on May, 22nd 2009. His PhD thesis directors were Radhia Cousot and Agostino Cortesi. I defended my PhD thesis on May 22nd, 2009 at the Ecole Normale Superiore. In addition, he was an intern at Microsoft Research in Redmond in the PLA group from August 20th 2007 to November 9th 2007 under the supervision of Francesco Logozzo.",
      "Key": "pietroferrara",
      "Name": "Pietro Ferrara",
      "URL": "http://www.pietro.ferrara.name/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pietroferrara/d2a22b90-ff6a-4668-8ec6-4f760f0c7379/small.jpg"
    },
    {
      "Affiliation": "Politecnico di Milano, Italy",
      "Key": "marcobrambilla",
      "Name": "Marco Brambilla",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marcobrambilla/26ec0bf8-70cb-435d-91a4-1b40f979e4c1/small.jpg"
    },
    {
      "Affiliation": "MetaCase, Finland",
      "Key": "juhapekkatolvanen",
      "Name": "Juha-Pekka Tolvanen",
      "URL": "http://www.metacase.com/blogs/jpt/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/juhapekkatolvanen/d3841958-8eb1-48ab-a8e4-b76f6c322266/small.jpg"
    },
    {
      "Affiliation": "University of Oslo",
      "Key": "birgermllerpedersen",
      "Name": "Birger Møller-Pedersen"
    },
    {
      "Affiliation": "Raincode, Belgium",
      "Key": "volodymyrblagodarov",
      "Name": "Volodymyr Blagodarov"
    },
    {
      "Affiliation": "McGill University",
      "Bio": "I am a Professor of Computer Science at McGill University, Montreal, Canada. I hold the Canada Research Chair in Compiler Tools and Techniques and am a Fellow of the ACM and a Fellow of the Royal Society of Canada.\nHistorically my main area of research area has been the development of compilers for object-oriented and aspect-oriented programming languages. I also have a long-standing interest in pointer analysis and program analysis frameworks.\nMy most recent research focus is on how to bring our compiler expertise to the world of scientists and engineers, and in particular how to support effective and efficient programming in the dynamic programming language MATLAB. To kick-start research in this area we are building a toolkit, McLAB (http://www.sable.mcgill.ca/mclab/), to support language extensions, compiler optimizations and transformations, virtual machines and JITs, and program understanding/refactoring tools for MATLAB and extensions of MATLAB.\nAn important facet of my work is that new research ideas should be developed along with software infrastructures to test those ideas. This has led to the development of many publicly available software frameworks, more details can be found on the group\u2019s web site at http://www.sable.mcgill.ca . Our research group hopes that other groups will use their software, and will contribute new pieces back them so that all compiler groups can benefit from the work.",
      "Key": "lauriehendren",
      "Name": "Laurie Hendren",
      "URL": "http://www.sable.mcgill.ca/~hendren/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lauriehendren/cbe09b6f-7703-4f46-8bd8-a6cdf3425cc8/small.jpg"
    },
    {
      "Affiliation": "CDG Labs",
      "Key": "robertkrahn",
      "Name": "Robert Krahn",
      "URL": "http://robert.kra.hn/"
    },
    {
      "Affiliation": "",
      "Bio": "Professor of Computer Science at Halmstad University and holds a part-time appointment as a research professor at University of Houston. He is interested in the design, semantics, and implementation of programming and modeling languages. His current research focus is on modeling, rigorous simulation, and verification of cyber-physical systems, and leading the development of the Acumen modeling language. Taha is credited with developing the idea of multi-stage programming (or \u201cstaging\u201d for short), and is the designer of several systems based on it, including MetaOCaml, ConCoqtion, Java Mint, the Verilog Preprocessor, RT-FRP, and E-FRP. He contributed to several other programming languages innovations, including statically typed macros, tag elimination, tagless staged interpreters, event-driven functional reactive programming (E-FRP), the notion of exact software design, and gradual typing. Broadly construed, his research interests include cyber-physical systems, software engineering, programming languages, and domain-specific languages. He has chaired and edited the proceedings of several conferences and workshops published by Springer and by the ACM. According to Google Scholar, Taha\u2019s publications had over 3,000 citations and an h-index of 28. Taha has been the principal investigator on a number of research awards and contracts from the National Science Foundation (NSF), Semi-conductor Research Consortium (SRC), and Texas Advanced Technology Program (ATP). He received an NSF CAREER award to develop Java Mint. He founded the ACM Conference on Generative Programming and Component Engineering (GPCE), the IFIP Working Group on Program Generation (WG 2.11), and the Middle Earth Programming Languages Seminar (MEPLS). Taha chaired the 2009 IFIP Working Conference on Domain Specific Languages. He is the founding director of the Halmstad Colloquium.",
      "Key": "walidtaha",
      "Name": "Walid Taha",
      "URL": "http://www.cs.rice.edu/~taha/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/walidtaha/d40332d7-e976-47a9-8319-9b34259b5a73/small.jpg"
    },
    {
      "Affiliation": "METOP Magdeburg, Germany",
      "Key": "christopherkruczek",
      "Name": "Christopher Kruczek"
    },
    {
      "Affiliation": "Purdue University",
      "Bio": "Besides many other teaching awards, Dr. Gustavo Rodriguez-Rivera was awarded the \u201cBest Teacher in the School Of Science in 2014\u201d. Gustavo has more than 20 years of teaching experience. In his classes He emphasizes Systems Programming and Software Engineering. Gustavo\u2019s main areas of research are Operating Systems, Computer Networks, Memory Management, Embedded, and Real-Time Systems. He is also interested in Numerical Analysis, Computer Graphics, Computer Vision, Signal Processing, Artificial Intelligence, Data Structures, and Speech Recognition.\nSelected Publications Kim, S., Adams, D.E., Sohn, H., Rodriguez-Rivera, G., Myrent, N., Bond, R., Vitek, J., Carr, S., Grama, A., and Meyer, J.,, &quot;\u201cCrack Detection Technique for Operation Wind Turbine Blades Using Vibro-Acoustic Modulation,\u201d&quot;, (invited paper) (2014), Structural Health Monitoring: An International Journal,, Acknowledgements. Support for this work is provided by the National Science Foundation under grant CNS 1136045\nGustavo Rodriguez-Rivera, Mike Spertus, and Charles Fiterman, \u201cConservative Garbage Collection for General Memory Allocators\u201d, ISMM2000 International Symposium on Memory Management, Gustavo Rodriguez-Rivera and Vince Russo, \u201cNonintrusive Cloning Garbage Collection with Stock Operating System Support\u201d, Software-Practice and Experience , Vol 27, No. 8, August 1997",
      "Key": "gustavorodriguezrivera",
      "Name": "Gustavo Rodriguez-Rivera",
      "URL": "http://www.cs.purdue.edu/homes/grr",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gustavorodriguezrivera/d40e7f3f-cc98-4a7d-af9a-5b5d5dc0ba43/small.jpg"
    },
    {
      "Affiliation": "University of Chile",
      "Bio": "I am a Full Professor at the University of Chile and a member of the PLEAID laboratory, which is dedicated to research on new software development techniques.",
      "Key": "etanter",
      "Name": "Éric Tanter",
      "URL": "http://pleiad.cl/people/etanter",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/etanter/d499b2e7-1858-4c83-81ae-8719b3c828ca/small.jpg"
    },
    {
      "Affiliation": "NXP, Netherlands",
      "Key": "peterkourzanov",
      "Name": "Peter Kourzanov",
      "URL": "https://www.linkedin.com/in/pjotr-kourzanov-18aa893",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/peterkourzanov/d55567a5-9333-467f-ae6d-46253447186e/small.jpg"
    },
    {
      "Affiliation": "codecentric AG",
      "Key": "markushauck",
      "Name": "Markus Hauck",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/markushauck/9620517f-46c4-48b3-93fa-f6f978e00edb/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Bio": "Eelco Visser is Antoni van Leeuwenhoek Professor of Computer Science at Delft University of Technology. He received a master\u2019s and doctorate in computer science from the University of Amsterdam in 1993 and 1997, respectively. Previously he served as postdoc at the Oregon Graduate Institute, as Assistant Professor at Utrecht University, and as Associate Professor at TU Delft.\nHis research interests include programming languages, software language engineering, domain-specific programming languages, program transformation, software security, and interaction design. With his students he has designed and implemented the Spoofax language workbench, as well as many domain-specific languages, including DSLs for syntax definition (SDF), program transformation (Stratego), software deployment (Nix), web application development (WebDSL), and mobile phone applications (mobl). He is the lead developer of the researchr bibliography management system and the WebLab learning management system.",
      "Key": "eelcovisser",
      "Name": "Eelco Visser",
      "URL": "http://eelcovisser.org",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/eelcovisser/d5663977-6b89-48d2-ad4a-8e2a8e4a4493/small.jpg"
    },
    {
      "Affiliation": "University of L'Aquila",
      "Key": "davidediruscio",
      "Name": "Davide Di Ruscio",
      "URL": "http://www.di.univaq.it/diruscio",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/davidediruscio/d5807dfc-dcc9-43e9-a1a4-f4c70dd30039/small.jpg"
    },
    {
      "Affiliation": "TU Braunschweig",
      "Key": "tobiasrunge",
      "Name": "Tobias Runge"
    },
    {
      "Affiliation": "Institute of Heritage Sciences (Spanish National Research Council), Spain",
      "Bio": "I\u2019m Software Engineering and Intelligent Systems MSc. I received my Computer Science Ph.D. in 2016, at the Universitat Polit&egrave;cnica de Val&egrave;ncia, Spain. My main research interests are languages, ontologies and semantics, computational linguistics, information visualization, machine learning and TDM (Textual and Data Mining).",
      "Key": "patriciamartinrodilla",
      "Name": "Patricia Martin-Rodilla",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/patriciamartinrodilla/e87d0ac0-98b3-4292-b69c-f5327ba945e0/small.jpg"
    },
    {
      "Affiliation": "Korea University",
      "Bio": "Mina Lee is a student preparing to apply for Ph.D. programs this year, who is deeply interested in program synthesis, automatic programming, and computer-aided education. As an undergrad, she worked as a research intern at the Programming Research Laboratory at Korea University where she just graduated with a bachelor\u2019s degree in Computer Science this August.",
      "Key": "minalee",
      "Name": "Mina Lee",
      "URL": "https://minalee.info",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/minalee/78a301fd-a970-4782-9060-a3035247f32e/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Key": "casperbachpoulsen",
      "Name": "Casper Bach Poulsen",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/casperbachpoulsen/2cddd6a9-d920-4f73-9fcf-f4d9462eb0e3/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel",
      "Key": "janwillemswalens",
      "Name": "Janwillem Swalens"
    },
    {
      "Affiliation": "University of Antwerp, Belgium",
      "Key": "joachimdenil",
      "Name": "Joachim Denil"
    },
    {
      "Affiliation": "University of Washington",
      "Bio": "I am a PhD student in the Computer Science and Engineering department at the University of Washington. My interests are in programming languages and applications of PL techniques to systems.",
      "Key": "jamesrwilcox",
      "Name": "James R. Wilcox",
      "URL": "http://homes.cs.washington.edu/~jrw12",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jamesrwilcox/d79a0523-ab5f-4557-84f1-84e4efb3462a/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "michalchalmoviansky",
      "Name": "Michal Chalmovianský"
    },
    {
      "Affiliation": "Mines Nancy",
      "Key": "pierreetiennemoreau",
      "Name": "Pierre-Etienne Moreau",
      "URL": "https://sites.google.com/a/depinfonancy.net/pem/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/pierreetiennemoreau/d7c5bc49-3c2c-40e9-a06a-ecb5de985c7d/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "christophermeiklejohn1",
      "Name": "Christopher Meiklejohn"
    },
    {
      "Affiliation": "University of Toronto",
      "Bio": "I am Professor of the Faculty of Arts and Science at the Department of Computer Science, University of Toronto, Canada. My main interests are in Software Engineering and in particular in Automated Verification and Model Management.\nMy main research interests are in the use of formal methods to improve quality of software. These include: scalable automated verification techniques, including model-checking and theorem-proving; easy to read and review formal specification languages; verification of protocols; non-classical logics; reasoning under inconsistency. I am also interested in all aspects of Model Management, especially when parts of the same model are being developed distributively, and thus problems of matching common parts, identifying relationships between these parts, and merging parts to understand the whole, are most essential.\nI am also a member of Computer Systems Research Group (CSRG) and an adjunct member of the Department of Electrical and Computer Engineering.",
      "Key": "marshachechik",
      "Name": "Marsha Chechik",
      "URL": "http://www.cs.toronto.edu/~chechik/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marshachechik/d84c3063-7cb0-4dc9-b576-4159c2173c9e/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Key": "feliennehermans",
      "Name": "Felienne Hermans",
      "URL": "http://www.felienne.com",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/feliennehermans/d882074d-ed55-4e2b-a5cf-1d8008655cf5/small.jpg"
    },
    {
      "Affiliation": "Katholieke Universiteit Leuven",
      "Key": "wouterjoosen",
      "Name": "Wouter Joosen"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "zhaoyiluo",
      "Name": "Zhaoyi Luo",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zhaoyiluo/d8bc0b18-6f07-4df7-9552-ceb41e21dc46/small.jpg"
    },
    {
      "Affiliation": "Conpleks Innovation",
      "Key": "sorinadam",
      "Name": "Sorin Adam"
    },
    {
      "Affiliation": "Korea University",
      "Key": "sunbeomso",
      "Name": "Sunbeom So"
    },
    {
      "Affiliation": "UT Austin",
      "Bio": "Isil Dillig is an assistant professor of computer science at UT Austin. She obtained all her degrees (BS, MS, PhD) in computer science from Stanford University. Prior to joining UT Austin, she was a researcher at Microsoft Research and an assistant professor at the College of William &amp; Mary.",
      "Key": "isildillig",
      "Name": "Isil Dillig",
      "URL": "http://www.cs.utexas.edu/~isil/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/isildillig/d96cd47f-e3ab-444b-9479-0c3a5546b43d/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "danieljackson",
      "Name": "Daniel Jackson",
      "URL": "http://people.csail.mit.edu/dnj/"
    },
    {
      "Affiliation": "University of Minnesota",
      "Key": "tedkaminski",
      "Name": "Ted Kaminski"
    },
    {
      "Affiliation": "University of Glasgow, UK",
      "Key": "alauravoinea",
      "Name": "A. Laura Voinea"
    },
    {
      "Affiliation": "University of Bologna",
      "Key": "paolociancarini",
      "Name": "Paolo Ciancarini",
      "URL": "http://www.cs.unibo.it/~cianca/"
    },
    {
      "Affiliation": "Macquarie University, Australia",
      "Bio": "My interests are in software design and development, programming language design and implementation, language processing, and programming environments and tools. The main focus of my research at present is the Kiama project that is investigating language embedding using language processing in the Scala language as a major case study. For many years I have also been a co-investigator on the Eli language processor generation project&quot; with colleagues from the University of Colorado, Boulder and Paderborn University. I am the leader of the Programming Languages Research Group (PLRG) in the Department of Computing at Macquarie University.",
      "Key": "tonysloane",
      "Name": "Tony Sloane",
      "URL": "https://wiki.mq.edu.au/display/plrg/Anthony+Sloane",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tonysloane/db7a7788-ab4e-446d-a081-2da2fe2d4052/small.jpg"
    },
    {
      "Affiliation": "MIT CSAIL",
      "Key": "adamchlipala",
      "Name": "Adam Chlipala",
      "URL": "http://adam.chlipala.net/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/adamchlipala/def72d03-2975-4c5a-a726-e8a944b77dc9/small.jpg"
    },
    {
      "Affiliation": "University of California, Irvine",
      "Key": "zhiqiangzuo",
      "Name": "Zhiqiang Zuo",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zhiqiangzuo/deb374c0-3456-4c74-b48d-8f855a64643c/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Bio": "Programming languages PhD student at VUW working on Grace.",
      "Key": "timothyjones",
      "Name": "Timothy Jones",
      "URL": "http://homepages.ecs.vuw.ac.nz/~tim",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/timothyjones/dc6056d8-db74-43cd-9ce0-c23924735c0b/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Key": "jenslincke",
      "Name": "Jens Lincke"
    },
    {
      "Affiliation": "Deakin University",
      "Bio": "I am a Research Fellow at Faculty of Engineering and Built Environment, School of Information Technology. \nI am currently working with John Grundy.\nI have been previously working with Lars Grunske and M. Iqbal Saripan.",
      "Key": "imanavazpour",
      "Name": "Iman Avazpour",
      "URL": "https://sites.google.com/site/iavazpour/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/imanavazpour/dc90abb7-b334-40e4-b300-39b21d54fc9b/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "S&eacute;bastien Doeraene is a compiler/runtime systems hacker and a Scala enthusiast. He is a PhD student at EPFL in the programming methods laboratory (LAMP) led by Martin Odersky, also known as the Scala team, where he designs and develops Scala.js. He holds bachelor and master degrees in computer science engineering from Universit&eacute; Catholique de Louvain in Belgium. When he is not busy coding, he sings in choirs and a cappella groups, or he plays unicycle basketball.",
      "Key": "sebastiendoeraene",
      "Name": "Sébastien Doeraene",
      "URL": "http://lampwww.epfl.ch/~doeraene/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sebastiendoeraene/dc9b956e-1a39-4aab-bdb6-bb055bc1379b/small.jpg"
    },
    {
      "Affiliation": "Eindhoven University of Technology",
      "Key": "anamariasutii1",
      "Name": "Ana Maria Sutii"
    },
    {
      "Affiliation": "University of California, Berkeley",
      "Bio": "Ali Jannesari is a research scientist at University of California, Berkeley. His research focuses on program analysis, parallelism and software engineering. He is particularly interested in multicore/manycore systems and utilizing parallel computation for different software domains and applications. He is actively working on software engineering for parallel systems including automated testing and debugging, parallelism discovery and parallelization methods, auto-tuning, and parallel programming models. Ali has a PhD in computer science from Karlsruhe Institute of Technology, Germany. Contact him at jannesari@eecs.berkeley.edu.",
      "Key": "alijannesari",
      "Name": "Ali Jannesari",
      "URL": "https://www.eecs.berkeley.edu/~jannesari/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alijannesari/dd130349-a793-4892-9fd5-294ba5ffc25d/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology, Japan",
      "Bio": "Hidehiko Masuhara is a Professor of Mathematical and Computing Science, Tokyo Institute of Technology since April 2013. He received his B.S., M.S., and Ph.D. in Computer Science from Department of Information Science, University of Tokyo in 1992, 1994, and 1999, respectively, and served as an assistant professor, lecturer, and associate professor at Graphics and Computer Science, Graduate School of Arts and Sciences, University of Tokyo from 1995 until 2013.",
      "Key": "hidehikomasuhara",
      "Name": "Hidehiko Masuhara",
      "URL": "http://prg.is.titech.ac.jp/people/masuhara/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/hidehikomasuhara/dd15e27c-01a2-4793-a539-5f6008c5d3fa/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "bernardschaetz",
      "Name": "Bernard schaetz"
    },
    {
      "Affiliation": "Technical University of Košice, Slovakia",
      "Key": "jaroslavporuban",
      "Name": "Jaroslav Porubän"
    },
    {
      "Affiliation": "TU Delft",
      "Bio": "Andy Zaidman is an assistant professor at Delft University of Technology, the Netherlands. He received his MSc and PhD from the University of Antwerp, Belgium. Since 2006 he has been at Delft University of Technology. \nHis research interests include software testing, software evolution and software analytics. He is an active member of the research community and has been involved in the organisation of conferences such as ICSME, WCRE (general chair &amp; program chair), CSMR, VISSOFT (program chair) and MSR (general chair). in 2013 he received a prestigious NWO Vidi career grant from NWO, the Dutch science foundation, for his work in the area of software testing and software evolution. In 2015 he gave a talk a TEDxDelft \u201cMaking Testing Fun\u201d.",
      "Key": "andyzaidman",
      "Name": "Andy Zaidman",
      "URL": "http://www.st.ewi.tudelft.nl/~zaidman/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andyzaidman/b2ca5e17-5e32-4d5c-8d71-c90e80d5b921/small.jpg"
    },
    {
      "Affiliation": "CWI & University of Groningen",
      "Key": "tijsvanderstorm",
      "Name": "Tijs van der Storm",
      "URL": "http://www.cwi.nl/~storm/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tijsvanderstorm/de647db5-77ef-4f7c-860f-c4bf06944044/small.jpg"
    },
    {
      "Affiliation": "University of Lugano, Switzerland",
      "Key": "luismastrangelo",
      "Name": "Luis Mastrangelo",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/luismastrangelo/de90bc90-7067-4940-b8e4-c80f298925c6/small.jpg"
    },
    {
      "Affiliation": "Tokyo Institute of Technology, Japan",
      "Key": "kensukesawada",
      "Name": "Kensuke Sawada"
    },
    {
      "Affiliation": "Tokyo City University",
      "Key": "nobuhikoogura",
      "Name": "Nobuhiko Ogura",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nobuhikoogura/93469c11-201e-445c-8138-4e1325cce699/small.jpg"
    },
    {
      "Affiliation": "Ohio State University",
      "Key": "michaelbond",
      "Name": "Michael Bond",
      "URL": "http://www.cse.ohio-state.edu/~mikebond",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelbond/df915bee-c4ca-4a43-8ed4-abb56211912a/small.jpg"
    },
    {
      "Affiliation": "University of West Georgia, USA",
      "Bio": "I am an Assistant Professor of Computer Science at the University of West Georgia. I earned both my Ph.D. and M.S. in Computer Science from the University of Alabama. While completing my Ph.D., I was funded as part of an NSF grant (NSF CE21). As part of this grant, I assisted with a variety of activities including developing curriculum for a CS Principles course, running professional development workshops for teachers across Alabama, as well as developing material and running an onlince course with over 900 teachers including teachers from 47 states across the US and over 25 countries. I was previously funded by a fellowship from the Department of Education (GAANN). As a GAANN fellow I taught undergraduate courses and performed research in the area of Software Engineering focusing on investigating Debugging for Model Transformations. I graduated with a M.S. in Computer Science from the University of Alabama in May of 2012. While working toward my M.S., I was funded by an Assistantship provided by Text-to-Art, an NSF grant. My primary responsibilities for this grant included developing course materials for a CS2 course focused on taking textual input then producing artistic output and aiding the organization and management of outreach activities in local elementary schools with over 40 elementary students per semester being mentored by 10-15 university students. While working toward my M.S. and Ph.D., I was a member of the Software Engineering Group at the University of Alabama.",
      "Key": "jonathancorley",
      "Name": "Jonathan Corley",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathancorley/df944fbf-b800-4c3f-9a3c-5dd0f731037a/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Bio": "I am an Assistant Professor in the Department of Computer Science at Indiana University.\nResearch Interests: my research focuses on the design and analysis of software and programming languages. I am particularly interested in how programs grow from prototype scripts to robust software, and how programming language design can support this process. My research concerns type systems, software contracts, modularity, and extensibility. I\u2019m currently working with the DARPA CRASH program on Racket and with Mozilla Labs on JavaScript.",
      "Key": "samtobinhochstadt",
      "Name": "Sam Tobin-Hochstadt",
      "URL": "http://samth.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/samtobinhochstadt/dfbccf97-33bb-4e7e-8fd1-0bfa0c622949/small.jpg"
    },
    {
      "Affiliation": "KTH Royal Institute of Technology, Sweden",
      "Key": "simongeries",
      "Name": "Simon Geries"
    },
    {
      "Affiliation": "University of Luxembourg",
      "Key": "jabiermartinez",
      "Name": "Jabier Martinez",
      "URL": "https://sites.google.com/site/jabiermartinezwebsite/home",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jabiermartinez/e053123c-a855-41f3-9505-e79c63a0de08/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Bio": "Rishabh Singh is a researcher at Microsoft Research, Redmond. His research interests span the areas of programming languages, formal methods, and machine learning. His recent work has focused on building systems based on program synthesis for making programming accessible to end-users and students. He obtained his PhD in Computer Science from MIT in 2014, and was awarded the MIT\u2019s George M. Sprowls Award for Best PhD Dissertation in Computer Science. He was a Microsoft Research PhD fellow and winner of MIT\u2019s William A. Martin Outstanding Master\u2019s thesis Award. He obtained his BTech in Computer Science from IIT Kharagpur in 2008, where he was awarded the Institute Silver Medal and Bigyan Sinha Memorial Award.",
      "Key": "rishabhsingh",
      "Name": "Rishabh Singh",
      "URL": "http://people.csail.mit.edu/rishabh/website/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/rishabhsingh/4a1b1d69-0e64-4fe5-bce3-055fdeb94b32/small.jpg"
    },
    {
      "Affiliation": "iMinds-DistriNet",
      "Key": "majidmakki",
      "Name": "Majid Makki"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "I\u2019m a PhD student at EPFL. My interested areas are type systems, effect systems, programming languages, and various logics.",
      "Key": "fengyunliu",
      "Name": "Fengyun Liu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/fengyunliu/7967ca32-789c-44f7-a256-c5eae78909c1/small.jpg"
    },
    {
      "Affiliation": "Fernuniversität in Hagen",
      "Key": "jorghagemann",
      "Name": "Jörg Hagemann"
    },
    {
      "Affiliation": "San Jose State University",
      "Key": "prakasamkannan",
      "Name": "Prakasam Kannan"
    },
    {
      "Affiliation": "ETH Zurich, Switzerland",
      "Key": "veselinraychev",
      "Name": "Veselin Raychev",
      "URL": "http://www.srl.inf.ethz.ch/raychev.php",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/veselinraychev/e168d97a-2158-43e5-b658-58c63360e883/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Key": "nicolasstucki",
      "Name": "Nicolas Stucki",
      "URL": "https://github.com/nicolasstucki",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nicolasstucki/4dfca9be-ecc5-4acb-a0bf-078dfb4abbf0/small.jpg"
    },
    {
      "Affiliation": "Israel Institute of Technology",
      "Bio": "I am an Associate Professor in the Department of Computer Science at Technion - Israel Institute of Technology, Israel.\nResearch Interests: Software engineering, in particular: aspects related to the object-oriented paradigm, programming languages and parsing.",
      "Key": "yossigil",
      "Name": "Yossi Gil",
      "URL": "http://www.cs.technion.ac.il/~yogi/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yossigil/e1ae7488-04b0-4892-a012-fb81b483a414/small.jpg"
    },
    {
      "Affiliation": "Cornell University",
      "Bio": "Nate Foster is an Associate Professor of Computer Science at Cornell University. The goal of his research is to develop languages and tools that make it easy for programmers to build secure and reliable systems. His current work focuses on the design and implementation of languages for programming software-defined networks. In the past he has also worked on bidirectional languages (also known as \u201clenses\u201d), database query languages, data provenance, type systems, mechanized proof, and formal semantics. He received a PhD in Computer Science from the University of Pennsylvania, an MPhil in History and Philosophy of Science from Cambridge University, and a BA in Computer Science from Williams College. His awards include a Sloan Research Fellowship, an NSF CAREER Award, a Most Influential POPL Paper Award, a Tien \u201972 Teaching Award, a Google Research Award, a Yahoo! Academic Career Enhancement Award, a Cornell Engineering Research Excellence Award, and the Morris and Dorothy Rubinoff Award.",
      "Key": "natefoster",
      "Name": "Nate Foster",
      "URL": "http://www.cs.cornell.edu/~jnfoster/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/natefoster/fc11e437-6a66-45e4-b6a3-c4b879fa2e7c/small.jpg"
    },
    {
      "Affiliation": "INRIA Rennes",
      "Key": "gersonsunye",
      "Name": "Gerson Sunyé"
    },
    {
      "Affiliation": "University of Turin",
      "Bio": "Ferruccio Damiani is an Associate Professor at the University of Turin.",
      "Key": "ferrucciodamiani",
      "Name": "Ferruccio Damiani",
      "URL": "http://www.di.unito.it/~damiani/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ferrucciodamiani/e28b3fc3-923a-4cdc-9451-8b4058a3b1ae/small.jpg"
    },
    {
      "Affiliation": "Dipartimento di Statistica, Informatica, Applicazioni \u2018Giuseppe Parenti\u2019 (DISIA)",
      "Key": "lorenzobettini",
      "Name": "Lorenzo Bettini",
      "URL": "http://www.lorenzobettini.it/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/lorenzobettini/e292d8af-46b6-4ecb-99dc-2292d04213ef/small.jpg"
    },
    {
      "Affiliation": "Whole Factory srl",
      "Bio": "Founder and CEO at Whole Factory srl. Creator of the Whole Platform. PhD in Computer Science.",
      "Key": "riccardosolmi",
      "Name": "Riccardo Solmi",
      "URL": "http://www.cs.unibo.it/~solmi/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/riccardosolmi/a19d9182-0a5d-42df-a552-7f6e467d93e5/small.jpg"
    },
    {
      "Affiliation": "University of Bern, Switzerland",
      "Key": "maxleske",
      "Name": "Max Leske"
    },
    {
      "Affiliation": "TU Darmstadt",
      "Key": "neerajsuri",
      "Name": "Neeraj Suri",
      "URL": "https://www.deeds.informatik.tu-darmstadt.de/deeds/homepages/suri/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/neerajsuri/e35fa9a8-bd34-49f1-a085-7a5fbb21d2f0/small.jpg"
    },
    {
      "Affiliation": "TU Munich",
      "Bio": "Bernd Bruegge is university professor of computer science with a chair for Applied Software Engineering at the Technische Universit&auml;t M&uuml;nchen and adjunct professor at Carnegie Mellon University. His research interests include software architectures for dynamic systems, agile software development processes, and software engineering education. He received a PhD in computer science from Carnegie Mellon University.",
      "Key": "berndbruegge",
      "Name": "Bernd Bruegge",
      "URL": "http://wwwbruegge.informatik.tu-muenchen.de/lehrstuhl_1/people/52-professor",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/berndbruegge/e3a99e6e-d67e-4022-a375-3de8172d859c/small.jpg"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "susaneisenbach",
      "Name": "Susan Eisenbach",
      "URL": "http://wp.doc.ic.ac.uk/susan/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/susaneisenbach/e42294b5-d2ac-4f85-a2e6-a2acea6f75db/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Brussel, Belgium",
      "Key": "wolfgangdemeuter",
      "Name": "Wolfgang De Meuter",
      "URL": "https://soft.vub.ac.be/soft/members/wdmeuter",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/wolfgangdemeuter/e426f95d-9b80-42dc-bcf2-85aad00e07f9/small.jpg"
    },
    {
      "Affiliation": "Northeastern University",
      "Key": "matthiasfelleisen",
      "Name": "Matthias Felleisen",
      "URL": "http://www.ccs.neu.edu/home/matthias/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthiasfelleisen/3781509a-02f7-4e22-822d-04481501e833/small.jpg"
    },
    {
      "Affiliation": "TU Braunschweig, Germany",
      "Key": "svenschuster",
      "Name": "Sven Schuster"
    },
    {
      "Affiliation": "University of British Columbia",
      "Bio": "I am a Professor in the Department of Computer Science and Associate Dean (Research &amp; Graduate Studies) in the Faculty of Science at the University of British Columbia. I am also a co-founder and Chief Scientist at Tasktop Technologies Incorporated.\nMy research interests are in software engineering with a particular interest in improving the productivity of knowledge workers, including software developers. My group develops tools to aid with the evolution of large software systems and performs empirical studies to better understand how developers work and how software is developed.\nMy teaching spans from introductory computer science courses to undergraduate and graduate courses in software engineering.",
      "Key": "gailmurphy",
      "Name": "Gail Murphy",
      "URL": "http://www.cs.ubc.ca/~murphy/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gailmurphy/e5d48a7f-94c0-4961-8ebf-8b2393e76e70/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "patricklam",
      "Name": "Patrick Lam",
      "URL": "http://patricklam.ca",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/patricklam/e606db54-644e-41ce-9044-933df144c2a7/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "flaviomedeiros",
      "Name": "Flavio Medeiros"
    },
    {
      "Affiliation": "Centrum Wiskunde & Informatica",
      "Key": "mandarchandorkar",
      "Name": "Mandar Chandorkar",
      "URL": "http://mandar2812.github.io",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mandarchandorkar/90af6dc0-3fec-4640-b682-78e8a70f6d5d/small.jpg"
    },
    {
      "Affiliation": "Technion",
      "Key": "eranyahav",
      "Name": "Eran Yahav",
      "URL": "http://www.cs.technion.ac.il/~yahave/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/eranyahav/e77d8b4b-d267-4659-969c-6542a0d385b3/small.jpg"
    },
    {
      "Affiliation": "University of Science and Technology of China",
      "Bio": "Zhen Zhang is a final-year undergraduate (expected: June 2017) in USTC, who is preparing to apply for PhD program this winter. He has general interests in PL and specifically interested in topics including formal methods, concurrency verification, static analysis, software engineering, system and security. He finished a 3-month research internship during summer of 2016 in MPI-SWS working with Derek Dreyer, and also worked with Prof. Yu Zhang and Prof. Xinyu Feng in USTC-Yale Joint Research Center for High-Confidence Software in USTC.",
      "Key": "zhenzhang",
      "Name": "Zhen Zhang",
      "URL": "https://zhenzhang.me",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zhenzhang/44121c6e-5168-4620-ba32-27075c750d3b/small.jpg"
    },
    {
      "Affiliation": "University of Bergen, Norway",
      "Key": "anyahelenebagge",
      "Name": "Anya Helene Bagge",
      "URL": "http://www.ii.uib.no/~anya/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/anyahelenebagge/e8151de0-a47d-44d4-be04-8be97d29078b/small.jpg"
    },
    {
      "Affiliation": "University of Minho, Portugal",
      "Key": "joaosaraiva",
      "Name": "João Saraiva",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/joaosaraiva/7869de54-fbd0-41c9-8702-7cb9a88eff7d/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Bio": "Alan Blackwell is Professor of Interdisciplinary Design at the University of Cambridge Computer Laboratory. Originally trained as a control engineer, his early career in industrial automation soon led to an interest in programming as a technical user interface. He implemented his first visual programming language in 1983 (an antecedent of Harel\u2019s StateCharts) for specifying control of a cement batching plant in his hometown Wellington. Subsequent projects included a real-time expert systems language used to implement emergency response systems that now run on the trains of London Underground\u2019s Central and Jubilee lines. After delivering his first conference keynote on programming language design in 1995, he realised that he knew nothing about the scientific causes that made one programming language more usable than another, so left his role as design lead of novel end-user programming languages at Hitachi to study for a PhD with Thomas Green at the MRC Applied Psychology Unit in Cambridge. Since becoming an academic, he and his team have contributed to the design of programming languages, tools and techniques at companies around the world, including Microsoft, Google, Intel, Nokia, Sony, AutoDesk and many others.",
      "Key": "alanblackwell",
      "Name": "Alan Blackwell",
      "URL": "http://www.cl.cam.ac.uk/~afb21/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alanblackwell/07ab571e-84de-4ba2-950e-0f5c8934f2d0/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "clairelegoues",
      "Name": "Claire Le Goues",
      "URL": "http://www.cs.cmu.edu/~clegoues/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/clairelegoues/e8b9c638-4944-43e8-981a-954fcc241320/small.jpg"
    },
    {
      "Affiliation": "Keio University, Japan",
      "Key": "joselorenzosanmiguel",
      "Name": "Jose Lorenzo San Miguel"
    },
    {
      "Affiliation": "Chalmers University of Technology",
      "Key": "maryshe",
      "Name": "Mary Sheeran",
      "URL": "http://www.cse.chalmers.se/~ms/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/maryshe/e95f6842-7067-487b-8260-41089fd2c0fa/small.jpg"
    },
    {
      "Affiliation": "The University of Auckland",
      "Bio": "My main area of research is measuring software design quality. To support this kind of research I manage the Qualitas Corpus, a standard corpus of open-source Java software for use in empirical studies of software. Further information on my research (including publication list, possible projects I might supervise, and a list of current and past students) about my research interests and achievements is available. I am a member of the Software Engineering Research Group (SERG).",
      "Key": "ewantempero",
      "Name": "Ewan Tempero",
      "URL": "https://www.cs.auckland.ac.nz/~ewan/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ewantempero/e983a906-4ff6-4786-aa03-c3db1f51de33/small.jpg"
    },
    {
      "Affiliation": "Tufts University",
      "Bio": "I am a M.S/PhD student in the Computer Science Department at Tufts University. I am interested in using the garbage collector to gather information and help the programmer improve their application.",
      "Key": "diogenesnunez",
      "Name": "Diogenes Nunez",
      "URL": "https://www.linkedin.com/in/diogenes-nunez-b238a989",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/diogenesnunez/e99f87a1-7cb8-4be7-b5b5-068fe0c355f4/small.jpg"
    },
    {
      "Affiliation": "Philipps-Universität Marburg",
      "Key": "danielstruber",
      "Name": "Daniel Strüber",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/danielstruber/adbeaa2d-8365-40fd-9814-c8ea861c332e/small.jpg"
    },
    {
      "Affiliation": "University of California, Los Angeles",
      "Key": "jenspalsberg",
      "Name": "Jens Palsberg",
      "URL": "http://www.cs.ucla.edu/~palsberg",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jenspalsberg/e9c70f3a-a2c9-4c20-9ebb-984b9b53121d/small.jpg"
    },
    {
      "Affiliation": "University of California, Los Angeles",
      "Key": "toddmillstein1",
      "Name": "Todd  Millstein",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/toddmillstein1/ea0d8953-7161-486b-acaa-50227e058643/small.jpg"
    },
    {
      "Affiliation": "Hasso Plattner Institute",
      "Bio": "Prof. Dr. Holger Giese heads the Systems Analysis and Modeling research group since January 2008. The team focuses on model-driven software development for software-intensive systems. This includes the UML-based specification of flexible systems with samples and components, approaches to the formal verification of these models and approaches to the synthesis of models. The group also looks at the transformations of models, code generation concepts for structure and behavior for models and, in general, the problem of the integration of models in model-driven software development.",
      "Key": "holgergiese",
      "Name": "Holger Giese",
      "URL": "http://hpi.de/giese/staff/prof-dr-holger-giese.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/holgergiese/ea18809c-81c2-4cdd-943e-9483b30f56c8/small.jpg"
    },
    {
      "Affiliation": "University of Innsbruck",
      "Key": "ruthbreu",
      "Name": "Ruth Breu",
      "URL": "https://www.linkedin.com/in/dr-ruth-breu-b9467586",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ruthbreu/ea2710dd-0539-45fa-9c79-0f091460d79f/small.jpg"
    },
    {
      "Affiliation": " Friedrich-Alexander University of Erlangen-Nürnberg",
      "Key": "valentinrothberg",
      "Name": "Valentin Rothberg",
      "URL": "http://www4.cs.fau.de/~vrothberg"
    },
    {
      "Affiliation": "MIT, USA",
      "Bio": "I am a programmer.\nI have been programming since 1969.\nI was a cofounder of IntraNet.\nI am currently a Research Fellow at MIT with the software design group.\nMy research project is subtext. My blog is Alarming Development.\nI seek to better understand the creative act of programming, and to help liberate it from the primitive state of our art.",
      "Key": "jonathanedwards",
      "Name": "Jonathan Edwards",
      "URL": "http://alarmingdevelopment.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jonathanedwards/eb05bab8-c989-42d6-82d5-831c16f5924f/small.jpg"
    },
    {
      "Affiliation": "TU Darmstadt, Germany",
      "Key": "wulfpfeiffer",
      "Name": "Wulf Pfeiffer"
    },
    {
      "Affiliation": "University of Bologna, Italy",
      "Key": "robertocasadei1",
      "Name": "Roberto Casadei",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/robertocasadei1/92e59e53-27e1-466d-a37f-bb9e544bfbf8/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "vinaykulkarni",
      "Name": "Vinay Kulkarni"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Bio": "Andrew J. Ko is an Associate Professor in the University of Washington Information School and Computer Science and Engineering. His research focuses on interactions between people and code, spanning the areas of human-computer interaction, computing education, and software engineering. He is the author of over 80 peer-reviewed publications, 8 receiving best paper awards and 2 receiving most influential paper awards. In 2013, he co-founded AnswerDash, a SaaS company offering instant answers on websites using a selection-based search technology invented in his lab. In 2010, he was awarded an NSF CAREER award to support his research and teaching on evidence-based bug triage. He received his Ph.D. at the Human-Computer Interaction Institute at Carnegie Mellon University in 2008. He received degrees in Computer Science and Psychology from Oregon State University in 2002.",
      "Key": "andrewko",
      "Name": "Andrew J. Ko",
      "URL": "https://faculty.uw.edu/ajko",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andrewko/ebfa9c04-71b4-4f3d-9da5-ecebce6d7acd/small.jpg"
    },
    {
      "Affiliation": "University of Lugano",
      "Key": "walterbinder",
      "Name": "Walter Binder",
      "URL": "http://www.inf.usi.ch/faculty/binder/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/walterbinder/ec7421f5-dcee-404e-ba7f-f0fc4a4d0697/small.jpg"
    },
    {
      "Affiliation": "IMDEA Software Institute",
      "Key": "anindyabanerjee",
      "Name": "Anindya Banerjee"
    },
    {
      "Affiliation": "OSCAR TECHNOLOGY, Japan",
      "Key": "takahiromiyajima",
      "Name": "Takahiro Miyajima"
    },
    {
      "Affiliation": "Waseda University, Japan",
      "Key": "ryotatamura",
      "Name": "Ryota Tamura"
    },
    {
      "Affiliation": "University of California, Berkeley",
      "Key": "sarahchasins",
      "Name": "Sarah Chasins"
    },
    {
      "Affiliation": "Iowa State University, USA",
      "Bio": "PhD student, Computer Science",
      "Key": "ganeshaupadhyaya",
      "Name": "Ganesha Upadhyaya",
      "URL": "http://web.cs.iastate.edu/~ganeshau/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ganeshaupadhyaya/ed064019-9537-4e59-8017-a69e52b6cc07/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "michaelhind",
      "Name": "Michael Hind",
      "URL": "http://researcher.ibm.com/researcher/view.php?person=us-hindm",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/michaelhind/ed335e35-c8b1-4d01-a09c-c5bef154437d/small.jpg"
    },
    {
      "Affiliation": "Software Languages Lab",
      "Key": "laurephilips",
      "Name": "Laure Philips"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Bio": "Martin Odersky is a professor at EPFL in Lausanne, Switzerland. He has been working on programming languages for most of his career. He first studied structured and object-oriented programming as a PhD student of Niklaus Wirth, then fell in love with functional programming while working as a post doc at IBM and Yale. When Java came out, he started to add functional programming constructs to the new platform. This led to Pizza and GJ and eventually to Java 5 with generics. During that time he also developed javac, the current reference compiler for Java. \nOver the last 10 years, Martin worked on unifying object-oriented and functional programming in the Scala language. Scala quickly escaped from the research lab and became a popular open source tool and industrial language. He now oversees development of Scala as head of the programming group at EPFL and as academic director of the Scala center.",
      "Key": "martinodersky",
      "Name": "Martin Odersky",
      "URL": "http://lampwww.epfl.ch/~odersky/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/martinodersky/fc1dd696-d0d4-47cb-9d9a-bba012d98f9e/small.jpg"
    },
    {
      "Affiliation": "Federal University of Alagoas (UFAL)",
      "Bio": "M&aacute;rcio Ribeiro is an Assistant Professor in the Computing Institute at Federal University of Alagoas. He holds a Doctoral degree in Computer Science from the Federal University of Pernambuco (2012). He also holds the ACM SIGPLAN John Vlissides Award (2010). This award refers to the best PhD proposal presented in the OOPSLA Doctoral Symposium, \u201cshowing significant promise in applied software research.\u201d In addition, his PhD thesis has been awarded as the best one in Computer Science of Brazil in 2012. He is a faculty member at the Graduate Program in Informatics (PPGI) and has experience in Software Engineering. His main research interests are on Software Product Lines, Object/Aspect/Feature-Oriented Programming, Software Modularity, and Static Analyses. In 2014, he was the General Chair of the Brazilian Conference on Software (CBSoft), the most important event in Software of Brazil. More on Ribeiro can be found at http://www.ic.ufal.br/professor/marcio/",
      "Key": "marcioribeiro",
      "Name": "Márcio Ribeiro",
      "URL": "https://sites.google.com/a/ic.ufal.br/marcio/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/marcioribeiro/ed83b74d-aafb-48df-9865-a5f9e5c6c722/small.jpg"
    },
    {
      "Affiliation": "National University SOKENDAI, Japan",
      "Key": "zirunzhu",
      "Name": "Zirun Zhu",
      "URL": "http://www.prg.nii.ac.jp/members/zhu/index.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/zirunzhu/edd023d2-9a63-4280-b11e-1221a16016fc/small.jpg"
    },
    {
      "Affiliation": "University of Saskatchewan ",
      "Key": "ahmedabdelmoamen",
      "Name": "Ahmed Abdel Moamen",
      "URL": "http://homepage.usask.ca/~ama883/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ahmedabdelmoamen/e4c95680-5e1c-419d-bd61-bbdde27dc1c2/small.jpg"
    },
    {
      "Affiliation": "University of Central Florida",
      "Key": "johnlsingleton",
      "Name": "John L. Singleton",
      "URL": "http://cs.ucf.edu/~jls",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/johnlsingleton/ee14c263-8248-433d-9fe0-cf3ab0bfe64f/small.jpg"
    },
    {
      "Affiliation": "Maynooth University, Ireland",
      "Key": "tomaseward",
      "Name": "Tomas E. Ward"
    },
    {
      "Affiliation": "Columbia University, New York",
      "Bio": "Gail E. Kaiser is a Professor of Computer Science and the Director of the Programming Systems Laboratory in the Computer Science Department at Columbia University. She was named an NSF Presidential Young Investigator in Software Engineering and Software Systems in 1988, and has published over 150 refereed papers in a range of software areas. Prof. Kaiser\u2019s research interests include social software engineering, collaborative work, privacy and security, software reliability, self-managing systems, parallel and distributed systems, Web technologies, information management, and software development environments and tools. She has consulted or worked summers for courseware authoring, software process and networking startups, several defense contractors, the Software Engineering Institute, Bell Labs, IBM, Siemens, Sun and Telcordia. Her lab has been funded by NSF, NIH, DARPA, ONR, NASA, NYS Science &amp; Technology Foundation, and numerous companies. Prof. Kaiser served on the editorial board of IEEE Internet Computing for many years, was a founding associate editor of ACM Transactions on Software Engineering and Methodology, chaired an ACM SIGSOFT Symposium on Foundations of Software Engineering, vice chaired three of the IEEE International Conference on Distributed Computing Systems, and serves frequently on conference program committees. She also served on the Committee of Examiners for the Educational Testing Service\u2019s Computer Science Advanced Test (the GRE CS test) for three years, and has chaired her department\u2019s doctoral program since 1997. Prof. Kaiser received her PhD and MS from CMU and her ScB from MIT. See her CV at http://www.cs.columbia.edu/~kaiser/vita.html for details. Her lab\u2019s website is http://www.psl.cs.columbia.edu.",
      "Key": "gailkaiser",
      "Name": "Gail Kaiser",
      "URL": "http://www.cs.columbia.edu/~kaiser/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/gailkaiser/ee4ad131-b257-4d2d-8d23-3a6e63e9c620/small.jpg"
    },
    {
      "Affiliation": "Purdue University",
      "Bio": "Professor Eugster\u2019s research aims at proposing support for developing distributed systems. Particular topics of interest, in the context of distributed settings, include algorithms, middleware, and programming languages, abstractions, and methodologies.\nProfessor Eugster was educated in Switzerland, and has worked for both Swiss Federal Institutes of Technology in Lausanne (EPFL) and in Zurich (ETHZ), as well as for Sun Microsystems (now Oracle) prior to joining Purdue University. He has authored over 70 refereed articles, and is a member of ACM and IEEE. Among other awards for his research and teaching, Professor Eugster has received an NSF CAREER award (2007) and Experienced Researcher fellowship by the Alexander von Humboldt foundation (2011). He is also a participant of the 2011 DARPA Computer Science Study Panel.",
      "Key": "patrickeugster",
      "Name": "Patrick Eugster",
      "URL": "https://www.cs.purdue.edu/people/faculty/peugster/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/patrickeugster/eeffa5ad-0c64-428c-83ed-4992abe0d9f9/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "tijsvanderstorm1",
      "Name": "Tijs van der Storm"
    },
    {
      "Affiliation": "Dept. of Computer Science FCEyN, University of Buenos Aires",
      "Key": "guidochari",
      "Name": "Guido Chari",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/guidochari/a0147ecd-ef4f-404e-ba4a-ffa5894e8830/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "dominikcharousset",
      "Name": "Dominik Charousset"
    },
    {
      "Affiliation": "University of Oxford, UK",
      "Bio": "I am Director of the Software Engineering Programme, which offers part-time professional Masters\u2019 degrees in Software Engineering and in Software and Systems Security. I am currently the Chair of Faculty of Computer Science. For the academic years 2008-2010 was also Deputy Director of the Computing Laboratory (now the Department of Computer Science). I am a fellow of Kellogg College. Before taking up this post in 1999, I held lectureships at Oxford Brookes University and the University of Auckland, New Zealand.",
      "Key": "jeremygibbons",
      "Name": "Jeremy Gibbons",
      "URL": "http://www.cs.ox.ac.uk/jeremy.gibbons/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeremygibbons/f06652cd-2002-4fd5-9241-968feff2c7f8/small.jpg"
    },
    {
      "Affiliation": "Autonomous University of Madrid, Spain",
      "Key": "estherguerra",
      "Name": "Esther Guerra",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/estherguerra/6529c94e-dfd9-4b1a-82ae-a9ab0313a37c/small.jpg"
    },
    {
      "Affiliation": "EPFL",
      "Bio": "Sandro is a PhD student at the Programming Methods Laboratory (LAMP) at EPFL, supervised by Martin Odersky. His research interests include type systems and type theory, the design and semantics of domain-specific languages and formal methods for modeling systems biology. He is participating in the ongoing effort to formalize Scala\u2019s type system and likes to hack on type soundness proofs and other theories in Agda.",
      "Key": "sandrostucki",
      "Name": "Sandro Stucki",
      "URL": "http://lamp.epfl.ch/~sstucki/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/sandrostucki/f22d4e74-4098-4bf5-9429-9cc7cf8ddb23/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "robertocasadei2",
      "Name": "Roberto Casadei"
    },
    {
      "Affiliation": "Aalto University School of Business",
      "Key": "mattirossi",
      "Name": "Matti Rossi",
      "URL": "https://people.aalto.fi/index.html?profilepage=isfor#!matti_rossi",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/mattirossi/f2c82de3-50db-4df3-838c-b8397b1ad37c/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Key": "alexandresawczukdasilva",
      "Name": "Alexandre Sawczuk da Silva",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alexandresawczukdasilva/6521dcb9-3a56-4218-980d-d225ab70dcb2/small.jpg"
    },
    {
      "Affiliation": "University of Waterloo, Canada",
      "Key": "leonardopassos",
      "Name": "Leonardo Passos",
      "URL": "http://gsd.uwaterloo.ca/lpassos",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/leonardopassos/f3937b29-576d-4455-8b28-c93948c8db3e/small.jpg"
    },
    {
      "Affiliation": "Harz University of Applied Sciences, Germany",
      "Key": "jacobkruger",
      "Name": "Jacob Krüger"
    },
    {
      "Affiliation": "University College Dublin",
      "Key": "remcollier",
      "Name": "Rem Collier",
      "URL": "https://www.csi.ucd.ie/users/rem-collier",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/remcollier/715dcf01-359a-4568-b4be-0f4824c00d06/small.jpg"
    },
    {
      "Affiliation": "University Institute of Lisbon, Portugal",
      "Key": "eduardogomes",
      "Name": "Eduardo Gomes"
    },
    {
      "Affiliation": "Johannes Kepler University, Linz, Austria",
      "Key": "manuelrigger",
      "Name": "Manuel Rigger",
      "URL": "http://ssw.jku.at/General/Staff/ManuelRigger/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/manuelrigger/47e268e9-158c-471f-a7e9-442216c54550/small.jpg"
    },
    {
      "Affiliation": "Microsoft",
      "Key": "nikolaitillmann",
      "Name": "Nikolai Tillmann",
      "URL": "http://research.microsoft.com/~nikolait",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/nikolaitillmann/1f33e619-9d83-49ce-a72e-bfe7edb57b38/small.jpg"
    },
    {
      "Affiliation": "University of Glasgow, UK",
      "Key": "simonjgay",
      "Name": "Simon J. Gay"
    },
    {
      "Affiliation": "Waseda University",
      "Key": "kazunoriueda",
      "Name": "Kazunori Ueda"
    },
    {
      "Affiliation": "Independent",
      "Bio": "After I got a PhD on MDD and DSL I started working with a few companies (including TripAdvisor and Groupon) in four countries (Italy, Germany, Ireland and France).\nI am currently a consultant on Language Engineering. I help companies developing languages and supporting tools.",
      "Key": "federicotomassetti",
      "Name": "Federico Tomassetti",
      "URL": "http://tomassetti.me",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/federicotomassetti/79407fc4-c64e-4def-8076-bad8266ca001/small.jpg"
    },
    {
      "Affiliation": "TU Vienna, Austria",
      "Key": "tanjamayerhofer",
      "Name": "Tanja Mayerhofer",
      "URL": "https://www.big.tuwien.ac.at/staff/tmayerhofer",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/tanjamayerhofer/d5eab9cd-7c19-4b75-9f69-1a3f803d0d96/small.jpg"
    },
    {
      "Affiliation": "Oregon State University, USA",
      "Key": "ericwalkingshaw",
      "Name": "Eric Walkingshaw",
      "URL": "http://web.engr.oregonstate.edu/~walkiner/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/ericwalkingshaw/f727568c-9126-46df-ae03-8981b2b5d390/small.jpg"
    },
    {
      "Affiliation": "ING Bank",
      "Key": "joostbosman",
      "Name": "Joost Bosman"
    },
    {
      "Affiliation": "Northeastern University",
      "Key": "vincentstamour",
      "Name": "Vincent St-Amour"
    },
    {
      "Affiliation": "University of San Francisco, USA",
      "Key": "terenceparr",
      "Name": "Terence Parr",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/terenceparr/7c7ba4d2-ca7f-423f-91c9-364f4e076fb7/small.jpg"
    },
    {
      "Affiliation": "The University of Texas at Austin, Texas, USA",
      "Key": "arthurpeters",
      "Name": "Arthur Michener Peters",
      "URL": "http://www.singingwizard.org/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/arthurpeters/643e5234-3740-4ab0-8732-423661b653cb/small.jpg"
    },
    {
      "Affiliation": "MIT CSAIL",
      "Key": "shacharitzhaky",
      "Name": "Shachar Itzhaky"
    },
    {
      "Affiliation": "Kyusyu University",
      "Key": "ikutatanigawa",
      "Name": "Ikuta Tanigawa"
    },
    {
      "Affiliation": "SINTEF, Norway",
      "Key": "alessandrorossini",
      "Name": "Alessandro Rossini",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/alessandrorossini/2967f482-c676-4c63-b9cc-a61ab290c450/small.jpg"
    },
    {
      "Affiliation": "UC Berkeley",
      "Bio": "Over my career the aim of my research has been to enable system designers to fully utilize the capabilities that silicon manufacturing has provided them. After many years of working on the problem of how to design Integrated Circuits (i.e. Electronic Design Automation), I turned my focus to how to program Integrated Circuits, particularly on-chip multiprocessor systems. Since joining Berkeley I have been exploring applications of \u201cpersonal high-performance computing\u201d enabled by these on-chip multiprocessors systems. In particular my group has focused on applications in computer-vision, speech recognition, multimedia analytics, and computational finance. As Deep Neural Networks have proved successful at providing state-of-the-art solutions to all of these problems, I am now focusing my entire research efforts on the problems of providing state-of-the-art solutions to the training and deployment of Deep Neural Networks.",
      "Key": "kurtkeutzer",
      "Name": "Kurt Keutzer",
      "URL": "http://www.eecs.berkeley.edu/~keutzer/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/kurtkeutzer/fb33fdea-5019-4cc2-88aa-1b5787f6c4bf/small.jpg"
    },
    {
      "Affiliation": "Johannes Kepler University Linz",
      "Key": "stefanmarr",
      "Name": "Stefan Marr",
      "URL": "http://stefan-marr.de/research/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/stefanmarr/fbbc1093-cac2-4811-8596-5c7ea727a2e9/small.jpg"
    },
    {
      "Affiliation": "Mines Douai",
      "Key": "lucfabresse",
      "Name": "Luc Fabresse"
    },
    {
      "Affiliation": "University of Ontario Institute of Technology, Canada",
      "Key": "jeremybradbury",
      "Name": "Jeremy Bradbury",
      "URL": "http://www.jeremybradbury.ca",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jeremybradbury/fd068ac3-6bbc-4dee-9326-21db833550ff/small.jpg"
    },
    {
      "Affiliation": "Ghent University",
      "Bio": "I am a fourth year Ph.D. student in the Department of Electronics and Information Systems at Ghent University in Belgium. I am pursuing my degree under the supervision of Lieven Eeckhout. Before moving to Ghent in 2012, I spent two years as an Early Stage Researcher at the Foundation of Research and Technology (FORTH) in Heraklion, Greece. My research at FORTH was funded by an EU Marie Curie fellowship. I got my M.S. in Electrical and Computer Engineering at the University of Illinois at Urbana Champaign in 2009. I was a recipient of the J. William Fulbright scholarship from the U.S. Department of State. Before all the foreign travels, I got my B.Sc. in Electrical Engineering in 2006 from the University of Engineering and Technology in Lahore, Pakistan.",
      "Key": "shoaibakram",
      "Name": "Shoaib Akram",
      "URL": "http://users.elis.ugent.be/~sakram/index.html",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/shoaibakram/fd448f65-9d99-42f8-906e-925d7f806954/small.jpg"
    },
    {
      "Affiliation": "MIT",
      "Key": "yongquanlu",
      "Name": "Yongquan Lu"
    },
    {
      "Affiliation": "Friedrich-Alexander University Erlangen-Nürnberg (FAU)",
      "Key": "andreasziegler",
      "Name": "Andreas Ziegler",
      "URL": "https://www4.cs.fau.de/~ziegler",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/andreasziegler/3d3ca430-f2ac-46b1-af4a-4a8c8bf257a4/small.jpg"
    },
    {
      "Affiliation": "Lund University",
      "Key": "jesperoqvist",
      "Name": "Jesper Oqvist",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/jesperoqvist/fe103c58-f745-4ccf-8436-354ffcad93f8/small.jpg"
    },
    {
      "Affiliation": "Federal University of Minas Gerais, Brazil",
      "Key": "marcotuliovalente",
      "Name": "Marco Tulio Valente"
    },
    {
      "Affiliation": "IBM Canada",
      "Key": "matthewgaudet",
      "Name": "Matthew Gaudet",
      "URL": "http://mgaudet.ca",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/matthewgaudet/61263a54-998a-46f6-8083-704a03579a5c/small.jpg"
    },
    {
      "Affiliation": "Eindhoven University of Technology",
      "Key": "aserebrenik",
      "Name": "A. Serebrenik"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Key": "georgstefanschmid",
      "Name": "Georg Stefan Schmid",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/georgstefanschmid/f7e147fb-4ef2-4bf9-9809-8e2d766fab9e/small.jpg"
    },
    {
      "Affiliation": "University of Victoria",
      "Bio": "I\u2019m an associate professor working with the MOD(ularity) Squad (the grooviest gang of students to ever attempt to improve the modularity of system infrastructure software), in the Computer Science Department, in the Faculty of Engineering, at the University of Victoria, Canada.\nResearch Interests: traditional system evolution and maintenance, emerging avenues of advanced modularity across the software stack, and new programming paradigms and future pedagogical directions in concurrent environment",
      "Key": "yvonnecoady",
      "Name": "Yvonne Coady",
      "URL": "http://webhome.cs.uvic.ca/~ycoady/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/yvonnecoady/ff7a7eab-b13c-49e3-b0c3-20717ce36555/small.jpg"
    },
    {
      "Affiliation": "Washington State University",
      "Key": "xinghuizhao",
      "Name": "Xinghui Zhao",
      "URL": "http://dsr.encs.vancouver.wsu.edu/",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/xinghuizhao/ff7a977a-dbda-4453-a240-67bb4bd961f8/small.jpg"
    },
    {
      "Affiliation": "Rice University",
      "Key": "akihirohayashi",
      "Name": "Akihiro Hayashi",
      "URL": "http://ahayashi.blogs.rice.edu",
      "URLphoto": "http://2016.splashcon.org/getProfileImage/akihirohayashi/ffede5b7-456a-4d9f-90e6-be4808532374/small.jpg"
    }
  ],
  "Sessions": [
    {
      "Abstract": "Continuing the successes of previous years, SPLASH is again hosting an ACM SIGPLAN Student Research Competition (ACM SRC). The competition is an internationally-recognized venue that enables undergraduate and graduate students to experience the research world and to share their research results with other students and SPLASH attendees. The competition has separate categories for undergraduate and graduate students and awards prizes to the top three students in each category. The ACM SIGPLAN Student Research Competition shares the Poster session\u2019s goal to facilitate interaction with researchers and industry practitioners, providing both sides with the opportunity to learn of ongoing, current research. Additionally, the Student Research Competition gives students experience with both formal presentations and evaluations.",
      "Chairs": [
        "samguyer",
        "patricklam"
      ],
      "ChairsString": "Sam Guyer and Patrick Lam",
      "Day": "2016-11-03",
      "Items": ["splash-2016-src-phase-3-talks"],
      "Key": "2fafdff0-3b9b-4862-9c7a-4f24150ff0da",
      "Location": "Winterthur",
      "Time": "15:40 - 17:20",
      "Title": "Student Research Competition: Talks",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Onward! Essays is looking for clear and compelling pieces of writing about topics important to the software community.\nAn essay can be an exploration of a topic, its impact, or the circumstances of its creation; it can present a personal view of what is, explore a terrain, or lead the reader in an act of discovery; it can be a philosophical digression or a deep analysis. It can describe a personal journey, perhaps that by which the author reached an understanding of such a topic. The subject area should be interpreted broadly and can include the relationship of software to human endeavors, or its philosophical, sociological, psychological, historical, or anthropological underpinnings.\nOnward! Essays is reaching out not only to experienced academics but also to graduate students for constructive criticism of current software development technology and practices, and for the presentation of ideas that could change the realm of software development. Practitioners who are dissatisfied with the state of our art are also encouraged to share insights about how to reform software development, perhaps by presenting detailed examples of a new approach, demonstrating concrete benefits and potential risks.\nOnward! Essays is not looking for research-as-usual papers with rigorous validation (such as theorems or experiments). Onward! Essays accepts less rigorous methods of validation; however, regardless of its form or topic, the essay must have \u201cmeat\u201d. It must must offer some insight or convincing argument; the reader should be left \u2014 perhaps after some reflection \u2014 in no doubt what the claimed insight or argument is. The use of worked-out examples to support new ideas is strongly encouraged.",
      "Day": "2016-11-02",
      "Items": [
        "onward2016-essays-how-are-programs-found-",
        "onward2016-essays-the-left-hand-of-equals"
      ],
      "Key": "41fd6581-28c6-443e-91c9-6583a0662e4b",
      "Location": "Zürich 2",
      "Time": "13:30 - 15:10",
      "Title": "Onward! 2016 - Onward! Essays: Onward! Essays I",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The SPLASH Poster track provides an excellent forum for authors to present their recent or ongoing projects in an interactive setting, and receive feedback from the community. We invite submissions covering any aspect of programming, systems, languages and applications. The goal of the poster session is to encourage and facilitate small groups of individuals interested in a technical area to gather and interact. It is held early in the conference, to promote continued discussion among interested parties.",
      "Chairs": [
        "jeffhuang",
        "sebastianerdweg"
      ],
      "ChairsString": "Jeff Huang and Sebastian Erdweg",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-posters-a-sampling-based-approach-to-accelerating-queries-in-log-management-systems",
        "splash-2016-posters-sk_p-a-neural-program-corrector-for-moocs",
        "splash-2016-posters-specifying-css-layout-with-reference-attribute-grammars",
        "splash-2016-posters-removing-stagnation-from-modern-code-review",
        "splash-2016-posters-reducing-procedure-call-bloat-in-arm-binaries",
        "splash-2016-posters-introducing-lightweight-reactive-values-to-java",
        "splash-2016-posters-supporting-resource-bounded-multitenancy-in-akka",
        "splash-2016-posters-reconsidering-reliability-in-distributed-actor-systems",
        "splash-2016-posters-a-web-application-is-a-domain-specific-language",
        "splash-2016-posters-libdsu-towards-hot-swapping-dynamically-linked-libraries-on-stock-linux"
      ],
      "Key": "241e9c28-5605-45ff-a449-1dcd525e301b",
      "Location": "Foyer",
      "Time": "17:30 - 19:30",
      "Title": "Posters: Poster Reception Wednesday",
      "Type": "Accepted Posters"
    },
    {
      "Abstract": "The SPLASH Poster track provides an excellent forum for authors to present their recent or ongoing projects in an interactive setting, and receive feedback from the community. We invite submissions covering any aspect of programming, systems, languages and applications. The goal of the poster session is to encourage and facilitate small groups of individuals interested in a technical area to gather and interact. It is held early in the conference, to promote continued discussion among interested parties.",
      "Chairs": [
        "jeffhuang",
        "sebastianerdweg"
      ],
      "ChairsString": "Jeff Huang and Sebastian Erdweg",
      "Day": "2016-10-31",
      "Items": [
        "splash-2016-posters-a-sampling-based-approach-to-accelerating-queries-in-log-management-systems",
        "splash-2016-posters-sk_p-a-neural-program-corrector-for-moocs",
        "splash-2016-posters-specifying-css-layout-with-reference-attribute-grammars",
        "splash-2016-posters-removing-stagnation-from-modern-code-review",
        "splash-2016-posters-reducing-procedure-call-bloat-in-arm-binaries",
        "splash-2016-posters-introducing-lightweight-reactive-values-to-java",
        "splash-2016-posters-supporting-resource-bounded-multitenancy-in-akka",
        "splash-2016-posters-reconsidering-reliability-in-distributed-actor-systems",
        "splash-2016-posters-a-web-application-is-a-domain-specific-language",
        "splash-2016-posters-libdsu-towards-hot-swapping-dynamically-linked-libraries-on-stock-linux"
      ],
      "Key": "823a1c76-1cd3-41df-b2a4-2af397305235",
      "Location": "PTA",
      "Time": "17:30 - 20:30",
      "Title": "Posters: Poster Reception Monday",
      "Type": "Accepted Posters"
    },
    {
      "Abstract": "Onward! Essays is looking for clear and compelling pieces of writing about topics important to the software community.\nAn essay can be an exploration of a topic, its impact, or the circumstances of its creation; it can present a personal view of what is, explore a terrain, or lead the reader in an act of discovery; it can be a philosophical digression or a deep analysis. It can describe a personal journey, perhaps that by which the author reached an understanding of such a topic. The subject area should be interpreted broadly and can include the relationship of software to human endeavors, or its philosophical, sociological, psychological, historical, or anthropological underpinnings.\nOnward! Essays is reaching out not only to experienced academics but also to graduate students for constructive criticism of current software development technology and practices, and for the presentation of ideas that could change the realm of software development. Practitioners who are dissatisfied with the state of our art are also encouraged to share insights about how to reform software development, perhaps by presenting detailed examples of a new approach, demonstrating concrete benefits and potential risks.\nOnward! Essays is not looking for research-as-usual papers with rigorous validation (such as theorems or experiments). Onward! Essays accepts less rigorous methods of validation; however, regardless of its form or topic, the essay must have \u201cmeat\u201d. It must must offer some insight or convincing argument; the reader should be left \u2014 perhaps after some reflection \u2014 in no doubt what the claimed insight or argument is. The use of worked-out examples to support new ideas is strongly encouraged.",
      "Day": "2016-11-04",
      "Items": [
        "onward2016-essays-a-world-of-active-objects-for-work-and-play-the-first-ten-years-of-lively",
        "onward2016-essays-in-the-control-room-of-the-banquet-"
      ],
      "Key": "15b449d1-5ea1-47b8-86a6-48eccdf9b302",
      "Location": "Matterhorn 2",
      "Time": "13:30 - 15:10",
      "Title": "Onward! 2016 - Onward! Essays: Onward! Essays II",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Update: Deadline extended to Aug 15!\nWell-designed and implemented domain-specific languages (DSLs) can achieve both usability and performance benefits over general-purpose programming languages. By raising the level of abstraction and exploiting domain knowledge, DSLs can make programming more accessible, increase programmer productivity, and support domain-specific optimizations.\nWorkshop Goal\nDomain-Specific Language Design and Implementation (DSLDI) is a workshop intended to bring together researchers and practitioners interested in discussing how DSLs should be designed, implemented, supported by tools, and applied in realistic contexts. The focus of the workshop is on all aspects of this process, from soliciting domain knowledge from experts, through the design and implementation of the language, to evaluating whether and how a DSL is successful. More generally, we are interested in continuing to build a community that can drive forward the development of modern DSLs.\nAn additional goal of this year\u2019s workshop is to encourage discussion about the usability of DSLs, and to establish connections with researchers in related areas, such as end-user software engineering, who have studied human factors of programming languages and tools. Our invited speaker (see below) was chosen with this goal in mind.\nWorkshop Format\nDSLDI is a single-day workshop and will consist of an invited speaker followed by moderated audience discussions structured around a series of short talks. The role of the talks is to facilitate interesting and substantive discussion. Therefore, we welcome and encourage talks that express strong opinions, describe open problems, propose new research directions, and report on early research in progress.\nProposed talks should be on topics within DSLDI\u2019s area of interest, which include but are not limited to: \n \n solicitation and representation of domain knowledge \n DSL design principles and processes \n DSL implementation techniques and language workbenches \n domain-specific optimizations \n human factors of DSLs \n tool support for DSL users \n community and educational support for DSL users \n applications of DSLs to existing and emerging domains \n studies of usability, performance, or other benefits of DSLs \n experience reports of DSLs deployed in practice \n\nInvited Speaker: Felienne Hermans\n\nBio: Felienne is assistant professor at Delft University of Technology, where she researches the world\u2019s most popular programming language: Excel. She is passionate about programming education for non-developers: her MOOC on programming in Excel has been followed by almost 100.000 people so far, and she teaches kids programming and robotics every Saturday at a local community center. She is also one of the founders of the Rotterdam-based developer\u2019s conference Joy of Coding, celebrating its fourth edition this year.",
      "Day": "2016-10-31",
      "Items": ["dsldi2016-keynote"],
      "Key": "bb2af5b5-ccf4-4d67-b3e3-7f968faf0f45",
      "Location": "Matterhorn 1",
      "Time": "10:30 - 12:10",
      "Title": "DSLDI 2016 - : Opening and Keynote",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Language workbenches are tools for software language engineering. They distinguish themselves from traditional compiler tools by providing integrated development environment (IDE) support for defining, implementing, testing and maintaining languages. Not only that, languages built with a language workbench are supported by IDE features as well (e.g., syntax highlighting, outlining, reference resolving, completion etc.). As a result, language workbenches achieve a next level in terms of productivity and interactive editor support for building languages, in comparison to traditional batch-oriented, compiler construction tools. \nThere are many language workbenches under active development, both in industry and academia. Notable examples include Jetbrains MPS, MetaEdit+, Xtext, Rascal, Spoofax, SugarJ, Melange, Cedalion, Epsilon, EMFText, Intentional Software, Whole Platform, DrRacket, Eco, Ensō, MontiCore, and others. \nThe goal of this workshop is twofold. First: exercise and assess the state-of-the-art in language workbenches using challenge problems from the user perspective (i.e. the language designer). Second: foster knowledge exchange and opportunities for collaboration between language workbench implementors and researchers.",
      "Chairs": ["meinteboersma"],
      "ChairsString": "Meinte Boersma",
      "Day": "2016-11-01",
      "Items": [
        "lwc2016-solutions-to-three-language-workbench-challenges-using-wizards-workbench",
        "lwc2016-whole-platform-solution-to-a-selection-of-lwc16-benchmark-problems",
        "lwc2016-cedalion-s-response-to-the-2016-language-workbench-challenge",
        "lwc2016-language-workbench-challenge-2016-the-jetbrains-meta-programming-system"
      ],
      "Key": "d0375a1e-195d-4665-9666-c2990acd91d7",
      "Location": "Luzern",
      "Time": "10:30 - 12:10",
      "Title": "LWC@SLE 2016 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "3rd Workshop on Reactive and Event-based Languages &amp; Systems (REBLS).\nReactive programming and event-based programming are two closely related programming styles that are becoming ever more important with the advent of advanced HPC technology and the ever increasing requirement for our applications to run on the web or on collaborating mobile devices. A number of publications on middleware and language design \u2014 so-called reactive and event-based languages and systems (REBLS) \u2014 have already seen the light, but the field still raises several questions. For example, the interaction with mainstream language concepts is poorly understood, implementation technology is in its infancy and modularity mechanisms are almost totally lacking. Moreover, large applications are still to be developed and patterns and tools for developing reactive applications is an area that is vastly unexplored.\nThis workshop will gather researchers in reactive and event-based languages and systems. The goal of the workshop is to exchange new technical research results and to define better the field by coming up with taxonomies and overviews of the existing work.\nPrevious editions\nREBLS\u201915\nREBLS\u201914\nREM\u201913",
      "Day": "2016-11-01",
      "Items": [
        "rebls2016-welcome-and-introduction",
        "rebls2016-keynote"
      ],
      "Key": "ac161dec-097f-4c67-8497-a48d6d8489b1",
      "Location": "Lausanne",
      "Time": "08:30 - 10:00",
      "Title": "REBLS 2016 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Industry Track for Software Language Engineering (ITSLE) is a workshop to bring together practitioners and researchers from industry and academia working on the area of software language engineering. Domain Specific Languages (DSLs) and Model-Driven Software Engineering (MDSE) techniques are being developed and used broadly in industry. However, as the size and complexity of software systems steadily increase, so does the cost of maintaining and improving the DSL and MDSE techniques and tools. It introduces new challenges such as language co-evolution, maintainability of legacy software using older version of DSLs and MDSE techniques, and extendability and scalability of these techniques. Some of these challenges have been addressed by the SLE research community and some remain unsolved.\nThe ITSLE is therefore dedicated to both SLE research organizations and industrial partners who are willing to share their challenges, industrial experiences and research results applicable to the industry. We seek high-quality contributions from practitioners as well as industrial and academic researchers. The workshop is a continuation of successful editions organized in 2011, 2012 and 2014.",
      "Chairs": ["peterkourzanov"],
      "ChairsString": "Peter Kourzanov",
      "Day": "2016-10-31",
      "Items": [
        "itsle2016-lessons-learned-about-language-engineering-from-the-development-of-mbeddr",
        "itsle2016-coffie-break",
        "itsle2016-pattern-specification-and-application-in-metamodels-in-ecore"
      ],
      "Key": "fb44c141-5cf2-4bbf-9c7a-a1c64a25555d",
      "Location": "Geneva",
      "Time": "10:30 - 12:10",
      "Title": "ITSLE 2016 - : Industry meets academy",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ALIGNED project is funded by the EU Horizon-2020 programme, bringing together researchers and user communities in model-driven software engineering and in semantic technologies and linked data, aiming to improve the quality and efficiency of engineering workflows in data-intensive activities. The project is developing semantically-aware model-driven tooling, extending the existing Booster system and Model Catalogue for integration with Linked Data ontologies and datasets. This tutorial on Semantically-Aware Model-Driven Engineering will provide an introduction to these tools, including hands-on experience. \nWe want to ensure the workshop is presented at the right level for the audience. You can help us by filling in a quick survey as a potential participant of the workshop. All responses are confidential and there are no wrong answers!",
      "Chairs": ["seyyedshah"],
      "ChairsString": "Seyyed Shah",
      "Day": "2016-10-31",
      "Items": [
        "samde2016-booster-a-guided-tour",
        "samde2016-booster-interactive-hands-on",
        "samde2016-wrap-up-and-discussion"
      ],
      "Key": "c88ebae7-e500-4147-b4e1-c9ca4fe8d8ea",
      "Location": "Basel",
      "Time": "15:40 - 17:20",
      "Title": "SA-MDE 2016 - : Booster: Hands On",
      "Type": "Schedule"
    },
    {
      "Abstract": "The ALIGNED project is funded by the EU Horizon-2020 programme, bringing together researchers and user communities in model-driven software engineering and in semantic technologies and linked data, aiming to improve the quality and efficiency of engineering workflows in data-intensive activities. The project is developing semantically-aware model-driven tooling, extending the existing Booster system and Model Catalogue for integration with Linked Data ontologies and datasets. This tutorial on Semantically-Aware Model-Driven Engineering will provide an introduction to these tools, including hands-on experience. \nWe want to ensure the workshop is presented at the right level for the audience. You can help us by filling in a quick survey as a potential participant of the workshop. All responses are confidential and there are no wrong answers!",
      "Chairs": ["jeremygibbons"],
      "ChairsString": "Jeremy Gibbons",
      "Day": "2016-10-31",
      "Items": [
        "samde2016-opening",
        "samde2016-the-aligned-vision",
        "samde2016-the-metadata-catalogue",
        "samde2016-booster-background-and-tools"
      ],
      "Key": "d468da70-cc2a-429a-a2b1-c6baaf8ffb6c",
      "Location": "Basel",
      "Time": "10:30 - 12:10",
      "Title": "SA-MDE 2016 - : Session 1: ALIGNED, The Metadata Catalogue and Booster",
      "Type": "Schedule"
    },
    {
      "Abstract": "The ALIGNED project is funded by the EU Horizon-2020 programme, bringing together researchers and user communities in model-driven software engineering and in semantic technologies and linked data, aiming to improve the quality and efficiency of engineering workflows in data-intensive activities. The project is developing semantically-aware model-driven tooling, extending the existing Booster system and Model Catalogue for integration with Linked Data ontologies and datasets. This tutorial on Semantically-Aware Model-Driven Engineering will provide an introduction to these tools, including hands-on experience. \nWe want to ensure the workshop is presented at the right level for the audience. You can help us by filling in a quick survey as a potential participant of the workshop. All responses are confidential and there are no wrong answers!",
      "Chairs": ["jameswelch"],
      "ChairsString": "James Welch",
      "Day": "2016-10-31",
      "Items": [
        "samde2016-the-model-ctalogue-a-guided-tour",
        "samde2016-metadata-catalogue-interactive-hands-on"
      ],
      "Key": "baaf98c0-0925-4e67-8e74-181a9de89057",
      "Location": "Basel",
      "Time": "13:30 - 15:10",
      "Title": "SA-MDE 2016 - : Metadata Catalogue: Demos and Hands-on",
      "Type": "Schedule"
    },
    {
      "Abstract": "Language workbenches are tools for software language engineering. They distinguish themselves from traditional compiler tools by providing integrated development environment (IDE) support for defining, implementing, testing and maintaining languages. Not only that, languages built with a language workbench are supported by IDE features as well (e.g., syntax highlighting, outlining, reference resolving, completion etc.). As a result, language workbenches achieve a next level in terms of productivity and interactive editor support for building languages, in comparison to traditional batch-oriented, compiler construction tools. \nThere are many language workbenches under active development, both in industry and academia. Notable examples include Jetbrains MPS, MetaEdit+, Xtext, Rascal, Spoofax, SugarJ, Melange, Cedalion, Epsilon, EMFText, Intentional Software, Whole Platform, DrRacket, Eco, Ensō, MontiCore, and others. \nThe goal of this workshop is twofold. First: exercise and assess the state-of-the-art in language workbenches using challenge problems from the user perspective (i.e. the language designer). Second: foster knowledge exchange and opportunities for collaboration between language workbench implementors and researchers.",
      "Chairs": ["markusvlter"],
      "ChairsString": "Markus Völter",
      "Day": "2016-11-01",
      "Items": [
        "lwc2016-bootstrapping-default-formatting-and-skeleton-editing-in-the-spoofax-language-workbench",
        "lwc2016-the-rascal-approach-to-code-in-prose-computed-properties-and-language-extension",
        "lwc2016-languages-the-racket-way-submission-to-the-2016-language-workbench-challenge",
        "lwc2016-preparation-discussion"
      ],
      "Key": "15d059ed-454c-4540-9159-bf29ef22158f",
      "Location": "Luzern",
      "Time": "13:30 - 15:10",
      "Title": "LWC@SLE 2016 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "3rd Workshop on Reactive and Event-based Languages &amp; Systems (REBLS).\nReactive programming and event-based programming are two closely related programming styles that are becoming ever more important with the advent of advanced HPC technology and the ever increasing requirement for our applications to run on the web or on collaborating mobile devices. A number of publications on middleware and language design \u2014 so-called reactive and event-based languages and systems (REBLS) \u2014 have already seen the light, but the field still raises several questions. For example, the interaction with mainstream language concepts is poorly understood, implementation technology is in its infancy and modularity mechanisms are almost totally lacking. Moreover, large applications are still to be developed and patterns and tools for developing reactive applications is an area that is vastly unexplored.\nThis workshop will gather researchers in reactive and event-based languages and systems. The goal of the workshop is to exchange new technical research results and to define better the field by coming up with taxonomies and overviews of the existing work.\nPrevious editions\nREBLS\u201915\nREBLS\u201914\nREM\u201913",
      "Day": "2016-11-01",
      "Key": "2c26ac14-d7b4-4ef7-8af3-7c155f83952a",
      "Location": "Lausanne",
      "Time": "13:30 - 15:10",
      "Title": "REBLS 2016 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Language workbenches are tools for software language engineering. They distinguish themselves from traditional compiler tools by providing integrated development environment (IDE) support for defining, implementing, testing and maintaining languages. Not only that, languages built with a language workbench are supported by IDE features as well (e.g., syntax highlighting, outlining, reference resolving, completion etc.). As a result, language workbenches achieve a next level in terms of productivity and interactive editor support for building languages, in comparison to traditional batch-oriented, compiler construction tools. \nThere are many language workbenches under active development, both in industry and academia. Notable examples include Jetbrains MPS, MetaEdit+, Xtext, Rascal, Spoofax, SugarJ, Melange, Cedalion, Epsilon, EMFText, Intentional Software, Whole Platform, DrRacket, Eco, Ensō, MontiCore, and others. \nThe goal of this workshop is twofold. First: exercise and assess the state-of-the-art in language workbenches using challenge problems from the user perspective (i.e. the language designer). Second: foster knowledge exchange and opportunities for collaboration between language workbench implementors and researchers.",
      "Chairs": [
        "markusvlter",
        "meinteboersma",
        "eugenschindler"
      ],
      "ChairsString": "Markus Völter, Meinte Boersma and Eugen Schindler",
      "Day": "2016-11-01",
      "Items": ["lwc2016-future-challenges-break-out-sessions"],
      "Key": "811aecad-e4f9-424b-a46f-7cb9155fa7a9",
      "Location": "Luzern",
      "Time": "15:40 - 17:20",
      "Title": "LWC@SLE 2016 - : Discussion",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Industry Track for Software Language Engineering (ITSLE) is a workshop to bring together practitioners and researchers from industry and academia working on the area of software language engineering. Domain Specific Languages (DSLs) and Model-Driven Software Engineering (MDSE) techniques are being developed and used broadly in industry. However, as the size and complexity of software systems steadily increase, so does the cost of maintaining and improving the DSL and MDSE techniques and tools. It introduces new challenges such as language co-evolution, maintainability of legacy software using older version of DSLs and MDSE techniques, and extendability and scalability of these techniques. Some of these challenges have been addressed by the SLE research community and some remain unsolved.\nThe ITSLE is therefore dedicated to both SLE research organizations and industrial partners who are willing to share their challenges, industrial experiences and research results applicable to the industry. We seek high-quality contributions from practitioners as well as industrial and academic researchers. The workshop is a continuation of successful editions organized in 2011, 2012 and 2014.",
      "Chairs": ["markusvlter"],
      "ChairsString": "Markus Völter",
      "Day": "2016-10-31",
      "Items": [
        "itsle2016-a-domain-specific-language-for-optimal-pumping-systems",
        "itsle2016-integrated-simulation-of-cif3-and-simulink-models",
        "itsle2016-short-break",
        "itsle2016-panel-discussion"
      ],
      "Key": "1e504998-dc51-4809-9176-dc7923420c88",
      "Location": "Geneva",
      "Time": "15:40 - 17:20",
      "Title": "ITSLE 2016 - : Industrial applications",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Update: Deadline extended to Aug 15!\nWell-designed and implemented domain-specific languages (DSLs) can achieve both usability and performance benefits over general-purpose programming languages. By raising the level of abstraction and exploiting domain knowledge, DSLs can make programming more accessible, increase programmer productivity, and support domain-specific optimizations.\nWorkshop Goal\nDomain-Specific Language Design and Implementation (DSLDI) is a workshop intended to bring together researchers and practitioners interested in discussing how DSLs should be designed, implemented, supported by tools, and applied in realistic contexts. The focus of the workshop is on all aspects of this process, from soliciting domain knowledge from experts, through the design and implementation of the language, to evaluating whether and how a DSL is successful. More generally, we are interested in continuing to build a community that can drive forward the development of modern DSLs.\nAn additional goal of this year\u2019s workshop is to encourage discussion about the usability of DSLs, and to establish connections with researchers in related areas, such as end-user software engineering, who have studied human factors of programming languages and tools. Our invited speaker (see below) was chosen with this goal in mind.\nWorkshop Format\nDSLDI is a single-day workshop and will consist of an invited speaker followed by moderated audience discussions structured around a series of short talks. The role of the talks is to facilitate interesting and substantive discussion. Therefore, we welcome and encourage talks that express strong opinions, describe open problems, propose new research directions, and report on early research in progress.\nProposed talks should be on topics within DSLDI\u2019s area of interest, which include but are not limited to: \n \n solicitation and representation of domain knowledge \n DSL design principles and processes \n DSL implementation techniques and language workbenches \n domain-specific optimizations \n human factors of DSLs \n tool support for DSL users \n community and educational support for DSL users \n applications of DSLs to existing and emerging domains \n studies of usability, performance, or other benefits of DSLs \n experience reports of DSLs deployed in practice \n\nInvited Speaker: Felienne Hermans\n\nBio: Felienne is assistant professor at Delft University of Technology, where she researches the world\u2019s most popular programming language: Excel. She is passionate about programming education for non-developers: her MOOC on programming in Excel has been followed by almost 100.000 people so far, and she teaches kids programming and robotics every Saturday at a local community center. She is also one of the founders of the Rotterdam-based developer\u2019s conference Joy of Coding, celebrating its fourth edition this year.",
      "Day": "2016-10-31",
      "Items": [
        "dsldi2016-collaborative-design-implementation-and-use-of-domain-specific-languages",
        "dsldi2016-program-generation-for-linear-algebra-using-multiple-layers-of-dsls",
        "dsldi2016-the-matrix-chain-algorithm-to-compile-linear-algebra-expressions",
        "dsldi2016-the-definition-and-anatomy-of-model-driven-engineering-and-domain-specific-languages"
      ],
      "Key": "dbfa1746-8558-4f8c-aef3-62ac911be992",
      "Location": "Matterhorn 1",
      "Time": "15:40 - 17:20",
      "Title": "DSLDI 2016 - : Session 2",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Industry Track for Software Language Engineering (ITSLE) is a workshop to bring together practitioners and researchers from industry and academia working on the area of software language engineering. Domain Specific Languages (DSLs) and Model-Driven Software Engineering (MDSE) techniques are being developed and used broadly in industry. However, as the size and complexity of software systems steadily increase, so does the cost of maintaining and improving the DSL and MDSE techniques and tools. It introduces new challenges such as language co-evolution, maintainability of legacy software using older version of DSLs and MDSE techniques, and extendability and scalability of these techniques. Some of these challenges have been addressed by the SLE research community and some remain unsolved.\nThe ITSLE is therefore dedicated to both SLE research organizations and industrial partners who are willing to share their challenges, industrial experiences and research results applicable to the industry. We seek high-quality contributions from practitioners as well as industrial and academic researchers. The workshop is a continuation of successful editions organized in 2011, 2012 and 2014.",
      "Chairs": ["yanjadajsuren"],
      "ChairsString": "Yanja Dajsuren",
      "Day": "2016-10-31",
      "Items": [
        "itsle2016-model-driven-software-engineering-mdse-in-the-large",
        "itsle2016-solving-the-bank-with-rebel",
        "itsle2016-udapt-edapt-extensions-for-industrial-application",
        "itsle2016-splash-break-networking"
      ],
      "Key": "ea895f75-ad26-4d3d-bfb1-339fcb408e71",
      "Location": "Geneva",
      "Time": "13:30 - 15:10",
      "Title": "ITSLE 2016 - : Industrial DSLs and tools",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Update: Deadline extended to Aug 15!\nWell-designed and implemented domain-specific languages (DSLs) can achieve both usability and performance benefits over general-purpose programming languages. By raising the level of abstraction and exploiting domain knowledge, DSLs can make programming more accessible, increase programmer productivity, and support domain-specific optimizations.\nWorkshop Goal\nDomain-Specific Language Design and Implementation (DSLDI) is a workshop intended to bring together researchers and practitioners interested in discussing how DSLs should be designed, implemented, supported by tools, and applied in realistic contexts. The focus of the workshop is on all aspects of this process, from soliciting domain knowledge from experts, through the design and implementation of the language, to evaluating whether and how a DSL is successful. More generally, we are interested in continuing to build a community that can drive forward the development of modern DSLs.\nAn additional goal of this year\u2019s workshop is to encourage discussion about the usability of DSLs, and to establish connections with researchers in related areas, such as end-user software engineering, who have studied human factors of programming languages and tools. Our invited speaker (see below) was chosen with this goal in mind.\nWorkshop Format\nDSLDI is a single-day workshop and will consist of an invited speaker followed by moderated audience discussions structured around a series of short talks. The role of the talks is to facilitate interesting and substantive discussion. Therefore, we welcome and encourage talks that express strong opinions, describe open problems, propose new research directions, and report on early research in progress.\nProposed talks should be on topics within DSLDI\u2019s area of interest, which include but are not limited to: \n \n solicitation and representation of domain knowledge \n DSL design principles and processes \n DSL implementation techniques and language workbenches \n domain-specific optimizations \n human factors of DSLs \n tool support for DSL users \n community and educational support for DSL users \n applications of DSLs to existing and emerging domains \n studies of usability, performance, or other benefits of DSLs \n experience reports of DSLs deployed in practice \n\nInvited Speaker: Felienne Hermans\n\nBio: Felienne is assistant professor at Delft University of Technology, where she researches the world\u2019s most popular programming language: Excel. She is passionate about programming education for non-developers: her MOOC on programming in Excel has been followed by almost 100.000 people so far, and she teaches kids programming and robotics every Saturday at a local community center. She is also one of the founders of the Rotterdam-based developer\u2019s conference Joy of Coding, celebrating its fourth edition this year.",
      "Day": "2016-10-31",
      "Items": [
        "dsldi2016-the-dsga-model-of-dsl-design-domain-schema-grammar-actions",
        "dsldi2016-naturally-embedded-dsls",
        "dsldi2016-towards-explanation-oriented-introductory-programming",
        "dsldi2016-designscript-a-scalable-multi-paradigm-domain-specific-end-user-language-and-modelling-environment-for-architectural-computation"
      ],
      "Key": "1632cfd7-4e8d-4550-a435-0983fc619281",
      "Location": "Matterhorn 1",
      "Time": "13:30 - 15:10",
      "Title": "DSLDI 2016 - : Session 1",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "3rd Workshop on Reactive and Event-based Languages &amp; Systems (REBLS).\nReactive programming and event-based programming are two closely related programming styles that are becoming ever more important with the advent of advanced HPC technology and the ever increasing requirement for our applications to run on the web or on collaborating mobile devices. A number of publications on middleware and language design \u2014 so-called reactive and event-based languages and systems (REBLS) \u2014 have already seen the light, but the field still raises several questions. For example, the interaction with mainstream language concepts is poorly understood, implementation technology is in its infancy and modularity mechanisms are almost totally lacking. Moreover, large applications are still to be developed and patterns and tools for developing reactive applications is an area that is vastly unexplored.\nThis workshop will gather researchers in reactive and event-based languages and systems. The goal of the workshop is to exchange new technical research results and to define better the field by coming up with taxonomies and overviews of the existing work.\nPrevious editions\nREBLS\u201915\nREBLS\u201914\nREM\u201913",
      "Day": "2016-11-01",
      "Items": [
        "rebls2016-a-reactive-interpretation-of-session-based-concurrency-in-progress-paper-",
        "rebls2016-synchronous-reactive-web-programming",
        "rebls2016-towards-a-comprehensive-multitier-reactive-language",
        "rebls2016-i-now-pronounce-you-reactive-and-consistent-handling-distributed-and-replicated-state-in-reactive-programming"
      ],
      "Key": "45c40a26-8afc-497b-80ea-625db4bf8fc5",
      "Location": "Lausanne",
      "Time": "10:30 - 12:10",
      "Title": "REBLS 2016 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The 2016 edition of WODA features an outstanding line-up of invited speakers. The workshop is open to everybody interested.\nThe International Workshop on Dynamic Analysis (WODA) is the place where researchers interested in dynamic analysis and related topics can meet and discuss current research, issues, and trends in the field. WODA exists since 2003 and has been co-located with several different SE/PL conferences in the past, including ICSE, ISSTA, ASPLOS, and SPLASH.\nDynamic analysis is widely used in software development to understand various run-time properties of a program. Dynamic analysis includes both offline techniques, which operate on some captured representation of the program\u2019s behavior (e.g., a trace), and run-time techniques, which analyze the program on-the-fly as the system is executing. Though inherently incomplete, dynamic analyses are typically more precise than their static counterparts, and show promise in aiding the understanding, development, and maintenance of robust and reliable large-scale systems. Moreover, dynamic analyses can generate quantitative data that is useful for statistical inferences regarding the program\u2019s behavior.\nStarting from these motivations, the goal of WODA is to bring together researchers and practitioners working in all areas of dynamic analysis to discuss new perspectives and observations, share results and ongoing work, and establish collaborations. WODA serves as a forum for researchers and practitioners interested in the intersection of (some or all of) compilers, programming languages, architecture, software engineering, systems, high-performance computing, performance engineering, machine learning and data mining as tools to enable software and system behavior analysis.",
      "Chairs": [
        "michaelpradel",
        "omertripp"
      ],
      "ChairsString": "Michael Pradel and Omer Tripp",
      "Day": "2016-11-01",
      "Items": [
        "woda2016-invited-talk-ben-liblit",
        "woda2016-invited-talk-sam-guyer"
      ],
      "Key": "54f64dcb-2ba8-400f-a0ce-d0f46feb6972",
      "Location": "Winterthur",
      "Time": "13:30 - 15:10",
      "Title": "WODA 2016 - : Session 3",
      "Type": "Invited speakers"
    },
    {
      "Abstract": "The Meta\u201916 workshop aims to bring together researchers working on metaprogramming and reflection, as well as users building applications, language extensions such as contracts, or software tools. With the changing hardware and software landscape, and increased heterogeneity of systems, metaprogramming becomes an important research topic to handle the associate complexity once more. Contributions to the workshop are welcome on a wide range of topics related to design, implementation, and application of metaprogramming techniques, as well as empirical studies on and typing for such systems and languages.",
      "Chairs": ["ralflammel"],
      "ChairsString": "Ralf Lämmel",
      "Day": "2016-10-30",
      "Items": [
        "meta2016-evolution-of-metaprograms-xslt-as-a-metaprogramming-language",
        "meta2016-coloured-petri-nets-framework-for-simulating-method-invocations-on-context-oriented-software",
        "meta2016-implementation-of-lmntal-model-checkers-a-metaprogramming-approach"
      ],
      "Key": "e08bb209-b654-4fa7-a8ce-514bf7dd8582",
      "Location": "Matterhorn 3",
      "Time": "08:30 - 10:00",
      "Title": "META 2016 - : Model Checking and Transformation",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The -1th Workshop on New Object-Oriented Languages (NOOL) 2016.",
      "Chairs": ["julianafranco"],
      "ChairsString": "Juliana Franco",
      "Day": "2016-10-31",
      "Items": [
        "nool2016-polite-programmers-use-spaces-in-identifiers-when-needed",
        "nool2016-actors-and-hot-objects"
      ],
      "Key": "2481f372-65fb-4bc2-a48d-a5a0a5bde5c5",
      "Location": "Luzern",
      "Time": "10:30 - 12:10",
      "Title": "NOOL 2016 - : Politeness and Popularity ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The VMIL workshop is a forum for research in virtual machines and intermediate languages. It is dedicated to identifying programming mechanisms and constructs that are currently realized as code transformations or implemented in libraries but should rather be supported at VM level. Candidates for such mechanisms and constructs include modularity mechanisms (aspects, context-dependent layers), concurrency (threads and locking, actors, capsules, processes, software transactional memory), transactions, development tools (profilers, runtime verification), etc. Topics of interest include the investigation of which such mechanisms are worthwhile candidates for integration with the run-time environment, how said mechanisms can be elegantly (and reusably) expressed at the intermediate language level (e.g., in bytecode), how their implementations can be optimized, and how virtual machine architectures might be shaped to facilitate such implementation efforts.",
      "Chairs": ["tonyhosking"],
      "ChairsString": "Tony Hosking",
      "Day": "2016-10-31",
      "Items": [
        "vmil2016-opening-remarks",
        "vmil2016-the-good-the-good-enough-and-some-things-we-wish-we-had-done-differently-runtime-design-lessons-from-a-production-jvm",
        "vmil2016-extending-openjdk-to-support-hybrid-stm-htm"
      ],
      "Key": "90eecdbe-45ed-4372-b8f7-63ef487b410f",
      "Location": "St Gallen",
      "Time": "08:30 - 10:00",
      "Title": "VMIL 2016 - : Session 1",
      "Type": "Accepted Papers and Invited Speakers"
    },
    {
      "Abstract": "Mobile application use and development is experiencing enormous growth, and by 2016 more than 200 billion apps have been downloaded. The mobile domain presents new challenges to software engineering. Mobile platforms are rapidly changing, with diverse capabilities including various input modes, wireless communication types, on-device memory and disk capacities, and sensors. Applications function on wide ranges of platforms, requiring scaling according to hardware. Many applications interact with third-party services, requiring application development with effective security and authorization processes for those dataflows. \u201cBring your own device\u201d policies pose security challenges including employer and employee data privacy. Developing secure mobile applications requires new tools and practices such as improved refactoring tools for hybrid applications; polyglot applications; and testing techniques for multiple devices. This workshop aims to establish a community of researchers and practitioners, leading to further research in mobile development.\nKeynote\nWe\u2019re delighted to announce that Ivano Malavolta will be giving the workshop\u2019s keynote address: \u201cBeyond native apps: Web technologies to the rescue!\u201d",
      "Day": "2016-10-31",
      "Items": [
        "mobile2016-generative-programming-from-high-performance-to-safety-critical-applications",
        "mobile2016-scaling-android-user-interfaces-a-case-study-of-squid",
        "mobile2016-a-model-based-method-for-seamless-web-and-mobile-experience",
        "mobile2016-mobile-application-test-case-generation-focusing-on-external-events",
        "mobile2016-gui-and-usage-model-based-test-case-generation-for-android-applications-with-change-analysis"
      ],
      "Key": "ace631b6-9aef-40e7-bdde-f8774227e0fe",
      "Location": "Lausanne",
      "Time": "13:30 - 15:10",
      "Title": "Mobile! 2016 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Day": "2016-11-02",
      "Items": ["splash-2016-steering-committee-meetings-onward-steering-committee-meeting"],
      "Key": "03fdba83-dba4-4265-9f85-a5eb2d19f5c9",
      "Location": "Basel",
      "Time": "12:10 - 13:30",
      "Title": "ORG: Onward SC",
      "Type": "Planned Meetings"
    },
    {
      "Abstract": "Parsing@SLE 2016 is the fourth annual workshop on parsing programming languages. The intended participants are the authors of parser generation tools and parsers for programming languages and other software languages. For the purpose of this workshop \u201cparsing\u201d is a computation that takes a sequence of characters as input and produces a syntax tree or graph as output. This possibly includes tokenization using regular expressions, deriving trees using context-free grammars, and mapping to abstract syntax trees. The goal is to bring together today\u2019s experts in the field of parsing, in order to explore open questions and possibly forge new collaborations. The topics may include algorithms, implementation and generation techniques, syntax and semantics of meta formalisms (BNF), etc. We expect to attract participants that have been or are developing theory, techniques and tools in the broad area of parsing.",
      "Day": "2016-10-30",
      "Items": [
        "parsing2016-context-sensitive-parsing-through-stateful-parsing",
        "parsing2016-goodbye-chomsky-hello-tesni-re-replacing-constituency-with-dependency-in-software-languages",
        "parsing2016-deriving-grammar-transformations-for-developing-and-maintaining-multiple-parser-versions",
        "parsing2016-composition-of-independent-language-extensions-to-c"
      ],
      "Key": "e33f4b37-9537-48b1-ae04-6933d0f4f496",
      "Location": "Matterhorn 1",
      "Time": "13:30 - 15:10",
      "Title": "Parsing@SLE 2016 - : Third Session",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The AGERE! workshop is aimed at focusing on programming systems, languages and applications based on actors, active/concurrent objects, agents and \u2013 more generally \u2013 high-level programming paradigms promoting a mindset of decentralized control in solving problems and developing software. The workshop is designed to cover both the theory and the practice of design and programming, bringing together researchers working on models, languages and technologies, and practitioners developing real-world systems and applications.",
      "Day": "2016-10-30",
      "Items": [
        "agere2016-programming-actor-based-collective-adaptive-systems",
        "agere2016-separating-communication-concerns-in-concurrent-systems",
        "agere2016-discussion",
        "agere2016-closing"
      ],
      "Key": "e7487bb4-0090-44d9-9398-c29407cd5efa",
      "Location": "Luzern",
      "Time": "15:40 - 17:20",
      "Title": "AGERE 2016 - : Work-in-progress Papers 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The Symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal, but will not be defending their dissertation in the next 12 months.",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-ds-multitier-reactive-abstractions",
        "splash-2016-ds-scaling-testing-of-refactoring-engines"
      ],
      "Key": "e265079a-0236-490f-b565-34c573b3125e",
      "Location": "Geneva",
      "Time": "13:30 - 15:10",
      "Title": "Doctoral Symposium: Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The -1th Workshop on New Object-Oriented Languages (NOOL) 2016.",
      "Chairs": ["rolyperera"],
      "ChairsString": "Roly Perera",
      "Day": "2016-10-31",
      "Items": [
        "nool2016-welcome",
        "nool2016-the-essence-of-inheritance"
      ],
      "Key": "f44071fc-8506-4191-a1c8-b6a8431fdc82",
      "Location": "Luzern",
      "Time": "08:30 - 10:00",
      "Title": "NOOL 2016 - : Introductions and Inheritance",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Foundational Concepts of Computation\nConcepts that should inform how we teach programming from kindergarten to college.\nWe are in the middle of a historic opportunity in computer science education, with initiatives such as K12CS, CS4all, CAS, code.org, and national CS standards or curricula being developed in many countries including the UK, New Zealand, Australia and Israel. For that push to have the intended positive effect, the educational curricula and materials being developed have to be coherently built upon the foundational concepts of computer science. However, identifying the concepts (examples below) that are truly foundational has proven to be very difficult.\nComputer scientists have an obligation to educate the wider community about the principles of computing. We, as programming languages researchers, more specifically have an obligation to contribute to the computer science education community our understanding of the foundational concepts that underlie and should inform any use of programming languages.",
      "Chairs": ["steveblackburn"],
      "ChairsString": "Steve Blackburn",
      "Day": "2016-10-31",
      "Key": "30d36d2f-11ee-4f6e-9b27-81574563c3d5",
      "Location": "Winterthur",
      "Time": "08:30 - 10:00",
      "Title": "SPLASH-E: 1. Basics & Context",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "From Lisp, Snobol, and Smalltalk to Python, Racket, and Javascript, Dynamic Languages have been playing a fundamental role both in programming research and practice. The 12th Dynamic Languages Symposium (DLS) at SPLASH 2016 is the premier forum for researchers and practitioners to share research and experience on all aspects on Dynamic Languages.",
      "Chairs": ["giladbracha"],
      "ChairsString": "Gilad Bracha",
      "Day": "2016-11-01",
      "Items": [
        "dls-2016-papers-type-unsoundness-in-practice-an-empirical-study-of-dart",
        "dls-2016-papers-type-safety-analysis-for-dart",
        "dls-2016-papers-precise-and-scalable-static-analysis-of-jquery-using-a-regular-expression-domain",
        "dls-2016-papers-just-in-time-inheritance"
      ],
      "Key": "4a4b88b8-9310-4298-bf9e-bf7db70f89ff",
      "Location": "Matterhorn 1",
      "Time": "10:30 - 12:10",
      "Title": "DLS 2016 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Parsing@SLE 2016 is the fourth annual workshop on parsing programming languages. The intended participants are the authors of parser generation tools and parsers for programming languages and other software languages. For the purpose of this workshop \u201cparsing\u201d is a computation that takes a sequence of characters as input and produces a syntax tree or graph as output. This possibly includes tokenization using regular expressions, deriving trees using context-free grammars, and mapping to abstract syntax trees. The goal is to bring together today\u2019s experts in the field of parsing, in order to explore open questions and possibly forge new collaborations. The topics may include algorithms, implementation and generation techniques, syntax and semantics of meta formalisms (BNF), etc. We expect to attract participants that have been or are developing theory, techniques and tools in the broad area of parsing.",
      "Day": "2016-10-30",
      "Items": [
        "parsing2016-opening",
        "parsing2016-disambiguation-for-sdf3-with-deep-priority-conflicts",
        "parsing2016-multiple-input-gll-parsing",
        "parsing2016-demonstration-modularly-parsing-naturally-embedded-dsls-in-wyvern"
      ],
      "Key": "de1ebfdc-630b-4cfc-afb7-c670b8008c62",
      "Location": "Matterhorn 1",
      "Time": "08:30 - 10:00",
      "Title": "Parsing@SLE 2016 - : First Session",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Update: Deadline extension to August 15 12pm AOE\n(even if you haven\u2019t handed in your abstract yet)\nSubmission system now open: https://fosd16.hotcrp.com\nFeature orientation is an emerging paradigm of software development. It supports the automatic generation of large-scale software systems from a set of units of functionality, called features. The key idea of feature-oriented software development (FOSD) is to explicitly represent similarities and differences of a family of software systems for a given application domain (e.g., database systems, banking software, text processing systems) with the goal of reusing software artifacts among the family members. Features distinguish different members of the family by their variable parts. A feature is a unit of functionality that satisfies a requirement, represents a design decision, and provides a potential configuration option. A challenge in FOSD is that a feature does not map cleanly to an isolated module of code. Rather, it may affect (\u201ccut across\u201d) many components/artifacts of a software system. Furthermore, the decomposition of a software system into its features gives rise to a combinatorial explosion of possible feature combinations and interactions. Research on FOSD has shown that the concept of features pervades all phases of the software life cycle and requires a proper treatment in terms of analysis, design, and programming techniques, methods, languages, and tools, as well as formalisms and theory.",
      "Chairs": [
        "christophseidl",
        "leopoldoteixeira"
      ],
      "ChairsString": "Christoph Seidl and Leopoldo Teixeira",
      "Day": "2016-10-30",
      "Items": [
        "fosd2016-workshop-opening",
        "fosd2016-keynote-perspectives-of-projection-based-variation-control-systems"
      ],
      "Key": "0d7f0a8e-1664-4f4c-9313-18fe8e5e3a04",
      "Location": "Berlin",
      "Time": "08:30 - 10:00",
      "Title": "FOSD 2016 - : Session 1 - Opening + Keynote",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Onward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes, methods, languages, communities, and applications. Onward! is more radical, more visionary, and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about, approaching, and reporting on programming language and software engineering research.\nThe Character of Onward!\nOnward! is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But Onward! is not looking for research-as-usual papers\u2014conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments, which are necessary for scientific progress, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However, Onward! accepts less rigorous methods of validation such as compelling arguments, exploratory implementations, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.\nOnward! is reaching out for constructive criticism of current software development technology and practices, and to present ideas that could change the realm of software development. Experienced researchers, graduate students, practitioners, and anyone else dissatisfied with the state of our art is encouraged to share insights about how to reform software development.\nOnward! welcomes your submissions to join the conversation for the good of our field.",
      "Chairs": ["emersonmurphyhill"],
      "ChairsString": "Emerson Murphy-Hill",
      "Day": "2016-11-02",
      "Items": [
        "onward-2016-papers-doing-programming-experiments-without-programmers-and-programs-studying-the-effect-of-similarity-and-number-of-object-identifiers-on-the-readability-of-source-code-using-natural-texts",
        "onward-2016-papers-emergent-software-services",
        "onward-2016-papers-nez-practical-open-grammar-language",
        "onward-2016-papers-exploring-cheap-type-inference-heuristics-in-dynamically-typed-languages"
      ],
      "Key": "3a0c2127-4295-47cb-ba39-a0bc9f90ab53",
      "Location": "Zürich 2",
      "Time": "10:30 - 12:10",
      "Title": "Onward! 2016 - Onward! Papers: Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "From Lisp, Snobol, and Smalltalk to Python, Racket, and Javascript, Dynamic Languages have been playing a fundamental role both in programming research and practice. The 12th Dynamic Languages Symposium (DLS) at SPLASH 2016 is the premier forum for researchers and practitioners to share research and experience on all aspects on Dynamic Languages.",
      "Chairs": ["elisagonzalezboix"],
      "ChairsString": "Elisa Gonzalez Boix",
      "Day": "2016-11-01",
      "Items": [
        "dls-2016-papers-a-small-embedding-of-logic-programming-with-a-simple-complete-search",
        "dls-2016-papers-modular-semantic-actions",
        "dls-2016-papers-cross-language-compiler-benchmarking-are-we-fast-yet-"
      ],
      "Key": "822f3b6c-1354-4eef-bc56-59d194dc08a6",
      "Location": "Matterhorn 1",
      "Time": "15:40 - 17:20",
      "Title": "DLS 2016 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Update: Deadline extension to August 15 12pm AOE\n(even if you haven\u2019t handed in your abstract yet)\nSubmission system now open: https://fosd16.hotcrp.com\nFeature orientation is an emerging paradigm of software development. It supports the automatic generation of large-scale software systems from a set of units of functionality, called features. The key idea of feature-oriented software development (FOSD) is to explicitly represent similarities and differences of a family of software systems for a given application domain (e.g., database systems, banking software, text processing systems) with the goal of reusing software artifacts among the family members. Features distinguish different members of the family by their variable parts. A feature is a unit of functionality that satisfies a requirement, represents a design decision, and provides a potential configuration option. A challenge in FOSD is that a feature does not map cleanly to an isolated module of code. Rather, it may affect (\u201ccut across\u201d) many components/artifacts of a software system. Furthermore, the decomposition of a software system into its features gives rise to a combinatorial explosion of possible feature combinations and interactions. Research on FOSD has shown that the concept of features pervades all phases of the software life cycle and requires a proper treatment in terms of analysis, design, and programming techniques, methods, languages, and tools, as well as formalisms and theory.",
      "Day": "2016-10-30",
      "Items": [
        "fosd2016-formula-choice-calculus",
        "fosd2016-implicit-constraints-in-partial-feature-models",
        "fosd2016-towards-predicting-feature-defects-in-software-product-lines"
      ],
      "Key": "cf2ab101-ad13-4976-b9ec-6ce990e95aa7",
      "Location": "Berlin",
      "Time": "13:30 - 15:10",
      "Title": "FOSD 2016 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-keynotes-splash-steering-committee-report",
        "splash-2016-keynotes-splash-2016-general-chair-s-report",
        "splash-2016-keynotes-onward-program-chair-s-report",
        "splash-2016-keynotes-oopsla-2016-program-chair-s-report",
        "splash-2016-keynotes-sigplan-awards",
        "splash-2016-keynotes-proceedings-of-the-acm"
      ],
      "Key": "bbd03d21-445a-44fa-9c1d-cfb934976402",
      "Location": "Matterhorn 2",
      "Time": "17:30 - 18:30",
      "Title": "Keynotes and Awards: Business Meeting",
      "Type": "Keynotes and Awards"
    },
    {
      "Abstract": "Parsing@SLE 2016 is the fourth annual workshop on parsing programming languages. The intended participants are the authors of parser generation tools and parsers for programming languages and other software languages. For the purpose of this workshop \u201cparsing\u201d is a computation that takes a sequence of characters as input and produces a syntax tree or graph as output. This possibly includes tokenization using regular expressions, deriving trees using context-free grammars, and mapping to abstract syntax trees. The goal is to bring together today\u2019s experts in the field of parsing, in order to explore open questions and possibly forge new collaborations. The topics may include algorithms, implementation and generation techniques, syntax and semantics of meta formalisms (BNF), etc. We expect to attract participants that have been or are developing theory, techniques and tools in the broad area of parsing.",
      "Day": "2016-10-30",
      "Items": [
        "parsing2016-madfact-constructing-dictionaries",
        "parsing2016-there-s-more-than-one-way-to-skin-a-cat",
        "parsing2016-knowledge-based-support-for-domain-specific-language-generation",
        "parsing2016-parsing-in-k-framework"
      ],
      "Key": "3ec0548d-faeb-4bfb-9802-78fc4da7abab",
      "Location": "Matterhorn 1",
      "Time": "10:30 - 12:10",
      "Title": "Parsing@SLE 2016 - : Second Session",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The AGERE! workshop is aimed at focusing on programming systems, languages and applications based on actors, active/concurrent objects, agents and \u2013 more generally \u2013 high-level programming paradigms promoting a mindset of decentralized control in solving problems and developing software. The workshop is designed to cover both the theory and the practice of design and programming, bringing together researchers working on models, languages and technologies, and practitioners developing real-world systems and applications.",
      "Day": "2016-10-30",
      "Items": [
        "agere2016-interaction-protocols-in-the-jadel-programming-language",
        "agere2016-atomic-rmi-2-distributed-transactions-for-java",
        "agere2016-conflicting-goals-in-agent-oriented-programming",
        "agere2016-many-spiders-make-a-better-web-a-unified-web-based-actor-framework"
      ],
      "Key": "aa5d2dba-b27d-4b9a-8e4d-a4491c3df9ad",
      "Location": "Luzern",
      "Time": "10:30 - 12:10",
      "Title": "AGERE 2016 - : Proceeding Papers 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Chairs": [
        "emersonmurphyhill",
        "cristalopes"
      ],
      "ChairsString": "Emerson Murphy-Hill and Crista Lopes",
      "Day": "2016-11-04",
      "Items": [
        "splash-2016-keynotes-splash-2017",
        "splash-2016-keynotes-onward-most-notable-paper-award",
        "splash-2016-keynotes-student-awards",
        "splash-2016-keynotes-splash-2016-keynote-ko"
      ],
      "Key": "a76cfe97-5c1b-4f1c-9cf8-e44712fc4509",
      "Location": "Matterhorn 2",
      "Time": "08:30 - 10:00",
      "Title": "Keynotes and Awards: Keynote Friday",
      "Type": "Keynotes and Awards"
    },
    {
      "Abstract": "The Third International Workshop on Software Engineering for Parallel Systems\nThis workshop provides a stable forum for researchers and practitioners dealing with compelling challenges of the software development life cycle on modern parallel platforms. The increased complexity of parallel applications on modern parallel platforms (e.g. multicore/manycore, distributed or hybrid) requires more insight into development processes, and necessitates the use of advanced methods and techniques supporting developers in creating parallel applications or parallelizing and re-engineering sequential legacy applications. We aim to advance the state of the art in different phases of parallel software development, covering software engineering aspects such as requirements engineering and software specification; design and implementation; program analysis, profiling and tuning; testing and debugging.\nWorkshop Goal\nThe purpose of the workshop is to present a stimulating environment where topics relevant to parallel software engineering can be discussed by members of the SPLASH community and software and languages researchers. The intention of the workshop is to initiate collaborations focused on solving challenges introduced by ongoing research in the parallel programming field. Through Q&amp;A sessions, presenters have the opportunity to receive feedback and opinions of other domain experts as well as to discuss obstacles and promising approaches in current research. Both authors and attendees can discover new ideas and directions to solve software engineering issues related to parallel programming.",
      "Day": "2016-11-01",
      "Items": ["seps2016-tutorial-task-based-programming-for-embedded-multicore-systems"],
      "Key": "82a29d8d-b578-4967-bc15-3e22494b6a8a",
      "Location": "St Gallen",
      "Time": "13:30 - 15:10",
      "Title": "SEPS 2016 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Chairs": ["yannissmaragdakis"],
      "ChairsString": "Yannis Smaragdakis",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-keynotes-sigplan-oopsla-awards",
        "splash-2016-keynotes-splash-2016-keynote-martin-odersky"
      ],
      "Key": "9a16928c-c7fd-4766-8564-3a3d796147bd",
      "Location": "Matterhorn 2",
      "Time": "08:30 - 10:00",
      "Title": "Keynotes and Awards: Keynote Thursday",
      "Type": "Keynotes and Awards"
    },
    {
      "Abstract": "Update: Deadline extension to August 15 12pm AOE\n(even if you haven\u2019t handed in your abstract yet)\nSubmission system now open: https://fosd16.hotcrp.com\nFeature orientation is an emerging paradigm of software development. It supports the automatic generation of large-scale software systems from a set of units of functionality, called features. The key idea of feature-oriented software development (FOSD) is to explicitly represent similarities and differences of a family of software systems for a given application domain (e.g., database systems, banking software, text processing systems) with the goal of reusing software artifacts among the family members. Features distinguish different members of the family by their variable parts. A feature is a unit of functionality that satisfies a requirement, represents a design decision, and provides a potential configuration option. A challenge in FOSD is that a feature does not map cleanly to an isolated module of code. Rather, it may affect (\u201ccut across\u201d) many components/artifacts of a software system. Furthermore, the decomposition of a software system into its features gives rise to a combinatorial explosion of possible feature combinations and interactions. Research on FOSD has shown that the concept of features pervades all phases of the software life cycle and requires a proper treatment in terms of analysis, design, and programming techniques, methods, languages, and tools, as well as formalisms and theory.",
      "Day": "2016-10-30",
      "Items": [
        "fosd2016-variability-mining-of-state-charts",
        "fosd2016-featurecopp-compositional-annotations",
        "fosd2016-lightning-talk-comparing-variability-mechanisms-for-requirements-and-test-artifacts-in-behaviour-driven-development",
        "fosd2016-fine-grained-test-case-prioritization-for-integration-testing-of-delta-oriented-software-product-lines"
      ],
      "Key": "7833c414-868e-489e-a0ee-00a788c3f7bb",
      "Location": "Berlin",
      "Time": "15:40 - 17:20",
      "Title": "FOSD 2016 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Chairs": ["eelcovisser"],
      "ChairsString": "Eelco Visser",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-keynotes-welcome-to-splash-2016",
        "splash-2016-keynotes-oopsla-10-year-most-influential-paper-award",
        "splash-2016-keynotes-splash-2016-keynote"
      ],
      "Key": "b8f2fb0e-3cfa-4708-a188-a2f90c411e99",
      "Location": "Matterhorn 2",
      "Time": "08:30 - 10:00",
      "Title": "Keynotes and Awards: Keynote Wednesday",
      "Type": "Keynotes and Awards"
    },
    {
      "Abstract": "The SPLASH 2016 consists of the following events \n \n coffee, and tea breaks on all conference days \n lunches on all conference days \n workshops and co-located events poster reception in the Passenger Terminal Amsterdam on Monday \n SPLASH poster reception on Wednesday \n SPLASH banquet on Thursday",
      "Day": "2016-11-02",
      "Items": ["splash-2016-social-wednesday-poster-reception"],
      "Key": "cdb2cf4d-6515-469f-9018-fbe365d8dde0",
      "Location": "Foyer",
      "Time": "17:30 - 19:30",
      "Title": "Social Program: Wednesday Poster Reception",
      "Type": "Events"
    },
    {
      "Abstract": "The -1th Workshop on New Object-Oriented Languages (NOOL) 2016.",
      "Chairs": ["tobiaswrigstad"],
      "ChairsString": "Tobias Wrigstad",
      "Day": "2016-10-31",
      "Items": [
        "nool2016-nomen-a-dynamically-typed-oo-programming-language-transpiled-to-java",
        "nool2016-static-typing-without-static-types-typing-inheritance-from-the-bottom-up",
        "nool2016-the-essence-of-subclassing"
      ],
      "Key": "04e9d8d0-c8c4-4c08-88a8-9646add9acb8",
      "Location": "Luzern",
      "Time": "13:30 - 15:10",
      "Title": "NOOL 2016 - : Typing and Transpilation",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The Symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal, but will not be defending their dissertation in the next 12 months.",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-ds-spray-programming-with-a-persistent-distributed-heap",
        "splash-2016-ds-towards-practical-release-level-dynamic-software-updating-on-stock-java",
        "splash-2016-ds-how-to-get-your-ph-d-done"
      ],
      "Key": "1a83c1e8-3c9d-432f-939a-3e2a41c39573",
      "Location": "Geneva",
      "Time": "15:40 - 17:20",
      "Title": "Doctoral Symposium: Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The 2016 edition of WODA features an outstanding line-up of invited speakers. The workshop is open to everybody interested.\nThe International Workshop on Dynamic Analysis (WODA) is the place where researchers interested in dynamic analysis and related topics can meet and discuss current research, issues, and trends in the field. WODA exists since 2003 and has been co-located with several different SE/PL conferences in the past, including ICSE, ISSTA, ASPLOS, and SPLASH.\nDynamic analysis is widely used in software development to understand various run-time properties of a program. Dynamic analysis includes both offline techniques, which operate on some captured representation of the program\u2019s behavior (e.g., a trace), and run-time techniques, which analyze the program on-the-fly as the system is executing. Though inherently incomplete, dynamic analyses are typically more precise than their static counterparts, and show promise in aiding the understanding, development, and maintenance of robust and reliable large-scale systems. Moreover, dynamic analyses can generate quantitative data that is useful for statistical inferences regarding the program\u2019s behavior.\nStarting from these motivations, the goal of WODA is to bring together researchers and practitioners working in all areas of dynamic analysis to discuss new perspectives and observations, share results and ongoing work, and establish collaborations. WODA serves as a forum for researchers and practitioners interested in the intersection of (some or all of) compilers, programming languages, architecture, software engineering, systems, high-performance computing, performance engineering, machine learning and data mining as tools to enable software and system behavior analysis.",
      "Chairs": [
        "michaelpradel",
        "omertripp"
      ],
      "ChairsString": "Michael Pradel and Omer Tripp",
      "Day": "2016-11-01",
      "Items": [
        "woda2016-invited-talk-alastair-donaldson",
        "woda2016-invited-talk-yannis-smaragdakis"
      ],
      "Key": "91d42a51-91d3-4866-8f41-75898b81e338",
      "Location": "Winterthur",
      "Time": "15:40 - 17:20",
      "Title": "WODA 2016 - : Session 4",
      "Type": "Invited speakers"
    },
    {
      "Abstract": "",
      "Day": "2016-11-01",
      "Items": ["splash-2016-steering-committee-meetings-gpce-sle-steering-committee-meeting"],
      "Key": "543a708f-08da-43e8-b926-636d29a2df07",
      "Location": "Restaurant",
      "Time": "12:10 - 13:30",
      "Title": "ORG: GPCE/SLE SC",
      "Type": "Planned Meetings"
    },
    {
      "Abstract": "Domain-specific languages provide a viable and time-tested solution for continuing to raise the level of abstraction, and thus productivity, beyond coding, making systems development faster and easier. When accompanied with suitable automated modeling tools and generators it delivers to the promises of continuous delivery and devops.\nIn Domain-Specific Modeling (DSM) the models are constructed using concepts that represent things in the application domain, not concepts of a given programming language. The modeling language follows the domain abstractions and semantics, allowing developers to perceive them- selves as working directly with domain concepts. Together with frameworks and platforms, DSM can automate a large portion of software production.\nThe workshop format is a combination of presentations and demos along with group work sessions on selected topics. We also have a panel with industry experts on using DSM in the industry. All papers are available at http://www.dsmforum.org/events/DSM16/ and will be updated after the workshop with panel summary, group work discussion and presentation slides.",
      "Chairs": ["juhapekkatolvanen"],
      "ChairsString": "Juha-Pekka Tolvanen",
      "Day": "2016-10-30",
      "Items": [
        "dsm2016-panel-on-industrial-use-of-domain-specific-modeling",
        "dsm2016-group-work-topic-selection"
      ],
      "Key": "fec90393-4174-4681-86b7-ad61cf5f0ecd",
      "Location": "Hamburg",
      "Time": "13:30 - 15:10",
      "Title": "DSM 2016 - : Panel session",
      "Type": "Sessions"
    },
    {
      "Abstract": "The Third International Workshop on Software Engineering for Parallel Systems\nThis workshop provides a stable forum for researchers and practitioners dealing with compelling challenges of the software development life cycle on modern parallel platforms. The increased complexity of parallel applications on modern parallel platforms (e.g. multicore/manycore, distributed or hybrid) requires more insight into development processes, and necessitates the use of advanced methods and techniques supporting developers in creating parallel applications or parallelizing and re-engineering sequential legacy applications. We aim to advance the state of the art in different phases of parallel software development, covering software engineering aspects such as requirements engineering and software specification; design and implementation; program analysis, profiling and tuning; testing and debugging.\nWorkshop Goal\nThe purpose of the workshop is to present a stimulating environment where topics relevant to parallel software engineering can be discussed by members of the SPLASH community and software and languages researchers. The intention of the workshop is to initiate collaborations focused on solving challenges introduced by ongoing research in the parallel programming field. Through Q&amp;A sessions, presenters have the opportunity to receive feedback and opinions of other domain experts as well as to discuss obstacles and promising approaches in current research. Both authors and attendees can discover new ideas and directions to solve software engineering issues related to parallel programming.",
      "Day": "2016-11-01",
      "Items": ["seps2016-panel"],
      "Key": "d0e9a56e-c79b-4ab2-bd17-6720f802593c",
      "Location": "St Gallen",
      "Time": "15:40 - 17:20",
      "Title": "SEPS 2016 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The Symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal, but will not be defending their dissertation in the next 12 months.",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-ds-veritas-verification-of-type-system-specifications",
        "splash-2016-ds-language-support-for-verifiable-sdns"
      ],
      "Key": "7f4e776f-95df-48ec-a684-3101fedbf66c",
      "Location": "Geneva",
      "Time": "10:30 - 12:10",
      "Title": "Doctoral Symposium: Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Foundational Concepts of Computation\nConcepts that should inform how we teach programming from kindergarten to college.\nWe are in the middle of a historic opportunity in computer science education, with initiatives such as K12CS, CS4all, CAS, code.org, and national CS standards or curricula being developed in many countries including the UK, New Zealand, Australia and Israel. For that push to have the intended positive effect, the educational curricula and materials being developed have to be coherently built upon the foundational concepts of computer science. However, identifying the concepts (examples below) that are truly foundational has proven to be very difficult.\nComputer scientists have an obligation to educate the wider community about the principles of computing. We, as programming languages researchers, more specifically have an obligation to contribute to the computer science education community our understanding of the foundational concepts that underlie and should inform any use of programming languages.",
      "Day": "2016-10-31",
      "Key": "0fcfb7e3-b19d-4385-a78a-370ab6f828e9",
      "Location": "Winterthur",
      "Time": "15:40 - 17:20",
      "Title": "SPLASH-E: 4. How to Teach? (Lesson Plans)",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Domain-specific languages provide a viable and time-tested solution for continuing to raise the level of abstraction, and thus productivity, beyond coding, making systems development faster and easier. When accompanied with suitable automated modeling tools and generators it delivers to the promises of continuous delivery and devops.\nIn Domain-Specific Modeling (DSM) the models are constructed using concepts that represent things in the application domain, not concepts of a given programming language. The modeling language follows the domain abstractions and semantics, allowing developers to perceive them- selves as working directly with domain concepts. Together with frameworks and platforms, DSM can automate a large portion of software production.\nThe workshop format is a combination of presentations and demos along with group work sessions on selected topics. We also have a panel with industry experts on using DSM in the industry. All papers are available at http://www.dsmforum.org/events/DSM16/ and will be updated after the workshop with panel summary, group work discussion and presentation slides.",
      "Chairs": ["mattirossi"],
      "ChairsString": "Matti Rossi",
      "Day": "2016-10-30",
      "Items": [
        "dsm2016-model-driven-separation-of-concerns-for-service-robotics-kai-adam-arvid-butting-robert-heim-oliver-kautz-bernhard-rumpe-and-andreas-wortmann",
        "dsm2016-improving-maintenance-by-creating-a-dsl-for-configuring-a-fieldbus-mathijs-schuts-and-jozef-hooman",
        "dsm2016-cpal-high-level-abstractions-for-safe-embedded-systems-nicolas-navet-and-fejoz-lo-c",
        "dsm2016-a-safe-autonomous-vehicle-trajectory-domain-specific-modeling-language-for-non-expert-development-matt-bunting-yegeta-zeleke-kennon-mckeever-and-jonathan-sprinkle",
        "dsm2016-applying-test-driven-development-for-creating-and-refining-domain-specific-modeling-languages-and-generators-juha-pekka-tolvanen",
        "dsm2016-instance-modeling-assisted-by-an-optional-meta-level-riccardo-solmi"
      ],
      "Key": "f20bb25b-23d9-4e37-9aeb-6147226aee2a",
      "Location": "Hamburg",
      "Time": "10:30 - 12:10",
      "Title": "DSM 2016 - : Robotics and Safety",
      "Type": "Sessions"
    },
    {
      "Abstract": "Onward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes, methods, languages, communities, and applications. Onward! is more radical, more visionary, and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about, approaching, and reporting on programming language and software engineering research.\nThe Character of Onward!\nOnward! is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But Onward! is not looking for research-as-usual papers\u2014conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments, which are necessary for scientific progress, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However, Onward! accepts less rigorous methods of validation such as compelling arguments, exploratory implementations, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.\nOnward! is reaching out for constructive criticism of current software development technology and practices, and to present ideas that could change the realm of software development. Experienced researchers, graduate students, practitioners, and anyone else dissatisfied with the state of our art is encouraged to share insights about how to reform software development.\nOnward! welcomes your submissions to join the conversation for the good of our field.",
      "Chairs": ["hidehikomasuhara"],
      "ChairsString": "Hidehiko Masuhara",
      "Day": "2016-11-03",
      "Items": [
        "onward-2016-papers-object-spreadsheets-an-end-user-development-tool-for-web-applications-backed-by-entity-relationship-data",
        "onward-2016-papers-moldable-context-aware-searching-with-spotter"
      ],
      "Key": "6d110d43-5895-4d22-9fa1-b8c2716d6a1b",
      "Location": "Matterhorn 2",
      "Time": "15:40 - 16:30",
      "Title": "Onward! 2016 - Onward! Papers: Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Meta\u201916 workshop aims to bring together researchers working on metaprogramming and reflection, as well as users building applications, language extensions such as contracts, or software tools. With the changing hardware and software landscape, and increased heterogeneity of systems, metaprogramming becomes an important research topic to handle the associate complexity once more. Contributions to the workshop are welcome on a wide range of topics related to design, implementation, and application of metaprogramming techniques, as well as empirical studies on and typing for such systems and languages.",
      "Chairs": ["stefanmarr"],
      "ChairsString": "Stefan Marr",
      "Day": "2016-10-30",
      "Items": [
        "meta2016-a-model-for-reflection-in-rule-based-languages",
        "meta2016-instance-migration-in-dynamic-software-update",
        "meta2016-ast-specialisation-and-partial-evaluation-for-easy-high-performance-metaprogramming"
      ],
      "Key": "da959b59-2af8-46b8-86b9-f4fd0a5f892f",
      "Location": "Matterhorn 3",
      "Time": "10:30 - 12:10",
      "Title": "META 2016 - : Run-time Reflection",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The 7th Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU) at SPLASH 2016. The workshop will be held on Tuesday, November 1, 2016.\nTheme\nProgramming languages exist to enable programmers to develop software effectively. But how efficiently programmers can write software depends on the usability of the languages and tools that they develop with. The aim of this workshop is to discuss methods, metrics and techniques for evaluating the usability of languages and language tools. The supposed benefits of such languages and tools cover a large space, including making programs easier to read, write, and maintain; allowing programmers to write more flexible and powerful programs; and restricting programs to make them more safe and secure.\nPLATEAU gathers the intersection of researchers in the programming language, programming tool, and human-computer interaction communities to share their research and discuss the future of evaluation and usability of programming languages and tools.\nSome particular areas of interest are: \n \n empirical studies of programming languages \n methodologies and philosophies behind language and tool evaluation \n software design metrics and their relations to the underlying language \n user studies of language features and software engineering tools \n visual techniques for understanding programming languages \n critical comparisons of programming paradigms \n tools to support evaluating programming languages \n psychology of programming \n domain specific language (e.g. database languages, security/privacy languages, architecture description languages) usability and evaluation \n\nKeynote\nWe\u2019re delighted to announce that Alan Blackwell will be giving a keynote at PLATEAU 2016 on How to Design a Programming Language\nLinks \n \n Previous Workshops \n Facebook Group \n Mailing List",
      "Chairs": ["craiganslow"],
      "ChairsString": "Craig Anslow",
      "Day": "2016-11-01",
      "Items": [
        "plateau2016-a-quantitative-study-of-java-software-buildability",
        "plateau2016-benefits-of-session-types-for-software-development",
        "plateau2016-what-do-we-really-know-about-data-flow-languages-",
        "plateau2016-what-is-a-programming-language-really-"
      ],
      "Key": "a526ad86-27db-499b-b23e-e76e625c3ef5",
      "Location": "Matterhorn 2",
      "Time": "13:30 - 15:10",
      "Title": "PLATEAU 2016 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Mobile application use and development is experiencing enormous growth, and by 2016 more than 200 billion apps have been downloaded. The mobile domain presents new challenges to software engineering. Mobile platforms are rapidly changing, with diverse capabilities including various input modes, wireless communication types, on-device memory and disk capacities, and sensors. Applications function on wide ranges of platforms, requiring scaling according to hardware. Many applications interact with third-party services, requiring application development with effective security and authorization processes for those dataflows. \u201cBring your own device\u201d policies pose security challenges including employer and employee data privacy. Developing secure mobile applications requires new tools and practices such as improved refactoring tools for hybrid applications; polyglot applications; and testing techniques for multiple devices. This workshop aims to establish a community of researchers and practitioners, leading to further research in mobile development.\nKeynote\nWe\u2019re delighted to announce that Ivano Malavolta will be giving the workshop\u2019s keynote address: \u201cBeyond native apps: Web technologies to the rescue!\u201d",
      "Day": "2016-10-31",
      "Items": [
        "mobile2016-persistent-contextual-values-as-inter-process-layers",
        "mobile2016-hacking-with-multi-touch-for-java-mt4j-",
        "mobile2016-regression-aware-debugging-for-mobile-applications",
        "mobile2016-data-collection-requirements-for-mobile-connected-health-an-end-user-development-approach"
      ],
      "Key": "3ceb02c6-1118-40a1-9041-d18a9b0e1fb6",
      "Location": "Lausanne",
      "Time": "10:30 - 12:10",
      "Title": "Mobile! 2016 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The 7th Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU) at SPLASH 2016. The workshop will be held on Tuesday, November 1, 2016.\nTheme\nProgramming languages exist to enable programmers to develop software effectively. But how efficiently programmers can write software depends on the usability of the languages and tools that they develop with. The aim of this workshop is to discuss methods, metrics and techniques for evaluating the usability of languages and language tools. The supposed benefits of such languages and tools cover a large space, including making programs easier to read, write, and maintain; allowing programmers to write more flexible and powerful programs; and restricting programs to make them more safe and secure.\nPLATEAU gathers the intersection of researchers in the programming language, programming tool, and human-computer interaction communities to share their research and discuss the future of evaluation and usability of programming languages and tools.\nSome particular areas of interest are: \n \n empirical studies of programming languages \n methodologies and philosophies behind language and tool evaluation \n software design metrics and their relations to the underlying language \n user studies of language features and software engineering tools \n visual techniques for understanding programming languages \n critical comparisons of programming paradigms \n tools to support evaluating programming languages \n psychology of programming \n domain specific language (e.g. database languages, security/privacy languages, architecture description languages) usability and evaluation \n\nKeynote\nWe\u2019re delighted to announce that Alan Blackwell will be giving a keynote at PLATEAU 2016 on How to Design a Programming Language\nLinks \n \n Previous Workshops \n Facebook Group \n Mailing List",
      "Chairs": ["thomaslatoza"],
      "ChairsString": "Thomas LaToza",
      "Day": "2016-11-01",
      "Items": [
        "plateau2016-welcome-and-introduction",
        "plateau2016-alan-blackwell-plateau-keynote"
      ],
      "Key": "48ac9d15-8d17-4811-8f39-0a0473329a98",
      "Location": "Matterhorn 2",
      "Time": "08:30 - 10:00",
      "Title": "PLATEAU 2016 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The -1th Workshop on New Object-Oriented Languages (NOOL) 2016.",
      "Chairs": ["paleyli"],
      "ChairsString": "Paley Li",
      "Day": "2016-10-31",
      "Items": [
        "nool2016-situated-objects",
        "nool2016-towards-automatic-decoration",
        "nool2016-delegation-revisited"
      ],
      "Key": "918d401d-15a2-43fa-98a2-1c0c92c71207",
      "Location": "Luzern",
      "Time": "15:40 - 17:20",
      "Title": "NOOL 2016 - : Delegation and Decoration",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Domain-specific languages provide a viable and time-tested solution for continuing to raise the level of abstraction, and thus productivity, beyond coding, making systems development faster and easier. When accompanied with suitable automated modeling tools and generators it delivers to the promises of continuous delivery and devops.\nIn Domain-Specific Modeling (DSM) the models are constructed using concepts that represent things in the application domain, not concepts of a given programming language. The modeling language follows the domain abstractions and semantics, allowing developers to perceive them- selves as working directly with domain concepts. Together with frameworks and platforms, DSM can automate a large portion of software production.\nThe workshop format is a combination of presentations and demos along with group work sessions on selected topics. We also have a panel with industry experts on using DSM in the industry. All papers are available at http://www.dsmforum.org/events/DSM16/ and will be updated after the workshop with panel summary, group work discussion and presentation slides.",
      "Chairs": [
        "jonathansprinkle",
        "mattirossi",
        "juhapekkatolvanen"
      ],
      "ChairsString": "Jonathan Sprinkle, Matti Rossi and Juha-Pekka Tolvanen",
      "Day": "2016-10-30",
      "Items": [
        "dsm2016-group-work",
        "dsm2016-group-work-reporting-and-wrap-up"
      ],
      "Key": "c0adc2dc-bc67-454c-bc48-b26dad55a147",
      "Location": "Hamburg",
      "Time": "15:40 - 17:20",
      "Title": "DSM 2016 - : Group work session",
      "Type": "Sessions"
    },
    {
      "Abstract": "The 7th Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU) at SPLASH 2016. The workshop will be held on Tuesday, November 1, 2016.\nTheme\nProgramming languages exist to enable programmers to develop software effectively. But how efficiently programmers can write software depends on the usability of the languages and tools that they develop with. The aim of this workshop is to discuss methods, metrics and techniques for evaluating the usability of languages and language tools. The supposed benefits of such languages and tools cover a large space, including making programs easier to read, write, and maintain; allowing programmers to write more flexible and powerful programs; and restricting programs to make them more safe and secure.\nPLATEAU gathers the intersection of researchers in the programming language, programming tool, and human-computer interaction communities to share their research and discuss the future of evaluation and usability of programming languages and tools.\nSome particular areas of interest are: \n \n empirical studies of programming languages \n methodologies and philosophies behind language and tool evaluation \n software design metrics and their relations to the underlying language \n user studies of language features and software engineering tools \n visual techniques for understanding programming languages \n critical comparisons of programming paradigms \n tools to support evaluating programming languages \n psychology of programming \n domain specific language (e.g. database languages, security/privacy languages, architecture description languages) usability and evaluation \n\nKeynote\nWe\u2019re delighted to announce that Alan Blackwell will be giving a keynote at PLATEAU 2016 on How to Design a Programming Language\nLinks \n \n Previous Workshops \n Facebook Group \n Mailing List",
      "Day": "2016-11-01",
      "Items": [
        "plateau2016-group-exercise",
        "plateau2016-discussion-and-wrap-up"
      ],
      "Key": "6f392d50-407b-4934-aeac-f9e5ea4e50bd",
      "Location": "Matterhorn 2",
      "Time": "15:40 - 17:20",
      "Title": "PLATEAU 2016 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Parsing@SLE 2016 is the fourth annual workshop on parsing programming languages. The intended participants are the authors of parser generation tools and parsers for programming languages and other software languages. For the purpose of this workshop \u201cparsing\u201d is a computation that takes a sequence of characters as input and produces a syntax tree or graph as output. This possibly includes tokenization using regular expressions, deriving trees using context-free grammars, and mapping to abstract syntax trees. The goal is to bring together today\u2019s experts in the field of parsing, in order to explore open questions and possibly forge new collaborations. The topics may include algorithms, implementation and generation techniques, syntax and semantics of meta formalisms (BNF), etc. We expect to attract participants that have been or are developing theory, techniques and tools in the broad area of parsing.",
      "Day": "2016-10-30",
      "Items": [
        "parsing2016-generalised-parsing-and-combinator-parsing-a-happy-marriage-",
        "parsing2016-good-enough-for-you-explaining-ourselves-through-standard-challenges",
        "parsing2016-discussion-and-closing"
      ],
      "Key": "77d46f90-c56d-470c-b39e-b45c07906f11",
      "Location": "Matterhorn 1",
      "Time": "15:40 - 17:20",
      "Title": "Parsing@SLE 2016 - : Fourth Session",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Domain-specific languages provide a viable and time-tested solution for continuing to raise the level of abstraction, and thus productivity, beyond coding, making systems development faster and easier. When accompanied with suitable automated modeling tools and generators it delivers to the promises of continuous delivery and devops.\nIn Domain-Specific Modeling (DSM) the models are constructed using concepts that represent things in the application domain, not concepts of a given programming language. The modeling language follows the domain abstractions and semantics, allowing developers to perceive them- selves as working directly with domain concepts. Together with frameworks and platforms, DSM can automate a large portion of software production.\nThe workshop format is a combination of presentations and demos along with group work sessions on selected topics. We also have a panel with industry experts on using DSM in the industry. All papers are available at http://www.dsmforum.org/events/DSM16/ and will be updated after the workshop with panel summary, group work discussion and presentation slides.",
      "Chairs": ["jonathansprinkle"],
      "ChairsString": "Jonathan Sprinkle",
      "Day": "2016-10-30",
      "Items": [
        "dsm2016-introduction",
        "dsm2016-run-time-code-generators-for-model-level-debugging-in-domain-specific-modeling",
        "dsm2016-a-dsl-based-approach-for-elasticity-testing-of-cloud-system-michel-albonico-amine-benelallam-jean-marie-mottu-and-gerson-suny-",
        "dsm2016-designscript-a-domain-specific-language-for-architectural-computing-position-paper-robert-aish-and-emmanuel-mendoza"
      ],
      "Key": "1a948ea1-06da-4794-8629-c287e9f285cb",
      "Location": "Hamburg",
      "Time": "08:30 - 10:00",
      "Title": "DSM 2016 - : Introduction & Languages",
      "Type": "Sessions"
    },
    {
      "Abstract": "The Meta\u201916 workshop aims to bring together researchers working on metaprogramming and reflection, as well as users building applications, language extensions such as contracts, or software tools. With the changing hardware and software landscape, and increased heterogeneity of systems, metaprogramming becomes an important research topic to handle the associate complexity once more. Contributions to the workshop are welcome on a wide range of topics related to design, implementation, and application of metaprogramming techniques, as well as empirical studies on and typing for such systems and languages.",
      "Chairs": ["elisagonzalezboix"],
      "ChairsString": "Elisa Gonzalez Boix",
      "Day": "2016-10-30",
      "Items": [
        "meta2016-reflection-in-dart-a-cautionary-experience",
        "meta2016-chromakey-towards-extensible-mirror-architectures"
      ],
      "Key": "47d00785-5ded-452a-b184-f062218924bc",
      "Location": "Matterhorn 3",
      "Time": "15:40 - 17:20",
      "Title": "META 2016 - : Mirror-based Reflection",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "From Lisp, Snobol, and Smalltalk to Python, Racket, and Javascript, Dynamic Languages have been playing a fundamental role both in programming research and practice. The 12th Dynamic Languages Symposium (DLS) at SPLASH 2016 is the premier forum for researchers and practitioners to share research and experience on all aspects on Dynamic Languages.",
      "Day": "2016-11-01",
      "Items": ["dls-2016-papers-invited-talk"],
      "Key": "86c9ed02-05cf-493d-8e3f-159e7c78db49",
      "Location": "Matterhorn 1",
      "Time": "08:30 - 10:00",
      "Title": "DLS 2016 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Mobile application use and development is experiencing enormous growth, and by 2016 more than 200 billion apps have been downloaded. The mobile domain presents new challenges to software engineering. Mobile platforms are rapidly changing, with diverse capabilities including various input modes, wireless communication types, on-device memory and disk capacities, and sensors. Applications function on wide ranges of platforms, requiring scaling according to hardware. Many applications interact with third-party services, requiring application development with effective security and authorization processes for those dataflows. \u201cBring your own device\u201d policies pose security challenges including employer and employee data privacy. Developing secure mobile applications requires new tools and practices such as improved refactoring tools for hybrid applications; polyglot applications; and testing techniques for multiple devices. This workshop aims to establish a community of researchers and practitioners, leading to further research in mobile development.\nKeynote\nWe\u2019re delighted to announce that Ivano Malavolta will be giving the workshop\u2019s keynote address: \u201cBeyond native apps: Web technologies to the rescue!\u201d",
      "Day": "2016-10-31",
      "Items": [
        "mobile2016-group-activity-with-mobile-development-topic",
        "mobile2016-closing"
      ],
      "Key": "925f96fd-3f15-405f-92b6-3a237f0935d9",
      "Location": "Lausanne",
      "Time": "15:40 - 17:20",
      "Title": "Mobile! 2016 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Foundational Concepts of Computation\nConcepts that should inform how we teach programming from kindergarten to college.\nWe are in the middle of a historic opportunity in computer science education, with initiatives such as K12CS, CS4all, CAS, code.org, and national CS standards or curricula being developed in many countries including the UK, New Zealand, Australia and Israel. For that push to have the intended positive effect, the educational curricula and materials being developed have to be coherently built upon the foundational concepts of computer science. However, identifying the concepts (examples below) that are truly foundational has proven to be very difficult.\nComputer scientists have an obligation to educate the wider community about the principles of computing. We, as programming languages researchers, more specifically have an obligation to contribute to the computer science education community our understanding of the foundational concepts that underlie and should inform any use of programming languages.",
      "Chairs": ["steveblackburn"],
      "ChairsString": "Steve Blackburn",
      "Day": "2016-10-31",
      "Key": "9166d4e0-82a7-4fdf-87f6-96af8be61fd1",
      "Location": "Winterthur",
      "Time": "13:30 - 15:10",
      "Title": "SPLASH-E: 3. Which Concepts to Teach?",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The SPLASH 2016 consists of the following events \n \n coffee, and tea breaks on all conference days \n lunches on all conference days \n workshops and co-located events poster reception in the Passenger Terminal Amsterdam on Monday \n SPLASH poster reception on Wednesday \n SPLASH banquet on Thursday",
      "Day": "2016-11-03",
      "Key": "7b7363d2-033e-468e-8aee-d37ef777971e",
      "Location": "Beurs van Berlage",
      "Time": "19:30 - 22:30",
      "Title": "Social Program: Banquet",
      "Type": "Events"
    },
    {
      "Abstract": "The 2016 edition of WODA features an outstanding line-up of invited speakers. The workshop is open to everybody interested.\nThe International Workshop on Dynamic Analysis (WODA) is the place where researchers interested in dynamic analysis and related topics can meet and discuss current research, issues, and trends in the field. WODA exists since 2003 and has been co-located with several different SE/PL conferences in the past, including ICSE, ISSTA, ASPLOS, and SPLASH.\nDynamic analysis is widely used in software development to understand various run-time properties of a program. Dynamic analysis includes both offline techniques, which operate on some captured representation of the program\u2019s behavior (e.g., a trace), and run-time techniques, which analyze the program on-the-fly as the system is executing. Though inherently incomplete, dynamic analyses are typically more precise than their static counterparts, and show promise in aiding the understanding, development, and maintenance of robust and reliable large-scale systems. Moreover, dynamic analyses can generate quantitative data that is useful for statistical inferences regarding the program\u2019s behavior.\nStarting from these motivations, the goal of WODA is to bring together researchers and practitioners working in all areas of dynamic analysis to discuss new perspectives and observations, share results and ongoing work, and establish collaborations. WODA serves as a forum for researchers and practitioners interested in the intersection of (some or all of) compilers, programming languages, architecture, software engineering, systems, high-performance computing, performance engineering, machine learning and data mining as tools to enable software and system behavior analysis.",
      "Chairs": [
        "michaelpradel",
        "omertripp"
      ],
      "ChairsString": "Michael Pradel and Omer Tripp",
      "Day": "2016-11-01",
      "Items": [
        "woda2016-invited-talk-alessandra-gorla",
        "woda2016-invited-talk-benjamin-livshits",
        "woda2016-making-malory-behave-maliciously-targeted-fuzzing-of-android-applications"
      ],
      "Key": "80e6ad62-d0a0-4063-8b7f-e8c565a02a5f",
      "Location": "Winterthur",
      "Time": "10:30 - 12:10",
      "Title": "WODA 2016 - : Session 2",
      "Type": "Invited speakers"
    },
    {
      "Abstract": "Onward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes, methods, languages, communities, and applications. Onward! is more radical, more visionary, and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about, approaching, and reporting on programming language and software engineering research.\nThe Character of Onward!\nOnward! is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But Onward! is not looking for research-as-usual papers\u2014conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments, which are necessary for scientific progress, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However, Onward! accepts less rigorous methods of validation such as compelling arguments, exploratory implementations, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.\nOnward! is reaching out for constructive criticism of current software development technology and practices, and to present ideas that could change the realm of software development. Experienced researchers, graduate students, practitioners, and anyone else dissatisfied with the state of our art is encouraged to share insights about how to reform software development.\nOnward! welcomes your submissions to join the conversation for the good of our field.",
      "Chairs": ["jeffhuang"],
      "ChairsString": "Jeff Huang",
      "Day": "2016-11-02",
      "Items": [
        "onward-2016-papers-automatica-modular-feature-based-automation-programming",
        "onward-2016-papers-building-white-box-abstractions-by-program-refinement",
        "onward-2016-papers-function-passing-a-model-for-typed-distributed-functional-programming",
        "onward-2016-papers-extracting-code-from-programming-tutorial-videos"
      ],
      "Key": "6fdd7897-025d-4c77-aa1e-0d52857385a1",
      "Location": "Zürich 2",
      "Time": "15:40 - 17:20",
      "Title": "Onward! 2016 - Onward! Papers: Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Foundational Concepts of Computation\nConcepts that should inform how we teach programming from kindergarten to college.\nWe are in the middle of a historic opportunity in computer science education, with initiatives such as K12CS, CS4all, CAS, code.org, and national CS standards or curricula being developed in many countries including the UK, New Zealand, Australia and Israel. For that push to have the intended positive effect, the educational curricula and materials being developed have to be coherently built upon the foundational concepts of computer science. However, identifying the concepts (examples below) that are truly foundational has proven to be very difficult.\nComputer scientists have an obligation to educate the wider community about the principles of computing. We, as programming languages researchers, more specifically have an obligation to contribute to the computer science education community our understanding of the foundational concepts that underlie and should inform any use of programming languages.",
      "Chairs": ["matthiashauswirth"],
      "ChairsString": "Matthias Hauswirth",
      "Day": "2016-10-31",
      "Items": [
        "splash-2016-splash-e-the-dream-of-a-lifetime-shaping-how-our-children-learn-computing",
        "splash-2016-splash-e-snap-scheme-disguised-as-scratch"
      ],
      "Key": "70d98609-3376-4c9a-8fb4-ae55226132af",
      "Location": "Winterthur",
      "Time": "10:30 - 12:10",
      "Title": "SPLASH-E: 2. SPLASH-I talks (room Matterhorn 3!)",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Systems, Programming, Languages and Applications: Software for Humanity (SPLASH) conference is the premier conference at the intersection of programming languages and software engineering and embraces all aspects of software construction and delivery. Every year, SPLASH attracts over 500 attendees. Besides the keynotes, the conference will feature close to 100 talks by leading researchers in the field of Programming Languages and Software Engineering, and various opportunities for networking, especially valuable for students considering graduate school.\nThe purpose of Programming Languages Mentoring Workshop (PLMW) is to give promising students who consider pursuing a graduate degree in this field an overview of what research in this field looks like and how to get into and succeed in graduate school. In other words, a combination whirlwind tour of this research area, networking opportunity, and how-to-succeed guide. The program of PLMW will include talks by prominent researchers of the field of programming languages and software engineering providing an insight in their research. To learn more about PLMW, please see the SIGPLAN PLMW web page.\nThis year\u2019s PLMW at SPLASH takes place Tuesday November 1st and will feature talks by Andrew P. Black, Matthias Felleisen, Julia Lawall and Jan Vitek, with more to come (complete program will be announced beginning of August).",
      "Chairs": ["sandrineblazy"],
      "ChairsString": "Sandrine Blazy",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-plmw-welcome-and-overview",
        "splash-2016-plmw-real-researchers-allow-passion-to-guide-them"
      ],
      "Key": "2e4c7989-6b75-4332-8d61-42e99a57302e",
      "Location": "Hamburg",
      "Time": "08:30 - 10:00",
      "Title": "PLMW: Session 1",
      "Type": "Talks"
    },
    {
      "Abstract": "Update: Deadline extension to August 15 12pm AOE\n(even if you haven\u2019t handed in your abstract yet)\nSubmission system now open: https://fosd16.hotcrp.com\nFeature orientation is an emerging paradigm of software development. It supports the automatic generation of large-scale software systems from a set of units of functionality, called features. The key idea of feature-oriented software development (FOSD) is to explicitly represent similarities and differences of a family of software systems for a given application domain (e.g., database systems, banking software, text processing systems) with the goal of reusing software artifacts among the family members. Features distinguish different members of the family by their variable parts. A feature is a unit of functionality that satisfies a requirement, represents a design decision, and provides a potential configuration option. A challenge in FOSD is that a feature does not map cleanly to an isolated module of code. Rather, it may affect (\u201ccut across\u201d) many components/artifacts of a software system. Furthermore, the decomposition of a software system into its features gives rise to a combinatorial explosion of possible feature combinations and interactions. Research on FOSD has shown that the concept of features pervades all phases of the software life cycle and requires a proper treatment in terms of analysis, design, and programming techniques, methods, languages, and tools, as well as formalisms and theory.",
      "Day": "2016-10-30",
      "Items": [
        "fosd2016-are-deltas-projectable-using-peopl-an-example-scenario-and-case-study",
        "fosd2016-higher-order-delta-modeling-for-software-product-line-evolution",
        "fosd2016-name-resolution-strategies-in-variability-realization-languages-for-software-product-lines"
      ],
      "Key": "ee495cfd-5551-4462-bdff-6a46b90850a0",
      "Location": "Berlin",
      "Time": "10:30 - 12:10",
      "Title": "FOSD 2016 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Third International Workshop on Software Engineering for Parallel Systems\nThis workshop provides a stable forum for researchers and practitioners dealing with compelling challenges of the software development life cycle on modern parallel platforms. The increased complexity of parallel applications on modern parallel platforms (e.g. multicore/manycore, distributed or hybrid) requires more insight into development processes, and necessitates the use of advanced methods and techniques supporting developers in creating parallel applications or parallelizing and re-engineering sequential legacy applications. We aim to advance the state of the art in different phases of parallel software development, covering software engineering aspects such as requirements engineering and software specification; design and implementation; program analysis, profiling and tuning; testing and debugging.\nWorkshop Goal\nThe purpose of the workshop is to present a stimulating environment where topics relevant to parallel software engineering can be discussed by members of the SPLASH community and software and languages researchers. The intention of the workshop is to initiate collaborations focused on solving challenges introduced by ongoing research in the parallel programming field. Through Q&amp;A sessions, presenters have the opportunity to receive feedback and opinions of other domain experts as well as to discuss obstacles and promising approaches in current research. Both authors and attendees can discover new ideas and directions to solve software engineering issues related to parallel programming.",
      "Chairs": ["tamerdallou"],
      "ChairsString": "Tamer Dallou",
      "Day": "2016-11-01",
      "Items": [
        "seps2016-reducing-parallelizing-compilation-time-by-removing-redundant-analysis",
        "seps2016-a-divide-and-conquer-parallel-pattern-implementation-for-multicores",
        "seps2016-parallel-evaluation-of-a-dsp-algorithm-using-julia",
        "seps2016-exhaustive-analysis-of-thread-level-speculation"
      ],
      "Key": "0acad5bd-9e70-4ec8-8009-1afcc877fd06",
      "Location": "St Gallen",
      "Time": "10:30 - 12:10",
      "Title": "SEPS 2016 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Day": "2016-11-04",
      "Items": ["splash-2016-steering-committee-meetings-splash-2017-organizing-committee-meeting"],
      "Key": "73603ffb-b18f-417d-ae8d-9f7667451039",
      "Location": "Basel",
      "Time": "12:10 - 13:30",
      "Title": "ORG: SPLASH17 OC",
      "Type": "Planned Meetings"
    },
    {
      "Abstract": "The Systems, Programming, Languages and Applications: Software for Humanity (SPLASH) conference is the premier conference at the intersection of programming languages and software engineering and embraces all aspects of software construction and delivery. Every year, SPLASH attracts over 500 attendees. Besides the keynotes, the conference will feature close to 100 talks by leading researchers in the field of Programming Languages and Software Engineering, and various opportunities for networking, especially valuable for students considering graduate school.\nThe purpose of Programming Languages Mentoring Workshop (PLMW) is to give promising students who consider pursuing a graduate degree in this field an overview of what research in this field looks like and how to get into and succeed in graduate school. In other words, a combination whirlwind tour of this research area, networking opportunity, and how-to-succeed guide. The program of PLMW will include talks by prominent researchers of the field of programming languages and software engineering providing an insight in their research. To learn more about PLMW, please see the SIGPLAN PLMW web page.\nThis year\u2019s PLMW at SPLASH takes place Tuesday November 1st and will feature talks by Andrew P. Black, Matthias Felleisen, Julia Lawall and Jan Vitek, with more to come (complete program will be announced beginning of August).",
      "Chairs": ["ulrikschultz"],
      "ChairsString": "Ulrik Schultz",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-plmw-my-twenty-five-years-in-oo",
        "splash-2016-plmw-what-to-do-at-splash"
      ],
      "Key": "885c1209-6051-4c39-974a-d7a7d2d55f84",
      "Location": "Hamburg",
      "Time": "15:40 - 17:20",
      "Title": "PLMW: Session 4",
      "Type": "Talks"
    },
    {
      "Abstract": "The Meta\u201916 workshop aims to bring together researchers working on metaprogramming and reflection, as well as users building applications, language extensions such as contracts, or software tools. With the changing hardware and software landscape, and increased heterogeneity of systems, metaprogramming becomes an important research topic to handle the associate complexity once more. Contributions to the workshop are welcome on a wide range of topics related to design, implementation, and application of metaprogramming techniques, as well as empirical studies on and typing for such systems and languages.",
      "Chairs": ["shigeruchiba"],
      "ChairsString": "Shigeru Chiba",
      "Day": "2016-10-30",
      "Items": [
        "meta2016-declaratively-specifying-security-policies-for-web-applications",
        "meta2016-virtual-values-for-taint-and-information-flow-analysis",
        "meta2016-capability-safe-reflection-for-the-wyvern-language"
      ],
      "Key": "ce0960e9-bf10-4484-8985-34ce9f792755",
      "Location": "Matterhorn 3",
      "Time": "13:30 - 15:10",
      "Title": "META 2016 - : Security & Capability-based Designs",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The AGERE! workshop is aimed at focusing on programming systems, languages and applications based on actors, active/concurrent objects, agents and \u2013 more generally \u2013 high-level programming paradigms promoting a mindset of decentralized control in solving problems and developing software. The workshop is designed to cover both the theory and the practice of design and programming, bringing together researchers working on models, languages and technologies, and practitioners developing real-world systems and applications.",
      "Day": "2016-10-30",
      "Items": [
        "agere2016-actor-monitors-for-adaptive-behaviour",
        "agere2016-dynamic-path-contraction-for-distributed-dataflow-languages",
        "agere2016-shared-state-for-actors-pass-by-replication-semantics",
        "agere2016-towards-an-integration-of-the-actor-model-in-an-frp-language-for-small-scale-embedded-systems",
        "agere2016-towards-advanced-debugging-support-for-actor-languages"
      ],
      "Key": "5046705f-d6ba-4384-981c-01c15da0edc2",
      "Location": "Luzern",
      "Time": "13:30 - 15:10",
      "Title": "AGERE 2016 - : Work-in-progress Papers 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The VMIL workshop is a forum for research in virtual machines and intermediate languages. It is dedicated to identifying programming mechanisms and constructs that are currently realized as code transformations or implemented in libraries but should rather be supported at VM level. Candidates for such mechanisms and constructs include modularity mechanisms (aspects, context-dependent layers), concurrency (threads and locking, actors, capsules, processes, software transactional memory), transactions, development tools (profilers, runtime verification), etc. Topics of interest include the investigation of which such mechanisms are worthwhile candidates for integration with the run-time environment, how said mechanisms can be elegantly (and reusably) expressed at the intermediate language level (e.g., in bytecode), how their implementations can be optimized, and how virtual machine architectures might be shaped to facilitate such implementation efforts.",
      "Chairs": ["tonyhosking"],
      "ChairsString": "Tony Hosking",
      "Day": "2016-10-31",
      "Items": [
        "vmil2016-splash-e-keynote",
        "vmil2016-why-aren-t-more-users-more-happy-with-our-vms-"
      ],
      "Key": "9f8e6163-d687-4444-a6b5-bbe6f6b9144f",
      "Location": "St Gallen",
      "Time": "10:30 - 12:10",
      "Title": "VMIL 2016 - : Session 2",
      "Type": "Accepted Papers and Invited Speakers"
    },
    {
      "Abstract": "The VMIL workshop is a forum for research in virtual machines and intermediate languages. It is dedicated to identifying programming mechanisms and constructs that are currently realized as code transformations or implemented in libraries but should rather be supported at VM level. Candidates for such mechanisms and constructs include modularity mechanisms (aspects, context-dependent layers), concurrency (threads and locking, actors, capsules, processes, software transactional memory), transactions, development tools (profilers, runtime verification), etc. Topics of interest include the investigation of which such mechanisms are worthwhile candidates for integration with the run-time environment, how said mechanisms can be elegantly (and reusably) expressed at the intermediate language level (e.g., in bytecode), how their implementations can be optimized, and how virtual machine architectures might be shaped to facilitate such implementation efforts.",
      "Chairs": ["jeremysinger"],
      "ChairsString": "Jeremy Singer",
      "Day": "2016-10-31",
      "Items": [
        "vmil2016-bringing-low-level-languages-to-the-jvm-efficient-execution-of-llvm-ir-on-truffle",
        "vmil2016-improving-trace-based-jit-optimisation-using-whole-program-information",
        "vmil2016-rebuilding-an-airliner-in-flight-a-retrospective-on-refactoring-ibm-testarossa-production-compiler-for-eclipse-omr",
        "vmil2016-closing-remark"
      ],
      "Key": "e6a0a2fa-5837-4da8-81c9-ce22f4dcb219",
      "Location": "St Gallen",
      "Time": "15:40 - 17:20",
      "Title": "VMIL 2016 - : Session 4",
      "Type": "Accepted Papers and Invited Speakers"
    },
    {
      "Abstract": "Mobile application use and development is experiencing enormous growth, and by 2016 more than 200 billion apps have been downloaded. The mobile domain presents new challenges to software engineering. Mobile platforms are rapidly changing, with diverse capabilities including various input modes, wireless communication types, on-device memory and disk capacities, and sensors. Applications function on wide ranges of platforms, requiring scaling according to hardware. Many applications interact with third-party services, requiring application development with effective security and authorization processes for those dataflows. \u201cBring your own device\u201d policies pose security challenges including employer and employee data privacy. Developing secure mobile applications requires new tools and practices such as improved refactoring tools for hybrid applications; polyglot applications; and testing techniques for multiple devices. This workshop aims to establish a community of researchers and practitioners, leading to further research in mobile development.\nKeynote\nWe\u2019re delighted to announce that Ivano Malavolta will be giving the workshop\u2019s keynote address: \u201cBeyond native apps: Web technologies to the rescue!\u201d",
      "Day": "2016-10-31",
      "Items": [
        "mobile2016-opening",
        "mobile2016-beyond-native-apps-web-technologies-to-the-rescue-",
        "mobile2016-google-authentication-risks-on-ios",
        "mobile2016-managing-persistent-heap-in-nvram"
      ],
      "Key": "1e873894-9047-4dd3-8131-ff04223f814c",
      "Location": "Lausanne",
      "Time": "08:30 - 10:00",
      "Title": "Mobile! 2016 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The VMIL workshop is a forum for research in virtual machines and intermediate languages. It is dedicated to identifying programming mechanisms and constructs that are currently realized as code transformations or implemented in libraries but should rather be supported at VM level. Candidates for such mechanisms and constructs include modularity mechanisms (aspects, context-dependent layers), concurrency (threads and locking, actors, capsules, processes, software transactional memory), transactions, development tools (profilers, runtime verification), etc. Topics of interest include the investigation of which such mechanisms are worthwhile candidates for integration with the run-time environment, how said mechanisms can be elegantly (and reusably) expressed at the intermediate language level (e.g., in bytecode), how their implementations can be optimized, and how virtual machine architectures might be shaped to facilitate such implementation efforts.",
      "Chairs": ["tonyhosking"],
      "ChairsString": "Tony Hosking",
      "Day": "2016-10-31",
      "Items": [
        "vmil2016-webassembly-from-wire-to-machine-code-a-view-inside-v8-s-implementation",
        "vmil2016-the-seven-ages-of-virtual-machines-with-apologies-to-shakespeare-"
      ],
      "Key": "c1c2b2b4-aaaa-4ab7-b752-3b426aded8b0",
      "Location": "St Gallen",
      "Time": "13:30 - 15:10",
      "Title": "VMIL 2016 - : Session 3",
      "Type": "Accepted Papers and Invited Speakers"
    },
    {
      "Abstract": "The 2016 edition of WODA features an outstanding line-up of invited speakers. The workshop is open to everybody interested.\nThe International Workshop on Dynamic Analysis (WODA) is the place where researchers interested in dynamic analysis and related topics can meet and discuss current research, issues, and trends in the field. WODA exists since 2003 and has been co-located with several different SE/PL conferences in the past, including ICSE, ISSTA, ASPLOS, and SPLASH.\nDynamic analysis is widely used in software development to understand various run-time properties of a program. Dynamic analysis includes both offline techniques, which operate on some captured representation of the program\u2019s behavior (e.g., a trace), and run-time techniques, which analyze the program on-the-fly as the system is executing. Though inherently incomplete, dynamic analyses are typically more precise than their static counterparts, and show promise in aiding the understanding, development, and maintenance of robust and reliable large-scale systems. Moreover, dynamic analyses can generate quantitative data that is useful for statistical inferences regarding the program\u2019s behavior.\nStarting from these motivations, the goal of WODA is to bring together researchers and practitioners working in all areas of dynamic analysis to discuss new perspectives and observations, share results and ongoing work, and establish collaborations. WODA serves as a forum for researchers and practitioners interested in the intersection of (some or all of) compilers, programming languages, architecture, software engineering, systems, high-performance computing, performance engineering, machine learning and data mining as tools to enable software and system behavior analysis.",
      "Chairs": [
        "michaelpradel",
        "omertripp"
      ],
      "ChairsString": "Michael Pradel and Omer Tripp",
      "Day": "2016-11-01",
      "Items": [
        "woda2016-invited-talk-frank-tip",
        "woda2016-javascript-in-the-small"
      ],
      "Key": "043e4b53-8892-4b21-a781-c28c4eed5356",
      "Location": "Winterthur",
      "Time": "08:30 - 10:00",
      "Title": "WODA 2016 - : Session 1",
      "Type": "Invited speakers"
    },
    {
      "Abstract": "The SPLASH 2016 consists of the following events \n \n coffee, and tea breaks on all conference days \n lunches on all conference days \n workshops and co-located events poster reception in the Passenger Terminal Amsterdam on Monday \n SPLASH poster reception on Wednesday \n SPLASH banquet on Thursday",
      "Day": "2016-11-04",
      "Key": "234cd939-acc4-40ec-b7d2-06e947b99835",
      "Location": "Foyer",
      "Time": "17:00 - 18:00",
      "Title": "Social Program: Icecream Social",
      "Type": "Events"
    },
    {
      "Abstract": "The Systems, Programming, Languages and Applications: Software for Humanity (SPLASH) conference is the premier conference at the intersection of programming languages and software engineering and embraces all aspects of software construction and delivery. Every year, SPLASH attracts over 500 attendees. Besides the keynotes, the conference will feature close to 100 talks by leading researchers in the field of Programming Languages and Software Engineering, and various opportunities for networking, especially valuable for students considering graduate school.\nThe purpose of Programming Languages Mentoring Workshop (PLMW) is to give promising students who consider pursuing a graduate degree in this field an overview of what research in this field looks like and how to get into and succeed in graduate school. In other words, a combination whirlwind tour of this research area, networking opportunity, and how-to-succeed guide. The program of PLMW will include talks by prominent researchers of the field of programming languages and software engineering providing an insight in their research. To learn more about PLMW, please see the SIGPLAN PLMW web page.\nThis year\u2019s PLMW at SPLASH takes place Tuesday November 1st and will feature talks by Andrew P. Black, Matthias Felleisen, Julia Lawall and Jan Vitek, with more to come (complete program will be announced beginning of August).",
      "Chairs": ["ulrikschultz"],
      "ChairsString": "Ulrik Schultz",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-plmw-programing-languages-research-in-an-open-source-setting-the-coccinelle-experience",
        "splash-2016-plmw-networking-activity-1"
      ],
      "Key": "a6bdaf6a-7467-4da3-94e6-522fd23e856b",
      "Location": "Hamburg",
      "Time": "10:30 - 12:10",
      "Title": "PLMW: Session 2",
      "Type": "Talks"
    },
    {
      "Abstract": "From Lisp, Snobol, and Smalltalk to Python, Racket, and Javascript, Dynamic Languages have been playing a fundamental role both in programming research and practice. The 12th Dynamic Languages Symposium (DLS) at SPLASH 2016 is the premier forum for researchers and practitioners to share research and experience on all aspects on Dynamic Languages.",
      "Chairs": ["laurietratt"],
      "ChairsString": "Laurence Tratt",
      "Day": "2016-11-01",
      "Items": [
        "dls-2016-papers-parallel-virtual-machines-with-rpython",
        "dls-2016-papers-building-efficient-and-highly-run-time-adaptable-virtual-machines",
        "dls-2016-papers-efficiently-implementing-the-copy-semantics-of-matlab-s-arrays-in-javascript",
        "dls-2016-papers-optimizing-r-language-execution-via-aggressive-speculation"
      ],
      "Key": "684901db-f0f2-48ad-b9c8-b3569cc627b7",
      "Location": "Matterhorn 1",
      "Time": "13:30 - 15:10",
      "Title": "DLS 2016 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The SPLASH 2016 consists of the following events \n \n coffee, and tea breaks on all conference days \n lunches on all conference days \n workshops and co-located events poster reception in the Passenger Terminal Amsterdam on Monday \n SPLASH poster reception on Wednesday \n SPLASH banquet on Thursday",
      "Day": "2016-10-31",
      "Items": ["splash-2016-social-monday-poster-reception"],
      "Key": "8a0a7078-c12c-4b58-bd9f-2b5e560363ca",
      "Location": "PTA",
      "Time": "17:30 - 20:30",
      "Title": "Social Program: Monday Poster Reception",
      "Type": "Events"
    },
    {
      "Abstract": "Onward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes, methods, languages, communities, and applications. Onward! is more radical, more visionary, and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about, approaching, and reporting on programming language and software engineering research.\nThe Character of Onward!\nOnward! is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But Onward! is not looking for research-as-usual papers\u2014conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments, which are necessary for scientific progress, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However, Onward! accepts less rigorous methods of validation such as compelling arguments, exploratory implementations, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.\nOnward! is reaching out for constructive criticism of current software development technology and practices, and to present ideas that could change the realm of software development. Experienced researchers, graduate students, practitioners, and anyone else dissatisfied with the state of our art is encouraged to share insights about how to reform software development.\nOnward! welcomes your submissions to join the conversation for the good of our field.",
      "Chairs": ["veselinraychev"],
      "ChairsString": "Veselin Raychev",
      "Day": "2016-11-04",
      "Items": [
        "onward-2016-papers-exploring-the-role-of-sequential-computation-in-distributed-systems-motivating-a-programming-paradigm-shift",
        "onward-2016-papers-gramada-immediacy-in-programming-language-development",
        "onward-2016-papers-helping-johnny-encrypt-toward-semantic-interfaces-for-cryptographic-frameworks",
        "onward-2016-papers-leveraging-a-corpus-of-natural-language-descriptions-for-program-similarity"
      ],
      "Key": "bcfce21b-3c04-4261-9b33-7f706444b7b8",
      "Location": "Matterhorn 2",
      "Time": "10:30 - 12:10",
      "Title": "Onward! 2016 - Onward! Papers: Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "",
      "Day": "2016-11-03",
      "Items": ["splash-2016-steering-committee-meetings-splash-steering-committee-meeting"],
      "Key": "21bf494a-2f9c-4081-bd0b-cef80afab0b2",
      "Location": "Basel",
      "Time": "12:10 - 13:30",
      "Title": "ORG: SPLASH SC",
      "Type": "Planned Meetings"
    },
    {
      "Abstract": "The 7th Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU) at SPLASH 2016. The workshop will be held on Tuesday, November 1, 2016.\nTheme\nProgramming languages exist to enable programmers to develop software effectively. But how efficiently programmers can write software depends on the usability of the languages and tools that they develop with. The aim of this workshop is to discuss methods, metrics and techniques for evaluating the usability of languages and language tools. The supposed benefits of such languages and tools cover a large space, including making programs easier to read, write, and maintain; allowing programmers to write more flexible and powerful programs; and restricting programs to make them more safe and secure.\nPLATEAU gathers the intersection of researchers in the programming language, programming tool, and human-computer interaction communities to share their research and discuss the future of evaluation and usability of programming languages and tools.\nSome particular areas of interest are: \n \n empirical studies of programming languages \n methodologies and philosophies behind language and tool evaluation \n software design metrics and their relations to the underlying language \n user studies of language features and software engineering tools \n visual techniques for understanding programming languages \n critical comparisons of programming paradigms \n tools to support evaluating programming languages \n psychology of programming \n domain specific language (e.g. database languages, security/privacy languages, architecture description languages) usability and evaluation \n\nKeynote\nWe\u2019re delighted to announce that Alan Blackwell will be giving a keynote at PLATEAU 2016 on How to Design a Programming Language\nLinks \n \n Previous Workshops \n Facebook Group \n Mailing List",
      "Chairs": ["joshuasunshine"],
      "ChairsString": "Joshua Sunshine",
      "Day": "2016-11-01",
      "Items": [
        "plateau2016-discount-method-for-programming-language-evaluation",
        "plateau2016-does-live-programming-help-program-comprehension-a-user-study-with-live-robot-programming",
        "plateau2016-angularjs-in-the-wild-a-survey-with-460-developers"
      ],
      "Key": "f7c1c2da-7c92-4c42-96d8-5efe6d32d7b4",
      "Location": "Matterhorn 2",
      "Time": "10:30 - 12:10",
      "Title": "PLATEAU 2016 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The AGERE! workshop is aimed at focusing on programming systems, languages and applications based on actors, active/concurrent objects, agents and \u2013 more generally \u2013 high-level programming paradigms promoting a mindset of decentralized control in solving problems and developing software. The workshop is designed to cover both the theory and the practice of design and programming, bringing together researchers working on models, languages and technologies, and practitioners developing real-world systems and applications.",
      "Day": "2016-10-30",
      "Items": [
        "agere2016-welcome",
        "agere2016-43-years-of-actors-a-taxonomy-of-actor-models-and-their-key-properties",
        "agere2016-pluggable-scheduling-for-the-reactor-programming-model",
        "agere2016-an-extension-of-agentspeak-l-and-jason-tailored-to-programming-and-software-development"
      ],
      "Key": "b5541da4-df4f-4d62-a760-2b4aa1660e3b",
      "Location": "Luzern",
      "Time": "08:30 - 10:00",
      "Title": "AGERE 2016 - : Proceeding Papers 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Systems, Programming, Languages and Applications: Software for Humanity (SPLASH) conference is the premier conference at the intersection of programming languages and software engineering and embraces all aspects of software construction and delivery. Every year, SPLASH attracts over 500 attendees. Besides the keynotes, the conference will feature close to 100 talks by leading researchers in the field of Programming Languages and Software Engineering, and various opportunities for networking, especially valuable for students considering graduate school.\nThe purpose of Programming Languages Mentoring Workshop (PLMW) is to give promising students who consider pursuing a graduate degree in this field an overview of what research in this field looks like and how to get into and succeed in graduate school. In other words, a combination whirlwind tour of this research area, networking opportunity, and how-to-succeed guide. The program of PLMW will include talks by prominent researchers of the field of programming languages and software engineering providing an insight in their research. To learn more about PLMW, please see the SIGPLAN PLMW web page.\nThis year\u2019s PLMW at SPLASH takes place Tuesday November 1st and will feature talks by Andrew P. Black, Matthias Felleisen, Julia Lawall and Jan Vitek, with more to come (complete program will be announced beginning of August).",
      "Chairs": ["sandrineblazy"],
      "ChairsString": "Sandrine Blazy",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-plmw-why-programming-languages-matter",
        "splash-2016-plmw-panel-young-researchers"
      ],
      "Key": "a32bc133-0304-42fb-97d8-dc0b9ec246e0",
      "Location": "Hamburg",
      "Time": "13:30 - 15:10",
      "Title": "PLMW: Session 3",
      "Type": "Talks"
    },
    {
      "Abstract": "The Third International Workshop on Software Engineering for Parallel Systems\nThis workshop provides a stable forum for researchers and practitioners dealing with compelling challenges of the software development life cycle on modern parallel platforms. The increased complexity of parallel applications on modern parallel platforms (e.g. multicore/manycore, distributed or hybrid) requires more insight into development processes, and necessitates the use of advanced methods and techniques supporting developers in creating parallel applications or parallelizing and re-engineering sequential legacy applications. We aim to advance the state of the art in different phases of parallel software development, covering software engineering aspects such as requirements engineering and software specification; design and implementation; program analysis, profiling and tuning; testing and debugging.\nWorkshop Goal\nThe purpose of the workshop is to present a stimulating environment where topics relevant to parallel software engineering can be discussed by members of the SPLASH community and software and languages researchers. The intention of the workshop is to initiate collaborations focused on solving challenges introduced by ongoing research in the parallel programming field. Through Q&amp;A sessions, presenters have the opportunity to receive feedback and opinions of other domain experts as well as to discuss obstacles and promising approaches in current research. Both authors and attendees can discover new ideas and directions to solve software engineering issues related to parallel programming.",
      "Day": "2016-11-01",
      "Items": ["seps2016-keynote"],
      "Key": "f6b08d53-78c7-449c-afff-709f4ef04736",
      "Location": "St Gallen",
      "Time": "08:30 - 10:00",
      "Title": "SEPS 2016 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The Symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal, but will not be defending their dissertation in the next 12 months.",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-ds-welcome",
        "splash-2016-ds-lightning-talks",
        "splash-2016-ds-integrating-concerns-with-development-environments",
        "splash-2016-ds-dedicated-support-for-analyses-and-optimizations-in-language-workbenches"
      ],
      "Key": "0caa81bb-1838-43df-9fe8-29cea5b00518",
      "Location": "Geneva",
      "Time": "08:30 - 10:00",
      "Title": "Doctoral Symposium: Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Chairs": ["inaschaefer"],
      "ChairsString": "Ina Schaefer",
      "Day": "2016-10-31",
      "Items": ["gpce-2016-papers-tiark-rompf-lightweight-modular-staging-lms-generate-all-the-things-"],
      "Key": "c037332b-744f-480a-95d5-589e3dfe4db1",
      "Location": "Zürich 2",
      "Time": "08:30 - 10:00",
      "Title": "GPCE 2016 - : Keynote",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Chairs": ["tonysloane"],
      "ChairsString": "Tony Sloane",
      "Day": "2016-11-01",
      "Items": [
        "sle-2016-papers-towards-a-universal-code-formatter-through-machine-learning",
        "sle-2016-papers-the-ide-portability-problem-and-its-solution-in-monto",
        "sle-2016-papers-principled-syntactic-code-completion-using-placeholders",
        "sle-2016-papers-tool-demo-drast-an-inspection-tool-for-attributed-syntax-trees"
      ],
      "Key": "c2edb223-520e-407e-8d17-c0c19e5bda45",
      "Location": "Zürich 2",
      "Time": "10:30 - 12:10",
      "Title": "SLE 2016 - : Development Environments",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Chairs": ["jordicabot"],
      "ChairsString": "Jordi Cabot",
      "Day": "2016-10-31",
      "Items": [
        "sle-2016-papers-language-design-and-implementation-for-the-domain-of-coding-conventions",
        "sle-2016-papers-bsml-mbeddr-integrating-semantically-configurable-state-machine-models-in-a-c-programming-environment",
        "sle-2016-papers-adding-tolerance-and-units-to-quantity-types-in-software-models",
        "sle-2016-papers-full-fledge-role-modeling-editor-framed-",
        "sle-2016-papers-awards"
      ],
      "Key": "a5675668-78a0-4d9e-bded-0a7780128c23",
      "Location": "Zürich 2",
      "Time": "15:40 - 17:20",
      "Title": "SLE 2016 - : Domain-Specific Languages",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Day": "2016-10-31",
      "Items": [
        "scala-2016-using-scala-s-pattern-matching-features-for-an-attribute-grammar-formalisation-of-the-css-layout-specification",
        "scala-2016-the-sbt-rats-parser-generator-plugin-for-scala",
        "scala-2016-unconference-2"
      ],
      "Key": "13418e3d-5436-4722-ac68-bde4e5f7f2d4",
      "Location": "Matterhorn 2",
      "Time": "15:40 - 17:20",
      "Title": "Scala 2016 - : Parsing",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Chairs": ["philipphaller"],
      "ChairsString": "Philipp Haller",
      "Day": "2016-10-31",
      "Items": [
        "scala-2016-smt-based-checking-of-qualified-types-for-scala",
        "scala-2016-a-scala-library-for-testing-student-assignments-on-concurrent-programming",
        "scala-2016-building-a-modular-static-analysis-framework-in-scala",
        "scala-2016-automatically-finding-scala-soundness-bugs"
      ],
      "Key": "5593679a-3100-4dae-8318-f64a79640f6d",
      "Location": "Matterhorn 2",
      "Time": "13:30 - 15:10",
      "Title": "Scala 2016 - : Analysis, Testing & Verification",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Day": "2016-10-31",
      "Items": [
        "scala-2016-opening-day-2",
        "scala-2016-this-is-not-a-type-gradual-typing-in-practice-keynote-"
      ],
      "Key": "a4f85c5b-ed02-4eaf-94a1-2fe63f47b1a4",
      "Location": "Matterhorn 2",
      "Time": "08:30 - 10:00",
      "Title": "Scala 2016 - : Keynote 2",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Chairs": ["sebastiendoeraene"],
      "ChairsString": "Sébastien Doeraene",
      "Day": "2016-10-31",
      "Items": [
        "scala-2016-practical-aggregate-programming-in-scala",
        "scala-2016-dynaml-a-scala-machine-learning-environment",
        "scala-2016-scala-gopher-csp-style-programming-techniques-with-idiomatic-scala-",
        "scala-2016-reactive-async-expressive-deterministic-concurrency"
      ],
      "Key": "5a996b09-31df-4019-8a7f-bf87996c7a22",
      "Location": "Matterhorn 2",
      "Time": "10:30 - 12:10",
      "Title": "Scala 2016 - : Reactive, Concurrent, Distributed Computation | Parsing",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Day": "2016-10-30",
      "Items": [
        "scala-2016-randir-differential-testing-for-embedded-compilers",
        "scala-2016-reflections-on-lms-exploring-front-end-alternatives",
        "scala-2016-scala-embedding-of-secure-computations",
        "scala-2016-towards-a-scala-embedded-information-system-description-dsl"
      ],
      "Key": "3f0d512e-f4a6-4352-9b35-77c6c7540121",
      "Location": "Matterhorn 2",
      "Time": "13:30 - 15:10",
      "Title": "Scala 2016 - : Embedding",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Chairs": ["berndfischer"],
      "ChairsString": "Bernd Fischer",
      "Day": "2016-11-01",
      "Items": [
        "gpce-2016-papers-automated-regression-testing-of-bpmn-2-0-processes-a-capture-replay-framework-for-continuous-delivery",
        "gpce-2016-papers-a-vision-for-online-verification-validation",
        "gpce-2016-papers-automatic-non-functional-testing-of-code-generators-families"
      ],
      "Key": "beb0a10b-418a-4873-b027-858adb3fdacd",
      "Location": "Zürich 1",
      "Time": "15:40 - 17:20",
      "Title": "GPCE 2016 - : Testing and Verification",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Chairs": ["shigeruchiba"],
      "ChairsString": "Shigeru Chiba",
      "Day": "2016-10-31",
      "Items": [
        "gpce-2016-papers-recaf-java-dialects-as-libraries",
        "gpce-2016-papers-classless-java",
        "gpce-2016-papers-extensible-modeling-with-managed-data-in-java"
      ],
      "Key": "e1181de1-fbb8-469c-bb2d-25c27bf387e2",
      "Location": "Zürich 1",
      "Time": "10:30 - 12:10",
      "Title": "GPCE 2016 - : Generative Programming I",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Chairs": ["terenceparr"],
      "ChairsString": "Terence Parr",
      "Day": "2016-10-31",
      "Items": [
        "sle-2016-papers-opening",
        "sle-2016-papers-parsing-and-reflective-printing-bidirectionally",
        "sle-2016-papers-taming-context-sensitive-languages-with-principled-stateful-parsing",
        "sle-2016-papers-metaedit-for-collaborative-language-engineering-and-language-use-tool-demonstration",
        "sle-2016-papers-efficient-development-of-consistent-projectional-editors-using-grammar-cells"
      ],
      "Key": "3cc64455-8a75-4c0f-91c0-180d592f9ee4",
      "Location": "Zürich 2",
      "Time": "10:30 - 12:10",
      "Title": "SLE 2016 - : Grammars and Parsing",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Chairs": ["ralflammel"],
      "ChairsString": "Ralf Lämmel",
      "Day": "2016-11-01",
      "Items": [
        "sle-2016-papers-automated-testing-support-for-reactive-domain-specific-modelling-languages",
        "sle-2016-papers-side-effects-take-the-blame",
        "sle-2016-papers-symbolic-execution-of-high-level-transformations",
        "sle-2016-papers-tool-demo-raincode-assembler-compiler"
      ],
      "Key": "b563ec80-9e96-4c89-bc25-a0968b878ac6",
      "Location": "Zürich 2",
      "Time": "13:30 - 15:10",
      "Title": "SLE 2016 - : Language Validation",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Day": "2016-11-01",
      "Items": ["gpce-2016-papers-gpce-sle-dinner"],
      "Key": "8a42fc3f-732e-4ce5-ba0f-01759e106525",
      "Location": "Fifteen",
      "Time": "18:30 - 22:30",
      "Title": "GPCE 2016 - : GPCE & SLE Dinner",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Chairs": ["ulrikschultz"],
      "ChairsString": "Ulrik Schultz",
      "Day": "2016-10-31",
      "Items": [
        "gpce-2016-papers-actor-profiling-in-virtual-execution-environments",
        "gpce-2016-papers-bootstrapping-domain-specific-meta-languages-in-language-workbenches",
        "gpce-2016-papers-dependence-driven-delimited-cps-transformation-for-javascript"
      ],
      "Key": "633705b5-174b-4bde-b6c2-68c67a1ee071",
      "Location": "Zürich 1",
      "Time": "13:30 - 15:10",
      "Title": "GPCE 2016 - : Generative Programming II",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Chairs": ["gorelhedin1"],
      "ChairsString": "Görel Hedin",
      "Day": "2016-11-01",
      "Items": [
        "sle-2016-papers-efficient-model-partitioning-for-distributed-model-transformations",
        "sle-2016-papers-coupled-software-transformations-revisited",
        "sle-2016-papers-xdiagram-tool-demonstration-a-declarative-textual-dsl-for-describing-diagram-editors",
        "sle-2016-papers-closing"
      ],
      "Key": "50d6e3b7-9de4-45f8-8c3b-dee410279d37",
      "Location": "Zürich 2",
      "Time": "15:40 - 17:20",
      "Title": "SLE 2016 - : Model Transformation",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Day": "2016-10-30",
      "Items": [
        "scala-2016-revisiting-the-cake-pattern-scaling-scalable-component-abstractions-",
        "scala-2016-teaching-concepts-of-programming-languages-with-definitional-interpreters-in-scala-and-the-weblab-learning-management-system-an-experience-report",
        "scala-2016-unconference"
      ],
      "Key": "89a5fadb-c570-4c59-affd-a9b974037b99",
      "Location": "Matterhorn 2",
      "Time": "15:40 - 17:20",
      "Title": "Scala 2016 - : Types and Embedding",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Chairs": ["julialawall"],
      "ChairsString": "Julia Lawall",
      "Day": "2016-10-31",
      "Items": [
        "gpce-2016-papers-synthesizing-regular-expressions-from-examples-for-introductory-automata-assignments",
        "gpce-2016-papers-programmable-semantic-fragments",
        "gpce-2016-papers-delaying-decisions-in-variable-concern-hierarchies",
        "gpce-2016-papers-automatic-code-generation-in-practice-experiences-with-embedded-robot-controllers"
      ],
      "Key": "746df357-a1c9-4fec-b1cd-0f4f3b53a19f",
      "Location": "Zürich 1",
      "Time": "15:40 - 17:20",
      "Title": "GPCE 2016 - : Code Generation and Synthesis",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Day": "2016-10-30",
      "Items": [
        "scala-2016-opening",
        "scala-2016-fine-grained-language-composition-without-a-common-vm"
      ],
      "Key": "1f20eef6-0b01-479a-a791-edc9062629af",
      "Location": "Matterhorn 2",
      "Time": "08:30 - 10:00",
      "Title": "Scala 2016 - : Keynote 1",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Chairs": ["julialawall"],
      "ChairsString": "Julia Lawall",
      "Day": "2016-10-31",
      "Items": [
        "sle-2016-papers-experiences-of-models-run-time-with-emf-and-cdo",
        "sle-2016-papers-runtime-support-for-rule-based-access-control-evaluation-through-model-transformation",
        "sle-2016-papers-object-oriented-design-pattern-for-dsl-program-monitoring",
        "sle-2016-papers-execution-framework-of-the-gemoc-studio-tool-demo-"
      ],
      "Key": "d445f174-23ab-4aec-819b-62af4b5633dd",
      "Location": "Zürich 2",
      "Time": "13:30 - 15:10",
      "Title": "SLE 2016 - : Runtime Techniques",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Chairs": ["tijsvanderstorm"],
      "ChairsString": "Tijs van der Storm",
      "Day": "2016-11-01",
      "Items": ["sle-2016-papers-redex-lightweight-semantics-engineering"],
      "Key": "7a3cfc60-71fa-422e-b58a-977fff8d7351",
      "Location": "Zürich 2",
      "Time": "08:30 - 10:00",
      "Title": "SLE 2016 - : SLE Keynote",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Chairs": ["christophseidl"],
      "ChairsString": "Christoph Seidl",
      "Day": "2016-11-01",
      "Items": [
        "gpce-2016-papers-a-change-centric-approach-to-compile-configurable-systems-with-ifdefs",
        "gpce-2016-papers-a-feature-based-personalized-recommender-system-for-product-line-configuration",
        "gpce-2016-papers-explaining-anomalies-in-feature-models"
      ],
      "Key": "0a85bf3a-5630-4411-859e-545ecce37040",
      "Location": "Zürich 1",
      "Time": "10:30 - 12:10",
      "Title": "GPCE 2016 - : Feature Models and Product Lines",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: Full Paper Submission Deadline Extended to Wednesday, June 29, 23:59 (Anywhere on Earth)! \n\nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations, and corresponding Implementation Technologies aiming at modularity, correctness, reuse, and evolution. As the field matures Applications and Empirical Results are of increasing importance.\nThe International Conference on Generative Programming: Concepts &amp; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation, domain-specific languages, and component deployment to increase programmer productivity, improve software quality, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities.",
      "Chairs": ["tiarkrompf"],
      "ChairsString": "Tiark Rompf",
      "Day": "2016-11-01",
      "Items": [
        "gpce-2016-papers-incling-efficient-product-line-testing-using-incremental-pairwise-sampling",
        "gpce-2016-papers-towards-scalable-configuration-testing-in-variable-software",
        "gpce-2016-papers-towards-a-software-product-line-of-trie-based-collections",
        "gpce-2016-papers-tool-demo-testing-configurable-systems-with-featureide"
      ],
      "Key": "d1b8e67b-edc9-4e91-a0cf-2f92b066e30a",
      "Location": "Zürich 1",
      "Time": "13:30 - 15:10",
      "Title": "GPCE 2016 - : Software Product Lines and Testing",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Welcome to the Scala Symposium 2016!\nScala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages. The Scala Symposium is a forum for researchers and practitioners to share new ideas and results of interest to the Scala community. We welcome a broad spectrum of research topics and many formats.\nThis year\u2019s Scala Symposium is collocated with Splash 2016. \nSupported by  &nbsp;",
      "Day": "2016-10-30",
      "Items": [
        "scala-2016-implementing-higher-kinded-types-in-dotty",
        "scala-2016-semantics-driven-interoperability-between-scala-js-and-javascript",
        "scala-2016-a-generic-algorithm-for-checking-exhaustivity-of-pattern-matching",
        "scala-2016-scaps-type-directed-api-search-for-scala"
      ],
      "Key": "16661649-303a-486a-8518-c02f2d7585eb",
      "Location": "Matterhorn 2",
      "Time": "10:30 - 12:10",
      "Title": "Scala 2016 - : Types",
      "Type": "Accepted Papers and Talks"
    },
    {
      "Abstract": "Software Language Engineering (SLE) is the application of systematic, disciplined, and measurable approaches to the development, use, deployment, and maintenance of software languages. The term \u201csoftware language\u201d is used broadly, and includes: general-purpose programming languages; domain-specific languages (e.g. BPMN, Simulink, Modelica); modeling and metamodeling languages (e.g. SysML and UML); data models and ontologies (e.g. XML-based and OWL-based languages and vocabularies).",
      "Day": "2016-11-01",
      "Items": ["sle-2016-papers-gpce-sle-dinner"],
      "Key": "826d20e7-869e-4679-a207-26955b91436d",
      "Location": "Fifteen",
      "Time": "18:30 - 22:30",
      "Title": "SLE 2016 - : GPCE/SLE Dinner",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["janvitek"],
      "ChairsString": "Jan Vitek",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-oopsla-a-compiler-for-throughput-optimization-of-graph-algorithms-on-gpus",
        "splash-2016-oopsla-automatic-parallelization-of-pure-method-calls-via-conditional-future-synthesis",
        "splash-2016-oopsla-portable-inter-workgroup-barrier-synchronisation-for-gpus",
        "splash-2016-oopsla-parallel-incremental-whole-program-optimizations-for-scala-js"
      ],
      "Key": "cc36f423-4885-4f90-80b9-b3cdf6dbab42",
      "Location": "Matterhorn 1",
      "Time": "10:30 - 12:10",
      "Title": "OOPSLA: Optimization and Performance",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["martinodersky"],
      "ChairsString": "Martin Odersky",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-oopsla-deriving-divide-and-conquer-dynamic-programming-algorithms-using-solver-aided-transformations",
        "splash-2016-oopsla-speeding-up-machine-code-synthesis",
        "splash-2016-oopsla-automated-reasoning-for-web-page-layout",
        "splash-2016-oopsla-fidex-filtering-spreadsheet-data-using-examples"
      ],
      "Key": "af381ae2-43b4-4094-bdb3-4c1277667837",
      "Location": "Matterhorn 2",
      "Time": "13:30 - 15:10",
      "Title": "OOPSLA: Program Synthesis",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["adamchlipala"],
      "ChairsString": "Adam Chlipala",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-oopsla-semantic-subtyping-for-imperative-object-oriented-languages",
        "splash-2016-oopsla-parsing-with-first-class-derivatives",
        "splash-2016-oopsla-the-missing-link-explaining-elf-static-linking-semantically",
        "splash-2016-oopsla-type-soundness-for-dependent-object-types-dot-"
      ],
      "Key": "d27c7bf8-084c-433b-a4ce-e97b498565c9",
      "Location": "Matterhorn 2",
      "Time": "13:30 - 15:10",
      "Title": "OOPSLA: Principles, Across the Compilation Stack",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["benjaminlivshits"],
      "ChairsString": "Ben Livshits",
      "Day": "2016-11-04",
      "Items": [
        "splash-2016-oopsla-finding-compiler-bugs-via-live-code-mutation",
        "splash-2016-oopsla-finding-resume-and-restart-errors-in-android-applications",
        "splash-2016-oopsla-low-overhead-and-fully-automated-statistical-debugging-with-abstraction-refinement",
        "splash-2016-oopsla-to-be-precise-regression-aware-debugging"
      ],
      "Key": "bacfd9cc-31c8-4875-84d0-5dc1e0936746",
      "Location": "Matterhorn 1",
      "Time": "13:30 - 15:10",
      "Title": "OOPSLA: Bug Detection Analysis and Model Checking",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["samguyer"],
      "ChairsString": "Sam Guyer",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-oopsla-accelerating-program-analyses-by-cross-program-training",
        "splash-2016-oopsla-an-improved-algorithm-for-slicing-machine-code",
        "splash-2016-oopsla-call-graphs-for-languages-with-parametric-polymorphism",
        "splash-2016-oopsla-type-inference-for-static-compilation-of-javascript"
      ],
      "Key": "3be070fa-6ae5-4be9-9f97-234a1d8a1921",
      "Location": "Matterhorn 1",
      "Time": "15:40 - 17:20",
      "Title": "OOPSLA: Static Analysis",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["emersonmurphyhill"],
      "ChairsString": "Emerson Murphy-Hill",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-oopsla-an-experiment-in-software-design",
        "splash-2016-oopsla-apex-automatic-programming-assignment-error-explanation",
        "splash-2016-oopsla-asserting-reliable-convergence-for-configuration-management-scripts",
        "splash-2016-oopsla-dependent-partitioning"
      ],
      "Key": "3c153fa0-fbb6-4954-8b9b-f54faf0c4367",
      "Location": "Matterhorn 2",
      "Time": "15:40 - 17:20",
      "Title": "OOPSLA: Programming Frameworks, Tools, and Methodologies",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["sebastianerdweg"],
      "ChairsString": "Sebastian Erdweg",
      "Day": "2016-11-04",
      "Items": [
        "splash-2016-oopsla-a-practical-framework-for-type-inference-error-explanation",
        "splash-2016-oopsla-dynamically-diagnosing-type-errors-in-unsafe-code",
        "splash-2016-oopsla-first-class-effect-reflection-for-effect-guided-programming",
        "splash-2016-oopsla-java-and-scala-s-type-systems-are-unsound-the-existential-crisis-of-null-pointers"
      ],
      "Key": "b3dca20b-f44f-4ca9-a675-997e7a920837",
      "Location": "Matterhorn 1",
      "Time": "10:30 - 12:10",
      "Title": "OOPSLA: Typing, in Practice",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["robertoierusalimschy"],
      "ChairsString": "Roberto Ierusalimschy",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-oopsla-extensible-access-control-with-authorization-contracts",
        "splash-2016-oopsla-gentrification-gone-too-far-affordable-2nd-class-values-for-fun-and-co-effect",
        "splash-2016-oopsla-incremental-forest-a-dsl-for-efficiently-managing-filestores",
        "splash-2016-oopsla-lacasa-lightweight-affinity-and-object-capabilities-in-scala"
      ],
      "Key": "b555cb98-0041-449b-9a5e-2ae36ee8ad04",
      "Location": "Matterhorn 1",
      "Time": "13:30 - 15:10",
      "Title": "OOPSLA: Language Design and Programming Models I",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["laurietratt"],
      "ChairsString": "Laurence Tratt",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-oopsla-efficient-and-thread-safe-objects-for-dynamically-typed-languages",
        "splash-2016-oopsla-hybrid-stm-htm-for-nested-transactions-on-openjdk",
        "splash-2016-oopsla-makalu-fast-recoverable-allocation-of-non-volatile-memory",
        "splash-2016-oopsla-prioritized-garbage-collection-explicit-gc-support-for-software-caches"
      ],
      "Key": "8adb5431-2a8c-408c-8a00-4b0fda3c8436",
      "Location": "Matterhorn 1",
      "Time": "13:30 - 15:10",
      "Title": "OOPSLA: Runtime Support",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["jonathanaldrich"],
      "ChairsString": "Jonathan Aldrich",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-oopsla-semantics-based-program-verifiers-for-all-languages",
        "splash-2016-oopsla-hoare-style-specifications-as-correctness-conditions-for-non-linearizable-concurrent-objects",
        "splash-2016-oopsla-an-operational-semantics-for-c-c-11-concurrency",
        "splash-2016-oopsla-modeling-and-analysis-of-remote-memory-access-programming"
      ],
      "Key": "f87b297b-08d2-4ff9-9a30-1dedc0162e78",
      "Location": "Matterhorn 2",
      "Time": "10:30 - 12:10",
      "Title": "OOPSLA: Semantics and Verification",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["thomasgross"],
      "ChairsString": "Thomas Gross",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-oopsla-directed-synthesis-of-failing-concurrent-executions",
        "splash-2016-oopsla-maximal-causality-reduction-for-tso-and-pso",
        "splash-2016-oopsla-stateless-model-checking-with-data-race-preemption-points",
        "splash-2016-oopsla-precise-and-maximal-race-detection-from-incomplete-traces"
      ],
      "Key": "effd7906-e477-4ae5-9553-d722455034a5",
      "Location": "Matterhorn 1",
      "Time": "10:30 - 12:10",
      "Title": "OOPSLA: Concurrency Analysis and Model Checking",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["ondrejlhotak"],
      "ChairsString": "Ondřej Lhoták",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-oopsla-computing-repair-alternatives-for-malformed-programs-using-constrained-attribute-grammars",
        "splash-2016-oopsla-probabilistic-model-for-code-with-decision-trees",
        "splash-2016-oopsla-ringer-web-automation-by-demonstration",
        "splash-2016-oopsla-scalable-verification-of-router-control-plane-configurations-with-an-smt-solver"
      ],
      "Key": "5c0933ac-ebf4-4e3f-847e-d6588a547f6c",
      "Location": "Matterhorn 1",
      "Time": "15:40 - 17:20",
      "Title": "OOPSLA: Program Modeling and Learning",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "OOPSLA seeks outstanding contributions on all aspects of programming languages and software engineering.\nPapers may target any stage of software development, including requirements, modeling, prototyping, design, implementation, generation, analysis, verification, testing, evaluation, maintenance, and reuse of software systems. Contributions may include the development of new tools (such as language front-ends, program analyses, and runtime systems), new techniques (such as methodologies, design processes, and code organization approaches), new principles (such as formalisms, proofs, models, and paradigms), and new evaluations (such as experiments, corpora analyses, user studies, and surveys).",
      "Chairs": ["oliviertardieu"],
      "ChairsString": "Olivier Tardieu",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-oopsla-automatic-enforcement-of-expressive-security-policies-using-enclaves",
        "splash-2016-oopsla-chain-tasks-and-channels-for-reliable-intermittent-programs",
        "splash-2016-oopsla-gems-shared-memory-parallel-programming-for-node-js",
        "splash-2016-oopsla-orco-a-concurrency-first-approach-to-objects"
      ],
      "Key": "b1df042c-2e43-4e71-884e-dba3139d98f8",
      "Location": "Matterhorn 2",
      "Time": "10:30 - 12:10",
      "Title": "OOPSLA: Language Design and Programming Models II",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["alessandroricci"],
      "ChairsString": "Alessandro Ricci",
      "Day": "2016-10-31",
      "Items": ["splash-2016-splash-i-agent-oriented-programming"],
      "Key": "559d0c17-b29e-4c63-85b8-db287f81f94f",
      "Location": "Matterhorn 3",
      "Time": "13:30 - 15:10",
      "Title": "SPLASH-I: Session 2 (AGERE)",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["philipphaller"],
      "ChairsString": "Philipp Haller",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-splash-i-pony-co-designing-a-type-system-and-a-runtime",
        "splash-2016-splash-i-truffle-and-graal-fast-programming-languages-with-modest-effort"
      ],
      "Key": "02602ef2-b5c6-48bf-8afa-3d172008e1ff",
      "Location": "Matterhorn 3",
      "Time": "13:30 - 15:10",
      "Title": "SPLASH-I: Session 11",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["stefanmarr"],
      "ChairsString": "Stefan Marr",
      "Day": "2016-11-04",
      "Items": [
        "splash-2016-splash-i-fast-datalog",
        "splash-2016-splash-i-software-environmentalism"
      ],
      "Key": "e668597d-78d7-49d3-a52c-219dc00f519a",
      "Location": "Matterhorn 3",
      "Time": "13:30 - 15:10",
      "Title": "SPLASH-I: Session 14",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["tijsvanderstorm"],
      "ChairsString": "Tijs van der Storm",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-splash-i-responsive-language-tooling-for-cloud-based-ides",
        "splash-2016-splash-i-simulating-cities-the-spacetime-framework"
      ],
      "Key": "3dacfc4e-4b46-4db5-ad56-6628428b40e6",
      "Location": "Matterhorn 3",
      "Time": "10:30 - 12:10",
      "Title": "SPLASH-I: Session 10",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["ulrikschultz"],
      "ChairsString": "Ulrik Schultz",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-splash-i-define-your-app-don-t-implement-it-building-a-scalable-social-network-in-45-minutes",
        "splash-2016-splash-i-the-basic-skill-set-of-software-language-engineering"
      ],
      "Key": "af57168f-58f0-429e-aad9-8c67a5389980",
      "Location": "Matterhorn 3",
      "Time": "13:30 - 15:10",
      "Title": "SPLASH-I: Session 8",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["matthiashauswirth"],
      "ChairsString": "Matthias Hauswirth",
      "Day": "2016-11-01",
      "Items": ["splash-2016-splash-i-bootstrap"],
      "Key": "cad7d49a-4088-44ce-b5ca-05919fb9413c",
      "Location": "Matterhorn 3",
      "Time": "10:30 - 12:10",
      "Title": "SPLASH-I: Session 4 (SPLASH-E)",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["laurietratt"],
      "ChairsString": "Laurence Tratt",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-splash-i-experience-with-language-design-in-mps",
        "splash-2016-splash-i-making-mendix-meta-model-driven"
      ],
      "Key": "accc7fc9-60ee-4c87-9ca0-079af5bfabec",
      "Location": "Matterhorn 3",
      "Time": "10:30 - 12:10",
      "Title": "SPLASH-I: Session 7 (Modeling)",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["sebastianerdweg"],
      "ChairsString": "Sebastian Erdweg",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-splash-i-from-tricorder-to-tricium-useful-static-analysis-and-the-importance-of-workflow-integration",
        "splash-2016-splash-i-surveyman"
      ],
      "Key": "fdcb863e-c61a-40b0-8788-e726873cfe57",
      "Location": "Matterhorn 3",
      "Time": "13:30 - 15:10",
      "Title": "SPLASH-I: Session 5",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["craiganslow"],
      "ChairsString": "Craig Anslow",
      "Day": "2016-11-04",
      "Items": [
        "splash-2016-splash-i-orc",
        "splash-2016-splash-i-rapid-development-of-web-applications-with-typed-metaprogramming-in-ur-web"
      ],
      "Key": "194ba4ca-e8e4-440d-9adf-bc611da55bf1",
      "Location": "Matterhorn 3",
      "Time": "10:30 - 12:10",
      "Title": "SPLASH-I: Session 13 (Languages)",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["eelcovisser"],
      "ChairsString": "Eelco Visser",
      "Day": "2016-11-04",
      "Items": ["splash-2016-splash-i-splash-i-keynote-guy-steele"],
      "Key": "4ab040b8-5f63-4473-aac0-f83519d25571",
      "Location": "Matterhorn 2",
      "Time": "15:40 - 17:00",
      "Title": "SPLASH-I: Session 15 (Keynote)",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["rosstate"],
      "ChairsString": "Ross Tate",
      "Day": "2016-11-02",
      "Items": [
        "splash-2016-splash-i-using-docker-containers-to-improve-reproducibility-in-pl-se-research",
        "splash-2016-splash-i-adventures-in-software-evolution"
      ],
      "Key": "8545414b-7940-4cb6-b897-ab7491c4c184",
      "Location": "Matterhorn 3",
      "Time": "15:40 - 17:20",
      "Title": "SPLASH-I: Session 9",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["richardpgabriel"],
      "ChairsString": "Richard P. Gabriel",
      "Day": "2016-10-31",
      "Items": ["splash-2016-splash-i-the-elements-of-decision-alignment-large-programs-as-complex-organizations"],
      "Key": "8d403639-630a-4293-82f6-bf9fce361983",
      "Location": "Matterhorn 3",
      "Time": "15:40 - 17:20",
      "Title": "SPLASH-I: Session 3 (Philosophy of Computing)",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["coenderoover"],
      "ChairsString": "Coen De Roover",
      "Day": "2016-11-03",
      "Items": [
        "splash-2016-splash-i-language-support-for-distributed-systems",
        "splash-2016-splash-i-exploratory-analysis-in-virtual-reality-the-new-frontier"
      ],
      "Key": "8fcdb326-4cfc-498e-b1e7-7e37c8f172ed",
      "Location": "Matterhorn 3",
      "Time": "15:40 - 17:20",
      "Title": "SPLASH-I: Session 12",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["tiarkrompf"],
      "ChairsString": "Tiark Rompf",
      "Day": "2016-11-01",
      "Items": [
        "splash-2016-splash-i-type-driven-development-in-idris",
        "splash-2016-splash-i-fact-or-fiction-what-software-analytics-can-do-for-us-developers-and-researchers-"
      ],
      "Key": "7e125a1d-3620-4f33-bdd2-9ec4cfdd04c9",
      "Location": "Matterhorn 3",
      "Time": "15:40 - 17:20",
      "Title": "SPLASH-I: Session 6",
      "Type": "Talks"
    },
    {
      "Abstract": "SPLASH-I is a series of research talks that address topics relevant to the SPLASH community. Speakers are world-class experts in their field, selected and invited by the organizers. The SPLASH-I talks series is held in parallel with the OOPSLA main track. Talks are open to all attendees.",
      "Chairs": ["matthiashauswirth"],
      "ChairsString": "Matthias Hauswirth",
      "Day": "2016-10-31",
      "Items": [
        "splash-2016-splash-i-the-dream-of-a-lifetime-shaping-how-our-children-learn-computing",
        "splash-2016-splash-i-snap"
      ],
      "Key": "9f5b6bc2-8b6a-4975-a0d1-08aa9c3a4fbd",
      "Location": "Matterhorn 3",
      "Time": "10:30 - 12:10",
      "Title": "SPLASH-I: Session 1 (SPLASH-E)",
      "Type": "Talks"
    }
  ],
  "Sponsors": "ACM, ACM SIGPLAN, LogicBlox, Universal Robots, Oracle, TU Delft, Huawei, Facebook, IBM, Google, Itemis, ING",
  "URL": "http://2016.splashcon.org/home",
  "VenueInfo": {"Name": "Fifteen"}
}