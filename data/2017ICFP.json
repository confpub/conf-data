{
  "DataRevision": -341396184,
  "Description": "ICFP 2017 is the 22nd ACM SIGPLAN International Conference on Functional Programming. \nICFP provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries. \nICFP will run in parallel to FSCD 2017, held at the Maths Institute in Oxford. Registrants of either conference can attend talks at both conferences, and the lunch/coffee breaks will be joint. (FSCD workshops will be held separately, in the Department of Computer Science.) \nAdditional local information is provided in the Information Blog. \n Download and print the official ICFP 2017 poster. \nThe 2017 ICFP Programming Contest, organized by the University of Edinburgh, will run August 4-7. More information is available on the contest website.",
  "Event": "icfp-2017",
  "Items": [
    {
      "Abstract": "Working title/topic: the gradual adoption of Erlang into the U.K.\u2019s National Health Service \nAbstract TBD.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["martinsumner"],
      "Key": "erlang-2017-papers-keynote-speaker-martin-sumner",
      "PersonsString": "Martin Sumner",
      "Title": "Keynote",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-keynote-speaker-martin-sumner"
    },
    {
      "Abstract": "We study algebraic computational effects and their handlers in the dependently typed setting. We describe computational effects using a generalisation of Plotkin and Pretnar\u2019s effect theories, whose dependently typed operations allow us to capture precise notions of computation, e.g., state with location-dependent store types and dependently typed update monads. Our treatment of handlers is based on an observation that their conventional term-level definition leads to unsound program equivalences being derivable in languages that include a notion of homomorphism. We solve this problem by giving handlers a novel type-based treatment via a new computation type, the user-defined algebra type, which pairs a value type (the carrier) with a family of value terms (the operations), based on Plotkin and Pretnar\u2019s insight that handlers denote algebras for a given algebraic theory. The conventional presentation of handlers can then be routinely derived from our type-based treatment. We also demonstrate that our treatment of handlers provides a useful mechanism for reasoning about effectful computations.",
      "Affiliations": ["University of Edinburgh"],
      "AffiliationsString": "University of Edinburgh",
      "Authors": ["danelahman"],
      "Key": "hope-2017-papers-handling-fibred-algebraic-effects",
      "PersonsString": "Danel Ahman",
      "Title": "Handling fibred algebraic effects",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-handling-fibred-algebraic-effects"
    },
    {
      "Abstract": "Given a programming language, can we give a monadic denotational semantics that is stable under language extension? Models containing only a single monad are not stable. Models based on type-and-effect systems, in which there is a monad for every set of operations in the language, are. Cartwright and Felleisen, and Wadler, conjectured such monadic semantics can be generated. We describe a new general method of constructing stable models from standard monadic models, based on factorizations of monad morphisms. We show that under certain conditions factorizations induce a monad for every set of operations, and explain why the conditions usually hold. We also describe preliminary work using fibrations for logical relations generated from these factorization systems for proving the correctness of the resulting model.",
      "Affiliations": [
        "University of Oxford, UK / University of Cambridge, UK",
        "University of Cambridge"
      ],
      "AffiliationsString": "University of Oxford, UK / University of Cambridge, UK, University of Cambridge",
      "Authors": [
        "ohadkammar",
        "dylanmcdermott"
      ],
      "Key": "hope-2017-papers-a-monadic-solution-to-the-cartwright-felleisen-wadler-conjecture",
      "PersonsString": "Ohad Kammar and Dylan McDermott",
      "Title": "A monadic solution to the Cartwright-Felleisen-Wadler conjecture",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-a-monadic-solution-to-the-cartwright-felleisen-wadler-conjecture"
    },
    {
      "Abstract": "Complex protocols describing the communication or storage of binary data are difficult to describe precisely. This paper presents a collection of data types for describing a binary data formats; the corresponding parser and pretty printer are generated automatically from a data description. By embedding these data types in a general purpose dependently typed programming language, we can verify once and for all that the parsers and pretty printers generated in this style are correct by construction. To validate our results, we show how to write a verified parser of the IPv4 network protocol.",
      "Affiliations": [
        "Utrecht University",
        "University of Utrecht"
      ],
      "AffiliationsString": "Utrecht University, University of Utrecht",
      "Authors": [
        "marcellvangeest",
        "wouterswierstra"
      ],
      "Key": "tyde-2017-papers-generic-packet-descriptions-verified-parsing-and-pretty-printing-of-low-level-data",
      "PersonsString": "Marcell van Geest and Wouter Swierstra",
      "Title": "Generic packet descriptions: verified parsing and pretty printing of low-level data",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-generic-packet-descriptions-verified-parsing-and-pretty-printing-of-low-level-data"
    },
    {
      "Abstract": "Programs cause various side effects during their execution, and the static analysis of side effects of programs is one of the important topics in program analysis. Effect systems are a type-theoretic approach to statically estimate side effects caused by programs. In a typical effect system, the estimation is done by constructing abstract representations of a program\u2019s side effects along typing derivations. These representations are often called \u201ceffects\u201d. \nIn a seminal paper [1], Wadler integrated monadic types and effects into the effect-annotated monadic type T(e)(t). Wadler then raises a question of which semantic structure corresponds to the effect-annotated monadic type. In response to this question, I used a structure called graded monad to interpret the effect-annotated monadic type [2]. In this talk, I will introduce graded monads with examples and an application to the semantics of effect systems. I will also talk about algebraic operations of graded monads, the decomposition of graded monads by an adjunction and a twist [3], and the graded TT-lifting of ordinary monads. \n[1] Philip Wadler. The Marriage of Effects and Monads. ICFP 1998: 63-74 \n[2] Shin-ya Katsumata. Parametric effect monads and semantics of effect systems. POPL 2014: 633-646 \n[3] Soichiro Fujii, Shin-ya Katsumata, Paul-André Melliès. Towards a Formal Theory of Graded Monads. FoSSaCS 2016: 513-530",
      "Affiliations": ["National Institute of Informatics"],
      "AffiliationsString": "National Institute of Informatics",
      "Authors": ["shinyakatsumata"],
      "Key": "hope-2017-papers-invited-talk-semantics-of-effect-systems-by-graded-monads",
      "PersonsString": "Shin-ya Katsumata",
      "Title": "Invited Talk: Semantics of Effect Systems by Graded Monads",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-invited-talk-semantics-of-effect-systems-by-graded-monads"
    },
    {
      "Abstract": "Algebraic effect handlers generalize many control-flow abstractions that are implemented specially in most languages, like exception handling, iterators, or backtracking. In this talk I show how one can implement full support for asynchronous programming (on top of Node.js) as a library using just algebraic effect handlers (in the Koka language). I will use a web server as an example application to show how algebraic effects and handlers can be used to implement useful abstractions like ambient state and block-scoped cancellation.",
      "Affiliations": ["Microsoft Research"],
      "AffiliationsString": "Microsoft Research",
      "Authors": ["daanleijen"],
      "Key": "hope-2017-papers-structured-asynchrony-with-algebraic-effects",
      "PersonsString": "Daan Leijen",
      "Title": "Programming a Web Server with Algebraic Effects",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-structured-asynchrony-with-algebraic-effects"
    },
    {
      "Abstract": "As part of broader work to detect orphan messages in Erlang systems using a mix of static and runtime analysis, we have formalised the communicating portion of Core Erlang using Isabelle/HOL, an interactive theorem prover. Isabelle allows us to prove properties of our system, prepare LATEX output, and generate verified executable code in a variety of functional programming languages. \nWe formally model a communicating fragment of Core Erlang in a language we call CoErl. The process-local and concurrent semantics of the language are modelled using a labelled transition system. We also introduce the notion of traces which capture communication events during process execution. This is followed by some illustrative examples of the concurrent semantics. \nAlthough the model is a solid foundation, it lacks support for higher-order and recursive behaviour. Isabelle proved practical for the formalisation and verifying several properties of CoErl and its trace system, although ongoing and future work focuses on bringing the language to feature parity with Core Erlang and Erlang/OTP to provide a suitable formal model for reasoning about real Erlang programs.",
      "Affiliations": ["University of Kent"],
      "AffiliationsString": "University of Kent",
      "Authors": ["josephharrison"],
      "Key": "erlang-2017-papers-towards-an-isabelle-hol-formalisation-of-core-erlang",
      "PersonsString": "Joseph Harrison",
      "Title": "Towards an Isabelle/HOL Formalisation of Core Erlang",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-towards-an-isabelle-hol-formalisation-of-core-erlang"
    },
    {
      "Abstract": "We argue that the central problem of the interaction of higher-order programming with various kinds of effects can be tackled by eliminating the distinction: higher-order facility is itself an effect, not too different from state effect. \nWe demonstrate that first-class abstractions may be treated uniformly as any other effects, thus completing Cartwright and Felleisen\u2019s program of \u201cExtensible Denotational Language Specifications\u201d: Variable substitution is indistinguishable from dereference of a C-like variable; \u201clambda\u201d, or creating a closure, is an effect as well. The (lexical) closure acts as a handler of all variable dereference effects arising during the execution of its body. Our approach uniformly handles dynamic and lexical binding and various calling conventions. \nAll in all, higher-order programming is essentially first-order single-assignment programming with first-class storage. A framework like extensible-effects that supports multiple effects should not hence have any problem with abstraction and substitution effects \u2013 which gives HOPE.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["olegkiselyov"],
      "Key": "hope-2017-papers-higher-order-programming-is-an-effect",
      "PersonsString": "Oleg Kiselyov",
      "Title": "Higher-order Programming is an Effect",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-higher-order-programming-is-an-effect"
    },
    {
      "Abstract": "Writing parallel codes is difficult and exhibits a fundamental trade-off between abstraction and performance. The high level language abstractions designed to simplify the complexities of parallelism make certain assumptions that impacts performance and scalability. On the other hand lower level languages, providing many opportunities for optimisation, require in-depth knowledge and the programmer to consider tricky details of parallelism. An approach is required which can bridge the gap and provide both the ease of programming and opportunities for control and optimisation.",
      "Affiliations": [
        "EPCC",
        "EPCC",
        "EPCC"
      ],
      "AffiliationsString": "EPCC",
      "Authors": [
        "nickbrown",
        "ludoviccapelli",
        "jamesmarkbull"
      ],
      "Key": "tyde-2017-papers-extended-abstract-type-oriented-programming-for-task-based-parallelism",
      "PersonsString": "Nick Brown, Ludovic Capelli and James Mark Bull",
      "Title": "Type oriented programming for task based parallelism",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-extended-abstract-type-oriented-programming-for-task-based-parallelism"
    },
    {
      "Abstract": "to be announced",
      "Affiliations": ["DIKU, University of Copenhagen"],
      "AffiliationsString": "DIKU, University of Copenhagen",
      "Authors": ["troelshenriksen"],
      "Key": "fhpc-2017-papers-keynote-2-to-be-announced",
      "PersonsString": "Troels Henriksen",
      "Title": "Futhark Demo",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-keynote-2-to-be-announced"
    },
    {
      "Abstract": "Speculative, parallel abstractions allow that, once a result is computed, the remaining (unnecessary) speculative computations can be safely stopped. However, it is difficult to know when it is safe to stop an ongoing computation. This paper presents a refinement of the parallel speculative ParT abstraction with an affine type system that allows in-place updates, and the killing of speculative computations using thread-local reasoning. There is ongoing work to prove the soundness of the calculus and implement it in the Encore language.",
      "Affiliations": [
        "Uppsala University",
        "Uppsala Univ. Sweden and KU Leuvern"
      ],
      "AffiliationsString": "Uppsala University, Uppsala Univ. Sweden and KU Leuvern",
      "Authors": [
        "kikofernandezreyes",
        "daveclarke"
      ],
      "Key": "tyde-2017-papers-affine-killing",
      "PersonsString": "Kiko Fernandez-Reyes and Dave Clarke",
      "Title": "Affine killing",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-affine-killing"
    },
    {
      "Abstract": "NOTE: Tentative abstract, speaker(s) not yet confirmed. \n \n News of current development and near-future plans from Ericsson\u2019s Erlang/OTP team. \n News from the Elixir community. \n",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "erlang-2017-papers-erlang-and-elixir-development-news-not-yet-confirmed-",
      "PersonsString": "",
      "Title": "Erlang and Elixir development news (not yet confirmed)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-erlang-and-elixir-development-news-not-yet-confirmed-"
    },
    {
      "Abstract": "While trying to understand Torsten Grust\u2019s 2015 MPC keynote on comprehension syntax, and Jeremy Gibbons\u2019s 2016 WadlerFest essay on ``Ringad Comprehensions'', and their relationship to Haskell\u2019s Foldable typeclass, I arrived at the following characterisations: \nA Functor f is Foldable iff Every Monoid instance a is an f-Algebra instance \nA Monad f is a Ringad iff Every f-Algebra instance a is a Monoid instance \nThe first is (perhaps) folklore, and appears in Uustalu\u2019s paper for the Oliveira Festschrift, but was independently rediscovered during my research. The second is, as far as I know, new. It is based on joint work with Jeremy Gibbons. \nThis talk will motivate, describe, and sketch the proof of these `dual\u2019 characterisations.",
      "Affiliations": ["University of Edinburgh"],
      "AffiliationsString": "University of Edinburgh",
      "Authors": ["jamesmckinna"],
      "Key": "tyde-2017-papers-on-ringads-and-foldables",
      "PersonsString": "James McKinna",
      "Title": "On ringads and foldables",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-on-ringads-and-foldables"
    },
    {
      "Abstract": "We present a work in progress tool (VisPar) for visualising computations in the Par monad in Haskell. Our contribution is not a revolutionary new idea but rather a modest addition to the set of tools available for making sense of Par-monad computations. We hope to show that it can be useful as a teaching tool by providing visualisations of a few examples from a course on parallel functional programming.",
      "Affiliations": [
        "Chalmers University of Technology, Sweden",
        "Chalmers University of Technology"
      ],
      "AffiliationsString": "Chalmers University of Technology, Sweden, Chalmers University of Technology",
      "Authors": [
        "maximilianalgehed",
        "patrikjansson"
      ],
      "Key": "fhpc-2017-papers-vispar-visualising-dataflow-graphs-from-the-par-monad",
      "PersonsString": "Maximilian Algehed and Patrik Jansson",
      "Title": "VisPar: Visualising dataflow graphs from the Par monad",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-vispar-visualising-dataflow-graphs-from-the-par-monad"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Glasgow",
        "DIKU, University of Copenhagen"
      ],
      "AffiliationsString": "University of Glasgow, DIKU, University of Copenhagen",
      "Authors": [
        "philtrinder",
        "cosminoancea"
      ],
      "Key": "fhpc-2017-papers-welcome-to-fhpc-17",
      "PersonsString": "Phil Trinder and Cosmin Oancea",
      "Title": "Welcome to FHPC'17",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-welcome-to-fhpc-17"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "erlang-2017-papers-opening-welcome",
      "PersonsString": "",
      "Title": "Opening & Welcome",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-opening-welcome"
    },
    {
      "Abstract": "Engineering complex business critical systems that should never stop or fail is very much challenging. In Klarna, we tackle this challenge day by day. The secret sauce, which enables us to ensure the highest software quality, is the thorough validation process. However, one must pay the price of such validation process, which is essentially time. In this paper we present our initial work on fast tracking the validation of code changes without compromising software quality and give a preliminary evaluation on our technique.",
      "Affiliations": [
        "Erlang Solutions Ltd, Hungary",
        "Eötvös Loránd University",
        ""
      ],
      "AffiliationsString": "Erlang Solutions Ltd, Hungary, Eötvös Loránd University, ",
      "Authors": [
        "viktoriafordos",
        "istvanbozo",
        "melindatoth"
      ],
      "Key": "erlang-2017-papers-towards-change-driven-testing",
      "PersonsString": "Viktória Fördős, István Bozó and Melinda Toth",
      "Title": "Towards Change-driven Testing",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-towards-change-driven-testing"
    },
    {
      "Abstract": "Verifying non-functional properties of programs, such as time and/or energy consumption, is a difficult task. With applications such as the internet-of-things, it is becoming increasingly important that devices operate reliably \\emph{within known time and energy bounds}. At the same time, processor architectures are becoming more complex. This means that traditional modelling techniques are not effective. Energy usage, for example, is \\emph{non-compositional}. To solve this problem, we propose the introduction of type-directed, probabilistic bounds to allow us to reason formally about the approximate consumption of resources.",
      "Affiliations": [
        "University of St. Andrews, UK",
        "University of St. Andrews, UK",
        "University of St Andrews"
      ],
      "AffiliationsString": "University of St. Andrews, UK, University of St Andrews",
      "Authors": [
        "edwinbrady",
        "kevinhammond",
        "christopherschwaab"
      ],
      "Key": "tyde-2017-papers-type-directed-reasoning-for-probabilistic-non-compositional-resources",
      "PersonsString": "Edwin Brady, Kevin Hammond and Christopher Schwaab",
      "Title": "Type-directed reasoning for probabilistic, non-compositional resources",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-type-directed-reasoning-for-probabilistic-non-compositional-resources"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Edinburgh, UK",
        "Hendrix College"
      ],
      "AffiliationsString": "University of Edinburgh, UK, Hendrix College",
      "Authors": [
        "samlindley",
        "brentyorgey"
      ],
      "Key": "tyde-2017-papers-welcome",
      "PersonsString": "Sam Lindley and Brent Yorgey",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-welcome"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Inria, France",
        "IMDEA Software Institute"
      ],
      "AffiliationsString": "Inria, France, IMDEA Software Institute",
      "Authors": [
        "francoispottier",
        "aleksandarnanevski"
      ],
      "Key": "hope-2017-papers-welcome",
      "PersonsString": "François Pottier and Aleksandar Nanevski",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-welcome"
    },
    {
      "Abstract": "NOTE: Tentative agenda \nOpen discussion of works-in-progress (WIPs) in research and new developments in industry &amp; open source communities for all BEAM languages (Erlang, Elixir, LFE, and others) as well as actor-based systems (Akka, CloudHaskell, Occam, Pony, etc.).",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "erlang-2017-papers-in-medias-res-wip-discussion",
      "PersonsString": "",
      "Title": "In medias res: WIP discussion",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-in-medias-res-wip-discussion"
    },
    {
      "Abstract": "The Unix diff utility that compares lines of text is used pervasively by version control systems. Yet certain changes to a program may be difficult to describe accurately in terms of modifications to individual lines of code. As a result, observing changes at such a fixed granularity may lead to unnecessary conflicts between different edits. This paper presents a generic representation for describing transformations between algebraic data types and a non-deterministic algorithm for computing such representations. These representations can be used to give a more accurate account of modifications made to algebraic data structures \u2013 and the abstract syntax trees of computer programs in particular \u2013 as opposed to only considering modifications between their textual representations.",
      "Affiliations": [
        "University of Utrecht",
        "LIP6/CNRS ",
        "University of Utrecht"
      ],
      "AffiliationsString": "University of Utrecht, LIP6/CNRS ",
      "Authors": [
        "victorcacciarimiraldo",
        "pierreevaristedagand",
        "wouterswierstra"
      ],
      "Key": "tyde-2017-papers-type-directed-diffing-of-structured-data",
      "PersonsString": "Victor Cacciari Miraldo, Pierre-Evariste Dagand and Wouter Swierstra",
      "Title": "Type-directed diffing of structured data",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-type-directed-diffing-of-structured-data"
    },
    {
      "Abstract": "topic to be announced",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "fhpc-2017-papers-panel-discussion",
      "PersonsString": "",
      "Title": "Panel Discussion",
      "Type": "Day closing",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-panel-discussion"
    },
    {
      "Abstract": "Aspect oriented programming (AOP) is a paradigm ideal for defining cross-cutting concerns within an existing application. Although several AOP frameworks exist for more renowned languages such as Java and C#, little to no frameworks have been developed for actor oriented languages such as Erlang. We thus present eAOP, a new AOP framework specifically designed to instrument actor-oriented constructs in Erlang such as message sends and receives, along with other traditional constructs such as function calls.",
      "Affiliations": [
        "University of Malta",
        "University of Malta",
        "Reykjavik University",
        "Reykjavik University"
      ],
      "AffiliationsString": "University of Malta, Reykjavik University",
      "Authors": [
        "iancassar",
        "adrianfrancalanza",
        "lucaaceto",
        "annaingolfsdottir"
      ],
      "Key": "erlang-2017-papers-eaop-an-aspect-oriented-programming-framework-for-erlang",
      "PersonsString": "Ian Cassar, Adrian Francalanza, Luca Aceto and Anna Ingolfsdottir",
      "Title": "eAOP - An Aspect Oriented Programming Framework for Erlang",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-eaop-an-aspect-oriented-programming-framework-for-erlang"
    },
    {
      "Abstract": "We present a logical relation for reasoning about contextual equivalence and contextual approximation of programs in a language with algebraic effect handlers and row-based polymorphic type-and-effect system. We start with a state-of-the-art programming language with algebraic effects, Leijen\u2019s Koka, identify the challenging subset of the calculus and use the standard technique of biorthogonality to build a step-indexed relational interpretation that allows us to reason about approximation and equivalence, as well as show soundness of the type system. We are then able to use the relation to show equivalence of various programs (including equivalence of pure and effectful code), as well as some interesting type-directed equivalences.",
      "Affiliations": [
        "University of Wrocław",
        "University of Wrocław",
        "",
        "University of Wrocław"
      ],
      "AffiliationsString": "University of Wrocław, ",
      "Authors": [
        "dariuszbiernacki",
        "maciejpirog",
        "piotrpolesiuk",
        "filipsieczkowski"
      ],
      "Key": "hope-2017-papers-logical-relations-for-algebraic-effects",
      "PersonsString": "Dariusz Biernacki, Maciej Piróg, Piotr Polesiuk and Filip Sieczkowski",
      "Title": "Logical Relations for Algebraic Effects",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-logical-relations-for-algebraic-effects"
    },
    {
      "Abstract": "Distributed fault-tolerant control algorithms are in great demand nowadays due to their practical importance in cloud computing, Internet of Things (IoT) technology, swarm robotics, and other areas. It is usually hard to make a distributed algorithm fault-tolerant. It is even harder to ensure that such algorithm behaves correctly in the presence of faults of some kind. \nIn this work, we construct a reliable, adaptive, fault-tolerant distributed mutual exclusion algorithm based on the well-known Ricart-Agrawala algorithm. In order to formally verify it, we use a hybrid approach of deductive reasoning and bounded model-checking. First, a safety property of the Ricart-Agrawala algorithm is proved in Calculus of Inductive Constructions of Coq proof assistant using assertional reasoning. Then, an extension of that algorithm turning it into fault-tolerant and adaptive to participants set change, is formalized in TLA and checked on a bounded model. \nBesides constructing and verifying the algorithm, this work aims to familiarize those interested in constructing highly reliable components with well established verification methods that were used to verify the proposed algorithm.",
      "Affiliations": ["JSC \"InfoTeCS\""],
      "AffiliationsString": "JSC \"InfoTeCS\"",
      "Authors": ["evgeniyshishikin"],
      "Key": "erlang-2017-papers-construction-and-formal-verification-of-a-fault-tolerant-distributed-mutual-exclusion-algorithm",
      "PersonsString": "Evgeniy Shishikin",
      "Title": "Construction and Formal Verification of a Fault-Tolerant Distributed Mutual Exclusion Algorithm",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-construction-and-formal-verification-of-a-fault-tolerant-distributed-mutual-exclusion-algorithm"
    },
    {
      "Abstract": "This paper presents a distributed memory architecture for dedicated hardware automatically synthesized from Erlang programs. Our team had developed a framework for generating embedded systems controllers whose behavior was specified by a subset of Erlang, where each process was mapped into hardware (a logic circuit) running independently of the circuits for the other processes. However, the resulting hardware was not of practical use because it shared a single main memory potentially accessed by all the circuits for the processes simultaneously. To address this issue, in this paper, the main memory is partitioned into banks so that each process can access its own memory independently of the other processes. In order to keep the interconnections for message passing to a practical size, a bus architecture is employed where send requests are arbitrated by an arbiter (logic circuit). In order to make the resulting hardware as small as possible, a garbage collection circuit is shared among the circuits for the processes also under the control of the arbiter. From a simple Erlang specification, Verilog HDL codes for necessary hardware to construct a system has been generated.",
      "Affiliations": [
        "Kwansei Gakuin University",
        "Kwansei Gakuin University",
        "ASTEM RI/KYOTO",
        "ASTEM RI/KYOTO"
      ],
      "AffiliationsString": "Kwansei Gakuin University, ASTEM RI/KYOTO",
      "Authors": [
        "kagumiazuma",
        "nagisaishiura",
        "nobuakiyoshida",
        "hiroyukikanbara"
      ],
      "Key": "erlang-2017-papers-distributed-memory-architecture-for-high-level-synthesis-of-embedded-controllers-from-erlang",
      "PersonsString": "Kagumi Azuma, Nagisa Ishiura, Nobuaki Yoshida and Hiroyuki Kanbara",
      "Title": "Distributed Memory Architecture for High-Level Synthesis of Embedded Controllers from Erlang",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-distributed-memory-architecture-for-high-level-synthesis-of-embedded-controllers-from-erlang"
    },
    {
      "Abstract": "Control operators and dependent types have been used to solve major challenges in natural language semantics. However, in programming language semantics, combining control operators and dependent types is an open problem. In this talk, we present a model of a dependently typed language with shift and reset, and a prototype implementation of the model in Cur, a dependently typed language with support for safe and sophisticated user-defined extensions. The model is useful for representing certain classes of natural language sentences and provides insights into the problem adding control operators to dependently typed languages.",
      "Affiliations": [
        "Ochanomizu University",
        "Northeastern University"
      ],
      "AffiliationsString": "Ochanomizu University, Northeastern University",
      "Authors": [
        "youyoucong",
        "williamjbowman"
      ],
      "Key": "hope-2017-papers-only-control-effects-and-dependent-types",
      "PersonsString": "Youyou Cong and William J. Bowman",
      "Title": "Only Control Effects and Dependent Types",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-only-control-effects-and-dependent-types"
    },
    {
      "Abstract": "At Facebook we\u2019re running a large Haskell-based platform as part of the anti-abuse infrastructure. The system supports over a million requests per second using thousands of servers across multiple datacentre locations. At this scale, even small efficiency improvements are worthwhile. In this talk I\u2019ll explain how we\u2019ve adapted our system and the Haskell runtime to be able to squeeze every last cycle out of the hardware, from the Haxl framework that automatically parallelises our data-fetching, to the low-level tuning of the Garbage Collector and scheduler.",
      "Affiliations": ["Facebook"],
      "AffiliationsString": "Facebook",
      "Authors": ["simonmarlow"],
      "Key": "fhpc-2017-papers-keynote-1-title-to-be-announced",
      "PersonsString": "Simon Marlow",
      "Title": "Haskell in the Datacentre",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-keynote-1-title-to-be-announced"
    },
    {
      "Abstract": "This paper presents our vision and work in progress on deploying a high-level functional language with a rich and accessible type system for better modelling and verifying systems programs.",
      "Affiliations": ["UNSW, Australia"],
      "AffiliationsString": "UNSW, Australia",
      "Authors": ["zilinchen"],
      "Key": "tyde-2017-papers-cogent-giving-systems-engineers-a-stepping-stone",
      "PersonsString": "Zilin Chen",
      "Title": "Cogent⇑: giving systems engineers a stepping stone",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-cogent-giving-systems-engineers-a-stepping-stone"
    },
    {
      "Abstract": "Erlang is a concurrent functional language based on the actor model of concurrency. In the purest form of this model, actors are realized by processes that do not share memory and communicate with each other exclusively via message passing. Erlang comes quite close to this model, as message passing is the primary form of interprocess communication and each process has its own memory area that is managed by the process itself. For this reason, Erlang is often referred to as implementing \u201cshared nothing\u201d concurrency. Although this is a convenient abstraction, in reality Erlang\u2019s main implementation, the Erlang/OTP system, comes with a large number of built-in operations that access memory which is shared by processes. In this paper, we categorize these built-ins, and characterize the interferences between them that can result in observable differences of program behaviour when these built-ins are used in a concurrent setting. The paper is complemented by a publicly available suite of more than one hundred small Erlang programs that demonstrate the racing behaviour of these built-ins.",
      "Affiliations": [
        "Uppsala University",
        ""
      ],
      "AffiliationsString": "Uppsala University, ",
      "Authors": [
        "stavrosaronis",
        "kostissagonas"
      ],
      "Key": "erlang-2017-papers-the-shared-memory-interferences-of-erlang-otp-built-ins",
      "PersonsString": "Stavros Aronis and Kostis Sagonas",
      "Title": "The Shared-Memory Interferences of Erlang/OTP Built-ins",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-the-shared-memory-interferences-of-erlang-otp-built-ins"
    },
    {
      "Abstract": "Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone?",
      "Affiliations": ["Microsoft Research"],
      "AffiliationsString": "Microsoft Research",
      "Authors": ["andrewkennedy"],
      "Key": "tyde-2017-papers-driving-types-into-php",
      "PersonsString": "Andrew Kennedy",
      "Title": "Driving types into PHP",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-driving-types-into-php"
    },
    {
      "Abstract": "As source code dependencies are usually stored in some precompiled executable representation like bytecode, static analysis frameworks for high-level languages have to be specifically adapted so they can meaningfully analyze these libraries too. This adaptation is not trivial, since compilation is in general not injective, the semantics of low-level instruction sets are often not specified adequately, and \u2014 as these program representations usually do not support structured programming \u2014 the structure of the high-level sources, and the low-level target, is considerably different, like in the case of the functional Erlang programming language and its assembly-like BEAM bytecode. In this paper, we present a structuring algorithm capable of recovering the Erlang syntax tree of functional branching expressions compiled to BEAM, based on certain assumptions regarding the compilation also specified in this paper. This algorithm is intended as a component of a larger framework, that aims to enable the static analysis of Erlang source dependencies by representing the semantics of BEAM programs with an Erlang sytnax tree that can be readily loaded into a static analysis framework.",
      "Affiliations": [
        "Eötvös Loránd University",
        ""
      ],
      "AffiliationsString": "Eötvös Loránd University, ",
      "Authors": [
        "daniellukacs",
        "melindatoth"
      ],
      "Key": "erlang-2017-papers-structuring-erlang-beam-control-flow",
      "PersonsString": "Dániel Lukács and Melinda Toth",
      "Title": "Structuring Erlang BEAM control flow",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/erlang-2017-papers-structuring-erlang-beam-control-flow"
    },
    {
      "Abstract": "Algebraic effect handlers generalize many control-flow abstractions that are implemented specially in most languages, like exception handling, iterators, or backtracking. In this article, we show how we can implement full support for asynchronous programming as a library using just algebraic effect handlers. The consistent type driven approach also leads naturally to powerful abstractions like block-scoped interleaving, cancellation, and timeouts that are lacking in other major asynchronous frameworks. We also introduce the concept of ambient state to reason about state that is local to the current strand of asynchronous execution.",
      "Affiliations": ["Microsoft Research"],
      "AffiliationsString": "Microsoft Research",
      "Authors": ["daanleijen"],
      "Key": "tyde-2017-papers-structured-asynchrony-with-algebraic-effects",
      "PersonsString": "Daan Leijen",
      "Title": "Structured asynchrony with algebraic effects",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-structured-asynchrony-with-algebraic-effects"
    },
    {
      "Abstract": "Redis is an in-memory data structure store, often used as a database, with a Haskell interface Hedis. Redis is dynamically typed \u2014 a key can be discarded and re-associated to a value of a different type, and a command, when fetching a value of a type it does not expect, signals a runtime error. We develop a domain-specific language that, by exploiting Haskell type-level programming techniques including indexed monad, type-level literals and closed type families, keeps track of types of values in the database and statically guarantees that type errors cannot happen for a class of Redis programs.",
      "Affiliations": [
        "Institute of Information Science, Academia Sinica",
        "Institute of Information Science, Academia Sinica",
        "Academia Sinica, Taiwan"
      ],
      "AffiliationsString": "Institute of Information Science, Academia Sinica, Academia Sinica, Taiwan",
      "Authors": [
        "tingyanlai",
        "tyngrueychuang",
        "shinchengmu"
      ],
      "Key": "tyde-2017-papers-type-safe-redis-queries-a-case-study-of-type-level-programming-in-haskell",
      "PersonsString": "Ting-Yan Lai, Tyng-Ruey Chuang and Shin-Cheng Mu",
      "Title": "Type safe Redis queries -- a case study of type-level programming in Haskell",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/tyde-2017-papers-type-safe-redis-queries-a-case-study-of-type-level-programming-in-haskell"
    },
    {
      "Abstract": "We present and evaluate an implementation technique for regular segmented reductions on GPUs. Existing techniques tend to be either consistent in performance but relatively inefficient in absolute terms, or optimised for specific workloads and thereby exhibiting bad performance for certain input. We propose three different strategies for segmented reduction of regular arrays, each optimised for a particular workload. We demonstrate an implementation in the Futhark compiler that is able to employ all three strategies and automatically select the appropriate one at runtime. While our evaluation is in the context of the Futhark compiler, the implementation technique is applicable to any library or language that has a need for segmented reductions. \nWe evaluate the technique on four microbenchmarks, two of which we also compare to implementations in the CUB library for GPU programming, as well as on two application benchmarks from the Rodinia suite. On the latter, we obtain speedups ranging from 1.3x to 1.7x over a previous implementation based on scans.",
      "Affiliations": [
        "DIKU, University of Copenhagen",
        "DIKU, University of Copenhagen"
      ],
      "AffiliationsString": "DIKU, University of Copenhagen",
      "Authors": [
        "rasmuswriedtlarsen",
        "troelshenriksen"
      ],
      "Key": "fhpc-2017-papers-strategies-for-regular-segmented-reductions-on-gpu",
      "PersonsString": "Rasmus Wriedt Larsen and Troels Henriksen",
      "Title": "Strategies for Regular Segmented Reductions on GPU",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-strategies-for-regular-segmented-reductions-on-gpu"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "MPI-SWS, Germany",
        "MPI-SWS, Germany",
        "Delft University of Technology, Netherlands",
        "MPI-SWS"
      ],
      "AffiliationsString": "MPI-SWS, Germany, Delft University of Technology, Netherlands, MPI-SWS",
      "Authors": [
        "ralfjung",
        "jacqueshenrijourdan",
        "robbertkrebbers",
        "derekdreyer"
      ],
      "Key": "hope-2017-papers-rustbelt-securing-the-foundations-of-the-rust-programming-language",
      "PersonsString": "Ralf Jung, Jacques-Henri Jourdan, Robbert Krebbers and Derek Dreyer",
      "Title": "RustBelt: Securing the Foundations of the Rust Programming Language",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-rustbelt-securing-the-foundations-of-the-rust-programming-language"
    },
    {
      "Abstract": "Recursion schemes, such as the well-known map, can be used as loci of potential parallelism, where, e.g., map is replaced with an equivalent parallel implementation. This paper formalises a novel technique, using program slicing, that automatically and statically identifies computations in recursive functions that can be lifted out of the function and potentially performed in parallel. We define a new program slicing algorithm, and show the soundness and completeness of our algorithm. We have built a prototype implementation, and demonstrated its use on 12 Haskell examples, including benchmarks from the NoFib suite and functions from the standard Haskell Prelude. In all cases, we obtain the expected results in terms of finding potential parallelism. Moreover, we have tested our prototype against synthetic benchmarks, demonstrating our prototype has quadratic time complexity. For the NoFib benchmark examples we demonstrate that real parallel speedups can be obtained (up to 32.93 times the sequential performance on 56 hyperthreaded cores).",
      "Affiliations": [
        "",
        "University of St. Andrews, UK"
      ],
      "AffiliationsString": ", University of St. Andrews, UK",
      "Authors": [
        "adambarwell",
        "kevinhammond"
      ],
      "Key": "fhpc-2017-papers-in-search-of-a-map-using-program-slicing-to-discover-potential-parallelism-in-recursive-functions",
      "PersonsString": "Adam Barwell and Kevin Hammond",
      "Title": "In Search of a Map: using Program Slicing to Discover Potential Parallelism in Recursive Functions",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-in-search-of-a-map-using-program-slicing-to-discover-potential-parallelism-in-recursive-functions"
    },
    {
      "Abstract": "to be announced",
      "Affiliations": ["University of St. Andrews, UK"],
      "AffiliationsString": "University of St. Andrews, UK",
      "Authors": ["christopherbrown1"],
      "Key": "fhpc-2017-papers-paraformance-demo",
      "PersonsString": "Christopher Brown",
      "Title": "Paraformance Demo",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-paraformance-demo"
    },
    {
      "Abstract": "We show how to compile high-level functional array-processing programs, drawn from image processing and machine learning, into C code that runs as fast as hand-written C. The key idea is to transform the program to \\emph{destination passing style}, which in turn enables a highly-efficient stack-like memory allocation discipline.",
      "Affiliations": [
        "EPFL, Switzerland",
        "Microsoft Research, Cambridge",
        "Microsoft Research, Cambridge",
        "Microsoft Research, Cambridge"
      ],
      "AffiliationsString": "EPFL, Switzerland, Microsoft Research, Cambridge",
      "Authors": [
        "amirshaikhha",
        "andrewfitzgibbon",
        "simonpaytonjones",
        "dimitriosvytiniotis"
      ],
      "Key": "fhpc-2017-papers-destination-passing-style-for-efficient-memory-management",
      "PersonsString": "Amir Shaikhha, Andrew Fitzgibbon, Simon Peyton Jones and Dimitrios Vytiniotis",
      "Title": "Destination-Passing Style for Efficient Memory Management",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-destination-passing-style-for-efficient-memory-management"
    },
    {
      "Abstract": "to be announced",
      "Affiliations": [
        "Drexel University, USA",
        "Drexel University, USA"
      ],
      "AffiliationsString": "Drexel University, USA",
      "Authors": [
        "siddhanathanshanmugam",
        "geoffreymainland"
      ],
      "Key": "fhpc-2017-papers-ziria-demo",
      "PersonsString": "Siddhanathan Shanmugam and Geoffrey Mainland",
      "Title": "Ziria Demo",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-ziria-demo"
    },
    {
      "Abstract": "Software-defined radio (SDR) is a challenging domain for language designers. To be useful in the real world, radio protocol implementations must operate at high data rates with low latency, yet to be useful to implementers, a language should allow programmers to express algorithms at a high level of abstraction without having to worry about the very low-level details that are necessary for meeting performance requirements. Ziria demonstrated that a high-level language for writing wireless physical layer (PHY) protocols could be competitive with hand-written C++, but only in a context where performance-critical computations, such as FFT and Viterbi, were still written in C++ and accessed via a foreign function interface. \nWe demonstrate that a new implementation of Ziria, embodied in the kzc compiler, allows even performance-critical blocks such as FFT and Viterbi to be written in a high-level language without sacrificing performance. Due to the ability of kzc to perform whole-program optimizations, a radio protocol pipeline using Viterbi written directly in Ziria can even outperform an implementation that calls out to C++. The contributions of this paper fall into two categories. First, we describe two new optimizations in kzc, both of which are critical for wringing performance out of high-level code: an aggressive partial evaluator for Ziria programs, and an automatic lookup-table (LUT) generator. Second, we show how to leverage these optimizations to implement three performance-critical blocks directly in Ziria: Viterbi decoding, the Fast Fourier Transform (FFT), and the inverse Fast Fourier Transform (IFFT).",
      "Affiliations": [
        "Drexel University, USA",
        "Drexel University, USA"
      ],
      "AffiliationsString": "Drexel University, USA",
      "Authors": [
        "geoffreymainland",
        "siddhanathanshanmugam"
      ],
      "Key": "fhpc-2017-papers-from-high-level-radio-protocol-specifications-to-efficient-low-level-implementations-via-partial-evaluation",
      "PersonsString": "Geoffrey Mainland and Siddhanathan Shanmugam",
      "Title": "From High-level Radio Protocol Specifications to Efficient Low-level Implementations via Partial Evaluation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fhpc-2017-papers-from-high-level-radio-protocol-specifications-to-efficient-low-level-implementations-via-partial-evaluation"
    },
    {
      "Abstract": "",
      "Affiliations": ["MPI-SWS"],
      "AffiliationsString": "MPI-SWS",
      "Authors": ["derekdreyer"],
      "Key": "plmw-icfp-2017-how-to-write-papers-give-talks",
      "PersonsString": "Derek Dreyer",
      "Title": "How to Write Papers and Give Talks That People Can Follow",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-how-to-write-papers-give-talks"
    },
    {
      "Abstract": "",
      "Affiliations": ["EPFL"],
      "AffiliationsString": "EPFL",
      "Authors": ["nadaamin"],
      "Key": "plmw-icfp-2017-tbd",
      "PersonsString": "Nada Amin",
      "Title": "Scala: Types in Theory & Practice",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-tbd"
    },
    {
      "Abstract": "",
      "Affiliations": ["North Carolina State University"],
      "AffiliationsString": "North Carolina State University",
      "Authors": ["chrismartens"],
      "Key": "plmw-icfp-2017-keynote",
      "PersonsString": "Chris Martens",
      "Title": "Keynote",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-keynote"
    },
    {
      "Abstract": "",
      "Affiliations": ["Northeastern University, USA"],
      "AffiliationsString": "Northeastern University, USA",
      "Authors": ["amalahmed"],
      "Key": "plmw-icfp-2017-compositional-compiler-correctness",
      "PersonsString": "Amal Ahmed",
      "Title": "Compositional Compiler Correctness",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-compositional-compiler-correctness"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Oxford",
        "Bryn Mawr College, USA"
      ],
      "AffiliationsString": "University of Oxford, Bryn Mawr College, USA",
      "Authors": [
        "samstaton",
        "richardeisenberg"
      ],
      "Key": "plmw-icfp-2017-panel-discussion-careers-in-programming-languages",
      "PersonsString": "Sam Staton and Richard A. Eisenberg",
      "Title": "Panel Discussion: Careers in Programming Languages ",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-panel-discussion-careers-in-programming-languages"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "plmw-icfp-2017-tbd2",
      "PersonsString": "",
      "Title": "TBD",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-tbd2"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["conormcbride"],
      "Key": "plmw-icfp-2017-a-few-frank-remarks",
      "PersonsString": "Conor McBride",
      "Title": "A Few Frank Remarks",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-a-few-frank-remarks"
    },
    {
      "Abstract": "In this talk we discuss our work on techniques to aid the verification of programs whose state evolves monotonically according to a preorder (a reflexive, transitive relation). We give a formal account of a useful verification model: a property witnessed at some state s0 can be safely recalled at any future state s1, so long as the state evolves monotonically and that property is stable with respect to the given preorder. Specifically, we study this style of verification in the context of the effectful dependently typed programming language F*. While specific instances of this verification model are used extensively in F*, their use has been somewhat ad hoc so far. In this work we provide a general framework for this style of verification: we develop a preorder-respecting version of F*\u2019s state effect, equip it with an instrumented operational semantics, and demonstrate how the instances of this verification model already used in F* can be implemented in our general framework.",
      "Affiliations": [
        "University of Edinburgh",
        "Inria Paris",
        "Inria Paris, ENS Paris, and Microsoft Research",
        "Microsoft Research",
        "Microsoft Research, n.n.",
        "Microsoft Research, n.n."
      ],
      "AffiliationsString": "University of Edinburgh, Inria Paris, Inria Paris, ENS Paris, and Microsoft Research, Microsoft Research, Microsoft Research, n.n.",
      "Authors": [
        "danelahman",
        "catalinhritcu",
        "kenjimaillard",
        "aseemrastogi",
        "nikhilswamy",
        "cedricfournet"
      ],
      "Key": "hope-2017-papers-recalling-a-witness",
      "PersonsString": "Danel Ahman, Cătălin Hriţcu, Kenji Maillard, Aseem Rastogi, Nikhil Swamy and Cédric Fournet",
      "Title": "Recalling a Witness",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hope-2017-papers-recalling-a-witness"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "McGill University",
        "Computer Laboratory, University of Cambridge",
        "Wesleyan University"
      ],
      "AffiliationsString": "McGill University, Computer Laboratory, University of Cambridge, Wesleyan University",
      "Authors": [
        "brigittepientka",
        "neelakantankrishnaswami",
        "danlicata"
      ],
      "Key": "plmw-icfp-2017-welcome",
      "PersonsString": "Brigitte Pientka, Neelakantan R. Krishnaswami and Dan Licata",
      "Title": "Welcome",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-welcome"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of British Columbia"],
      "AffiliationsString": "University of British Columbia",
      "Authors": ["ronaldgarcia"],
      "Key": "plmw-icfp-2017-gradual-typing",
      "PersonsString": "Ronald Garcia",
      "Title": "Gradual Typing",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/plmw-icfp-2017-gradual-typing"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "scheme-2017-papers-welcome",
      "PersonsString": "",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-welcome"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "joecorneli",
        "raymondpuzio"
      ],
      "Key": "scheme-2017-papers-lightning-talk-extending-the-lisp-model-from-cons-cells-to-triples-from-trees-to-hypergraphs",
      "PersonsString": "Joe Corneli and Raymond Puzio",
      "Title": "Lightning Talk: Extending the LISP model from cons cells to triples, from trees to hypergraphs",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-lightning-talk-extending-the-lisp-model-from-cons-cells-to-triples-from-trees-to-hypergraphs"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["dimitrisvyzovitis"],
      "Key": "scheme-2017-papers-lightning-gerbil-on-gambit-as-they-say-racket-on-chez",
      "PersonsString": "Dimitris Vyzovitis",
      "Title": "Lightning: Gerbil on Gambit, as they say Racket on Chez",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-lightning-gerbil-on-gambit-as-they-say-racket-on-chez"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Utah, USA"],
      "AffiliationsString": "University of Utah, USA",
      "Authors": ["matthewmight"],
      "Key": "scheme-2017-invited-talk-matt-might",
      "PersonsString": "Matthew Might",
      "Title": "Invited Talk",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-invited-talk-matt-might"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["alainmarty"],
      "Key": "scheme-2017-papers-lightning-lambda-talk-",
      "PersonsString": "Alain Marty",
      "Title": "Lightning: {lambda talk}",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-lightning-lambda-talk-"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "scheme-2017-papers-goodbye",
      "PersonsString": "",
      "Title": "Goodbye",
      "Type": "Day closing",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-goodbye"
    },
    {
      "Abstract": "",
      "Affiliations": ["Rakuten Institute of Technology"],
      "AffiliationsString": "Rakuten Institute of Technology",
      "Authors": ["satoshiegi"],
      "Key": "scheme-2017-papers-paper-scalar-and-tensor-parameters-for-importing-tensor-index-notation-including-einstein-summation-notation",
      "PersonsString": "Satoshi Egi",
      "Title": "Paper: Scalar and Tensor Parameters for Importing Tensor Index Notation including Einstein Summation Notation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-paper-scalar-and-tensor-parameters-for-importing-tensor-index-notation-including-einstein-summation-notation"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Utah, USA",
        ""
      ],
      "AffiliationsString": "University of Utah, USA, ",
      "Authors": [
        "thomasgilray",
        "sidharthkumar"
      ],
      "Key": "scheme-2017-papers-paper-toward-parallelizing-control-flow-analysis-with-datalog",
      "PersonsString": "Thomas Gilray and Sidharth Kumar",
      "Title": "Paper: Toward Parallelizing Control-flow Analysis with Datalog",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-paper-toward-parallelizing-control-flow-analysis-with-datalog"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["alaricsnellpym"],
      "Key": "scheme-2017-papers-report-status-of-the-ongoing-r7rs-standardization-process",
      "PersonsString": "Alaric Snell-Pym",
      "Title": "Report: Status of the ongoing R7RS standardization process",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-report-status-of-the-ongoing-r7rs-standardization-process"
    },
    {
      "Abstract": "Ethnomusicologists face a dilemma: either shoehorn African music into European notation, or create custom DSLs that can only be understood by a select band of European ethnomusicologists. Computational musicologists can solve this problem, because we have principled ways of modelling specific idioms in terms of general computation. What\u2019s more, our models can be executed to generate actual music. [\u2026]",
      "Affiliations": ["ThoughtWorks (UK) Ltd."],
      "AffiliationsString": "ThoughtWorks (UK) Ltd.",
      "Authors": ["chrisford"],
      "Key": "farm-2017-papers-demo-african-polyphony-and-polyrhythm",
      "PersonsString": "Chris Ford",
      "Title": "Demo \u2014 African Polyphony and Polyrhythm",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-demo-african-polyphony-and-polyrhythm"
    },
    {
      "Abstract": "Vivid is a Haskell library for music creation and sound synthesis, using the SuperCollider sound synthesis engine for real-time \u201crendering\u201d of audio. Vivid allows users to synthesize and modify audio live in real time, or to render audio files of compositions in a fraction of real time. This demonstration will be an overview of both Vivid\u2019s usage and features of its core design. Vivid uses many features of Haskell, both to enable safety and expressiveness and to regain features more commonly found in dynamic musical languages. [\u2026]",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["tommurphy"],
      "Key": "farm-2017-papers-demo-vivid-sound-synthesis-with-haskell-and-supercollider",
      "PersonsString": "Tom Murphy",
      "Title": "Demo \u2014 Vivid: Sound Synthesis with Haskell and SuperCollider",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-demo-vivid-sound-synthesis-with-haskell-and-supercollider"
    },
    {
      "Abstract": "This paper is an introduction to FAUST, a functional programming language for sound synthesis and audio processing. We assume that the reader has some familiarity with functional programming, but no previous knowledge in signal processing. The text describes several examples that the reader will be able to try online using a web browser. These examples are preceded by two more technical sections presenting some aspects of the language.",
      "Affiliations": [
        "",
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "yannorlarey",
        "stephaneletz",
        "dominiquefober",
        "romainmichon"
      ],
      "Key": "farm-2017-papers-faust-for-functional-programmers",
      "PersonsString": "Yann Orlarey, Stéphane Letz, Dominique Fober and Romain Michon",
      "Title": " FAUST Tutorial for Functional Programmers",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-faust-for-functional-programmers"
    },
    {
      "Abstract": "Functional Programming brings a promise of highly-declarative code, efficient, parallelisable execution, modularity and reusability. In spite of these advantages, the use of pure Functional Languages in commercial games is still rare. This is partially due to the lack of backends for multimedia, production tools, and demonstrations that functional abstractions work for other than non-trivial examples. In this paper we present GALE, a Graphic Adventure Library and Engine implemented in Haskell. Our engine implements the basic common features available in similar commercial engines for graphic adventures. We show a high-level abstract definition of game descriptions that allows us not only to run them, but also to analyse them in compile time. We also demonstrate how this description allows us to provide novel features not available in traditional engines. Our system works on iOS, Android and desktop, and is accompanied by a development environment to compose the games with no prior programming skills.",
      "Affiliations": ["Keera Studios"],
      "AffiliationsString": "Keera Studios",
      "Authors": ["ivanperez1"],
      "Key": "farm-2017-papers-gale-graphic-adventure-library-and-engine",
      "PersonsString": "Ivan Perez",
      "Title": "GALE: A Functional Graphic Adventure Library and Engine ",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-gale-graphic-adventure-library-and-engine"
    },
    {
      "Abstract": "Like natural language, music can be described as being composed of various parts, which combine together to form a set-theoretic or logical entity. The conceptualized parts are more basic than the music seen on a page; they are the musical objects subject to music-theoretic analysis, and can be described using the language of functional programming and lambda calculus. This paper introduces the types of musical objects seen in tonal and modern music, as well as the combinators that allow them to combine to create other musical objects. We propose a method for automatically generating melodies by searching for combinations of musical objects which together produce a valid program corresponding to a melody or set of melodies.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["halleyyoung"],
      "Key": "farm-2017-papers-a-categorial-grammar-for-music-and-its-use-in-automatic-melody-generation",
      "PersonsString": "Halley Young",
      "Title": "A Categorial Grammar for Music and Its Use in Automatic Melody Generation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-a-categorial-grammar-for-music-and-its-use-in-automatic-melody-generation"
    },
    {
      "Abstract": "In this demo we aim at presenting the basic feature we have put in practice via the definition of Octopus: a programing language embedded in Haskell for complex description of (reactive) 3D animations. As a front end, Octopus simply extend the LOGO\u2019s Turtle command language to 3D and time dimension, inheriting Haskell do notation via an embedding of the underlying semantics monoids into IO monads. As a back end, most of the rendering is directly described as OpenGL shaders performed by the GPU allowing thus fast rendering with low communication bandwidth between Haskell (CPU) and GLSL (GPU). The resulting source code should soon be made available for participative development of the Octopus language. A GHCi-compatible version of our current (compiled) version should also allow for making the demo interactive.",
      "Affiliations": [
        "CNRS LaBRI, Inria Bordeaux,",
        "Bordeaux INP / CNRS LaBRI / Bordeaux University"
      ],
      "AffiliationsString": "CNRS LaBRI, Inria Bordeaux,, Bordeaux INP / CNRS LaBRI / Bordeaux University",
      "Authors": [
        "simonarchipoff",
        "davidjanin"
      ],
      "Key": "farm-2017-papers-demo-octopus-a-high-level-fast-3d-animation-language",
      "PersonsString": "Simon Archipoff and David Janin",
      "Title": "Demo \u2014 Octopus: A High-Level Fast 3D Animation Language",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-demo-octopus-a-high-level-fast-3d-animation-language"
    },
    {
      "Abstract": "In this paper, we aim at defining a simple and sound mathematical framework for describing temporal media programming language semantics. It occurs that semigroup theory offers various concepts that are especially well suited for this purpose. As a result, a fairly general programming scheme can be defined in order to specify, compose and render both spatial media objects (e.g. 3D drawings) and timed media objects (e.g. Animation or Music). Each of these constructs is specified in Haskell via an adequate type class definition and an associated uniform data type construct. A simple monoid based semantics model of the turtle command language of Logo is detailed and extended throughout the paper. This allows for providing step by step introductions and usage examples of the algebraic concepts and constructs our proposal is based on.",
      "Affiliations": [
        "CNRS LaBRI, Inria Bordeaux,",
        "Bordeaux INP / CNRS LaBRI / Bordeaux University"
      ],
      "AffiliationsString": "CNRS LaBRI, Inria Bordeaux,, Bordeaux INP / CNRS LaBRI / Bordeaux University",
      "Authors": [
        "simonarchipoff",
        "davidjanin"
      ],
      "Key": "farm-2017-papers-unified-media-programming-an-algebraic-approach",
      "PersonsString": "Simon Archipoff and David Janin",
      "Title": "Unified Media Programming: An Algebraic Approach",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-unified-media-programming-an-algebraic-approach"
    },
    {
      "Abstract": "Whereas formal mathematical theories are well studied, computers cannot yet adequately represent and reason about mathematical dialogues and other informal texts. To address this gap, we have developed a representation and reasoning strategy that draws on contemporary argumentation theory and classic AI techniques for representing and querying narratives and dialogues. In order to make the structures that these modelling tools produce accessible to computational reasoning, we encode representations in a higher-order nested semantic network. This system, for which we have developed a preliminary prototype in LISP, can represent both the content of what people say, and the dynamic reasoning steps that move from one step to the next.",
      "Affiliations": [
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "joecorneli",
        "ursulamartin",
        "davemurrayrust",
        "alisonpease",
        "raymondpuzio",
        "gabrielarinonesin"
      ],
      "Key": "farm-2017-papers-modelling-the-way-mathematics-is-actually-done",
      "PersonsString": "Joe Corneli, Ursula Martin, Dave Murray-Rust, Alison Pease, Raymond Puzio and Gabriela Rino Nesin",
      "Title": "Modelling the Way Mathematics Is Actually Done",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-modelling-the-way-mathematics-is-actually-done"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Active Group GmbH",
        "UMR STMS: IRCAM-CNRS-UPMC"
      ],
      "AffiliationsString": "Active Group GmbH, UMR STMS: IRCAM-CNRS-UPMC",
      "Authors": [
        "michaelsperber",
        "jeanbresson"
      ],
      "Key": "farm-2017-papers-welcome",
      "PersonsString": "Michael Sperber and Jean Bresson",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-welcome"
    },
    {
      "Abstract": "In this demo I demonstrate a particular computer-based formalisation of musical notation. I apply this representation to historical musical works written in non-standard temperaments, with a view to accurate playback while retaining a completely flexible choice of temperament. [\u2026]",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["edwardlilley"],
      "Key": "farm-2017-papers-representation-of-musical-notation-in-haskell",
      "PersonsString": "Edward Lilley",
      "Title": "Demo \u2014 Representation of Musical Notation in Haskell",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-representation-of-musical-notation-in-haskell"
    },
    {
      "Abstract": "Creative programming is programming as a form of creative expression, rather than solving a given problem, and usually involves some kind of visual and/or aural component meant to be experienced. The purpose of creative programming are as varied as there are different programmers. Some use it as a tool for learning, others as a form of art or recreational programming. Ait is a language created to explore what concatenative languages can offer a programmer in the context of creative programming. [\u2026]",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["stianveummllersen"],
      "Key": "farm-2017-papers-demo-ait-a-concatenative-language-for-creative-programming",
      "PersonsString": "Stian Veum Møllersen",
      "Title": "Demo \u2014 Ait: A Concatenative Language for Creative Programming",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-demo-ait-a-concatenative-language-for-creative-programming"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Université de Montréal",
        "SRFI Editor",
        "",
        "",
        "Igalia, S.L."
      ],
      "AffiliationsString": ", Université de Montréal, SRFI Editor, Igalia, S.L.",
      "Authors": [
        "francoisrenerideau",
        "marcfeeley",
        "arthurgleckler",
        "kathygray",
        "alaricsnellpym",
        "andywingo"
      ],
      "Key": "scheme-2017-papers-panel-scheme-in-2017",
      "PersonsString": "François-René Rideau, Marc Feeley, Arthur Gleckler, Kathy Gray, Alaric Snell-Pym and Andy Wingo",
      "Title": "Panel: Future of Scheme",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-panel-scheme-in-2017"
    },
    {
      "Abstract": "The Arpeggigon is an interactive cellular automaton for composing groove-based music. It is implemented in Haskell using the frameworks Functional Reactive Programming (FRP) and Reactive Values and Relations, demonstrating in particular how FRP and its hybrid capabilities aligns with the temporal and declarative nature of music, and how these frameworks facilitates implementing an interactive musical application. [\u2026]",
      "Affiliations": ["University of Nottingham, UK"],
      "AffiliationsString": "University of Nottingham, UK",
      "Authors": ["henriknilsson"],
      "Key": "farm-2017-papers-demo-the-arpeggigon-a-functional-reactive-musical-automaton",
      "PersonsString": "Henrik Nilsson",
      "Title": "Demo \u2014 The Arpeggigon: A Functional Reactive Musical Automaton",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/farm-2017-papers-demo-the-arpeggigon-a-functional-reactive-musical-automaton"
    },
    {
      "Abstract": "",
      "Affiliations": ["Indiana University"],
      "AffiliationsString": "Indiana University",
      "Authors": ["samtobinhochstadt"],
      "Key": "scheme-2017-papers-keynote-sam-tobin-hochstadt",
      "PersonsString": "Sam Tobin-Hochstadt",
      "Title": "Keynote",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/scheme-2017-papers-keynote-sam-tobin-hochstadt"
    },
    {
      "Abstract": "When the maximal number of elements that may be inserted into a container is not known in advance, the container needs to grow dynamically. Growable containers are most frequently implemented on top of lists or vectors, yet both are inefficient in terms of space and time usage. We investigate the implementation of OCaml of sequence data structures that store their elements in fixed-capacity arrays, called chunks. For sequences of several thousand elements, we show that our chunked-based sequence data structures save a lot of memory and may deliver better performance than classic container data structures.",
      "Affiliations": [
        "Inria",
        ""
      ],
      "AffiliationsString": "Inria, ",
      "Authors": [
        "arthurchargueraud",
        "mikerainey"
      ],
      "Key": "mlfamilyworkshop-2017-papers-efficient-representation-of-large-dynamic-sequences-in-ml",
      "PersonsString": "Arthur Charguéraud and Mike Rainey",
      "Title": "Efficient representation of large, dynamic sequences in ML",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-efficient-representation-of-large-dynamic-sequences-in-ml"
    },
    {
      "Abstract": "A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \nIn this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets.",
      "Affiliations": ["University of St. Andrews, UK"],
      "AffiliationsString": "University of St. Andrews, UK",
      "Authors": ["edwinbrady"],
      "Key": "mlfamilyworkshop-2017-papers-state-machines-all-the-way-down",
      "PersonsString": "Edwin Brady",
      "Title": "State machines all the way down",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-state-machines-all-the-way-down"
    },
    {
      "Abstract": "We address the problem of transforming typed functional programs into relational form. In this form a program can be run in various ``directions'' with various arguments left free, making it possible to acquire different behaviors from a single specification. We present an implementation of relational convertor for the subset of Objective Caml and evaluate it on a number of benchmarks, obtaining some relational programs never written before.",
      "Affiliations": [
        "Sain Petersburg State University, SPbGU",
        ""
      ],
      "AffiliationsString": "Sain Petersburg State University, SPbGU, ",
      "Authors": [
        "petrlozov",
        "dmitriboulytchev"
      ],
      "Key": "mlfamilyworkshop-2017-papers-relational-conversion-for-ocaml",
      "PersonsString": "Petr Lozov and Dmitri Boulytchev",
      "Title": "Relational conversion for OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-relational-conversion-for-ocaml"
    },
    {
      "Abstract": "We present the progress in the development of high-performance SML#. The key component is the combination of lightweight thread scheduling in system research and memory management in compiler research. This part has already been achieved; the programmer easily writes codes that create and use millions of threads on multicore professors. In the talk, we describe the key features of the high-performance SML# and demonstrate its feasibility through examples running on multicore processors.",
      "Affiliations": [
        "Tohoku University, Japan",
        "The University of Tokyo",
        "Tohoku University"
      ],
      "AffiliationsString": "Tohoku University, Japan, The University of Tokyo, Tohoku University",
      "Authors": [
        "atsushiohori",
        "kenjirotaura",
        "katsuhiroueno"
      ],
      "Key": "mlfamilyworkshop-2017-papers-making-sml-a-general-purpose-high-performance-language",
      "PersonsString": "Atsushi Ohori, Kenjiro Taura and Katsuhiro Ueno",
      "Title": "Making SML# a general-purpose high-performance language",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-making-sml-a-general-purpose-high-performance-language"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "mlfamilyworkshop-2017-papers-welcome",
      "PersonsString": "",
      "Title": "Welcome",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-welcome"
    },
    {
      "Abstract": "We present a module system for Eliom, a tierless web programming language that extends OCaml. Our module language integrates well with both the Eliom and OCaml languages and supports nice properties of module systems such as a strong support for abstraction and separate compilation.",
      "Affiliations": [
        "Université Denis Diderot Paris 7, PPS",
        "Univ Paris Diderot, Sorbonne Paris Cité, BeSport"
      ],
      "AffiliationsString": "Université Denis Diderot Paris 7, PPS, Univ Paris Diderot, Sorbonne Paris Cité, BeSport",
      "Authors": [
        "gabrielradanne",
        "jeromevouillon1"
      ],
      "Key": "mlfamilyworkshop-2017-papers-tierless-modules",
      "PersonsString": "Gabriel Radanne and Jérôme Vouillon",
      "Title": "Tierless modules",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-tierless-modules"
    },
    {
      "Abstract": "We present examples and encodings of first-class subtypes, analogous to the type equality witnesses that underlie GADTs.",
      "Affiliations": [
        "University of Cambridge, UK",
        ""
      ],
      "AffiliationsString": "University of Cambridge, UK, ",
      "Authors": [
        "jeremyyallop",
        "stephendolan"
      ],
      "Key": "mlfamilyworkshop-2017-papers-first-class-subtypes",
      "PersonsString": "Jeremy Yallop and Stephen Dolan",
      "Title": "First-class subtypes",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-first-class-subtypes"
    },
    {
      "Abstract": "Libraries are the basic building blocks of any realistic programming project. It is thus of utmost interest for a programmer to build her software on top of bug-free libraries. We present the ongoing VOCAL project, which aims at building a mechanically verified library of general-purpose data structures and algorithms, written in the OCaml language.",
      "Affiliations": [
        "Inria",
        "CNRS, Paris, France",
        "LRI - Université Paris-Sud",
        "Inria, France"
      ],
      "AffiliationsString": "Inria, CNRS, Paris, France, LRI - Université Paris-Sud, Inria, France",
      "Authors": [
        "arthurchargueraud",
        "jeanchristophefilliatre",
        "mariopereira",
        "francoispottier"
      ],
      "Key": "mlfamilyworkshop-2017-papers-vocal-a-verified-ocaml-library",
      "PersonsString": "Arthur Charguéraud, Jean-Christophe Filliatre, Mário Pereira and François Pottier",
      "Title": "VOCAL -- a verified OCAml Library",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-vocal-a-verified-ocaml-library"
    },
    {
      "Abstract": "Distributed applications often eschew strong consistency and replicate data asynchronously to improve availability and fault tolerance. However, programming under eventual consistency is significantly more complex and often leads to onerous programming model where inconsistencies must be handled explicitly. We introduce vml, a programming model that extends ML datatypes with mergeability a la version control systems with the ability to define and compose distributed ML computations around such data. Our OCaml implementation instantiates mergeable types on Irmin, a distributed content-addressible store to enable composable and highly-available distributed applications.",
      "Affiliations": [
        "Purdue University",
        "University of Cambridge",
        "Purdue University",
        "Purdue University"
      ],
      "AffiliationsString": "Purdue University, University of Cambridge",
      "Authors": [
        "gowthamkaki",
        "kcsivaramakrishnan",
        "samodyaabeysiriwardane",
        "sureshjagannathan"
      ],
      "Key": "mlfamilyworkshop-2017-papers-mergeable-types",
      "PersonsString": "Gowtham Kaki, KC Sivaramakrishnan, Samodya Abeysiriwardane and Suresh Jagannathan",
      "Title": "Mergeable types",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-mergeable-types"
    },
    {
      "Abstract": "Abductive reasoning is a form of logical inference which seeks to uncover all possible causes of an observation. We show how abduction has a computational counterpart, like many other proof-theoretic concepts: namely the identification and modification of certain constants in a term. Abductive computation can be used to improve the behaviour of a term in some programmer-defined sense, like a typical workflow of optimisation problems including some machine-learning tasks. The emphasis of this progress report is a type system for abductive computation. It is intended to guarantee observably deterministic behaviour of programs, even though abduction may introduce a degree of computational nondeterminism.",
      "Affiliations": ["University of Birmingham, UK"],
      "AffiliationsString": "University of Birmingham, UK",
      "Authors": ["kokomuroya"],
      "Key": "mlfamilyworkshop-2017-papers-towards-abductive-functional-programming",
      "PersonsString": "Koko Muroya",
      "Title": "Towards abductive functional programming",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-towards-abductive-functional-programming"
    },
    {
      "Abstract": "We show how Lisp-style macros and extensible infix syntax are combined in the programming language Typer, which is a combination of Lisp, ML, and Coq. Its name is an homage to Scheme(r) with which it hares the goal of pushing as much functionality as possible outside of the core and into libraries. While it superficially looks more like Haskell and ML, with infix notation and static polymorphic typing, it tries to preserve the syntactic malleability of Lisp by relying on the traditional Lisp-style S-expressions and macros. \nIts main tool to this end is the use of an infix notation for S-expressions, which still makes it possible to parse sub-expressions before knowing what role they will play.",
      "Affiliations": [
        "Université de Montréal",
        "Université de Montréal",
        "Université de Montréal"
      ],
      "AffiliationsString": "Université de Montréal",
      "Authors": [
        "pierredelaunay",
        "vincentarchambaultbouffard",
        "stefanmonnier"
      ],
      "Key": "mlfamilyworkshop-2017-papers-typer-an-infix-statically-typed-lisp",
      "PersonsString": "Pierre Delaunay, Vincent Archambault-Bouffard and Stefan Monnier",
      "Title": "Typer: an infix statically typed Lisp",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-typer-an-infix-statically-typed-lisp"
    },
    {
      "Abstract": "Surprisingly, we can write non-deterministic programs in an ML-like language just as naturally and elegantly as in the functional-logic language Curry \u2013 ML\u2019s call-by-value and the lack of support for monads notwithstanding. The key idea is to forget about (the popular conception of) monads and to write non-deterministic computations in a small, tagless-final embedded DSL, with ML playing the role of the `preprocessor\u2019. The DSL turns out surprisingly small, essentially first-order \u2013 compensated by the richness of the Meta Language.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["olegkiselyov"],
      "Key": "mlfamilyworkshop-2017-papers-effects-without-monads-non-determinism",
      "PersonsString": "Oleg Kiselyov",
      "Title": "Effects without monads: non-determinism",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-effects-without-monads-non-determinism"
    },
    {
      "Abstract": "Useful real-world functional programs must often confront the Awkward Squad [7], a range of un-beautiful issues concerning the interplay between concurrency, input/output, exceptions, resources, etc. We show that algebraic effects and their handlers can elegantly express such programs without compromising performance. In particular, we introduce asynchronous effects and their handlers, and show how they elegantly solve the interaction between user-level threads and operating system services.",
      "Affiliations": [
        "",
        "Jane Street Group",
        "The University of Edinburgh",
        "OCaml Labs",
        "University of Cambridge",
        "Jane Street"
      ],
      "AffiliationsString": ", Jane Street Group, The University of Edinburgh, OCaml Labs, University of Cambridge, Jane Street",
      "Authors": [
        "stephendolan",
        "spiroseliopoulos",
        "danielhillerstrom",
        "anilmadhavapeddy",
        "kcsivaramakrishnan",
        "leowhite"
      ],
      "Key": "mlfamilyworkshop-2017-papers-effectively-tackling-the-awkward-squad",
      "PersonsString": "Stephen Dolan, Spiros Eliopoulos, Daniel Hillerström, Anil Madhavapeddy, KC Sivaramakrishnan and Leo White",
      "Title": "Effectively tackling the awkward squad",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/mlfamilyworkshop-2017-papers-effectively-tackling-the-awkward-squad"
    },
    {
      "Abstract": "During compilation, an explicit model of the control stack can uniformly express a host of language features, such as concurrency and exception handling. For GHC and other compilers using such a model, LLVM is an awkward compilation target. Because of limitations in the LLVM IR, every point at which a function call returns must be split into its own function. This splitting transformation (a.k.a. \u201cproc-point splitting\u201d in GHC) destroys much of the function-local control-flow in the original program, rendering most of LLVM\u2019s optimizations useless. \nIn this talk, I will discuss my work to extend LLVM with a new feature that supports explicit stack management, eliminating the need for the splitting transformation. Using GHC as a testbed, I will also compare the new feature against the prior splitting workaround.",
      "Affiliations": [
        "University of Chicago",
        "Microsoft Research, Cambridge"
      ],
      "AffiliationsString": "University of Chicago, Microsoft Research, Cambridge",
      "Authors": [
        "kavonfarvardin",
        "simonpaytonjones"
      ],
      "Key": "hiw-2017-native-support-for-explicit-stacks-in-llvm",
      "PersonsString": "Kavon Farvardin and Simon Peyton Jones",
      "Title": "Native Support for Explicit Stacks in LLVM",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-native-support-for-explicit-stacks-in-llvm"
    },
    {
      "Abstract": "Sign up on the day of HIW to claim a spot in this Lightning Talk Slot.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "hiw-2017-lightning-talk-slot-1",
      "PersonsString": "",
      "Title": "Lightning Talk Slot #1",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-lightning-talk-slot-1"
    },
    {
      "Abstract": "Simon Peyton Jones will summarise the state of play on GHC, and invite discussion.",
      "Affiliations": ["Microsoft Research, Cambridge"],
      "AffiliationsString": "Microsoft Research, Cambridge",
      "Authors": ["simonpaytonjones"],
      "Key": "hiw-2017-progress-on-ghc",
      "PersonsString": "Simon Peyton Jones",
      "Title": "Progress on GHC",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-progress-on-ghc"
    },
    {
      "Abstract": "Sign up on the day of HIW to claim a spot in this Lightning Talk Slot.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "hiw-2017-lightning-talk-slot-3",
      "PersonsString": "",
      "Title": "Lightning Talk Slot #3",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-lightning-talk-slot-3"
    },
    {
      "Abstract": "A recurring topic of concern among users of GHC is GHC\u2019s performance, both regarding compilation time and runtime of the generated code, and how GHC\u2019s performance evolves across GHC releases. That concern is aggravated by the long release cycle and the small footprint of libraries in CI builds. As a datapoint that lends credibility to this concern, consider that, although an explicit goal for GHC 8.2 is to improve compilation times, there is evidence that compilation times (for a release candidate) degraded for some packages. \nIn this talk, we will analyse the current situation and propose a scheme that enables the (a) continuous monitoring of GHC performance on (b) a wider range of packages. As our scheme is based on Stackage package sets, we will also argue that widening the range of packages under CI will accelerate the adoption of new GHC releases by the wider community. In particular, we will detail our own plans to work towards an implementation of the proposed scheme as well as outline where we hope for community support. Our focus here is on tracking compilation times, but the proposed scheme will also get us closer to being able to track the runtime performance of GHC generated code beyond nofib. Finally, by widening the surface area of CI, we may also be able to spot functional regressions on code beyond the GHC build and its test suite more quickly.",
      "Affiliations": [
        "Tweag I/O",
        ""
      ],
      "AffiliationsString": "Tweag I/O, ",
      "Authors": [
        "mathieuboespflug",
        "manuelchakravarty"
      ],
      "Key": "hiw-2017-tracking-ghc-performance",
      "PersonsString": "Mathieu Boespflug and Manuel Chakravarty",
      "Title": "Tracking GHC Performance",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-tracking-ghc-performance"
    },
    {
      "Abstract": "Sign up on the day of HIW to claim a spot in this Lightning Talk Slot.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "hiw-2017-lightning-talk-slot-4",
      "PersonsString": "",
      "Title": "Lightning Talk Slot #4",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-lightning-talk-slot-4"
    },
    {
      "Abstract": "Hadrian is a new build system for the Glasgow Haskell Compiler. It is based on the Shake library and we plan to replace the current Make-based build system with Hadrian very soon. \nIn this talk we will give an update on the latest developments in Hadrian and a short tutorial on how to use and modify it. \nHadrian\u2019s homepage is: https://github.com/snowleopard/hadrian.",
      "Affiliations": [
        "",
        "University of Washington",
        "Well-Typed LLP",
        ""
      ],
      "AffiliationsString": ", University of Washington, Well-Typed LLP",
      "Authors": [
        "andreymokhov",
        "zhenzhang1",
        "bengamari",
        "neilmitchell"
      ],
      "Key": "hiw-2017-getting-ready-for-hadrian",
      "PersonsString": "Andrey Mokhov, Zhen Zhang, Ben Gamari and Neil Mitchell",
      "Title": "Getting Ready for Hadrian",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-getting-ready-for-hadrian"
    },
    {
      "Abstract": "We will discuss the recent efforts to improve continuous integration coverage and shrink the release cycle, report on the state of GHC\u2019s new proposal process, discuss the plan of adoption for Hadrian, and ask for feedback on the general needs of GHC\u2019s contributor community.",
      "Affiliations": ["Well-Typed LLP"],
      "AffiliationsString": "Well-Typed LLP",
      "Authors": ["bengamari"],
      "Key": "hiw-2017-ghc-infrastructure-update-and-discussion",
      "PersonsString": "Ben Gamari",
      "Title": "GHC Infrastructure Update and Discussion",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-ghc-infrastructure-update-and-discussion"
    },
    {
      "Abstract": "We\u2019ve been working on a sibling to GHC core with support for linear logic. Our work began with the need to model ownership of physical resources, while also ensuring that the induced calculus has a clean compilation story for good performance. We decided to borrow good ideas in GHC core, our work has been concurrent with and complementary to the recent line of work around join points and sequent calculus, which naturally extend to linear logic \nIn addition to modeling our problem domain well, linear logic can clarify many ideas ghc already has, but in a uniform way. It provides a natural description of one-shot thunks and internalizes certain fundamental concurrency/parallelism constructs while ensuring resource isolation. We can perhaps provide clearer foundations for how IO and ST style state tokens are reasoned about. Equipping function spaces with explicit unboxed tuples (as telescopes) for both domain and codomain increases the expressivity of core. Finally, as GHC adds more dependently typed features, a sound notion of irrelevance is an important tool for optimization by proof erasure and arises naturally in this work. \nWe will present the problems which lead to this line of work, our formalization in Agda, possibly a working prototype, and future work. \nWork in progress on formalizing this effort can be found at https://github.com/cartazio/system-lf",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "carterschonwald",
        "joelburget"
      ],
      "Key": "hiw-2017-why-ghc-core-and-linear-logic-should-be-best-friends",
      "PersonsString": "Carter Schonwald and Joel Burget",
      "Title": "Why GHC Core and Linear Logic Should be Best Friends",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-why-ghc-core-and-linear-logic-should-be-best-friends"
    },
    {
      "Abstract": "An overview of the current and future state of IDE support in GHC, from the perspective of integrating tools using the GHC API and exposing them in a usable way in IDEs. \nThis is a presentation of the lessons learned from trying to integrate HaRe into IDEs, leading to ghc-exactprint and haskell-ide-engine, and the further way forward, now that we can treat tooling as a first class citizen in the GHC ecosystem. Includes the HSOC work performed by Zubin Duggal integrating LSP (Language Server Protocol) into HIE (haskell-ide-engine).",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["alanzimmerman"],
      "Key": "hiw-2017-ide-support-in-ghc",
      "PersonsString": "Alan Zimmerman",
      "Title": "IDE Support in GHC",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-ide-support-in-ghc"
    },
    {
      "Abstract": "GHC integrates a number of analyses on its Core language to enable optimizations such as the worker/wrapper transformation and arity expansion to produce efficient code. \nOf vital importance is GHC\u2019s Demand Analyser: Besides gathering strictness information for the simplifier, an interleaved usage analysis answers questions about maximum cardinality, such as \n \n At most how many times is a binding accessed during a single evaluation? \n At most how many times is the body of a lambda expression called, relative to its enclosing expression? \n \nThere is also Call Arity, an analysis trying to eta-expand bindings based on usage information. Call Arity interleaves an arity analysis with a usage analysis to justify eta-expansion of single-entry thunks. \nThe analyses operate independent from another, while both answer related questions about usage. My master\u2019s thesis was concerned with assessing if an information flow between analyses would be beneficial and whether they could even be combined into a single analysis. The latter seems to be the case, but there were some problems to be solved with respect to iteration order and correspondence of analysis domains. \nThis talk introduces the generalising usage analysis and how the results of both analyses can be reconstructed. We will see how the need for a graph-baesd approach to data-flow analysis detached from the syntax tree arises. Finally, we close with a discussion about practicability and evaluation results.",
      "Affiliations": ["Karlsruhe Institute of Technology"],
      "AffiliationsString": "Karlsruhe Institute of Technology",
      "Authors": ["sebastiangraf"],
      "Key": "hiw-2017-demand-analysis-vs-call-arity",
      "PersonsString": "Sebastian Graf",
      "Title": "Demand Analysis vs. Call Arity",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-demand-analysis-vs-call-arity"
    },
    {
      "Abstract": "Type classes, as originally proposed, have a surprising feature: while they may appear to disallow some instance of polymorphic functions, they never actually preclude such instances from being valid. Type class errors arise in Haskell only through the use of explicit type signatures, or because of ad hoc syntactic restrictions on the form of types. The same does not hold for many extensions of the Haskell predicate system; for example, both equality constraints and functional dependencies make it possible for certain instantiations of polymorphic types to have entirely unsatisfiable predicates. \nAt the moment, Haskell compilers use the satisfiability of predicates in several ways. They reject (many) programs with provably unsatisfiable constraints. At ICFP this year, Richard Eisenberg and I argue that treating the termination of type family applications as a constraint simplifies the use of type families and improves their metatheory. \nIn this talk, I will propose that we should also take unsatisfiability seriously in Haskell\u2019s type and class systems. For example, current compilers do not refine polymorphic type variables to rule out unsatisfiable constraint sets. I will claim that doing so would more accurately reflect the semantics of the type systems. More significantly, however, by recognizing that sets of constraints are unsatisfiable, we can give a more flexible notion of overlap among type class or type family instances, and hence to permit more expressive, modular, and easier-to-use type class programming, without compromising coherence or other semantic properties. Finally, I will relate satisfiability-aware overlap checks to my work with Mark Jones on instance chains, arguing that both the seemingly most palatable (alternative chaining) and least palatable (backtracking) aspects of instance chains follow inevitably from the attempt to make satisfiability-aware instances easier to use and more efficient to implement.",
      "Affiliations": ["University of Kansas, USA"],
      "AffiliationsString": "University of Kansas, USA",
      "Authors": ["jgarrettmorris"],
      "Key": "hiw-2017-on-unsatisfiability",
      "PersonsString": "J. Garrett Morris",
      "Title": "On Unsatisfiability",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-on-unsatisfiability"
    },
    {
      "Abstract": "Existing code package managers enable developers to share and reuse code at the granularity of a package. Being able to share and reuse code at the granularity of individual functions might lower the barriers to do so. Can we still support existing workflows and at the same time realize purported advantages of fragment-based code distribution? \nThe idea of fragment-based code distribution comes up frequently in online discussions but is rarely published about academically. There are projects that create new languages that enable programmers to share code at very low granularity. Examples are morte and unison. \nWe want to evaluate the viability of such an approach for Haskell code distribution. We are developing a proof-of-concept tool fragnix. In contrast to projects that create new languages we have access to a huge amount of code via hackage. \nIn the talk we will demonstrate: \n \n That we could shatter this code into fragments that we can reuse individually. \n A basic development workflow using our tool. \n Faster initial installation time when you only use part of a package. \n That our tool produces smaller binaries than GHC alone under default settings. \n \nOur overall aim is to facilitate substantive discussion of the fragment-based approach to code distribution.",
      "Affiliations": ["University of Tübingen"],
      "AffiliationsString": "University of Tübingen",
      "Authors": ["philippschuster"],
      "Key": "hiw-2017-an-experiment-in-fragment-based-code-distribution",
      "PersonsString": "Philipp Schuster",
      "Title": "An Experiment in Fragment-Based Code Distribution",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-an-experiment-in-fragment-based-code-distribution"
    },
    {
      "Abstract": "Sign up on the day of HIW to claim a spot in this Lightning Talk Slot.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "hiw-2017-lightning-talk-slot-2",
      "PersonsString": "",
      "Title": "Lightning Talk Slot #2",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-lightning-talk-slot-2"
    },
    {
      "Abstract": "Simplexhc is a work in progress implementation of an STG to LLVM compiler, which aims to explore which advanced optimizations become possible when directly lowering from a lazy abstract machine with rich semantic information to a modern compiler IR which provides support for the efficient lowering of dynamic languages. \nPrevious work in GHC has explored the compilation of Haskell to a modern compiler IR such as LLVM, but this work has been integrated after lowering from STG to C\u2013, an untyped variant of C that is semantically a lot closer to the LLVM intermediate representation as STG is. However, as part of the lowering from STG to C\u2013 a lot of knowledge about the original high-level functional semantics are lost. The work on the Intel haskell compiler is closer in spirit, but they take a whole-program optimisation approach and have their own strict IR, while we propose to starting the lowering process from STG, a lazy IR/machine model. \nWe are proposing to compile to LLVM, which provides support for type based analysis, an extensible compiler pass pipeline to encode domain-specific knowledge of STG, and a well tested, well optimised codebase that is the heart of modern compilers such as clang. There has been a very successful use of LLVM as a target for a high level language (Java) by Azul systems, who generate LLVM in their JVM JIT compiler. This suggests that the approach of lowering STG to LLVM could also be profitable from a performance standpoint. \nWe would like to augment GHC\u2019s current code generation capability with the ability to directly generate LLVM. This should not only improve performance, but also should allow GHC to remove a dependency in the tree on C\u2013 as well. \nWe also explore half baked tangential ideas such as: \n \n  The possibility to use ideas from polyhedral compilation to analyze and optimise purely functional programs.  \n  Extending LLVM to support GRIN, an alternate intermediate representation proposed for haskell whole-program optimisation.  \n \nGithub Repo \nHaskell dependence analysis repo \nAzul systems talk at EuroLLVM \u201916",
      "Affiliations": ["IIT Hyderabad"],
      "AffiliationsString": "IIT Hyderabad",
      "Authors": ["siddharthbhat"],
      "Key": "hiw-2017-simplexhc-lowering-high-level-haskell-to-imperative-ir",
      "PersonsString": "Siddharth Bhat",
      "Title": "SimplexHC: Lowering High-Level Haskell to Imperative IR",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/hiw-2017-simplexhc-lowering-high-level-haskell-to-imperative-ir"
    },
    {
      "Abstract": "MirageOS is a library operating system that constructs unikernels for secure, high-performance network applications. Until now, MirageOS lacked a reliable, usable filesystem, which limited its applicability by introducing a dependency on an external storage service. For example, the CueKeeper web application is Mirage-based and dependent on client-side storage. \nWe introduce Wodan, a filesystem library designed for MirageOS. It is designed with flash in mind: SSDs, NVM, hybrid devices. It provides a low-level key-value layer that Irmin (a distributed database inspired by Git) can use to store data. It is designed to be reliable and prevent bit rot. It puts control over layout details and performance tradeoffs in the library user\u2019s hands. \nThe flash focus of the design makes for some novel design choices. To prevent wearing out the flash, the newest filesystem root can be written anywhere (in sequential order), and opening the filesystem involves bisecting for the root. \nThis talk will delve into the design of Wodan.",
      "Affiliations": ["OCaml Labs"],
      "AffiliationsString": "OCaml Labs",
      "Authors": ["gabrieldeperthuis"],
      "Key": "ocaml-2017-papers-wodan-a-pure-ocaml-flash-aware-filesystem-library",
      "PersonsString": "Gabriel de Perthuis",
      "Title": "Wodan: a pure OCaml, flash-aware filesystem library",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-wodan-a-pure-ocaml-flash-aware-filesystem-library"
    },
    {
      "Abstract": "Owl is a new numerical library developed in OCaml language. It focuses on providing a comprehensive set of high-level numerical functions so that developers can quickly build up data analytical applications. In this abstract, we will present Owl\u2019s design, core components, and its key functionality.",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["liangwang"],
      "Key": "ocaml-2017-papers-owl-a-general-purpose-numerical-library-in-ocaml",
      "PersonsString": "Liang Wang",
      "Title": "Owl: A General-Purpose Numerical Library in OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-owl-a-general-purpose-numerical-library-in-ocaml"
    },
    {
      "Abstract": "Tyre is a set of combinators to build type-safe regular expressions, allowing automatic extraction and modification of matched groups. Tyre is bi-directional: a typed regular expression can be used for parsing and unparsing. It also allows routing, by providing a list of regexes/routes and their handlers.",
      "Affiliations": ["Université Denis Diderot Paris 7, PPS"],
      "AffiliationsString": "Université Denis Diderot Paris 7, PPS",
      "Authors": ["gabrielradanne"],
      "Key": "ocaml-2017-papers-tyre-typed-regular-expressions",
      "PersonsString": "Gabriel Radanne",
      "Title": "Tyre \u2013 Typed Regular Expressions",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-tyre-typed-regular-expressions"
    },
    {
      "Abstract": "The OCaml Platform combines the OCaml compiler toolchain with a coherent set of tools for build, documentation, testing and IDE integration. The project is a collaborative effort across the OCaml community, tied together by the OCaml Labs group in Cambridge, and OCamlPro. The requirements of the Platform are guided by large industrial users such as Jane Street, Citrix, Docker, Facebook, Microsoft and LexiFi, as well as accrued feedback from the \\opam project. \nWe have initially taken direction from major industrial users because these groups have a wealth of experience of using the language at scale. For the Platform to be considered successful, it has to be a viable product for these heavy users of OCaml. However, each of the users also have large codebases with distinct coding styles, and often have built their own extensive libraries to complement the OCaml standard library and open-source ecosystem. Pursuing goals desirable to large-scale industrial users has also proven to benefit the wider community. \nThis talk is a follow-on from previous years, with the good news that this year has been one of the busiest for releases of platform tools. There have been significant advances in the state of build systems, packaging, testing and Windows support, with much of this released into the stable \\opam package ecosystem and available for general use. We will also explain some of the uptake of these tools in major projects around the community. \nNOTE: The maintainers of the projects described in the full abstract come from different academic and industrial organisations. The goal of the talk is to place all of these projects into the context of the OCaml Platform, with due credit assigned during the presentation to each contributor.",
      "Affiliations": ["OCaml Labs"],
      "AffiliationsString": "OCaml Labs",
      "Authors": ["anilmadhavapeddy"],
      "Key": "ocaml-2017-papers-the-state-of-the-ocaml-platform-september-2017",
      "PersonsString": "Anil Madhavapeddy",
      "Title": "The State of the OCaml Platform: September 2017",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-the-state-of-the-ocaml-platform-september-2017"
    },
    {
      "Abstract": "Inductive datatypes and parametric polymorphism are two key features introduced in the ML family of languages, which have already been widely exploited for structuring programs: Haskell and ML programs are often more elegant and more correct by construction. Still, we sometimes need code to be refactored or adapted to be reused in a slightly different context. While the type system is considerably helpful in these situations, by automatically locating type-inconsistent program points or incomplete pattern matchings, this process could be made safer and more automated by further exploiting parametricity. We propose a posteriori program abstraction as a principle for such code transformations. \nWe apply this principle to ornamentation which is a way to describe changes in datatype definitions reorganizing, adding, or dropping some pieces of data so that functions operating on the bare definition can be partially and sometimes totally lifted into functions operating on the ornamented structure. \nWe view ornamentation as an a posteriori abstraction of the bare code, called a generic lifting, which can then be instantiated into a concrete lifting, meta-reduced, and simplified. Both the source and target code live in core ML while the lifted code lives in a meta-language above ML equipped with a limited form of dependent types needed to capture some invariants of the generic lifting so that the concrete lifting can be simplified back into an ML program. Importantly, the lifted code can be closely related to the bare code, using logical relations thanks to the generic lifting detour. \nDifferent, typical use cases of ornaments will be shown and the approach will be mainly illustrated on examples.",
      "Affiliations": ["INRIA"],
      "AffiliationsString": "INRIA",
      "Authors": ["didierremy"],
      "Key": "haskellsymp-2017-papers-ornaments-exploiting-parametricity-for-safer-more-automated-code-refactorization-and-code-reuse-invited-talk-",
      "PersonsString": "Didier Rémy",
      "Title": "Ornaments: exploiting parametricity for safer, more automated code refactorization and code reuse (Invited Talk)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-ornaments-exploiting-parametricity-for-safer-more-automated-code-refactorization-and-code-reuse-invited-talk-"
    },
    {
      "Abstract": "We demonstrate for the first time that Liquid Haskell, a refinement type checker for Haskell programs, can be used for arbitrary theorem proving by verifying a monoidal string matching algorithm implemented in Haskell. We use refinement types to specify correctness properties, Haskell terms to express proofs of these properties, and Liquid Haskell to check the proofs. We evaluate Liquid Haskell as a theorem prover by replicating our 1428 LoC proof in a dependently-typed language (Coq - 1136 LoC); we compare both proofs, uncovering the relative advantages and disadvantages of the two provers.",
      "Affiliations": [
        "University of Maryland",
        "University of Pennsylvania",
        ""
      ],
      "AffiliationsString": "University of Maryland, University of Pennsylvania, ",
      "Authors": [
        "nikivazou",
        "leonidaslampropoulos",
        "jeffpolakow"
      ],
      "Key": "haskellsymp-2017-papers-a-tale-of-two-provers-verifying-monoidal-string-matching-in-liquid-haskell-and-coq",
      "PersonsString": "Niki Vazou, Leonidas Lampropoulos and Jeff Polakow",
      "Title": "A Tale of Two Provers: Verifying Monoidal String Matching in Liquid Haskell and Coq",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-a-tale-of-two-provers-verifying-monoidal-string-matching-in-liquid-haskell-and-coq"
    },
    {
      "Abstract": "In this talk, we report on our efforts in developing ROTOR, a prototype refactoring tool for the OCaml language. The OCaml setting brings its own collection of unique challenges for refactoring, and we discuss some of these with reference to a concrete refactoring - the renaming of a value binding in a given module - and in the context of a real-world codebase, namely Jane Street\u2019s Core library.",
      "Affiliations": [
        "University of Kent",
        ""
      ],
      "AffiliationsString": "University of Kent, ",
      "Authors": [
        "reubennsrowe",
        "simonthompson"
      ],
      "Key": "ocaml-2017-papers-rotor-first-steps-towards-a-refactoring-tool-for-ocaml",
      "PersonsString": "Reuben N. S. Rowe and Simon Thompson",
      "Title": "ROTOR: First Steps Towards a Refactoring Tool for OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-rotor-first-steps-towards-a-refactoring-tool-for-ocaml"
    },
    {
      "Abstract": "The paper presents a minimalistic and elegant approach to working with graphs in Haskell. It is built on a rigorous mathematical foundation \u2014 an algebra of graphs \u2014 that allows us to apply equational reasoning for proving the correctness of graph transformation algorithms. Algebraic graphs let us avoid partial functions typically caused by `malformed graphs\u2019 that contain an edge referring to a non-existent vertex. This helps to liberate APIs of existing graph libraries from partial functions. \nThe algebra of graphs can represent directed, undirected, reflexive and transitive graphs, as well as hypergraphs, by appropriately choosing the set of underlying axioms. The flexibility of the approach is demonstrated by developing a library for construction and transformation of polymorphic graphs.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["andreymokhov"],
      "Key": "haskellsymp-2017-papers-algebraic-graphs-with-class-functional-pearl-",
      "PersonsString": "Andrey Mokhov",
      "Title": "Algebraic Graphs with Class (Functional Pearl)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-algebraic-graphs-with-class-functional-pearl-"
    },
    {
      "Abstract": "Jbuilder is the first tool to provide a seamless workflow for the development of OCaml projects. Straightforward and easy-to-learn, it abstracts away from typical complexities of build and package description systems, at the same time helping to maximise portability. We argue that Jbuilder has the potential to unify the OCaml community and to increase the productivity of developers.",
      "Affiliations": [
        "Jane Street Europe",
        ""
      ],
      "AffiliationsString": "Jane Street Europe, ",
      "Authors": [
        "jeremiedimino",
        "markshinwell"
      ],
      "Key": "ocaml-2017-papers-jbuilder-a-modern-approach-to-ocaml-development",
      "PersonsString": "Jeremie Dimino and Mark Shinwell",
      "Title": "Jbuilder: a modern approach to OCaml development",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-jbuilder-a-modern-approach-to-ocaml-development"
    },
    {
      "Abstract": "QuickSpec is a tool that automatically finds equations for a given signature of Haskell functions. The tool has seen big success so far as a component of automated inductive theorem provers. We believe QuickSpec to be a useful tool for Haskell programmers as well. Specifications produced by QuickSpec can be used as the foundation of formal specifications for Haskell libraries. Our demo will show QuickSpec in action and demonstrate some recent features.",
      "Affiliations": [
        "Chalmers University of Technology, Sweden",
        "Chalmers University of Technology",
        "Chalmers University of Technology",
        ""
      ],
      "AffiliationsString": "Chalmers University of Technology, Sweden, Chalmers University of Technology, ",
      "Authors": [
        "maximilianalgehed",
        "koenclaessen",
        "moajohansson",
        "nicholassmallbone"
      ],
      "Key": "haskellsymp-2017-papers-quickspec-a-lightweight-theory-exploration-tool-for-programmers-system-demonstration-",
      "PersonsString": "Maximilian Algehed, Koen Claessen, Moa Johansson and Nicholas Smallbone",
      "Title": "QuickSpec: A Lightweight Theory Exploration Tool for Programmers (System Demonstration)",
      "Type": "Demonstration",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-quickspec-a-lightweight-theory-exploration-tool-for-programmers-system-demonstration-"
    },
    {
      "Abstract": "Functional programming is becoming increasingly popular in artistic areas such as algorithmic music composition. Euterpea and Kulitta are two libraries for working with music in Haskell. Euterpea is a library for representing and manipulating basic musical structures, and is useful both in a pedagogical setting to teach functional programming through the arts and as a tool to create complex pieces of algorithmic music. Kulitta is a framework for automated composition that addresses music at a more abstract level than Euterpea, capturing aspects of musical style through geometric models and probabilistic grammars. Both of these libraries leverage Haskell\u2019s pure functional nature and strong type system to achieve versatile, yet concise designs that allow the creation of diverse and interesting music. Features from these libraries have also been integral in the design of newer systems for natural language processing and artificial intelligence in the musical domain. This talk will explore challenges presented by creating these kinds of domain-specific embedded languages for working with music, and how taking functional approaches to them yields elegant solutions.",
      "Affiliations": ["Stevens Institute of Technology"],
      "AffiliationsString": "Stevens Institute of Technology",
      "Authors": ["donyaquick"],
      "Key": "haskellsymp-2017-papers-algorithmic-music-in-haskell-invited-talk-",
      "PersonsString": "Donya Quick",
      "Title": "Algorithmic Music in Haskell (Invited Talk)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-algorithmic-music-in-haskell-invited-talk-"
    },
    {
      "Abstract": "We propose a memory model for OCaml, broadly following the design of axiomatic memory models for languages such as C++ and Java, but with a number of differences to provide stronger guarantees and easier reasoning to the programmer, at the expense of not admitting every possible optimisation.",
      "Affiliations": [
        "",
        "University of Cambridge"
      ],
      "AffiliationsString": ", University of Cambridge",
      "Authors": [
        "stephendolan",
        "kcsivaramakrishnan"
      ],
      "Key": "ocaml-2017-papers-a-memory-model-for-multicore-ocaml",
      "PersonsString": "Stephen Dolan and KC Sivaramakrishnan",
      "Title": "A memory model for multicore OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-a-memory-model-for-multicore-ocaml"
    },
    {
      "Abstract": "We present a library in Haskell for programming Field Programmable Gate Arrays (FPGAs), including hardware software co-design. Code for software (in C) and hardware (in VHDL) is generated from a single program, along with the code to support communication between hardware and software over an AXI interface. We present type-based techniques for the simultaneous implementation of more than one embedded domain specific language (EDSL). We build upon a generic representation of imperative programs that is loosely coupled to instruction and expression types, allowing the individual parts to be developed and improved separately. Code generation is implemented as a series of translations between pro- gressively smaller, typed EDSLs, safeguarding against errors that arise in untyped translations. Initial case studies show promising performance.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "markusaronsson",
        "maryshe"
      ],
      "Key": "haskellsymp-2017-papers-hardware-software-co-design-in-haskell",
      "PersonsString": "Markus Aronsson and Mary Sheeran",
      "Title": "Hardware Software Co-Design in Haskell",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-hardware-software-co-design-in-haskell"
    },
    {
      "Abstract": "Crowbar is a new testing library for OCaml, combining QuickCheck-style property-based testing and directed fuzzing. Unlike other QuickCheck-style systems, Crowbar does not generate test cases purely at random: instead, the fuzzer afl-fuzz uses instrumentation automatically inserted into the program under test to provide feedback on the code paths triggered by a test case, in order to generate test cases exploring as much of the program\u2019s behaviour as possible. Crowbar has found bugs in most of the software that has been tested with it.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "stephendolan",
        "mindypreston"
      ],
      "Key": "ocaml-2017-papers-testing-with-crowbar",
      "PersonsString": "Stephen Dolan and Mindy Preston",
      "Title": "Testing with Crowbar",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-testing-with-crowbar"
    },
    {
      "Abstract": "Software transactional memory (STM) has made it significantly easier to write correct concurrent programs in Haskell. Its performance, however, is limited by several inefficiencies. While safe concurrent computations are easy to express in Haskell\u2019s STM, concurrent data structures suffer unfortunate bloat in the implementation due to an extra level of indirection for mutable references as well as the inability to express unboxed mutable transactional values. We address these deficiencies by introducing TStruct to the GHC run-time system, allowing strict unboxed transactional values as well as mutable references without an extra indirection. Using TStruct we implement several data structures, discuss their design, and provide benchmark results on a large multicore machine. Our benchmarks show that concurrent data structures built with TStruct out-scale and out-perform their TVar-based equivalents.",
      "Affiliations": [
        "",
        "University of Rochester"
      ],
      "AffiliationsString": ", University of Rochester",
      "Authors": [
        "ryanyates",
        "michaelscott"
      ],
      "Key": "haskellsymp-2017-papers-improving-stm-performance-with-transactional-structs",
      "PersonsString": "Ryan Yates and Michael Scott",
      "Title": "Improving STM Performance with Transactional Structs",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-improving-stm-performance-with-transactional-structs"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        "Inria"
      ],
      "AffiliationsString": ", Inria",
      "Authors": [
        "davidallsopp",
        "florianangeletti",
        "sebastienhinderer"
      ],
      "Key": "ocaml-2017-papers-invited-talk-new-contributors",
      "PersonsString": "David Allsopp, Florian Angeletti and Sébastien Hinderer",
      "Title": "Invited talk: new contributors",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-invited-talk-new-contributors"
    },
    {
      "Abstract": "A key part of implementing high-level languages is providing built-in and default data structures. Yet selecting good defaults is hard. A mutable data structure\u2019s workload is not known in advance, and it may shift over its lifetime-e.g., between read-heavy and write-heavy, or from heavy contention by multiple threads to single-threaded or low-frequency use. One idea is to switch implementations, adaptively, but it is nontrivial to switch the implementation of a concurrent data structure at runtime. Performing the transition requires a concurrent snapshot of data structure contents, which normally demands special engineering in the data structure\u2019s design. However, in this paper we identify and formalize an relevant property of lock-free algorithms. Namely, lock-freedom is sufficient to guarantee that freezing memory locations in an arbitrary order will result in a valid snapshot. Several functional languages have data structures that freeze and thaw, transitioning between mutable and immutable, such as Haskell vectors and Clojure transients, but these enable only single-threaded writers. We generalize this approach to augment an arbitrary lock-free data structure with the ability to gradually freeze and optionally transition to a new representation. This augmentation doesn\u2019t require changing the algorithm or code for the data structure, only replacing its datatype for mutable references with a freezable variant. In this paper, we present an algorithm for lifting plain to adaptive data and prove that the resulting hybrid data structure is itself lock-free, linearizable, and simulates the original. We also perform an empirical case study in the context of heating up and cooling down concurrent maps.",
      "Affiliations": [
        "Indiana University",
        "",
        "Indiana University"
      ],
      "AffiliationsString": "Indiana University, ",
      "Authors": [
        "chaohongchen",
        "vikramanchoudhury",
        "ryanrnewton"
      ],
      "Key": "haskellsymp-2017-papers-adaptive-lock-free-data-structures-in-haskell-a-general-method-for-concurrent-implementation-swapping",
      "PersonsString": "Chao-Hong Chen, Vikraman Choudhury and Ryan R. Newton",
      "Title": "Adaptive Lock-Free Data Structures in Haskell: A General Method for Concurrent Implementation Swapping",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-adaptive-lock-free-data-structures-in-haskell-a-general-method-for-concurrent-implementation-swapping"
    },
    {
      "Abstract": "We introduce a technique for programming with domain-specific linear languages using a monad that arises from the theory of linear/non-linear logic. In this work we interpret the linear/non-linear model as a simple, effectful linear language embedded inside an existing non-linear host language. We implement a modular framework for defining these linear EDSLs in Haskell, allowing both shallow and deep embeddings. To demonstrate the effectiveness of our framework and the linearity monad, we implement languages for file handles, mutable arrays, session types, and quantum computing.",
      "Affiliations": [
        "University of Pennsylvania",
        "University of Pennsylvania"
      ],
      "AffiliationsString": "University of Pennsylvania",
      "Authors": [
        "jenniferpaykin",
        "stevezdancewic"
      ],
      "Key": "haskellsymp-2017-papers-the-linearity-monad",
      "PersonsString": "Jennifer Paykin and Steve Zdancewic",
      "Title": "The Linearity Monad",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-the-linearity-monad"
    },
    {
      "Abstract": "We present the urn, a simple tree-based data structure that supports sampling from and updating discrete probability distributions in logarithmic time. We avoid the usual complexity of traditional self-balancing binary search trees by not keeping values in a specific order. Instead, we keep the tree maximally balanced at all times using a single machine word of overhead: its size. \nUrns provide an alternative interface for the frequency combinator from the QuickCheck library that allows for asymptotically more efficient sampling from dynamically-updated distributions. They also facilitate backtracking in property-based random testing, and can be applied to such complex examples from the literature as generating well-typed lambda terms or information flow machine states, demonstrating up to a 3x speedup in one case.",
      "Affiliations": [
        "University of Pennsylvania",
        "",
        ""
      ],
      "AffiliationsString": "University of Pennsylvania, ",
      "Authors": [
        "leonidaslampropoulos",
        "antalspectorzabusky",
        "kennethfoner"
      ],
      "Key": "haskellsymp-2017-papers-ode-on-a-random-urn-functional-pearl-",
      "PersonsString": "Leonidas Lampropoulos, Antal Spector-Zabusky and Kenneth Foner",
      "Title": "Ode on a Random Urn (Functional Pearl)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-ode-on-a-random-urn-functional-pearl-"
    },
    {
      "Abstract": "We present a domain-specific language for constructing and configuring web applications distributed across any number of networked, heterogeneous systems. Our language is embedded in Haskell, provides a common framework for integrating components written in third-party EDSLs, and enables type-safe, access-controlled communication between nodes, as well as effortless sharing and movement of functionality between application components. We give an implementation of our language and demonstrate its applicability by using it to implement several important components of distributed web applications, including RDBMS integration, load balancing, and fine-grained sandboxing of untrusted third party code.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["antonekblad"],
      "Key": "haskellsymp-2017-papers-a-meta-edsl-for-distributed-web-applications",
      "PersonsString": "Anton Ekblad",
      "Title": "A Meta-EDSL for Distributed Web Applications",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-a-meta-edsl-for-distributed-web-applications"
    },
    {
      "Abstract": "Each poster presenter will be given two minutes and a slide to quickly present their poster.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "ocaml-2017-papers-flash-poster-presentation",
      "PersonsString": "",
      "Title": "Flash poster presentation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-flash-poster-presentation"
    },
    {
      "Abstract": "Music description and generation are popular use cases for Haskell, ranging from live coding libraries to automatic harmonisation systems. Some approaches use probabilistic methods, others build on the theory of Western music composition, but there has been little work done on checking the correctness of musical pieces in terms of voice leading, harmony, and structure. Haskell\u2019s recent additions to the type-system now enable us to perform such analysis and verification statically. \nWe present our experience implementing a type-level model of classical music and an accompanying EDSL which enforce the rules of classical music at compile-time, turning composition mistakes into compiler errors. Along the way, we discuss the strengths and limitations of doing this in Haskell and demonstrate that the type system of the language is fully capable of expressing non-trivial and practical logic specific to a particular domain.",
      "Affiliations": [
        "",
        "University of Warwick, UK"
      ],
      "AffiliationsString": ", University of Warwick, UK",
      "Authors": [
        "dmitrijszamozvancev",
        "michaelbgale"
      ],
      "Key": "haskellsymp-2017-papers-well-typed-music-does-not-sound-wrong-experience-report-",
      "PersonsString": "Dmitrij Szamozvancev and Michael Gale",
      "Title": "Well-Typed Music Does Not Sound Wrong (Experience Report)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-well-typed-music-does-not-sound-wrong-experience-report-"
    },
    {
      "Abstract": "Correctness and performance are often at odds in the field of systems engineering, either because correct programs are too costly to write or impractical to execute, or because well-performing code involves so many tricks of the trade that formal analysis is unable to isolate the main properties of the algorithm. \nAs a prime example of this tension, Coq is an established proof environment that allows writing correct, dependently-typed code, but it has been criticized for exorbitant development times, forcing the developer to choose between optimal code or tractable proofs. On the other side of the divide, Haskell has proven itself to be a capable, well-typed programming environment, yet easy-to-read, straightforward code must all too often be replaced by highly optimized variants that obscure the author\u2019s original intention. \nThis work proposes to combine these two environments: allowing declaratively stated, proof-amenable specifications to be developed in Coq at a high level of abstraction, while still permitting correct-by-construction implementations that meet or exceed the performance demands of highly optimized Haskell. As a case study, we reimplement a subset of the popular bytestring library, without any loss of performance, while retaining a high guarantee of program correctness and a recognizable connection with the abstract, easily comprehensible semantics.",
      "Affiliations": [
        "",
        "Purdue University"
      ],
      "AffiliationsString": ", Purdue University",
      "Authors": [
        "johnwiegley",
        "benjamindelaware"
      ],
      "Key": "haskellsymp-2017-papers-using-coq-to-write-fast-and-correct-haskell",
      "PersonsString": "John Wiegley and Benjamin Delaware",
      "Title": "Using Coq to Write Fast and Correct Haskell",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-using-coq-to-write-fast-and-correct-haskell"
    },
    {
      "Abstract": "This paper presents Speculate, a tool that automatically conjectures laws involving conditional equations and inequalities about Haskell functions. Speculate enumerates expressions involving a given collection of Haskell functions, testing to separate those expressions into apparent equivalence classes. Expressions in the same equivalence class are used to conjecture equations. Representative expressions of different equivalence classes are used to conjecture conditional equations and inequalities. Speculate uses lightweight equational reasoning based on term rewriting to discard redundant laws and to avoid needless testing. Several applications demonstrate the effectiveness of Speculate.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "rudybraquehais",
        "colinrunciman"
      ],
      "Key": "haskellsymp-2017-papers-speculate-discovering-conditional-equations-and-inequalities-about-black-box-functions-by-reasoning-from-test-results",
      "PersonsString": "Rudy Braquehais and Colin Runciman",
      "Title": "Speculate: Discovering Conditional Equations and Inequalities about Black-Box Functions by Reasoning from Test Results",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-speculate-discovering-conditional-equations-and-inequalities-about-black-box-functions-by-reasoning-from-test-results"
    },
    {
      "Abstract": "Quantified class constraints have been proposed many years ago to raise the expressive power of type classes from Horn clauses to first-order logic. Yet, while it has been much asked for over the years, the feature was never implemented or studied in depth. Instead, several workarounds have been proposed, all of which are ultimately stopgap measures. \nThis paper revisits the idea of quantified class constraints and elaborates it into a practical language design. We show the merit of quantified class constraints in terms of more expressive modeling and in terms of terminating type class resolution. In addition, we provide a declarative specification of the type system as well as a type inference algorithm that elaborates into System F. Moreover, we discuss termination conditions of our system and also provide a prototype implementation.",
      "Affiliations": [
        "",
        "KU Leuven, Belgium",
        "KU Leuven",
        "The University of Hong Kong",
        "University of Edinburgh, UK"
      ],
      "AffiliationsString": ", KU Leuven, Belgium, KU Leuven, The University of Hong Kong, University of Edinburgh, UK",
      "Authors": [
        "gertjanbottu",
        "georgioskarachalias",
        "tomschrijvers",
        "brunooliveira",
        "philipwadler"
      ],
      "Key": "haskellsymp-2017-papers-quantified-class-constraints",
      "PersonsString": "Gert-Jan Bottu, Georgios Karachalias, Tom Schrijvers, Bruno C. d. S. Oliveira and Philip Wadler",
      "Title": "Quantified Class Constraints",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-quantified-class-constraints"
    },
    {
      "Abstract": "Functional Reactive Programming (FRP) allows interactive applications to be modelled in a declarative manner using time-varying values. For practical reasons, however, operational constraints are often imposed, such as having a fixed time domain, time always flowing forward, and limiting the exploration of the past. \nIn this paper we show how these constraints can be overcome, giving local control over the time domain, the direction of time and the sampling step. We study the behaviour of FRP expressions when time flows backwards, and demonstrate how to synchronize subsystems running asynchronously and at different sampling rates. We have verified the practicality of our approach with two non-trivial games in which time control is central to the gameplay.",
      "Affiliations": ["Keera Studios"],
      "AffiliationsString": "Keera Studios",
      "Authors": ["ivanperez1"],
      "Key": "haskellsymp-2017-papers-back-to-the-future-time-travel-in-frp",
      "PersonsString": "Ivan Perez",
      "Title": "Back to the Future: Time Travel in FRP",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-back-to-the-future-time-travel-in-frp"
    },
    {
      "Abstract": "This is a proposal for a presentation at the OCaml 2017 workshop. The presentation will cover B-trees as a data-structure (including motivating why variants of B-trees are often the data-structure of choice for filesystems and databases), and the particular variant that is provided by the \\texttt{tjr_btree} library available from GitHub. This library uses code generated from an Isabelle/HOL theory, which is also available from GitHub.",
      "Affiliations": ["University of Leicester, UK"],
      "AffiliationsString": "University of Leicester, UK",
      "Authors": ["tomridge"],
      "Key": "ocaml-2017-papers-a-b-tree-library-for-ocaml",
      "PersonsString": "Tom Ridge",
      "Title": "A B-tree library for OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-a-b-tree-library-for-ocaml"
    },
    {
      "Abstract": "Functional dependencies are a popular extension to Haskell\u2019s type-class system because they provide fine-grained control over type inference, resolve ambiguities and even enable type-level computations. \nUnfortunately, several aspects of Haskell\u2019s functional dependencies are ill-understood. In particular, the GHC compiler does not properly enforce the functional dependency property, and rejects well-typed programs because it does not know how to elaborate them into its core language, System FC. \nThis paper presents a novel formalization of functional dependencies that addresses these issues: We explicitly capture the functional dependency property in the type system, in the form of explicit type equalities. We also provide a type inference algorithm and an accompanying elaboration strategy which allows all well-typed programs to be elaborated into System FC.",
      "Affiliations": [
        "KU Leuven, Belgium",
        "KU Leuven"
      ],
      "AffiliationsString": "KU Leuven, Belgium, KU Leuven",
      "Authors": [
        "georgioskarachalias",
        "tomschrijvers"
      ],
      "Key": "haskellsymp-2017-papers-elaboration-on-functional-dependencies",
      "PersonsString": "Georgios Karachalias and Tom Schrijvers",
      "Title": "Elaboration on Functional Dependencies",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-elaboration-on-functional-dependencies"
    },
    {
      "Abstract": "Previous work has demonstrated that it is possible to generate efficient and highly parallel code for multicore CPUs and GPUs from combinator-based array languages for a range of applications. That work, however, has been limited to operating on flat, rectangular structures without any facilities for irregularity or nesting. \nIn this paper, we show that even a limited form of nesting provides substantial benefits both in terms of the expressiveness of the language (increasing modularity and providing support for simple irregular structures) and the portability of the code (increasing portability across resource-constrained devices, such as GPUs). Specifically, we generalise Blelloch\u2019s flattening transformation along two lines: (1) we explicitly distinguish between definitely regular and potentially irregular computations; and (2) we handle multidimensional arrays. We demonstrate the utility of this generalisation by an extension of the embedded array language Accelerate to include irregular streams of multidimensional arrays. We discuss code generation, optimisation, and irregular stream scheduling as well as a range of benchmarks on both multicore CPUs and GPUs.",
      "Affiliations": [
        "",
        "University of New South Wales, Australia",
        "",
        "Data61,CSIRO (formerly NICTA) and UNSW"
      ],
      "AffiliationsString": ", University of New South Wales, Australia, Data61,CSIRO (formerly NICTA) and UNSW",
      "Authors": [
        "robertcliftoneverest",
        "trevormcdonell",
        "manuelchakravarty",
        "gabrielekeller"
      ],
      "Key": "haskellsymp-2017-papers-streaming-irregular-arrays",
      "PersonsString": "Robert Clifton-Everest, Trevor L. McDonell, Manuel Chakravarty and Gabriele Keller",
      "Title": "Streaming Irregular Arrays",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-streaming-irregular-arrays"
    },
    {
      "Abstract": "We present a novel but remarkably simple formulation of formal language grammars in Haskell as functions mapping a record of production parsers to itself. Thus formulated grammars are first-class objects, composable and reusable. We also provide a simple parser implementation for them, based on an improved packrat algorithm. In order to make the grammar manipulation code reusable, we introduce a set of type classes mirroring the existing type classes from Haskell base library, but whose methods have rank-2 types.",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "marioblazevic",
        "jacqueslegare"
      ],
      "Key": "haskellsymp-2017-papers-packrats-parse-in-packs",
      "PersonsString": "Mario Blažević and Jacques Légaré",
      "Title": "Packrats Parse in Packs",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-packrats-parse-in-packs"
    },
    {
      "Abstract": "Genspio is a typed domain specific language embedded in OCaml that compiles terms to POSIX shell scripts or one-liners. It is used to build, for instance, complex deployment scripts which need to be run over SSH on hosts that may not have OCaml or any scripting language available. \nThe implementation is based on a GADT and has allowed us to scale to increasingly complex \u201cDev-Ops\u201d deployments, thanks to the composability and modularity provided by OCaml itself. We describe these in Secotrec, for now our heaviest use of the Genspio EDSL. \nWhile the released version has proved very useful, we detail quite a few very interesting future work problems.",
      "Affiliations": ["Mount Sinai - Hammer Lab"],
      "AffiliationsString": "Mount Sinai - Hammer Lab",
      "Authors": ["sebastienmondet"],
      "Key": "ocaml-2017-papers-genspio-generating-shell-phrases-in-ocaml",
      "PersonsString": "Sebastien Mondet",
      "Title": "Genspio: Generating Shell Phrases In OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-genspio-generating-shell-phrases-in-ocaml"
    },
    {
      "Abstract": "We propose a harmonious extension of OCaml\u2019s open construct with many useful applications.",
      "Affiliations": [
        "Twitter, Inc",
        "University of Cambridge, UK"
      ],
      "AffiliationsString": "Twitter, Inc, University of Cambridge, UK",
      "Authors": [
        "runhangli",
        "jeremyyallop"
      ],
      "Key": "ocaml-2017-papers-extending-ocaml-s-open",
      "PersonsString": "Runhang Li and Jeremy Yallop",
      "Title": "Extending OCaml's open",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-extending-ocaml-s-open"
    },
    {
      "Abstract": "We present a new tool, ocamli, which runs ordinary OCaml programs by direct interpretation of the abstract syntax tree. It can show arbitrary parts of the evaluating expression to aid in teaching and debugging. \nWe also show how one can use ocamli as a library to construct and evaluate OCaml expressions at runtime in what amounts to a crude form of metaprogramming, and speculate on some future directions.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["johnwhitington"],
      "Key": "ocaml-2017-papers-ocamli-interpreted-ocaml",
      "PersonsString": "John Whitington",
      "Title": "ocamli: Interpreted OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-ocamli-interpreted-ocaml"
    },
    {
      "Abstract": "We present mSAT, a modular SAT solving library written entirely in OCaml. While there already exist OCaml bindings for SAT solvers written in C, mSAT provides more features, such as proof output, and the ability to instantiate an SMT solver using a first-order theory given by the user, while being reasonably efficient compared to the existing bindings.",
      "Affiliations": ["INRIA / LSV / CNRS"],
      "AffiliationsString": "INRIA / LSV / CNRS",
      "Authors": ["buryguillaume"],
      "Key": "ocaml-2017-papers-msat-an-ocaml-sat-solver",
      "PersonsString": "Bury Guillaume",
      "Title": "mSAT: An OCaml SAT Solver",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-msat-an-ocaml-sat-solver"
    },
    {
      "Abstract": "We present a program synthesis tool OCPet for OCaml, targeted at beginners learning the language. It is transplanted from SyPet, a component-based and test-based Java-program synthesizer that employs a type-directed approach, which is only able to generate straight-line programs. On top of that, our synthesizer is extended to include pattern matching and recursive structure in code.",
      "Affiliations": [
        "University of Southern California",
        ""
      ],
      "AffiliationsString": "University of Southern California, ",
      "Authors": [
        "zhanpengliang",
        "kanaetsushima"
      ],
      "Key": "ocaml-2017-papers-component-based-program-synthesis-in-ocaml",
      "PersonsString": "Zhanpeng Liang and Kanae Tsushima",
      "Title": "Component-based Program Synthesis in OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-component-based-program-synthesis-in-ocaml"
    },
    {
      "Abstract": "In this talk, we will present the story of the Tezos project. Tezos is a crypto-ledger, i.e. a distributed blockchain with a language for smart contracts, with two specific character- istics: the first one is its ability for self-amendment, that allows a majority of stake-holders to update the behavior of Tezos without risking a fork; the second one is a design and im- plementation (in OCaml) that took into account safety and security from the beginning, and in particular the use of static typing and formal methods when possible. For example, Michelson, the language for smart contracts in Tezos, is the only such language with a formal semantics, a type system ensuring no runtime errors, and an implementation that uses OCaml GADTs to ensure its correctness.",
      "Affiliations": [
        "OCamlPro, n.n.",
        "OCamlPro, n.n.",
        "OCamlPRO",
        "OCamlPro",
        "Dynamic Ledger Solutions"
      ],
      "AffiliationsString": "OCamlPro, n.n., OCamlPRO, OCamlPro, Dynamic Ledger Solutions",
      "Authors": [
        "benjamincanou",
        "gregoirehenry",
        "pierrechambart",
        "fabricelefessant",
        "arthurbreitman"
      ],
      "Key": "ocaml-2017-papers-tezos-the-ocaml-crypto-ledger",
      "PersonsString": "Benjamin Canou, Grégoire Henry, Pierre Chambart, Fabrice Le Fessant and Arthur BREITMAN",
      "Title": "Tezos: the OCaml Crypto-Ledger",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-tezos-the-ocaml-crypto-ledger"
    },
    {
      "Abstract": "In the context of our Bioinformatics workflows library Biokepi, we provide an embedded domain specific language (EDSL) based on typed-tagless final interpreters. The first implementation was based on a Generalized Algebraic Data-Type (GADT) but the approach did not scale well enough, and most importantly, we really needed the EDSL to be extensible by the users of the library. \nThe idea is to use OCaml\u2019s module system instead of a GADT, to provide typed EDSLs as module types and write compilers as modules matching the signature; \u201cprograms\u201d and program transformations are then functors taking such an implementation as argument. \nThis talk will present the new implementation of our EDSL, while discussing advantages and limitations of the new approach and trying to be a quick tutorial on type-tagless final interpreters in OCaml.",
      "Affiliations": ["Mount Sinai - Hammer Lab"],
      "AffiliationsString": "Mount Sinai - Hammer Lab",
      "Authors": ["sebastienmondet"],
      "Key": "ocaml-2017-papers-bioinformatics-the-typed-tagless-final-way",
      "PersonsString": "Sebastien Mondet",
      "Title": "Bioinformatics, The Typed Tagless Final Way",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-bioinformatics-the-typed-tagless-final-way"
    },
    {
      "Abstract": "Monads and applicative functors are two ways that Haskell programmers bundle effectful primitives into effectful program fragments. In this paper, we investigate using monads and applicative functors to bundle remote effectful primitives, specifically aiming to amortize the cost of remote communications using bundling. We look at several ways of maximizing the bundling of primitives, drawing from the remote monad design pattern and Haxl system, and provide a taxonomy of mechanism for amortization, with examples. The result of this investigation is that monadic fragments can be efficiently bundled into packets, almost for free, when given a user-supplied packet transportation mechanism, and the primitives obey some simple pre- and post-conditions.",
      "Affiliations": [
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "justindawson",
        "markgrebe",
        "andygill"
      ],
      "Key": "haskellsymp-2017-papers-composable-network-stacks-and-remote-monads",
      "PersonsString": "Justin Dawson, Mark Grebe and Andy Gill",
      "Title": "Composable Network Stacks and Remote Monads",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/haskellsymp-2017-papers-composable-network-stacks-and-remote-monads"
    },
    {
      "Abstract": "",
      "Affiliations": ["Northeastern University"],
      "AffiliationsString": "Northeastern University",
      "Authors": ["gabrielscherer"],
      "Key": "ocaml-2017-papers-opening",
      "PersonsString": "Gabriel Scherer",
      "Title": "Opening",
      "Type": "Day opening",
      "URL": "http://icfp17.sigplan.org/event/ocaml-2017-papers-opening"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["romaincalascibetta"],
      "Key": "cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml-part-3-",
      "PersonsString": "Romain Calascibetta",
      "Title": "Tutorial C4: Git under the hood with OCaml (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml-part-3-"
    },
    {
      "Abstract": "MZBench is open-source benchmarking tool written in Erlang. It allocates nodes directly in EC2 and setups Erlang cluster. System has web-frontend for charts and other useful information during the benchmarking. It is used for 100-node clusters and millions messages per second rates. \nIn this talk I want to show how functional programming helped us to build this system. The absence of implicit state makes possible to distribute working processes across a cluster. Like in other functional languages it is easy to create a DSL inside Erlang, so you could have a subsystem with a different semantics and different meaning. \nI would also show how Erlang helps with immediate environment updates and harms with full-mesh network topology.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["renatidrisov"],
      "Key": "cufp-2017-talks-distributed-load-testing-with-mzbench",
      "PersonsString": "Renat Idrisov",
      "Title": "Distributed load testing with MZBench",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-distributed-load-testing-with-mzbench"
    },
    {
      "Abstract": "At Ahrefs, we store a huge amount of data. With nearly 200B web-pages in index, our database contains a copy of the Web graph. Given the constant stream of updates, the size of our dataset imposes some challenging constraints on the implementation of data processing algorithms. When a complete processing pass can take several days to complete, it is critical to split the work into smaller tasks and order them by priority in order to minimize the number of out of date data-points. \nDue to the dynamic nature of the web, storing in memory as much information as possible offers several advantages. First, keeping state inside the program makes performance predictable and program states easier to reason by reducing interactions with the outside world. Second, in-memory immutable priority queues have good amortized complexity and simplified error handling. Third, through the option to access any previous state (and backtrack to it), a task scheduler interacting with other services in the network can reset to any combination of the previous state and keep in memory storage consistent. However, these features do not come without a cost. In addition to the already sizable amount of memory used by path duplication, the implementations of persistent queues make a heavy use of pointers, which account for an even larger amount of memory at scale, and the GC pressure induced by the high allocation rate increases the proportion of unreachable objects to be collected on the heap. \nMoreover, OCaml makes it hard to implement mutable space efficient data structures, with both value boxing and complexity in writing optimized low-level code. Rust, on the other hand, is designed for such a use case. Values are packed by default, the programmer is given thorough control of memory allocations and it comes with a powerful optimizing compiler. But there is a complexity price to pay for this power. \nInstead of dropping OCaml altogether, it is possible to combine the two in order to get the best of both world while minimizing friction via code generation and separation of concerns. In this talk, I will discuss our experience implementing a fast and space-efficient priority queue in Rust, and accessing it from OCaml. By wrapping states under an OCaml functional interface, we can keep the advantages of easily composable immutable queues, and try to retain some of the benefits we lost in error handling by recording state changes in a monadic interface for transparent commit/rollback semantics. \nThis solution can be tedious, as binding two high level languages is not well supported and it is for now required to go through the C API, breaking all abstractions and type safety and making polymorphism hard. However, careful separation can help to work around the pros and cons of each language while containing this problem\u2019s complexity.",
      "Affiliations": ["Ahrefs Research"],
      "AffiliationsString": "Ahrefs Research",
      "Authors": ["jorisgiovannangeli"],
      "Key": "cufp-2017-talks-interfacing-ocaml-and-rust-picking-the-right-tool-for-the-job",
      "PersonsString": "Joris Giovannangeli",
      "Title": "Interfacing OCaml and Rust: picking the right tool for the job",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-interfacing-ocaml-and-rust-picking-the-right-tool-for-the-job"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "The University of Edinburgh",
        "University of Cambridge"
      ],
      "AffiliationsString": "The University of Edinburgh, University of Cambridge",
      "Authors": [
        "danielhillerstrom",
        "kcsivaramakrishnan"
      ],
      "Key": "cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers-part-3-",
      "PersonsString": "Daniel Hillerström and KC Sivaramakrishnan",
      "Title": "Tutorial C3: Concurrent Programming with Effect Handlers (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers-part-3-"
    },
    {
      "Abstract": "Effects is a model of side-effects as an interaction between a program and a handler: an authority in charge of resources that receives and acts on program requests. The explicitness about the possible and not possible side-effects, the localized handling, controlled interactions and encapsulation, the ease of reasoning make effects useful even in impure languages, which can do side-effects natively. \nThere are several implementations of effects in Haskell and Scala. Effects are natively supported in Idris and soon to be in OCaml. They are the defining feature of PureScript. Finally, the language Eff is built on algebraic effects and local effect handling. By nature effects are extensible, letting us easily combine in the same program independently developed components, each with their own effects. In the narrow sense, extensible effects refer to a specific implementation method, often used in Haskell, Scala, and even in Coq. \nThis tutorial aims first to explain the ideas behind the extensible effects, on a progression of simple to understand but nevertheless realistic implementations. Using the final implementation, we we will experience defining and handling various effects, on more complex and actually useful examples: transactional memory, probabilistic programming, incremental parsing and modular rollback. \nThis tutorial to be interactive, working through problems with active audience participation.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["olegkiselyov"],
      "Key": "cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them",
      "PersonsString": "Oleg Kiselyov",
      "Title": "Tutorial C2: Extensible Effects: understanding them, implementing them, using them",
      "Type": "Other",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them"
    },
    {
      "Abstract": "Building concurrent apps is never easy. And when it is to do with payments, complexity and the stakes rises massively. We have designed and built a universal payment sandbox (maybe better to be called an omni-sandbox) which tech teams can use for the integration work, ongoing QA and CI workflows. And on top of this, allowing teams to load test their payment channels for real. No more shortcuts, real metrics on how your software works under load, with an important 3rd party (mock) dependency. \nWith the talk, we\u2019d wish to present the system we\u2019ve designed and built with a mix of Erlang and Elixir. The system is designed to handle surge of traffic (for load testing) and accurately simulate everyday payment scenarios.",
      "Affiliations": ["TestingPays"],
      "AffiliationsString": "TestingPays",
      "Authors": ["matemarjai"],
      "Key": "cufp-2017-talks-building-the-largest-payment-sandbox-on-a-tiny-machine",
      "PersonsString": "Máté Marjai",
      "Title": "Building the largest payment sandbox on a tiny machine",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-building-the-largest-payment-sandbox-on-a-tiny-machine"
    },
    {
      "Abstract": "GraphQL is a promising new query language for APIs being used by Facebook, Github and more. By being client-centric, GraphQL allows you to deliver features faster, with fewer network roundtrips and less data going over the wire. Unlike REST, types are front and center in GraphQL: all input and output types must be declared up front in a schema. It\u2019s these type declarations that enable some of GraphQL\u2019s unique selling points: self-documenting APIs that can be explored and introspected with explicit guarantees on the shape of data. \nThe types declared in your GraphQL schema are connected to the types in your application code, but it turns out to be quite hard to capture this connection. Most GraphQL libraries resolve to runtime checks and type coercions rather than static type checking to enforce this connection. With OCaml\u2019s powerful type system, ocaml-graphql-server is able to tie the types in schema to the types in your application code, resulting in compile-time checking of GraphQL schemas!",
      "Affiliations": ["Zendesk"],
      "AffiliationsString": "Zendesk",
      "Authors": ["andreasgarns"],
      "Key": "cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml",
      "PersonsString": "Andreas Garnæs",
      "Title": "Tutorial C8: GraphQL Servers in OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml"
    },
    {
      "Abstract": "Transducers is a powerful functional abstraction included with Clojure, a popular dialect of Lisp that runs on the JVM. They are generally faster, more reusable and composable than other functions for collection processing. This tutorial, after introducing the functional foundations, presents real-world examples and best practicesThe lab at the end of each section should give you an opportunity to practice what we\u2019ve learned.",
      "Affiliations": ["uSwitch"],
      "AffiliationsString": "uSwitch",
      "Authors": ["renzoborgatti"],
      "Key": "cufp-2017-talks-tutorial-c6-introduction-to-clojure",
      "PersonsString": "Renzo Borgatti",
      "Title": "Tutorial C6: Transducers in Practice",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c6-introduction-to-clojure"
    },
    {
      "Abstract": "You want to teach functional programming to someone else: To enable a fellow developer to hack in your project, as a professional trainer, or to teach students. You are enthusiastic that functional programming is the best, and you probably feel that Haskell, OCaml, Erlang, Clojure, Scala, F#, Racket or Scheme is the best in particular. However, as natural as functional programming feels to us, it is not easy to teach well. In particular, the languages listed above are powerful tools for development, but they are not necessarily the best tools for teaching - at least in the beginning. This tutorial will help you teach functional programming well, in a variety of contexts, using the Program by Design approach. It will give an overview of effective teaching approaches, techniques and tools, and highlight pitfalls and aspects of teaching worthy of your attention.",
      "Affiliations": ["Active Group GmbH"],
      "AffiliationsString": "Active Group GmbH",
      "Authors": ["michaelsperber"],
      "Key": "cufp-2017-talks-tutorial-c5-teaching-functional-programming",
      "PersonsString": "Michael Sperber",
      "Title": "Tutorial C5: Teaching Functional Programming",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c5-teaching-functional-programming"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["liangwang"],
      "Key": "cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml-part-3-",
      "PersonsString": "Liang Wang",
      "Title": "Tutorial C7: Owl - Data Science in OCaml (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml-part-3-"
    },
    {
      "Abstract": "The use of pure functional languages like Haskell to create games and mobile applications is, still to this day, rare. The reasons for this are multiple. First, purity and laziness be seen as an obstacle in performance-sensitive applications. Second, the lack of libraries for multimedia, games and mobile programming increases the cost of projects that require such facilities. Third, the lack of well-supported, professional development tools to target mobile platforms makes the development process slow and increases potential for errors and, overall, the risk of failure. \nIn this talk we will present the tools and methodology that we use at Keera Studios to develop, compile and publish commercial Haskell apps and games for Android and iOS. Our setup is cross-platform and includes mobile and gaming libraries, template applications, and compilation/packaging/publishing tools. Our setup works out of the box, is well supported by continuous-integration services, and makes it possible to create, compile and publish new applications to online stores within minutes.",
      "Affiliations": ["University of Nottingham, UK"],
      "AffiliationsString": "University of Nottingham, UK",
      "Authors": ["ivanperez"],
      "Key": "cufp-2017-talks-haskell-games-and-apps-for-ios-and-android",
      "PersonsString": "Ivan Perez",
      "Title": "Haskell games and apps for iOS and Android",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-haskell-games-and-apps-for-ios-and-android"
    },
    {
      "Abstract": "AppNexus is an internet technology company that powers the real-time sale and purchase of digital advertising via an auction technology called \u201c\u201creal-time bidding.\u201d\u201d A key component of our technological stack is the AppNexus Programmable Bidder which allows buyers to plug in custom algorithms in order to modify bidding behavior. Most of those algorithms are coded using the Bonsai language, a sub-Turing declarative decision tree DSL with a Python-like syntax. \nBonsai abstracts away most of the messiness of evolving industry standards. The created trees are symbolic and easy to reason about for ad-tech experts who are not software engineers. The language semantics say nothing about how trees are evaluated which gives us a lot of freedom regarding the execution strategy. \nWe run the models on our own hardware, in a multi-tenant environment with sub-millisecond firm real-time constraints. We also host the compiler and the model\u2019s source code, intermediate representations, and compiled output. This makes our language design, optimization and deprecation processes very different from traditional compiler and language development. This talk will present many of the challenges that we\u2019ve faced while developing a hosted debugger-less DSL targeted at non-programmers.",
      "Affiliations": ["AppNexus"],
      "AffiliationsString": "AppNexus",
      "Authors": ["jeremielasalleratelle"],
      "Key": "cufp-2017-talks-bonsai-a-dsl-for-serverless-firm-real-time-decisioning",
      "PersonsString": "Jeremie Lasalle-Ratelle",
      "Title": "Bonsai: a DSL for serverless firm real-time decisioning",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-bonsai-a-dsl-for-serverless-firm-real-time-decisioning"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Jane Street"
      ],
      "AffiliationsString": ", Jane Street",
      "Authors": [
        "yaronminsky",
        "sebastianfunk"
      ],
      "Key": "cufp-2017-talks-tutorial-c1-online-applications-with-incremental-part-3-",
      "PersonsString": "Yaron Minsky and Sebastian Funk",
      "Title": "Tutorial C1: Online Applications with Incremental (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c1-online-applications-with-incremental-part-3-"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "University of Cambridge"
      ],
      "AffiliationsString": ", University of Cambridge",
      "Authors": [
        "danielhillerstrom1",
        "kcsivaramakrishnan"
      ],
      "Key": "cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers-part-2-",
      "PersonsString": "Daniel Hillerström and KC Sivaramakrishnan",
      "Title": "Tutorial C3: Concurrent Programming with Effect Handlers (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers-part-2-"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["liangwang"],
      "Key": "cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml-part-2-",
      "PersonsString": "Liang Wang",
      "Title": "Tutorial C7: Owl - Data Science in OCaml (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml-part-2-"
    },
    {
      "Abstract": "Target \nAnyone who is interested in getting improved counterexamples from their property based testing tools, and anyone who would like to to better understand how property based testing systems like QuickCheck actually work. \nThe code will be presented in Haskell, but the concepts are applicable to anyone who might want to build or improve purely functional testing tools for static or dynamically typed programming languages. \nAbstract \nQuickCheck is a shockingly effective tool for validating the initial and ongoing correctness of production software. One of QuickCheck\u2019s most compelling features is that when a test failure is found, the failing test case is simplified to a minimal counterexample, through a process called shrinking. This makes it significantly easier to understand why a test has failed. \nThe Haskell version of QuickCheck, and most of its derivatives, tackle shrinking in a type-directed fashion. The Erlang version on the other hand, and a few similar tools for other dynamic languages, couple their shrinking capability directly with their test data generators. Now, types are good, right? So surely the Haskell version is better! Why wouldn\u2019t we want to use types to guide our shrinking process? \nIn this talk, I will highlight the technical and social problems that we, at Ambiata, experienced with type-directed shrinking. We\u2019ll explore the alternative, integrated shrinking, and we\u2019ll see that even in a statically typed language, integrated shrinking provides enormous benefits for developer productivity. We will see how to implement integrated shrinking, using rose trees, in the context of a strong statically typed language. Finally, we will see how to create a rose tree monad transformer, a tool which will allow us to create effectful test data generators, which still shrink properly! \nFrom this talk, the audience will learn about the difference between type-directed and integrated shrinking, and how integrated shrinking can provide superior counterexamples, while placing a smaller burden on developers writing tests.",
      "Affiliations": ["Ambiata"],
      "AffiliationsString": "Ambiata",
      "Authors": ["jacobstanley"],
      "Key": "cufp-2017-talks-gens-n-roses-appetite-for-reduction",
      "PersonsString": "Jacob Stanley",
      "Title": "Gens N' Roses: Appetite for Reduction",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-gens-n-roses-appetite-for-reduction"
    },
    {
      "Abstract": "Transducers is a powerful functional abstraction included with Clojure, a popular dialect of Lisp that runs on the JVM. They are generally faster, more reusable and composable than other functions for collection processing. This tutorial, after introducing the functional foundations, presents real-world examples and best practicesThe lab at the end of each section should give you an opportunity to practice what we\u2019ve learned.",
      "Affiliations": ["uSwitch"],
      "AffiliationsString": "uSwitch",
      "Authors": ["renzoborgatti"],
      "Key": "cufp-2017-talks-tutorial-c6-introduction-to-clojure-part-3-",
      "PersonsString": "Renzo Borgatti",
      "Title": "Tutorial C6: Transducers in Practice (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c6-introduction-to-clojure-part-3-"
    },
    {
      "Abstract": "As difficult to maintain legacy code bases proliferate within an organisation, tackling them head on often requires a substantial engineering investment without any guarantee of success. \nWe examine such a code base from within our own organisation - a large, stateful, object orientated .NET API for distributed computation with little type-safety. \nIt became apparent that idiomatic use of this library encouraged bad coding practices amongst its users, making it harder to make meaningful improvements to the API, and cementing its position as a legacy component. \nWhen faced with this problem, we eschewed a big rewrite or major refactor in favour of abstracting over the problematic design with a declarative, type-safe facade written in F#. \nThis talk explores the significant advantages this approach offered to both the library\u2019s end-users and its development team - immediately preventing further accumulation of problematic user code, and establishing a better conceptual model for the library\u2019s functionality while laying a pathway for the ultimate replacement of the legacy implementation.",
      "Affiliations": [
        "G-Research",
        "G-Research"
      ],
      "AffiliationsString": "G-Research",
      "Authors": [
        "nicholascowle",
        "robinkay"
      ],
      "Key": "cufp-2017-talks-functional-facades-over-legacy-code",
      "PersonsString": "Nicholas Cowle and Robin Kay",
      "Title": "Functional Facades over Legacy Code",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-functional-facades-over-legacy-code"
    },
    {
      "Abstract": "Transducers is a powerful functional abstraction included with Clojure, a popular dialect of Lisp that runs on the JVM. They are generally faster, more reusable and composable than other functions for collection processing. This tutorial, after introducing the functional foundations, presents real-world examples and best practicesThe lab at the end of each section should give you an opportunity to practice what we\u2019ve learned.",
      "Affiliations": ["uSwitch"],
      "AffiliationsString": "uSwitch",
      "Authors": ["renzoborgatti"],
      "Key": "cufp-2017-talks-tutorial-c6-introduction-to-clojure-part-2-",
      "PersonsString": "Renzo Borgatti",
      "Title": "Tutorial C6: Transducers in Practice (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c6-introduction-to-clojure-part-2-"
    },
    {
      "Abstract": "Biopharmaceutical research is an incredibly resource-intensive endeavor. The task of pharmaceutical R&amp;D organizations is to perform translational research, specifically, to integrate data and knowledge of human biology in order to create new treatments for disease. \nThis requires iterating from an initial, broad category of biological hypotheses towards an increasingly narrower set of high-confidence biological mechanisms and associated treatments. These iterations require combining many sources of information to design and interpret experiments while making decisions as to which biological mechanisms are most likely to be efficacious. Progressing a treatment through the development pipeline spans a multi-year development cycle and culminates in clinical studies that determine the success or failure of a proposed treatment. \nOne key challenge for translational research is that it draws upon disparate sources of information, including genomics, experiments from animal models, public data repositories, high throughput experiments, and high dimensional measurements of biomarkers. Data sources are in many locations and in a variety of formats and adhoc schemas, making mere acquisition and integration of this data often a rate-limiting step of research. Contextualizing heterogeneous data into persisted datasets requires a large amount of upfront work. Analyses are often one-off, resulting in having to consider two suboptimal choices \u2013 delaying time-sensitive analyses due to over-engineering or failing to aggregate persisted data resources that offer potential institutional value in the longer term. \nWe used functional programming technologies to accelerate the core computational workflows involved in the many data integration needs of translational research. Our goal was to build a platform that automates many steps of the process for scientists who are domain experts but have little training in data management tools. The key to success was the idea of declarative programming at all stages of the workflow. The first stage is data acquisition, where we dynamically infer a declarative specification of the shape of the incoming data (schemas) that is streamed in, with little to no annotations from the scientist. These inferred schemas are then useful for scientists to make sense of the data and build effective queries. We further automate access to this data by dynamically generating REST endpoints that can be queried conveniently from any of the many programming languages in use by scientists today (R, Python, and Ruby). The content of data sources is versioned and the metadata curated via programmatic ontological annotations. Scientists are then able to reason about a priori unknown relationships between disparate data sources. Finally, we built a browser-based interface for identifying and curating datasets. \nWhile biopharma is an unusual setting for this, we used functional programming technologies at all levels of the stack, from Haskell for efficiently streaming data into our platform, to GHCJS to rapidly iterate on a web interface that our users find effective, as well as reusing functional data query DSL\u2019s in R (dplyr) and other languages. We developed technologies inspired by functional programming itself, such as type inference, immutability, and logical relationship inference from the data we acquire. Overall we found functional programming methodologies were a good fit for the data analysis needs and rapid iteration requirements of translational research.",
      "Affiliations": ["Pfizer"],
      "AffiliationsString": "Pfizer",
      "Authors": ["austinhuang"],
      "Key": "cufp-2017-talks-using-functional-programming-to-accelerate-translational-research-at-pfizer",
      "PersonsString": "Austin Huang",
      "Title": "Using Functional Programming to Accelerate Translational Research at Pfizer",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-using-functional-programming-to-accelerate-translational-research-at-pfizer"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Jane Street"
      ],
      "AffiliationsString": ", Jane Street",
      "Authors": [
        "yaronminsky",
        "sebastianfunk"
      ],
      "Key": "cufp-2017-talks-tutorial-c1-online-applications-with-incremental-part-2-",
      "PersonsString": "Yaron Minsky and Sebastian Funk",
      "Title": "Tutorial C1: Online Applications with Incremental (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c1-online-applications-with-incremental-part-2-"
    },
    {
      "Abstract": "Git is one of the most popular tools for developers and \u2013 while this is usually little known \u2013 part of the power of Git comes from functional concepts. ocaml-git is a re-implementation of the Git protocol(s) in pure OCaml: it can synchronize (push and pull) with remote Git servers and it can inspect, create and modify local Git repositories (all Git object kinds are supported, including compressed PACK files). Using Git as a library with ocaml-git unlocked a new ecosystem of Git-based applications, including Irmin, a Git-like database or datakit, a Git-like orchestration tool (both used in production at Docker Inc).. Blockchain ledger such as Tezos, tamper-evident logging system, or conflict-free replicated datatypes have also been built using ocaml-git and Irmin. \nIn this tutorial, we will learn more about Git using OCaml. The first part of the talk will be dedicated to understanding the on-disk Git format and to explaining the functional concepts that Git uses to be really efficient: immutability, radix/patricia tree, etc. In the second part of this talk, we will implement a simple application to display the history of local Git repositories on a webpage, using ocaml-git and js_of_ocaml.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["romaincalascibetta"],
      "Key": "cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml",
      "PersonsString": "Romain Calascibetta",
      "Title": "Tutorial C4: Git under the hood with OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml"
    },
    {
      "Abstract": "Incremental is a library aimed at making it easier to write on-line algorithms, i.e. , algorithms that can efficiently respond to new input data without having to redo the entire computation from scratch. This kind of problem comes up in many circumstances including data-driven UIs or complex modeling based on real-time data. In this tutorial we\u2019ll focus on building a monitoring application with Incremental based on a rapidly changing data set. We will look at techniques that allow you to build efficient views of this data to represent various aspects of the system being monitored.",
      "Affiliations": [
        "",
        "Jane Street"
      ],
      "AffiliationsString": ", Jane Street",
      "Authors": [
        "yaronminsky",
        "sebastianfunk"
      ],
      "Key": "cufp-2017-talks-tutorial-c1-online-applications-with-incremental",
      "PersonsString": "Yaron Minsky and Sebastian Funk",
      "Title": "Tutorial C1: Online Applications with Incremental",
      "Type": "Other",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c1-online-applications-with-incremental"
    },
    {
      "Abstract": "Digital Asset builds distributed-ledger and smart-contract technology for enterprise applications. Two key promises of this technology are significantly lower operational costs and increased auditability. Key techniques to realize these promises are the representation of contracts as code and immutable, authenticated data-structures. However, these techniques also do require significantly higher correctness guarantees from both contract specifications and ledger implementations. At Digital Asset, we provide these correctness guarantees by systematically applying formal methods. \nIn this talk, I\u2019ll give insights into one such application of formal methods. More precisely, I\u2019ll explain how we use Isabelle/HOL to provide a verified implementation of the interpreter for DAML, our smart-contract language. The goal of this talk is to show how one can leverage Isabelle/HOL as a combined implementation and verification environment for core algorithms.",
      "Affiliations": ["Digital Asset"],
      "AffiliationsString": "Digital Asset",
      "Authors": ["simonmeier"],
      "Key": "cufp-2017-talks-formally-verifying-a-smart-contract-language-implementation-with-isabelle",
      "PersonsString": "Simon Meier",
      "Title": "Formally Verifying a Smart-Contract Language Implementation with Isabelle",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-formally-verifying-a-smart-contract-language-implementation-with-isabelle"
    },
    {
      "Abstract": "",
      "Affiliations": ["Zendesk"],
      "AffiliationsString": "Zendesk",
      "Authors": ["andreasgarns"],
      "Key": "cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml-part-2-",
      "PersonsString": "Andreas Garnæs",
      "Title": "Tutorial C8: GraphQL Servers in OCaml (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml-part-2-"
    },
    {
      "Abstract": "",
      "Affiliations": ["Zendesk"],
      "AffiliationsString": "Zendesk",
      "Authors": ["andreasgarns"],
      "Key": "cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml-part-3-",
      "PersonsString": "Andreas Garnæs",
      "Title": "Tutorial C8: GraphQL Servers in OCaml (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml-part-3-"
    },
    {
      "Abstract": "",
      "Affiliations": ["Active Group GmbH"],
      "AffiliationsString": "Active Group GmbH",
      "Authors": ["michaelsperber"],
      "Key": "cufp-2017-talks-tutorial-c5-teaching-functional-programming-part-3-",
      "PersonsString": "Michael Sperber",
      "Title": "Tutorial C5: Teaching Functional Programming (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c5-teaching-functional-programming-part-3-"
    },
    {
      "Abstract": "Owl is an OCaml library for scientific computing. It supports N-dimensional arrays, various matrix operations, linear algebra, regressions, fast Fourier transforms, algorithmic differentiation, and many advanced mathematical and statistical functions. Owl is evolving into a power toolkit for data scientists to test their new ideas, evaluate novel designs quickly and safely by providing a consistent and integrated numerical infrastructure. It not only allows us to fast prototype machine learning based algorithms without sacrificing performance, but also guarantees the reliability and robust of the application thanks to OCaml\u2019s powerful type system. \nIn this tutorial, tutor will first introduce the overall architecture of Owl by going through its major components: Matrix, Ndarray, Linear algebra, Algodiff, Dataset, Ext module, and etc. Then tutor will show how to use Owl to finish a series of common tasks that every data scientist and industrial practitioner has to deal with in their daily job. The tasks will be carefully designed and arranged (based on their difficulty levels) to cover the following topics: basic data types, matrix operations, indexing, plotting, algorithmic differentiation, machine learning &amp; neural network, and topic modeling.",
      "Affiliations": ["University of Cambridge"],
      "AffiliationsString": "University of Cambridge",
      "Authors": ["liangwang"],
      "Key": "cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml",
      "PersonsString": "Liang Wang",
      "Title": "Tutorial C7: Owl - Data Science in OCaml",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["olegkiselyov"],
      "Key": "cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them-part-2-",
      "PersonsString": "Oleg Kiselyov",
      "Title": "Tutorial C2: Extensible Effects: understanding them, implementing them, using them (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them-part-2-"
    },
    {
      "Abstract": "",
      "Affiliations": ["Active Group GmbH"],
      "AffiliationsString": "Active Group GmbH",
      "Authors": ["michaelsperber"],
      "Key": "cufp-2017-talks-tutorial-c5-teaching-functional-programming-part-2-",
      "PersonsString": "Michael Sperber",
      "Title": "Tutorial C5: Teaching Functional Programming (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c5-teaching-functional-programming-part-2-"
    },
    {
      "Abstract": "Algebraic effect handlers are a new control operator that generalize common control-flow abstractions such as exceptions, generators, or concurrency, as well as other seemingly esoteric programming abstractions such as transactional memory and probabilistic computations. The idea of algebraic effects and handlers has been experimented with in the form of libraries in several mainstream languages, including OCaml, Haskell, Standard ML, Clojure, and Scala. Multicore OCaml is an extension of OCaml with effect handlers as a primary means of expressing concurrency. Effect handlers are used to implement thread schedulers as user-level libraries, enabling programmers to specialize their concurrency and parallelization strategies. \nWe propose a tutorial on practical concurrent and parallel programming using effect handlers in Multicore OCaml. We aim to introduce algebraic effects handlers in Multicore OCaml with toy examples. We will then illustrate through several hands-on exercises, how exceptions, cooperative concurrency, generators, async/await mechanisms can be implemented using effect handlers. \nThe tutorial is targeted at functional programmers who are beginners in concurrent programming.",
      "Affiliations": [
        "The University of Edinburgh",
        "University of Cambridge"
      ],
      "AffiliationsString": "The University of Edinburgh, University of Cambridge",
      "Authors": [
        "danielhillerstrom",
        "kcsivaramakrishnan"
      ],
      "Key": "cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers",
      "PersonsString": "Daniel Hillerström and KC Sivaramakrishnan",
      "Title": "Tutorial C3: Concurrent Programming with Effect Handlers",
      "Type": "Other",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["olegkiselyov"],
      "Key": "cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them-part-3-",
      "PersonsString": "Oleg Kiselyov",
      "Title": "Tutorial C2: Extensible Effects: understanding them, implementing them, using them (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them-part-3-"
    },
    {
      "Abstract": "We have seen wide adoption of Haskell in the various industries lately. As a data center providing variety of services, we have started using it for the first time in 2011 and replaced several tools previously written in ruby. Having immediately noticed improvement in stability of the overall system, we have committed ourselves to replace the rest of the code as well, and learn Haskell along the way. In September 2013 the transition was complete and we are running the datacenter with all the production code written in Haskell since. The main benefit was easy to extendable and flexible system over the years adapting to quickly changing business ideas without the compromise of quality. Specifically the fact, that one is confident that the source of possible errors is in the changing context and not a bug in the code. \nWe gather data from different systems like routers, firewalls, proprietary xml based interfaces of a virtualization platform, and specialized protocols of different generations of electricity meters. The usage reports help our technicians to run the infrastructure, provide precise invoices to the customers, and gives an overview for the company management. \nI would like to present how overcoming the struggles we had initially when starting with Haskell and the the ecosystem, brought positive effect on the company organization, and stability of service. Committing to Haskell was probably one of the best business decisions we have made.",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["pavlokerestey"],
      "Key": "cufp-2017-talks-using-haskell-to-run-a-datacenter",
      "PersonsString": "Pavlo Kerestey",
      "Title": "Using Haskell to run a datacenter",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-using-haskell-to-run-a-datacenter"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["bodilstokke"],
      "Key": "cufp-2017-talks-keynote",
      "PersonsString": "Bodil Stokke",
      "Title": "Keynote",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-keynote"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["romaincalascibetta"],
      "Key": "cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml-part-2-",
      "PersonsString": "Romain Calascibetta",
      "Title": "Tutorial C4: Git under the hood with OCaml (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml-part-2-"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "tadeuszlitak",
        "miriampolzer",
        "ulrichrabenstein"
      ],
      "Key": "fscd-2017-negative-translations-and-normal-modality",
      "PersonsString": "Tadeusz Litak, Miriam Polzer and Ulrich Rabenstein",
      "Title": "Negative Translations and Normal Modality",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-negative-translations-and-normal-modality"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "University of Bath"
      ],
      "AffiliationsString": ", University of Bath",
      "Authors": [
        "stefanoguerrini",
        "marcosolieri"
      ],
      "Key": "fscd-2017-is-the-optimal-implementation-inefficient-elementarily-not",
      "PersonsString": "Stefano Guerrini and Marco Solieri",
      "Title": "Is the optimal implementation inefficient? Elementarily not",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-is-the-optimal-implementation-inefficient-elementarily-not"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Buenos Aires, Argentina / IRIF, France / University of Paris Diderot, France",
        "CONICET, Argentina / Universidad Nacional de Quilmes, Argentina"
      ],
      "AffiliationsString": "University of Buenos Aires, Argentina / IRIF, France / University of Paris Diderot, France, CONICET, Argentina / Universidad Nacional de Quilmes, Argentina",
      "Authors": [
        "pablobarenbaum",
        "eduardobonelli"
      ],
      "Key": "fscd-2017-optimality-and-the-linear-substitution-calculus",
      "PersonsString": "Pablo Barenbaum and Eduardo Bonelli",
      "Title": "Optimality and the Linear Substitution Calculus",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-optimality-and-the-linear-substitution-calculus"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "jurgengiesl",
        "albertrubio",
        "johanneswaldmann",
        "akihisayamada"
      ],
      "Key": "fscd-2017-termination-and-complexity-competition-2017",
      "PersonsString": "Jürgen Giesl, Albert Rubio, Johannes Waldmann and Akihisa Yamada",
      "Title": "Termination and Complexity Competition 2017",
      "Type": "Other",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-termination-and-complexity-competition-2017"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "Carnegie Mellon University"
      ],
      "AffiliationsString": ", Carnegie Mellon University",
      "Authors": [
        "benjaminlichtman",
        "janhoffmann"
      ],
      "Key": "fscd-2017-arrays-and-references-in-resource-aware-ml",
      "PersonsString": "Benjamin Lichtman and Jan Hoffmann",
      "Title": "Arrays and References in Resource Aware ML",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-arrays-and-references-in-resource-aware-ml"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "benediktahrens",
        "peterlefanulumsdaine"
      ],
      "Key": "fscd-2017-displayed-categories",
      "PersonsString": "Benedikt Ahrens and Peter Lefanu Lumsdaine",
      "Title": "Displayed categories",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-displayed-categories"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Oxford",
        "INRIA Saclay and LIX"
      ],
      "AffiliationsString": "University of Oxford, INRIA Saclay and LIX",
      "Authors": [
        "samstaton",
        "dalemiller"
      ],
      "Key": "fscd-2017-welcome-message",
      "PersonsString": "Sam Staton and Dale Miller",
      "Title": "Welcome message",
      "Type": "Other",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-welcome-message"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Vrije Universiteit Amsterdam",
        "MPI-INF",
        "ETH Zurich"
      ],
      "AffiliationsString": "Vrije Universiteit Amsterdam, MPI-INF, ETH Zurich",
      "Authors": [
        "jasminblanchette",
        "mathiasfleury",
        "dmitriytraytel"
      ],
      "Key": "fscd-2017-nested-multisets-hereditary-multisets-and-syntactic-ordinals-in-isabelle-hol",
      "PersonsString": "Jasmin Blanchette, Mathias Fleury and Dmitriy Traytel",
      "Title": "Nested Multisets, Hereditary Multisets, and Syntactic Ordinals in Isabelle/HOL",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-nested-multisets-hereditary-multisets-and-syntactic-ordinals-in-isabelle-hol"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Innsbruck"],
      "AffiliationsString": "University of Innsbruck",
      "Authors": ["georgmoser"],
      "Key": "fscd-2017-uniform-resource-analysis-by-rewriting-strenghts-and-weaknesses",
      "PersonsString": "Georg Moser",
      "Title": "Uniform Resource Analysis by Rewriting: Strenghts and Weaknesses",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-uniform-resource-analysis-by-rewriting-strenghts-and-weaknesses"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "simoncastellan",
        "pierreclairambault",
        "glynnwinskel"
      ],
      "Key": "fscd-2017-observably-deterministic-concurrent-strategies-and-intensional-full-abstraction-for-parallel-or",
      "PersonsString": "Simon Castellan, Pierre Clairambault and Glynn Winskel",
      "Title": "Observably Deterministic Concurrent Strategies and Intensional Full Abstraction for Parallel-or",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-observably-deterministic-concurrent-strategies-and-intensional-full-abstraction-for-parallel-or"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "fscd-2017-fscd-general-meeting",
      "PersonsString": "",
      "Title": "FSCD General Meeting",
      "Type": "Meeting",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-fscd-general-meeting"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["yohjiakama"],
      "Key": "fscd-2017-the-confluent-terminating-context-free-substitutive-rewriting-system-for-the-calculus-with-surjective-pairing-and-terminal-type",
      "PersonsString": "Yohji Akama",
      "Title": "The confluent terminating context-free substitutive rewriting system for the λ-calculus with surjective pairing and terminal type",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-the-confluent-terminating-context-free-substitutive-rewriting-system-for-the-calculus-with-surjective-pairing-and-terminal-type"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "akitoshikawamura",
        "floriansteinberg"
      ],
      "Key": "fscd-2017-polynomial-running-times-for-polynomial-time-oracle-machines",
      "PersonsString": "Akitoshi Kawamura and Florian Steinberg",
      "Title": "Polynomial running times for polynomial-time oracle machines",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-polynomial-running-times-for-polynomial-time-oracle-machines"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "The University of Edinburgh",
        "University of Edinburgh, UK",
        "University of Strathclyde",
        "University of Cambridge"
      ],
      "AffiliationsString": "The University of Edinburgh, University of Edinburgh, UK, University of Strathclyde, University of Cambridge",
      "Authors": [
        "danielhillerstrom",
        "samlindley",
        "bobatkey",
        "kcsivaramakrishnan"
      ],
      "Key": "fscd-2017-continuation-passing-style-for-effect-handlers",
      "PersonsString": "Daniel Hillerström, Sam Lindley, Bob Atkey and KC Sivaramakrishnan",
      "Title": "Continuation Passing Style for Effect Handlers",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-continuation-passing-style-for-effect-handlers"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["christinetasson"],
      "Key": "fscd-2017-quantitative-semantics-for-probabilistic-programming",
      "PersonsString": "Christine Tasson",
      "Title": "Quantitative semantics for probabilistic programming",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-quantitative-semantics-for-probabilistic-programming"
    },
    {
      "Abstract": "",
      "Affiliations": ["University at Buffalo, SUNY, USA"],
      "AffiliationsString": "University at Buffalo, SUNY, USA",
      "Authors": ["marcogaboardi"],
      "Key": "fscd-2017-type-systems-for-the-relational-verification-of-higher-order-programs",
      "PersonsString": "Marco Gaboardi",
      "Title": "Type systems for the relational verification of higher order programs",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-type-systems-for-the-relational-verification-of-higher-order-programs"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Wroclaw",
        "",
        ""
      ],
      "AffiliationsString": "University of Wroclaw, ",
      "Authors": [
        "malgorzatabiernacka",
        "witoldcharatonik",
        "klarazielinska"
      ],
      "Key": "fscd-2017-generalized-refocusing-from-hybrid-strategies-to-abstract-machines",
      "PersonsString": "Malgorzata Biernacka, Witold Charatonik and Klara Zielińska",
      "Title": "Generalized Refocusing: from Hybrid Strategies to Abstract Machines",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-generalized-refocusing-from-hybrid-strategies-to-abstract-machines"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "maxkanovich",
        "stepankuznetsov",
        "glynmorrill",
        "andrescedrov"
      ],
      "Key": "fscd-2017-a-polynomial-time-algorithm-for-the-lambek-calculus-with-brackets-of-bounded-order",
      "PersonsString": "Max Kanovich, Stepan Kuznetsov, Glyn Morrill and Andre Scedrov",
      "Title": "A polynomial-time algorithm for the Lambek calculus with brackets of bounded order",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-a-polynomial-time-algorithm-for-the-lambek-calculus-with-brackets-of-bounded-order"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "University of Cambridge",
        ""
      ],
      "AffiliationsString": "University of Cambridge, ",
      "Authors": [
        "andrewpitts",
        "ianorton"
      ],
      "Key": "fscd-2017-models-of-type-theory-based-on-moore-paths",
      "PersonsString": "Andrew Pitts and Ian Orton",
      "Title": "Models of Type Theory Based on Moore Paths",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-models-of-type-theory-based-on-moore-paths"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "JAIST",
        "",
        "",
        ""
      ],
      "AffiliationsString": "JAIST, ",
      "Authors": [
        "naohirokawa",
        "aartmiddeldorp",
        "christiansternagel",
        "sarahwinkler"
      ],
      "Key": "fscd-2017-infinite-runs-in-abstract-completion",
      "PersonsString": "Nao Hirokawa, aart Middeldorp, Christian Sternagel and Sarah Winkler",
      "Title": "Infinite Runs in Abstract Completion",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-infinite-runs-in-abstract-completion"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "robincockett",
        "jeansimonlemay"
      ],
      "Key": "fscd-2017-there-is-only-one-notion-of-differentiation",
      "PersonsString": "Robin Cockett and Jean-Simon Lemay",
      "Title": "There is only one notion of differentiation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-there-is-only-one-notion-of-differentiation"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "IRIF, France / University of Paris Diderot, France",
        ""
      ],
      "AffiliationsString": "IRIF, France / University of Paris Diderot, France, ",
      "Authors": [
        "deliakesner",
        "pierrevial"
      ],
      "Key": "fscd-2017-types-as-resources-for-classical-natural-deduction",
      "PersonsString": "Delia Kesner and Pierre Vial",
      "Title": "Types as Resources for Classical Natural Deduction",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-types-as-resources-for-classical-natural-deduction"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "colinriba",
        "pierrepradic"
      ],
      "Key": "fscd-2017-a-curry-howard-approach-to-church-s-synthesis",
      "PersonsString": "Colin Riba and Pierre Pradic",
      "Title": "A Curry-Howard Approach to Church\u2019s Synthesis",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-a-curry-howard-approach-to-church-s-synthesis"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Computer Laboratory, University of Cambridge",
        ""
      ],
      "AffiliationsString": "Computer Laboratory, University of Cambridge, ",
      "Authors": [
        "marcelofiore",
        "philipsaville"
      ],
      "Key": "fscd-2017-list-objects-with-algebraic-structure",
      "PersonsString": "Marcelo Fiore and Philip Saville",
      "Title": "List Objects with Algebraic Structure",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-list-objects-with-algebraic-structure"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "McGill University",
        "Saarland University"
      ],
      "AffiliationsString": ", McGill University, Saarland University",
      "Authors": [
        "jonaskaiser",
        "brigittepientka",
        "gertsmolka"
      ],
      "Key": "fscd-2017-relating-system-f-and-2-a-case-study-in-coq-abella-and-beluga",
      "PersonsString": "Jonas Kaiser, Brigitte Pientka and Gert Smolka",
      "Title": "Relating System F and λ2: A Case Study in Coq, Abella and Beluga",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-relating-system-f-and-2-a-case-study-in-coq-abella-and-beluga"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["paolopistone"],
      "Key": "fscd-2017-dinaturality-between-syntax-and-semantics",
      "PersonsString": "Paolo Pistone",
      "Title": "Dinaturality between syntax and semantics",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-dinaturality-between-syntax-and-semantics"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Innsbruck"],
      "AffiliationsString": "University of Innsbruck",
      "Authors": ["lukaszczajka"],
      "Key": "fscd-2017-confluence-of-an-extension-of-combinatory-logic-by-boolean-constants",
      "PersonsString": "Lukasz Czajka",
      "Title": "Confluence of an extension of Combinatory Logic by Boolean constants",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-confluence-of-an-extension-of-combinatory-logic-by-boolean-constants"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Birmingham, UK"],
      "AffiliationsString": "University of Birmingham, UK",
      "Authors": ["noamzeilberger"],
      "Key": "fscd-2017-a-sequent-calculus-for-semi-associativity",
      "PersonsString": "Noam Zeilberger",
      "Title": "A sequent calculus for semi-associativity",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-a-sequent-calculus-for-semi-associativity"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "benedettointrigila",
        "giuliomanzonetto",
        "andrewpolonsky"
      ],
      "Key": "fscd-2017-refutation-of-sall-s-longstanding-conjecture",
      "PersonsString": "Benedetto Intrigila, Giulio Manzonetto and Andrew Polonsky",
      "Title": "Refutation of Sallé's Longstanding Conjecture",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-refutation-of-sall-s-longstanding-conjecture"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        "University of Tokyo, Japan",
        "University of Tokyo, Japan"
      ],
      "AffiliationsString": ", University of Tokyo, Japan",
      "Authors": [
        "ryotasuzuki",
        "koichifujima",
        "naokikobayashi",
        "takeshitsukada"
      ],
      "Key": "fscd-2017-streett-automata-model-checking-of-higher-order-recursion-schemes",
      "PersonsString": "Ryota Suzuki, Koichi Fujima, Naoki Kobayashi and Takeshi Tsukada",
      "Title": "Streett Automata Model Checking of Higher-Order Recursion Schemes",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-streett-automata-model-checking-of-higher-order-recursion-schemes"
    },
    {
      "Abstract": "",
      "Affiliations": ["IT University of Copenhagen"],
      "AffiliationsString": "IT University of Copenhagen",
      "Authors": ["patrickbahr"],
      "Key": "fscd-2017-b-hm-reduction-in-infinitary-term-graph-rewriting-systems",
      "PersonsString": "Patrick Bahr",
      "Title": "Böhm Reduction in Infinitary Term Graph Rewriting Systems",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-b-hm-reduction-in-infinitary-term-graph-rewriting-systems"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Technical University Dortmund",
        "Technical University Dortmund"
      ],
      "AffiliationsString": "Technical University Dortmund",
      "Authors": [
        "andrejdudenhefner",
        "jakobrehof"
      ],
      "Key": "fscd-2017-the-complexity-of-principal-inhabitation",
      "PersonsString": "Andrej Dudenhefner and Jakob Rehof",
      "Title": "The Complexity of Principal Inhabitation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-the-complexity-of-principal-inhabitation"
    },
    {
      "Abstract": "",
      "Affiliations": [""],
      "AffiliationsString": "",
      "Authors": ["lutzstrassburger"],
      "Key": "fscd-2017-combinatorial-flows-and-their-normalisation",
      "PersonsString": "Lutz Strassburger",
      "Title": "Combinatorial Flows and their Normalisation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-combinatorial-flows-and-their-normalisation"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "",
        "",
        ""
      ],
      "AffiliationsString": "",
      "Authors": [
        "takahitoaoto",
        "yoshihitotoyama",
        "yutakimura"
      ],
      "Key": "fscd-2017-improving-rewriting-induction-approach-for-proving-ground-confluence",
      "PersonsString": "Takahito Aoto, Yoshihito Toyama and Yuta Kimura",
      "Title": "Improving Rewriting Induction Approach for Proving Ground Confluence",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-improving-rewriting-induction-approach-for-proving-ground-confluence"
    },
    {
      "Abstract": "",
      "Affiliations": ["University College London"],
      "AffiliationsString": "University College London",
      "Authors": ["alexandrasilva"],
      "Key": "fscd-2017-brzozowski-goes-concurrent-a-kleene-theorem-for-pomset-languages",
      "PersonsString": "Alexandra Silva",
      "Title": "Brzozowski Goes Concurrent -- A Kleene Theorem for Pomset Languages",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-brzozowski-goes-concurrent-a-kleene-theorem-for-pomset-languages"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Wesleyan University",
        "",
        ""
      ],
      "AffiliationsString": "Wesleyan University, ",
      "Authors": [
        "danlicata",
        "michaelshulman",
        "mitchellriley"
      ],
      "Key": "fscd-2017-a-fibrational-framework-for-substructural-and-modal-logics",
      "PersonsString": "Dan Licata, Michael Shulman and Mitchell Riley",
      "Title": "A Fibrational Framework for Substructural and Modal Logics",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/fscd-2017-a-fibrational-framework-for-substructural-and-modal-logics"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-thursday-lunch",
      "PersonsString": "",
      "Title": "Thursday lunch",
      "Type": "Lunch",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-thursday-lunch"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-tuesday-coffee-break-3",
      "PersonsString": "",
      "Title": "Tuesday coffee break 3",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-tuesday-coffee-break-3"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-thursday-coffee-break-1",
      "PersonsString": "",
      "Title": "Thursday coffee break 1",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-thursday-coffee-break-1"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Data61 at CSIRO, Australia / UNSW, Australia",
        "Data61 at CSIRO, Australia / Australian National University, Australia",
        "University of Kent, UK",
        "Chalmers University of Technology, Sweden"
      ],
      "AffiliationsString": "Data61 at CSIRO, Australia / UNSW, Australia, Data61 at CSIRO, Australia / Australian National University, Australia, University of Kent, UK, Chalmers University of Technology, Sweden",
      "Authors": [
        "ramanakumar",
        "michaelnorrish",
        "scottowens",
        "magnusomyreen"
      ],
      "Key": "icfp-2017-tutorials-tutorial-t1-writing-verified-programs-in-cakeml-continued-",
      "PersonsString": "Ramana Kumar, Michael Norrish, Scott Owens and Magnus O. Myreen",
      "Title": "Tutorial T1: Writing Verified Programs in CakeML (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-tutorials-tutorial-t1-writing-verified-programs-in-cakeml-continued-"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-thursday-coffee-break-2",
      "PersonsString": "",
      "Title": "Thursday coffee break 2",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-thursday-coffee-break-2"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-wednesday-coffee-break-3",
      "PersonsString": "",
      "Title": "Wednesday coffee break 3",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-wednesday-coffee-break-3"
    },
    {
      "Abstract": "Session-typed languages building on the Curry-Howard isomorphism between linear logic and session-typed communication guarantee session fidelity and deadlock freedom. Unfortunately, these strong guarantees exclude many naturally occurring programming patterns pertaining to shared resources. In this paper, we introduce sharing into a session-typed language where types are stratified into linear and shared layers with modal operators connecting the layers. The resulting language retains session fidelity but not the absence of deadlocks, which can arise from contention for shared processes. We illustrate our language on various examples, such as the dining philosophers problem, and provide a translation of the untyped asynchronous $\\pi$-calculus into our language.",
      "Affiliations": [
        "Carnegie Mellon University, USA",
        "Carnegie Mellon University, USA"
      ],
      "AffiliationsString": "Carnegie Mellon University, USA",
      "Authors": [
        "stephaniebalzer",
        "frankpfenning"
      ],
      "Key": "icfp-2017-papers-manifest-sharing-with-session-types",
      "PersonsString": "Stephanie Balzer and Frank Pfenning",
      "Title": "Manifest Sharing with Session Types",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-manifest-sharing-with-session-types"
    },
    {
      "Abstract": "Generativity is an increasingly popular and useful concept, referring to a machine\u2019s ability to respond to user input with new constructions not foreseen by the programmer. Yet increasingly, people treat computational systems as unknowable black-box systems, writing off the possibility of forming mental models that allow a collaborative relationship between human insight and fast computation. \nI argue for the efficacy of transparent, compositional semantics for collaborating with virtual agents and deriving insights from system models. Having built systems based on automated reasoning for linear logic and epistemic modal logic, we can formalize notions of belief, intention, and action, in order to create virtual agents that behave in ways that humans can reason about based on intuitions about goal-driven behavior. For example, some of Grice\u2019s maxims of conversation can be seen as derivable consequences of these principles. Ongoing work includes applying these formalisms to the tasks of navigating unknown rule systems in virtual environments, social skills training, and generative storytelling.",
      "Affiliations": ["North Carolina State University"],
      "AffiliationsString": "North Carolina State University",
      "Authors": ["chrismartens"],
      "Key": "icfp-2017-keynote-talks-compositional-creativity-some-principles-for-talking-to-computers",
      "PersonsString": "Chris Martens",
      "Title": "Compositional creativity: some principles for talking to computers",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-keynote-talks-compositional-creativity-some-principles-for-talking-to-computers"
    },
    {
      "Abstract": "In this functional pearl, we examine the use of definitional interpreters as a basis for abstract interpretation of higher-order programming languages. As it turns out, definitional interpreters, especially those written in monadic style, can provide a nice basis for a wide variety of collecting semantics, abstract interpretations, symbolic executions, and their intermixings. \nBut the real insight of this story is a replaying of an insight from Reynold's landmark paper, \\emph{Definitional Interpreters for Higher-Order Programming Languages}, in which he observes definitional interpreters enable the defined-language to inherit properties of the defining-language. We show the same holds true for definitional \\emph{abstract} interpreters. Remarkably, we observe that abstract definitional interpreters can inherit the so-called ``pushdown control flow'' property, wherein function calls and returns are precisely matched in the abstract semantics, simply by virtue of the function call mechanism of the defining-language. \nThe first approaches to achieve this property for higher-order languages appeared within the last ten years, and have since been the subject of many papers. These approaches start from a state-machine semantics and uniformly involve significant technical engineering to recover the precision of pushdown control flow. In contrast, starting from a definitional interpreter, the pushdown control flow property is inherent in the meta-language and requires no further technical mechanism to achieve.",
      "Affiliations": [
        "University of Maryland, USA",
        "University of Maryland, USA",
        "University of Maryland, USA",
        "University of Maryland, USA"
      ],
      "AffiliationsString": "University of Maryland, USA",
      "Authors": [
        "daviddarais",
        "nicholaslabich",
        "phucnguyen",
        "davidvanhorn"
      ],
      "Key": "icfp-2017-papers-definitional-abstract-interpreters-for-higher-order-programming-languages",
      "PersonsString": "David Darais, Nicholas Labich, Phúc C. Nguyễn and David Van Horn",
      "Title": "Abstracting Definitional Interpreters",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-definitional-abstract-interpreters-for-higher-order-programming-languages"
    },
    {
      "Abstract": "Modern service-oriented applications forgo semantically rich protocols and middleware when composing services. Instead, they embrace the loosely-coupled development and deployment of services that communicate via simple network protocols. Even though these applications do expose interfaces that are higher-order in spirit, the simplicity of the network protocols forces them to rely on brittle low-level encodings. To bridge the apparent semantic gap, programmers introduce ad-hoc and error-prone defensive code. Inspired by Design by Contract, we choose a different route to bridge this gap. We introduce Whip, a contract system for modern services. Whip (i) provides programmers with a higher-order contract language tailored to the needs of modern services; and (ii) monitors services at run time to detect services that do not live up to their advertised interfaces. Contract monitoring is local to a service. Services are treated as black boxes, allowing heterogeneous implementation languages without modification to services' code. Thus, Whip does not disturb the loosely coupled nature of modern services.",
      "Affiliations": [
        "Harvard University, USA",
        "Harvard University, USA",
        "Harvard University, USA"
      ],
      "AffiliationsString": "Harvard University, USA",
      "Authors": [
        "lucaswaye",
        "christosdimoulas",
        "stephenchong"
      ],
      "Key": "icfp-2017-papers-whip-higher-order-contracts-for-modern-services",
      "PersonsString": "Lucas Waye, Christos Dimoulas and Stephen Chong",
      "Title": "Whip: Higher-Order Contracts for Modern Services",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-whip-higher-order-contracts-for-modern-services"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-wednesday-lunch",
      "PersonsString": "",
      "Title": "Wednesday lunch",
      "Type": "Lunch",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-wednesday-lunch"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-saturday-coffee-break-3",
      "PersonsString": "",
      "Title": "Saturday coffee break 3",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-saturday-coffee-break-3"
    },
    {
      "Abstract": "Contracts have proved to be an effective mechanism that helps developers in identifying those modules of a program that violate the contracts of the functions and objects they use. In recent years, sessions have established as a key mechanism for realizing inter-module communications in concurrent programs. Just like values flow into or out of a function or object, messages are sent on, and received from, a session endpoint. Unlike conventional functions and objects, however, the kind, direction, and properties of messages exchanged in a session may vary over time, as the session progresses. This feature of sessions calls for contracts that evolve along with the session they describe. \nIn this work, we extend to sessions the notion of chaperone contract (roughly, a contract that applies to a mutable object) and investigate the ramifications of contract monitoring in a higher-order language that features sessions. We give a characterization of correct module, one that honors the contracts of the sessions it uses, and prove a blame theorem. Guided by the calculus, we describe a lightweight implementation of monitored sessions as an OCaml module with which programmers can benefit from static session type checking and dynamic contract monitoring using an off-the-shelf version of OCaml.",
      "Affiliations": [
        "University of Buenos Aires, Argentina",
        "University of Turin, Italy"
      ],
      "AffiliationsString": "University of Buenos Aires, Argentina, University of Turin, Italy",
      "Authors": [
        "hernanmelgratti",
        "lucapadovani"
      ],
      "Key": "icfp-2017-papers-chaperone-contracts-for-higher-order-sessions",
      "PersonsString": "Hernan Melgratti and Luca Padovani",
      "Title": "Chaperone Contracts for Higher-Order Sessions",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-chaperone-contracts-for-higher-order-sessions"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-friday-coffee-break-1",
      "PersonsString": "",
      "Title": "Friday coffee break 1",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-friday-coffee-break-1"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Vrije Universiteit Amsterdam",
        "",
        "Middlesex University, London",
        "ETH Zurich"
      ],
      "AffiliationsString": "Vrije Universiteit Amsterdam, , Middlesex University, London, ETH Zurich",
      "Authors": [
        "jasminblanchette",
        "andreaslochbihler",
        "andreipopescu",
        "dmitriytraytel"
      ],
      "Key": "icfp-2017-tutorials-tutorial-t2-certified-functional-co-programming-with-isabelle-hol-continued-",
      "PersonsString": "Jasmin Blanchette, Andreas Lochbihler, Andrei Popescu and Dmitriy Traytel",
      "Title": "Tutorial T2: Certified Functional (Co)programming with Isabelle/HOL (part 2)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-tutorials-tutorial-t2-certified-functional-co-programming-with-isabelle-hol-continued-"
    },
    {
      "Abstract": "It has become fairly standard in the programming-languages research world to verify functional programs in proof assistants using induction, algebraic simplification, and rewriting. In this paper, we introduce Kami, a Coq library that enables similar expressive and modular reasoning for hardware designs expressed in the style of the Bluespec language. We can specify, implement, and verify realistic designs entirely within Coq, ending with automatic extraction into a pipeline that bottoms out in FPGAs. Our methodology, using labeled transition systems, has been evaluated in a case study verifying an infinite family of multicore systems, with cache-coherent shared memory and pipelined cores implementing (the base integer subset of) the RISC-V instruction set.",
      "Affiliations": [
        "Massachusetts Institute of Technology, USA",
        "Massachusetts Institute of Technology, USA",
        "Massachusetts Institute of Technology, USA",
        "Massachusetts Institute of Technology, USA",
        "Massachusetts Institute of Technology, USA"
      ],
      "AffiliationsString": "Massachusetts Institute of Technology, USA",
      "Authors": [
        "joonwonchoi",
        "muralidaranvijayaraghavan",
        "benjaminsherman",
        "adamchlipala",
        "arvind"
      ],
      "Key": "icfp-2017-papers-kami-a-platform-for-high-level-parametric-hardware-specification-and-its-modular-verification",
      "PersonsString": "Joonwon Choi, Muralidaran Vijayaraghavan, Benjamin Sherman, Adam Chlipala and Arvind ",
      "Title": "Kami: A Platform for High-Level Parametric Hardware Specification and Its Modular Verification",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-kami-a-platform-for-high-level-parametric-hardware-specification-and-its-modular-verification"
    },
    {
      "Abstract": "Student Research Competition posters, with drinks and nibbles",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-social-events-welcome-reception",
      "PersonsString": "",
      "Title": "Welcome Reception",
      "Type": "Social Event",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-social-events-welcome-reception"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-friday-coffee-break-2",
      "PersonsString": "",
      "Title": "Friday coffee break 2",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-friday-coffee-break-2"
    },
    {
      "Abstract": "We present seven programming challenges in Racket, and an elegant, unified approach to solving them using constraint logic programming in miniKanren.",
      "Affiliations": [
        "University of Utah, USA",
        "University of Utah, USA",
        "n.n., n.n.",
        "University of Utah, USA"
      ],
      "AffiliationsString": "University of Utah, USA, n.n., n.n.",
      "Authors": [
        "williamebyrd",
        "michaelballantyne",
        "gregoryrosenblatt",
        "matthewmight"
      ],
      "Key": "icfp-2017-papers-functional-pearl-a-unified-approach-to-solving-seven-programming-problems",
      "PersonsString": "William E. Byrd, Michael Ballantyne, Gregory Rosenblatt and Matthew Might",
      "Title": "A Unified Approach to Solving Seven Programming Problems (Functional Pearl)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-functional-pearl-a-unified-approach-to-solving-seven-programming-problems"
    },
    {
      "Abstract": "We have designed an intermediate language (IL) for the CakeML compiler that supports the verified, efficient compilation of functions and calls. Verified compilation steps include batching of multiple curried arguments, detecting calls to statically known functions, and specialising calls to known functions with no free variables. Finally, we verify the translation to a lower-level IL that only supports closed, first-order functions. \nThese compilation steps resemble those found in other compilers (especially OCaml). Our contribution here is the design of the semantics of the IL, and the demonstration that our verification techniques over this semantics work well in practice at this scale. The entire development was carried out in the HOL4 theorem prover.",
      "Affiliations": [
        "University of Kent, UK",
        "Data61 at CSIRO, Australia / Australian National University, Australia",
        "Data61 at CSIRO, Australia / UNSW, Australia",
        "Chalmers University of Technology, Sweden",
        "Carnegie Mellon University, USA"
      ],
      "AffiliationsString": "University of Kent, UK, Data61 at CSIRO, Australia / Australian National University, Australia, Data61 at CSIRO, Australia / UNSW, Australia, Chalmers University of Technology, Sweden, Carnegie Mellon University, USA",
      "Authors": [
        "scottowens",
        "michaelnorrish",
        "ramanakumar",
        "magnusomyreen",
        "yongkiamtan"
      ],
      "Key": "icfp-2017-papers-verifying-efficient-function-calls-in-cakeml",
      "PersonsString": "Scott Owens, Michael Norrish, Ramana Kumar, Magnus O. Myreen and Yong Kiam Tan",
      "Title": "Verifying Efficient Function Calls in CakeML",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-verifying-efficient-function-calls-in-cakeml"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-friday-coffee-break-3",
      "PersonsString": "",
      "Title": "Friday coffee break 3",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-friday-coffee-break-3"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-friday-coffee-break-4",
      "PersonsString": "",
      "Title": "Friday coffee break 4",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-friday-coffee-break-4"
    },
    {
      "Abstract": "Since its first release in 2007, Clojure has seen considerable adoption in industries as diverse as Fortune 5 retail, international banking and finance, climate science and the latest startups. Clojure has tens of thousands of users and is a top 20 language in the RedMonk 2017 index. This is somewhat unexpected (especially by its author!) given that Clojure is a Lisp dialect emphasizing functional programming. What happened? \nThis talk examines the objectives of Clojure and its initial and ongoing design decisions. Moreover, we can now examine how that\u2019s worked out - which features are valued by its users and how it is employed to build systems. We will briefly touch on Datomic, a functional database system written in Clojure by the same authors that completes the model of programming Clojure espouses. Finally we\u2019ll look at what challenges remain for programmers and how Clojure might grow to address them. \nSpeaker bio \nRich Hickey is the author of Clojure, and the designer of Datomic. Rich has 30 years of professional experience in all facets of software development. Rich has worked on scheduling systems, broadcast automation, audio analysis and fingerprinting, database systems, yield management, exit poll systems, and machine listening, in a variety of languages.",
      "Affiliations": ["Cognitect"],
      "AffiliationsString": "Cognitect",
      "Authors": ["richhickey"],
      "Key": "icfp-2017-keynote-talks-ten-years-of-clojure-fp-out-of-the-box",
      "PersonsString": "Rich Hickey",
      "Title": "Ten Years of Clojure -- FP Out of the Box",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-keynote-talks-ten-years-of-clojure-fp-out-of-the-box"
    },
    {
      "Abstract": "",
      "Affiliations": ["Northwestern University, USA"],
      "AffiliationsString": "Northwestern University, USA",
      "Authors": ["robbyfindler"],
      "Key": "icfp-2017-keynote-talks-icfp-2018-announcement",
      "PersonsString": "Robert Bruce Findler",
      "Title": "ICFP 2018 Announcement",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-keynote-talks-icfp-2018-announcement"
    },
    {
      "Abstract": "Program slicing provides explanations that illustrate how program outputs were produced from inputs. We build on an approach introduced in prior work, where dynamic slicing was defined for pure higher-order functional programs as a Galois connection between lattices of partial inputs and partial outputs. We extend this approach to \\emph{imperative functional programs} that combine higher-order programming with references and exceptions. We present proofs of correctness and optimality of our approach and a proof-of-concept implementation and experimental evaluation.",
      "Affiliations": [
        "University of Edinburgh, UK",
        "University of Edinburgh, UK",
        "University of Edinburgh, UK / University of Glasgow, UK",
        "University of Edinburgh, UK"
      ],
      "AffiliationsString": "University of Edinburgh, UK, University of Edinburgh, UK / University of Glasgow, UK",
      "Authors": [
        "wilmerricciotti",
        "janstolarek",
        "rolyperera",
        "jamescheney"
      ],
      "Key": "icfp-2017-papers-imperative-functional-programs-that-explain-their-work",
      "PersonsString": "Wilmer Ricciotti, Jan Stolarek, Roly Perera and James Cheney",
      "Title": "Imperative Functional Programs That Explain Their Work",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-imperative-functional-programs-that-explain-their-work"
    },
    {
      "Abstract": "We study an extension of gradual typing\u2014a method to integrate dynamic typing and static typing smoothly in a single language\u2014to parametric polymorphism and its theoretical properties, including conservativity of typing and semantics over both statically and dynamically typed languages, type safety, blame-subtyping theorem, and the gradual guarantee\u2014the so-called refined criteria, advocated by Siek et al. We develop System F_G, which is a gradually typed extension of System F with the dynamic type and a new type consistency relation, and translation to a new polymorphic blame calculus System F_C, which is based on previous polymorphic blame calculi by Ahmed et al. The design of System F_G and System F_C, geared to the criteria, is influenced by the distinction between static and gradual type variables, first observed by Garcia and Cimini. This distinction is also useful to execute statically typed code without incurring additional overhead to manage type names as in the prior calculi. We prove that System F_G satisfies most of the criteria: all but the hardest property of the gradual guarantee on semantics. We show that a key conjecture to prove the gradual guarantee leads to the Jack-of-All-Trades property, conjectured as an important property of the polymorphic blame calculus by Ahmed et al.",
      "Affiliations": [
        "Kyoto University, Japan",
        "IBM Research, Japan",
        "Kyoto University, Japan"
      ],
      "AffiliationsString": "Kyoto University, Japan, IBM Research, Japan",
      "Authors": [
        "yuuigarashi",
        "tarosekiyama",
        "atsushiigarashi"
      ],
      "Key": "icfp-2017-papers-on-polymorphic-gradual-typing",
      "PersonsString": "Yuu Igarashi, Taro Sekiyama and Atsushi Igarashi",
      "Title": "On Polymorphic Gradual Typing",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-on-polymorphic-gradual-typing"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Data61 at CSIRO, Australia / UNSW, Australia",
        "Data61 at CSIRO, Australia / Australian National University, Australia",
        "University of Kent, UK",
        "Chalmers University of Technology, Sweden"
      ],
      "AffiliationsString": "Data61 at CSIRO, Australia / UNSW, Australia, Data61 at CSIRO, Australia / Australian National University, Australia, University of Kent, UK, Chalmers University of Technology, Sweden",
      "Authors": [
        "ramanakumar",
        "michaelnorrish",
        "scottowens",
        "magnusomyreen"
      ],
      "Key": "icfp-2017-tutorials-tutorial-t1-writing-verified-programs-in-cakeml-part-3-",
      "PersonsString": "Ramana Kumar, Michael Norrish, Scott Owens and Magnus O. Myreen",
      "Title": "Tutorial T1: Writing Verified Programs in CakeML (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-tutorials-tutorial-t1-writing-verified-programs-in-cakeml-part-3-"
    },
    {
      "Abstract": "An evening of strange and wonderful music and audio/visual work made from computer code. Featuring an international line-up of artists, including groundbreaking livecoders who work directly with the innards of software, writing and manipulating code while a computer runs it, projecting their screens so you can see the code behind the performance. Performances will include: extreme manipulation of the Amen breakbeat, two audio-visual performances where algorithms bring shape, colour and sound together, an algorithmic take on Hindustani music, and an audio-visual journey into Lambda calculus. In addition Columbian composer Alexandra Cardenas, also known for her performances at Algoraves (algorithmic raves) will give a keynote live coding performance, creating live music using the algorithmic pattern language Tidalcycles. \nYou can get a ticket for the Performance evening here. \nThis event is organized by the FARM workshop, but it is open to all ICFP participants.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-social-events-farm-2017-evening-of-algorithmic-arts",
      "PersonsString": "",
      "Title": "FARM Evening Of Algorithmic Arts",
      "Type": "Social Event",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-social-events-farm-2017-evening-of-algorithmic-arts"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-sunday-coffee-break-1",
      "PersonsString": "",
      "Title": "Sunday coffee break 1",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-sunday-coffee-break-1"
    },
    {
      "Abstract": "We propose a type system for functional languages with gradual types and set-theoretic type connectives and prove its soundness. In particular, we show how to lift the definition of the domain and result type of an application from non-gradual types to gradual ones and likewise for the subtyping relation. We also show that deciding subtyping for gradual types can be reduced in linear time to deciding subtyping on non-gradual types and that the same holds true for all subtyping-related decision problems that must be solved for type inference. More generally, this work not only enriches gradual type systems with unions and intersections and with the type precision that arise from their use, but also proposes and advocates a new style of gradual types programming where union and intersection types are used by programmers to instruct the system to perform fewer dynamic checks.",
      "Affiliations": [
        "CNRS, France / University of Paris Diderot, France",
        "ENS Cachan, France"
      ],
      "AffiliationsString": "CNRS, France / University of Paris Diderot, France, ENS Cachan, France",
      "Authors": [
        "giuseppecastagna",
        "victorlanvin"
      ],
      "Key": "icfp-2017-papers-gradual-typing-with-union-and-intersection-types",
      "PersonsString": "Giuseppe Castagna and Victor Lanvin",
      "Title": "Gradual Typing with Union and Intersection Types",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-gradual-typing-with-union-and-intersection-types"
    },
    {
      "Abstract": "Dependent type theory is a powerful framework for interactive theorem proving and automated reasoning, allowing us to encode mathematical objects, data type specifications, assertions, proofs, and programs, all in the same language. Here we show that dependent type theory can also serve as its own metaprogramming language, that is, a language in which one can write programs that assist in the construction and manipulation of terms in dependent type theory itself. Specifically, we describe the metaprogramming language currently in use in the Lean theorem prover, which extends Lean's object language with an API for accessing natively implemented procedures and provides ways of reflecting object-level expressions into the metalanguage. We provide evidence to show that our language is performant, and that it provides a convenient and flexible way of writing not only small-scale interactive tactics, but also more substantial kinds of automation.",
      "Affiliations": [
        "Vienna University of Technology, Austria",
        "KIT, Germany",
        "University of Washington, USA",
        "Carnegie Mellon University, USA",
        "Microsoft Research, n.n."
      ],
      "AffiliationsString": "Vienna University of Technology, Austria, KIT, Germany, University of Washington, USA, Carnegie Mellon University, USA, Microsoft Research, n.n.",
      "Authors": [
        "gabrielebner",
        "sebastianullrich",
        "jaredroesch",
        "jeremyavigad",
        "leonardodemoura"
      ],
      "Key": "icfp-2017-papers-engineering-a-metaprogramming-framework-for-formal-verification",
      "PersonsString": "Gabriel Ebner, Sebastian Ullrich, Jared Roesch, Jeremy Avigad and Leonardo De Moura",
      "Title": "Engineering a Metaprogramming Framework for Formal Verification",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-engineering-a-metaprogramming-framework-for-formal-verification"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-thursday-coffee-break-4",
      "PersonsString": "",
      "Title": "Thursday coffee break 4",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-thursday-coffee-break-4"
    },
    {
      "Abstract": "We propose a core semantics for Dependent Haskell, an extension of Haskell with full-spectrum dependent types. Our semantics consists of two related languages. The first is a Curry-style dependently-typed language with nontermination, irrelevant arguments, and equality abstraction. The second, inspired by the Glasgow Haskell Compiler's core language FC, is its explicitly-typed analogue, suitable for implementation in GHC. All of our results\u2014chiefly, type safety, along with theorems that relate these two languages\u2014have been formalized using the Coq proof assistant. Because our work is backwards compatible with Haskell, our type safety proof holds in the presence of nonterminating computation. However, unlike other full-spectrum dependently-typed languages, such as Coq, Agda or Idris, because of this nontermination, Haskell's term language does not correspond to a consistent logic.",
      "Affiliations": [
        "University of Pennsylvania, USA",
        "University of Pennsylvania, USA",
        "Ecole Polytechnique, n.n. / University of Campinas, Brazil",
        "Bryn Mawr College, USA"
      ],
      "AffiliationsString": "University of Pennsylvania, USA, Ecole Polytechnique, n.n. / University of Campinas, Brazil, Bryn Mawr College, USA",
      "Authors": [
        "stephanieweirich",
        "antoinevoizard",
        "pedrohenriqueavezedodeamorim",
        "richardeisenberg"
      ],
      "Key": "icfp-2017-papers-a-specification-for-dependently-typed-haskell",
      "PersonsString": "Stephanie Weirich, Antoine Voizard, Pedro Henrique Avezedo de Amorim and Richard A. Eisenberg",
      "Title": "A Specification for Dependent Types in Haskell",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-a-specification-for-dependently-typed-haskell"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-wednesday-coffee-break-1",
      "PersonsString": "",
      "Title": "Wednesday coffee break 1",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-wednesday-coffee-break-1"
    },
    {
      "Abstract": "We introduce the FUSION algorithm for local refinement type inference, yielding a new SMT-based method for verifying programs with polymorphic data types and higher-order functions. FUSION is concise as the programmer need only write signatures for (externally exported) top-level functions and places with cyclic (recursive) dependencies, after which FUSION can predictably synthesize the most precise refinement types for all intermediate terms (expressible in the decidable refinement logic), thereby checking the program without false alarms. We have implemented FUSION and evaluated it on the benchmarks from the LiquidHaskell suite totalling about 12KLOC. FUSION checks an existing safety benchmark suite using about half as many templates as previously required and nearly 2x faster. In a new set of theorem proving benchmarks FUSION is both 10 - 50x faster and, by synthesizing the most precise types, avoids false alarms to make verification possible.",
      "Affiliations": [
        "University of California at San Diego, USA",
        "University of California at San Diego, USA"
      ],
      "AffiliationsString": "University of California at San Diego, USA",
      "Authors": [
        "benjamincosman",
        "ranjitjhala"
      ],
      "Key": "icfp-2017-papers-local-refinement-typing",
      "PersonsString": "Benjamin Cosman and Ranjit Jhala",
      "Title": "Local Refinement Typing",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-local-refinement-typing"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Vrije Universiteit Amsterdam",
        "",
        "Middlesex University, London",
        "ETH Zurich"
      ],
      "AffiliationsString": "Vrije Universiteit Amsterdam, , Middlesex University, London, ETH Zurich",
      "Authors": [
        "jasminblanchette",
        "andreaslochbihler",
        "andreipopescu",
        "dmitriytraytel"
      ],
      "Key": "icfp-2017-tutorials-tutorial-t2-certified-functional-co-programming-with-isabelle-hol-part-3-",
      "PersonsString": "Jasmin Blanchette, Andreas Lochbihler, Andrei Popescu and Dmitriy Traytel",
      "Title": "Tutorial T2: Certified Functional (Co)programming with Isabelle/HOL (part 3)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-tutorials-tutorial-t2-certified-functional-co-programming-with-isabelle-hol-part-3-"
    },
    {
      "Abstract": "This paper introduces a new methodology for the complexity analysis of higher-order functional programs, which is based on three ingredients: a powerful type system for size analysis and a sound type inference procedure for it, a ticking monadic transformation and constraint solving. Noticeably, the presented methodology can be fully automated, and is able to analyse a series of examples which cannot be handled by most competitor methodologies. This is possible due to various key ingredients, and in particular an abstract index language and index polymorphism at higher ranks. A prototype implementation is available.",
      "Affiliations": [
        "University of Innsbruck, Austria",
        "University of Bologna, Italy / Inria, France"
      ],
      "AffiliationsString": "University of Innsbruck, Austria, University of Bologna, Italy / Inria, France",
      "Authors": [
        "martinavanzini",
        "ugodallago"
      ],
      "Key": "icfp-2017-papers-automating-sized-type-inference-for-complexity-analysis",
      "PersonsString": "Martin Avanzini and Ugo Dal Lago",
      "Title": "Automating Sized-Type Inference for Complexity Analysis",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-automating-sized-type-inference-for-complexity-analysis"
    },
    {
      "Abstract": "We present an approach to support partiality in type-level computation without compromising expressiveness or type safety. Existing frameworks for type-level computation either require totality or implicitly assume it. For example, type families in Haskell provide a powerful, modular means of defining type-level computation. However, their current design implicitly assumes that type families are total, introducing nonsensical types and significantly complicating the metatheory of type families and their extensions. We propose an alternative design, using qualified types to pair type-level computations with predicates that capture their domains. Our approach naturally captures the intuitive partiality of type families, simplifying their metatheory. As evidence, we present the first complete proof of consistency for a language with closed type families.",
      "Affiliations": [
        "University of Kansas, USA",
        "Bryn Mawr College, USA"
      ],
      "AffiliationsString": "University of Kansas, USA, Bryn Mawr College, USA",
      "Authors": [
        "jgarrettmorris",
        "richardeisenberg"
      ],
      "Key": "icfp-2017-papers-constrained-type-families",
      "PersonsString": "J. Garrett Morris and Richard A. Eisenberg",
      "Title": "Constrained Type Families",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-constrained-type-families"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-sunday-lunch",
      "PersonsString": "",
      "Title": "Sunday lunch",
      "Type": "Lunch",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-sunday-lunch"
    },
    {
      "Abstract": "Coroutine pipelines provide an attractive structuring mechanism for complex programs that process streams of data, with the advantage over lazy streams that both ends of a pipeline may interact with the I/O system, as may processes in the middle. Two popular Haskell libraries, Pipes and Conduit, support such pipelines. In both libraries, pipelines are implemented in a direct style by combining a free monad of communication events with an interpreter for (pseudo-)parallel composition that interleaves the events of its argument processes. These implementations both suffer from a slow-down when processes are deeply nested in sequence or in parallel. We propose an alternative implementation of pipelines based on continuations that does not suffer from this slow-down. What is more, the implementation is significantly faster on small, communication-intensive examples even where they do not suffer from the slow-down, and faster even than comparable programs based on lazy streams. The continuation-based implementation may be derived from the direct-style implementation by algebraic reasoning.",
      "Affiliations": ["University of Oxford, UK"],
      "AffiliationsString": "University of Oxford, UK",
      "Authors": ["mikespivey"],
      "Key": "icfp-2017-papers-faster-coroutine-pipelines",
      "PersonsString": "Mike Spivey",
      "Title": "Faster Coroutine Pipelines",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-faster-coroutine-pipelines"
    },
    {
      "Abstract": "Differential privacy is a widely studied theory for analyzing sensitive data with a strong privacy guarantee\u2014any change in an individual's data can have only a small statistical effect on the result\u2014and a growing number of programming languages now support differentially private data analysis. A common shortcoming of these languages is poor support for \\emph{adaptivity}. In practice, a data analyst rarely wants to run just one function over a sensitive database, nor even a predetermined sequence of functions with fixed privacy parameters; rather, she wants to engage in an interaction where, at each step, both the choice of the next function and its privacy parameters are informed by the results of prior functions. Existing languages support this scenario using a {\\em simple composition theorem}, which often gives rather loose bounds on the actual privacy cost of composite functions, substantially reducing how much computation can be performed within a given privacy budget. The theory of differential privacy includes other theorems with much better bounds, but these have not yet been incorporated into programming languages. \nWe propose a novel framework for adaptive composition that is elegant, practical, and implementable. It consists of a reformulation based on typed functional programming of the {\\em privacy filters} of Rogers et al (2016), together with a concrete realization of this framework in the design and implementation of a new language, called {\\em Adaptive Fuzz}. Adaptive Fuzz transplants the core static type system of Fuzz to the adaptive setting by wrapping the Fuzz typechecker and runtime system in an outer {\\em adaptive layer}, allowing Fuzz programs to be conveniently constructed and typechecked on the fly. We describe an interpreter for Adaptive Fuzz and report results from two case studies demonstrating its effectiveness for implementing common statistical algorithms over real data sets.",
      "Affiliations": [
        "University of Pennsylvania, USA",
        "University of Pennsylvania, USA",
        "University of Pennsylvania, USA",
        "University of Pennsylvania"
      ],
      "AffiliationsString": "University of Pennsylvania, USA, University of Pennsylvania",
      "Authors": [
        "danielwinogradcort1",
        "andreashaeberlen",
        "aaronroth",
        "benjamincpierce"
      ],
      "Key": "icfp-2017-papers-a-framework-for-adaptive-differential-privacy",
      "PersonsString": "Daniel Winograd-Cort, Andreas Haeberlen, Aaron Roth and Benjamin C. Pierce",
      "Title": "A Framework for Adaptive Differential Privacy",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-a-framework-for-adaptive-differential-privacy"
    },
    {
      "Abstract": "How does one test a language implementation with QuickCheck (aka. property-based testing)? One approach is to generate programs following the grammar of the language. But in a statically-typed language such as OCaml too many of these candidate programs will be rejected as ill-typed by the type checker. As a refinement Pałka et al. propose to generate programs in a goal-directed, bottom-up reading up of the typing relation. We have written such a generator. However many of the generated programs has output that depend on the evaluation order, which is commonly under-specified in languages such as OCaml, Scheme, C, C++, etc. In this paper we develop a type and effect system for conservatively detecting evaluation-order dependence and propose its goal-directed reading as a generator of programs that are independent of evaluation order. We illustrate the approach by generating programs to test OCaml's two compiler backends against each other and report on a number of bugs we have found doing so.",
      "Affiliations": [
        "DTU, Denmark",
        "DTU, Denmark",
        "DTU, Denmark",
        "DTU, Denmark",
        "DTU, Denmark"
      ],
      "AffiliationsString": "DTU, Denmark",
      "Authors": [
        "janmidtgaard",
        "mathiasnygaardjustesen",
        "patrickkasting",
        "flemmingnielson",
        "hanneriisnielson"
      ],
      "Key": "icfp-2017-papers-effect-driven-quickchecking-of-compilers",
      "PersonsString": "Jan Midtgaard, Mathias Nygaard Justesen, Patrick Kasting, Flemming Nielson and Hanne Riis Nielson",
      "Title": "Effect-Driven QuickChecking of Compilers",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-effect-driven-quickchecking-of-compilers"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-saturday-coffee-break-1",
      "PersonsString": "",
      "Title": "Saturday coffee break 1",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-saturday-coffee-break-1"
    },
    {
      "Abstract": "Traversing and transforming abstract syntax trees that involve name binding is notoriously difficult to do in a correct, concise, modular, customizable manner. We address this problem in the setting of OCaml, a functional programming language equipped with powerful object-oriented features. We use visitor classes as partial, composable descriptions of the operations that we wish to perform on abstract syntax trees. We introduce \"visitors\", a simple type-directed facility for generating visitor classes that have no knowledge of binding. Separately, we present \"alphaLib\", a library of small hand-written visitor classes, each of which knows about a specific binding construct, a specific representation of names, and/or a specific operation on abstract syntax trees. By combining these components, a wide range of operations can be defined. Multiple representations of names can be supported, as well as conversions between representations. Binding structure can be described either in a programmatic style, by writing visitor methods, or in a declarative style, via preprogrammed binding combinators.",
      "Affiliations": ["Inria, France"],
      "AffiliationsString": "Inria, France",
      "Authors": ["francoispottier"],
      "Key": "icfp-2017-papers-visitors-unchained",
      "PersonsString": "François Pottier",
      "Title": "Visitors Unchained",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-visitors-unchained"
    },
    {
      "Abstract": "Generic programming libraries such as Scrap Your Boilerplate eliminate the need to write repetitive code, but typically introduce significant performance overheads. \nThis leaves programmers with the regrettable choice between writing succinct but slow programs and writing tedious but efficient programs. \nApplying structured multi-stage programming techniques transforms Scrap Your Boilerplate from an inefficient library into a typed optimising code generator, bringing its performance in line with hand-written code, and so combining high-level programming with uncompromised performance.",
      "Affiliations": ["University of Cambridge, UK"],
      "AffiliationsString": "University of Cambridge, UK",
      "Authors": ["jeremyyallop"],
      "Key": "icfp-2017-papers-staged-generic-programming",
      "PersonsString": "Jeremy Yallop",
      "Title": "Staged Generic Programming",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-staged-generic-programming"
    },
    {
      "Abstract": "Many languages use syntactic sugar to define parts of their surface language in terms of a smaller core. Thus some properties of the surface language, like its scoping rules, are not immediately evident. Nevertheless, IDEs, refactorers, and other tools that traffic in source code depend on these rules to present information to users and to soundly perform their operations. In this paper, we show how to lift scoping rules defined on a core language to rules on the surface, a process of scope inference. In the process we introduce a new representation of binding structure\u2014scope as a preorder\u2014and present a theoretical advance: proving that a desugaring system preserves α-equivalence even though scoping rules have been provided only for the core language. We have also implemented the system presented in this paper.",
      "Affiliations": [
        "Brown University, USA",
        "Brown University, USA",
        "Northeastern University, USA"
      ],
      "AffiliationsString": "Brown University, USA, Northeastern University, USA",
      "Authors": [
        "justinpombrio1",
        "shriramkrishnamurthi",
        "mitchellwand"
      ],
      "Key": "icfp-2017-papers-inferring-scope-through-syntactic-sugar",
      "PersonsString": "Justin Pombrio, Shriram Krishnamurthi and Mitchell Wand",
      "Title": "Inferring Scope through Syntactic Sugar",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-inferring-scope-through-syntactic-sugar"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-social-events-industry-reception",
      "PersonsString": "",
      "Title": "Industry Reception",
      "Type": "Social Event",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-social-events-industry-reception"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-saturday-coffee-break-2",
      "PersonsString": "",
      "Title": "Saturday coffee break 2",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-saturday-coffee-break-2"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-monday-coffee-break-3",
      "PersonsString": "",
      "Title": "Monday coffee break 3",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-monday-coffee-break-3"
    },
    {
      "Abstract": "Polymorphic type systems such as System F enjoy the parametricity property: polymorphic functions cannot inspect their type argument and will therefore apply the same algorithm to any type they are instantiated on. This idea is formalized mathematically in Reynolds's theory of relational parametricity, which allows the metatheoretical derivation of parametricity theorems about all values of a given type. Although predicative System F embeds into dependent type systems such as Martin-L&amp;quot;of Type Theory (MLTT), parametricity does not carry over as easily. The identity extension lemma, which is crucial if we want to prove theorems involving equality, has only been shown to hold for small types, excluding the universe. \nWe attribute this to the fact that MLTT uses a single type former $\\Pi$ to generalize both the parametric quantifier $\\forall$ and the type former $\\to$ which is non-parametric in the sense that its elements may use their argument as a value. We equip MLTT with parametric quantifiers $\\forall$ and $\\exists$ alongside the existing $\\Pi$ and $\\Sigma$, and provide relation type formers for proving parametricity theorems internally. We show internally the existence of initial algebras and final co-algebras of indexed functors both by Church encoding and, for a large class of functors, by using sized types. \nWe prove soundness of our type system by enhancing existing iterated reflexive graph (cubical set) models of dependently typed parametricity by distinguishing between edges that express relatedness of objects (bridges) and edges that express equality (paths). The parametric functions are those that map bridges to paths. \nWe implement an extension to the Agda proof assistant that type-checks proofs in our type system.",
      "Affiliations": [
        "KU Leuven, Belgium",
        "Chalmers University of Technology, Sweden",
        "KU Leuven, Belgium"
      ],
      "AffiliationsString": "KU Leuven, Belgium, Chalmers University of Technology, Sweden",
      "Authors": [
        "andreasnuyts",
        "andreavezzosi",
        "dominiquedevriese"
      ],
      "Key": "icfp-2017-papers-parametric-quantifiers-for-dependent-type-theory",
      "PersonsString": "Andreas Nuyts, Andrea Vezzosi and Dominique Devriese",
      "Title": "Parametric Quantifiers for Dependent Type Theory",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-parametric-quantifiers-for-dependent-type-theory"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-tuesday-lunch",
      "PersonsString": "",
      "Title": "Tuesday lunch",
      "Type": "Lunch",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-tuesday-lunch"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-monday-lunch",
      "PersonsString": "",
      "Title": "Monday lunch",
      "Type": "Lunch",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-monday-lunch"
    },
    {
      "Abstract": "It is well-known that the simply typed lambda-calculus is modeled by any cartesian closed category (CCC). This correspondence suggests giving typed functional programs a variety of interpretations, each corresponding to a different category. A convenient way to realize this idea is as a collection of meaning-preserving transformations added to an existing compiler, such as GHC for Haskell. This paper describes such an implementation and demonstrates its use for a variety of interpretations including hardware circuits, automatic differentiation, incremental computation, and interval analysis. Each such interpretation is a category easily defined in Haskell (outside of the compiler). The general technique appears to provide a compelling alternative to deeply embedded domain-specific languages.",
      "Affiliations": ["Target, USA"],
      "AffiliationsString": "Target, USA",
      "Authors": ["conalelliott"],
      "Key": "icfp-2017-papers-compiling-to-categories",
      "PersonsString": "Conal Elliott",
      "Title": "Compiling to Categories",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-compiling-to-categories"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-tuesday-coffee-break-1",
      "PersonsString": "",
      "Title": "Tuesday coffee break 1",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-tuesday-coffee-break-1"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-student-research-competition-student-research-competition-finalist-presentations",
      "PersonsString": "",
      "Title": "Student Research Competition: Finalist Presentations",
      "Type": "Awards",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-student-research-competition-student-research-competition-finalist-presentations"
    },
    {
      "Abstract": "",
      "Affiliations": [
        "Data61 at CSIRO, Australia / UNSW, Australia",
        "Data61 at CSIRO, Australia / Australian National University, Australia",
        "University of Kent, UK",
        "Chalmers University of Technology, Sweden"
      ],
      "AffiliationsString": "Data61 at CSIRO, Australia / UNSW, Australia, Data61 at CSIRO, Australia / Australian National University, Australia, University of Kent, UK, Chalmers University of Technology, Sweden",
      "Authors": [
        "ramanakumar",
        "michaelnorrish",
        "scottowens",
        "magnusomyreen"
      ],
      "Key": "icfp-2017-tutorials-tutorial-writing-verified-programs-in-cakeml",
      "PersonsString": "Ramana Kumar, Michael Norrish, Scott Owens and Magnus O. Myreen",
      "Title": "Tutorial T1: Writing Verified Programs in CakeML",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-tutorials-tutorial-writing-verified-programs-in-cakeml"
    },
    {
      "Abstract": "Many verification tools build on automated solvers. These tools reduce problems in a specific application domain (e.g., compiler optimization validation) to queries that can be discharged with a highly optimized solver. But the correctness of the reductions themselves is rarely verified in practice, limiting the confidence that the solver's output establishes the desired domain-level property. \nThis paper presents SpaceSearch, a new library for developing solver-aided tools within a proof assistant. A user builds their solver-aided tool in Coq against the SpaceSearch interface, and the user then verifies that the results provided by the interface are sufficient to establish the tool's desired high-level properties. Once verified, the tool can be extracted to an implementation in a solver-aided language (e.g., Rosette), where SpaceSearch provides an efficient instantiation of the SpaceSearch interface with calls to an underlying SMT solver. This combines the strong correctness guarantees of developing a tool in a proof assistant with the high performance of modern SMT solvers. This paper also introduces new optimizations for such verified solver-aided tools, including parallelization and incrementalization. \nWe evaluate SpaceSearch by building and verifying two solver-aided tools. The first, SaltShaker, checks that RockSalt's x86 semantics for a given instruction agrees with STOKE's x86 semantics. SaltShaker identified 7 bugs in RockSalt and 1 bug in STOKE. After these systems were patched by their developers, SaltShaker verified the semantics' agreement on 15,255 instruction instantiations in under 2h. The second tool, BGProof, is a verified version of an existing Border Gateway Protocol (BGP) router configuration checker. Like the existing checker, BGProof scales to checking industrial configurations spanning over 240 KLOC, identifying 19 configuration inconsistencies with no false positives. However, the correctness of BGProof has been formally proven, and we found 2 bugs in the unverified implementation. These results demonstrate that SpaceSearch is a practical approach to developing efficient, verified solver-aided tools.",
      "Affiliations": [
        "University of Washington, USA",
        "University of Washington, USA",
        "Stanford University, USA",
        "University of Washington, USA",
        "University of Washington, USA",
        "University of Washington, USA"
      ],
      "AffiliationsString": "University of Washington, USA, Stanford University, USA",
      "Authors": [
        "konstantinweitz",
        "stevenlyubomirsky",
        "stefanheule",
        "eminatorlak",
        "michaeldernst",
        "zacharytatlock"
      ],
      "Key": "icfp-2017-papers-spacesearch-a-library-for-building-and-verifying-solver-aided-tools",
      "PersonsString": "Konstantin Weitz, Steven Lyubomirsky, Stefan Heule, Emina Torlak, Michael D. Ernst and Zachary Tatlock",
      "Title": "SpaceSearch: A Library for Building and Verifying Solver-Aided Tools",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-spacesearch-a-library-for-building-and-verifying-solver-aided-tools"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-coffee-break",
      "PersonsString": "",
      "Title": "Monday coffee break 1",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-coffee-break"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-sunday-coffee-break-4",
      "PersonsString": "",
      "Title": "Sunday coffee break 4",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-sunday-coffee-break-4"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-sunday-coffee-break-2",
      "PersonsString": "",
      "Title": "Sunday coffee break 2",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-sunday-coffee-break-2"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-tuesday-coffee-break-2",
      "PersonsString": "",
      "Title": "Tuesday coffee break 2",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-tuesday-coffee-break-2"
    },
    {
      "Abstract": "This paper proposes a new specification of pretty printing which is stronger than the state of the art: we require the output to be the shortest possible, and we also offer the ability to align sub-documents at will. We argue that our specification precludes a greedy implementation. Yet, we provide an implementation which behaves linearly in the size of the output. The derivation of the implementation demonstrates functional programming methodology.",
      "Affiliations": ["University of Gothenburg"],
      "AffiliationsString": "University of Gothenburg",
      "Authors": ["jeanphilippebernardy"],
      "Key": "icfp-2017-papers-a-pretty-but-not-greedy-printer-functional-pearl-",
      "PersonsString": "Jean-Philippe Bernardy",
      "Title": "A Pretty But Not Greedy Printer (Functional Pearl)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-a-pretty-but-not-greedy-printer-functional-pearl-"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-thursday-coffee-break-3",
      "PersonsString": "",
      "Title": "Thursday coffee break 3",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-thursday-coffee-break-3"
    },
    {
      "Abstract": "We compare the expressive power of three programming abstractions for user-defined computational effects: Bauer and Pretnar's effect handlers, Filinski's monadic reflection, and delimited control without answer-type-modification. This comparison allows a precise discussion about the relative expressiveness of each programming abstraction. It also demonstrates the sensitivity of the relative expressiveness of user-defined effects to seemingly orthogonal language features. \nWe present three calculi, one per abstraction, extending Levy's call-by-push-value. For each calculus, we present syntax, operational semantics, a natural type-and-effect system, and, for effect handlers and monadic reflection, a set-theoretic denotational semantics. We establish their basic meta-theoretic properties: safety, termination, and, where applicable, soundness and adequacy. Using Felleisen's notion of a macro translation, we show that these abstractions can macro-express each other, and show which translations preserve typeability. We use the adequate finitary set-theoretic denotational semantics for the monadic calculus to show that effect handlers cannot be macro-expressed while preserving typeability either by monadic reflection or by delimited control. We supplement our development with a mechanised Abella formalisation.",
      "Affiliations": [
        "Saarland University, Germany / University of Cambridge, UK",
        "University of Oxford, UK / University of Cambridge, UK",
        "University of Edinburgh, UK",
        "University of Ljubljana, Slovenia"
      ],
      "AffiliationsString": "Saarland University, Germany / University of Cambridge, UK, University of Oxford, UK / University of Cambridge, UK, University of Edinburgh, UK, University of Ljubljana, Slovenia",
      "Authors": [
        "yannickforster",
        "ohadkammar",
        "samlindley",
        "matijapretnar"
      ],
      "Key": "icfp-2017-papers-on-the-expressive-power-of-user-defined-effects-effect-handlers-monadic-reflection-delimited-control",
      "PersonsString": "Yannick Forster, Ohad Kammar, Sam Lindley and Matija Pretnar",
      "Title": "On the Expressive Power of User-Defined Effects: Effect Handlers, Monadic Reflection, Delimited Control",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-on-the-expressive-power-of-user-defined-effects-effect-handlers-monadic-reflection-delimited-control"
    },
    {
      "Abstract": "Sized types have been developed to make termination checking more perspicuous, more powerful, and more modular by integrating termination into type checking. In dependently-typed proof assistants where proofs by induction are just recursive functional programs, the termination checker is an integral component of the trusted core, as validity of proofs depend on termination. However, a rigorous integration of full-fledged sized types into dependent type theory is lacking so far. Such an integration is non-trivial, as explicit sizes in proof terms might get in the way of equality checking, making terms appear distinct that should have the same semantics. \nIn this article, we integrate dependent types and sized types with higher-rank size polymorphism, which is essential for generic programming and abstraction. We introduce a size quantifier $\\forall$ which lets us ignore sizes in terms for equality checking, alongside with a second quantifier $\\Pi$ for abstracting over sizes that do affect the semantics of types and terms. Judgmental equality is decided by an adaptation of normalization-by-evaluation for our new type theory, which features \\emph{type shape}-directed reflection and reification. It follows that subtyping and type checking of normal forms are decidable as well, the latter by a bidirectional algorithm.",
      "Affiliations": [
        "University of Gothenburg, Sweden",
        "Chalmers University of Technology, Sweden",
        "ENS Paris-Saclay, France"
      ],
      "AffiliationsString": "University of Gothenburg, Sweden, Chalmers University of Technology, Sweden, ENS Paris-Saclay, France",
      "Authors": [
        "andreasabel",
        "andreavezzosi",
        "theowinterhalter"
      ],
      "Key": "icfp-2017-papers-normalization-by-evaluation-for-sized-dependent-types",
      "PersonsString": "Andreas Abel, Andrea Vezzosi and Theo Winterhalter",
      "Title": "Normalization by Evaluation for Sized Dependent Types",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-normalization-by-evaluation-for-sized-dependent-types"
    },
    {
      "Abstract": "Parallel programming, whether imperative or functional, has long focused on arrays as the central data type. Meanwhile, typed functional programming has explored a variety of data types, including lists and various forms of trees. Generic functional programming decomposes these data types into a small set of fundamental building blocks: sum, product, composition, and their associated identities. Definitions over these few fundamental type constructions then automatically assemble into algorithms for an infinite set of data types\u2014some familiar and some new. This paper presents generic functional formulations for two important and well-known classes of parallel algorithms: parallel scan (generalized prefix sum) and Fast Fourier Transform (FFT). Notably, arrays play no role in these formulations. Consequent benefits include a simpler and more compositional style, much use of common algebraic patterns\u2014such as Functor, Applicative, Foldable, and Traversable\u2014and freedom from possibility of run-time indexing errors. The functional generic style also clearly reveals deep commonality among what otherwise appears to be quite different algorithms. Instantiating the generic formulations to \"top-down\" and \"bottom-up\" trees as well as \"bushes\", two well-known algorithms for each of parallel scan and FFT naturally emerge, as well as two possibly new algorithms.",
      "Affiliations": ["Target, USA"],
      "AffiliationsString": "Target, USA",
      "Authors": ["conalelliott"],
      "Key": "icfp-2017-papers-generic-functional-parallel-algorithms-scan-and-fft",
      "PersonsString": "Conal Elliott",
      "Title": "Generic Functional Parallel Algorithms: Scan and FFT",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-generic-functional-parallel-algorithms-scan-and-fft"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-sunday-coffee-break-3",
      "PersonsString": "",
      "Title": "Sunday coffee break 3",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-sunday-coffee-break-3"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-saturday-coffee-break-4",
      "PersonsString": "",
      "Title": "Saturday coffee break 4",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-saturday-coffee-break-4"
    },
    {
      "Abstract": "",
      "Affiliations": ["University of Edinburgh, UK"],
      "AffiliationsString": "University of Edinburgh, UK",
      "Authors": ["samlindley"],
      "Key": "icfp-2017-keynote-talks-programming-contest-report",
      "PersonsString": "Sam Lindley",
      "Title": "Programming Contest Report",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-keynote-talks-programming-contest-report"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-saturday-lunch",
      "PersonsString": "",
      "Title": "Saturday lunch",
      "Type": "Lunch",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-saturday-lunch"
    },
    {
      "Abstract": "Description \nDuring the past five years, the Isabelle/HOL proof assistant has been extended with rich programming capabilities for finite and infinite (lazy) data structures \u2013 using the foundational approach characteristic of HOL provers. While the ICFP/POPL communities have been widely exposed to type-theoretic approaches embodied in Coq or Agda (including by means of tutorials), the HOL alternative also has interesting ideas, especially when it comes to (1) reaching a balance between guaranteed termination/productivity and expressiveness, (2) mixing recursion with corecursion soundly, and (3) obtaining compositional proof methods that match the program definitions. \nThe tutorial will target Isabelle novices. However, a strong background in functional programming will be assumed. The tutorial will focus on advanced functional programming techniques and the associated proof techniques offered by Isabelle/HOL. The basic concepts of the Isar proof language will be covered as well. \nThe tutorial will contain several hands-on exercises. We expect the attendants to bring laptops and have the latest version of Isabelle installed before the start of the tutorial. \nRough Schedule \n|\u2013|\u2013| |14:00-14:30|Isabelle/jEdit and Higher-Order Logic| |14:30-15:15|Datatypes and Recursion| |15:15-15:30|Codatatypes| |15:30-15:45|Break| |15:45-16:15|Primitive Corecursion| |16:15-17:00|Corecursion up to Friends| |17:00-17:15|Break| |17:15-17:45|Mixed Recursion/Corecursion|",
      "Affiliations": [
        "Vrije Universiteit Amsterdam",
        "",
        "Middlesex University, London",
        "ETH Zurich"
      ],
      "AffiliationsString": "Vrije Universiteit Amsterdam, , Middlesex University, London, ETH Zurich",
      "Authors": [
        "jasminblanchette",
        "andreaslochbihler",
        "andreipopescu",
        "dmitriytraytel"
      ],
      "Key": "icfp-2017-tutorials-tutorial-certified-functional-co-programming-with-isabelle-hol",
      "PersonsString": "Jasmin Blanchette, Andreas Lochbihler, Andrei Popescu and Dmitriy Traytel",
      "Title": "Tutorial T2: Certified Functional (Co)programming with Isabelle/HOL",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-tutorials-tutorial-certified-functional-co-programming-with-isabelle-hol"
    },
    {
      "Abstract": "The polymorphic blame calculus integrates static typing, including universal types, with dynamic typing. The primary challenge with this integration is preserving parametricity: even dynamically-typed code should satisfy it once it has been cast to a universal type. Ahmed et al. (2011) employ runtime type generation in the polymorphic blame calculus to preserve parametricity, but a proof that it does so has been elusive. Matthews and Ahmed (2008) gave a proof of parametricity for a closely related system that combines ML and Scheme, but later found a flaw in their proof. In this paper we present an improved version of the polymorphic blame calculus and we prove that it satisfies relational parametricity. The proof relies on a step-indexed Kripke logical relation. The step-indexing is required to make the logical relation well-defined in the case for the dynamic type. The possible worlds include the mapping of generated type names to their types and the mapping of type names to relations. We prove the Fundamental Property of this logical relation and that it is sound with respect to contextual equivalence. To demonstrate the utility of parametricity in the polymorphic blame calculus, we derive two free theorems.",
      "Affiliations": [
        "Northeastern University, USA",
        "Northeastern University, USA",
        "Indiana University, USA",
        "University of Edinburgh, UK"
      ],
      "AffiliationsString": "Northeastern University, USA, Indiana University, USA, University of Edinburgh, UK",
      "Authors": [
        "amalahmed",
        "dustinjamner",
        "jeremysiek",
        "philipwadler"
      ],
      "Key": "icfp-2017-papers-theorems-for-free-for-free-parametricity-with-and-without-types",
      "PersonsString": "Amal Ahmed, Dustin Jamner, Jeremy G. Siek and Philip Wadler",
      "Title": "Theorems for Free for Free: Parametricity, With and Without Types",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-theorems-for-free-for-free-parametricity-with-and-without-types"
    },
    {
      "Abstract": "Relaxed Radix Balanced Trees (RRB-Trees) is one of the latest members in a family of persistent tree based data-structures that combine wide branching factors with simple and relatively flat structures. Like the battle-tested immutable sequences of Clojure and Scala, they have effectively constant lookup and updates, good cache utilization, but also logarithmic concatenation and slicing. Our goal is to bring the benefits of persistent data structures to the discipline of systems programming via generic yet efficient immutable vectors supporting transient batch updates. We describe a C++ implementation that can be integrated in the runtime of higher level languages with a C core (Lisps like Guile or Racket, but also Python or Ruby), thus widening the access to these persistent data structures. \nIn this work we propose (1) an \\emph{Embedding RRB-Tree} (ERRB-Tree) data structure that efficiently stores arbitrary unboxed types, (2) a technique for implementing tree operations orthogonal to optimizations for a more compact representation of the tree, (3) a \\emph{policy-based} design to support multiple memory management and reclamation mechanisms (including automatic garbage collection and reference counting), (4) a model of \\emph{transience} based on move-semantics and reference counting, and (5) a definition of transience for confluent \\emph{meld} operations. Combining these techniques a performance comparable to that of mutable arrays can be achieved in many situations, while using the data structure in a functional way.",
      "Affiliations": ["Sinusoidal Engineering, n.n."],
      "AffiliationsString": "Sinusoidal Engineering, n.n.",
      "Authors": ["juanpedrobolivarpuente"],
      "Key": "icfp-2017-papers-persistence-for-the-masses-rrb-vectors-in-a-systems-language",
      "PersonsString": "Juan Pedro Bolívar Puente",
      "Title": "Persistence for the Masses: RRB-Vectors in a Systems Language",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-persistence-for-the-masses-rrb-vectors-in-a-systems-language"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-wednesday-coffee-break-2",
      "PersonsString": "",
      "Title": "Wednesday coffee break 2",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-wednesday-coffee-break-2"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-monday-coffee-break-2",
      "PersonsString": "",
      "Title": "Monday coffee break 2",
      "Type": "Coffee break",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-monday-coffee-break-2"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-catering-friday-lunch",
      "PersonsString": "",
      "Title": "Friday lunch",
      "Type": "Lunch",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-catering-friday-lunch"
    },
    {
      "Abstract": "In the Blackwell Hall of the Weston Library. Two of the galleries will also be open.",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-social-events-banquet",
      "PersonsString": "",
      "Title": "Banquet",
      "Type": "Social Event",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-social-events-banquet"
    },
    {
      "Abstract": "",
      "Affiliations": [],
      "AffiliationsString": "",
      "Authors": [],
      "Key": "icfp-2017-keynote-talks-monday-announcements",
      "PersonsString": "",
      "Title": "Monday Announcements",
      "Type": "Day closing",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-keynote-talks-monday-announcements"
    },
    {
      "Abstract": "Designing and prototyping new features is important in many industrial projects. Functional programming and formal verification tools can prove valuable for that purpose, but lead to challenges when integrating with existing product code or when planning technology transfer. \nThis article reports on our experience using the Coq proof assistant as a prototyping environment for building a query compiler intended for use in IBM's ODM Insights product. We discuss the pros and cons of using Coq for this purpose and describe our methodology for porting the compiler to Java, as required for product integration.",
      "Affiliations": [
        "IBM Research",
        "IBM Research",
        "IBM Research",
        "IBM Research",
        "IBM Research"
      ],
      "AffiliationsString": "IBM Research",
      "Authors": [
        "joshuaauerbach",
        "martinhirzel",
        "louismandel",
        "avrahamshinnar",
        "jeromesimeon"
      ],
      "Key": "icfp-2017-papers-prototyping-a-query-compiler-using-coq-experience-report-",
      "PersonsString": "Joshua Auerbach, Martin Hirzel, Louis Mandel, Avraham Shinnar and Jerome Simeon",
      "Title": "Prototyping a Query Compiler using Coq (Experience Report)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-prototyping-a-query-compiler-using-coq-experience-report-"
    },
    {
      "Abstract": "Software-defined radio (SDR) promises to bring the flexibility and rapid iterative workflow of software to radio protocol design. Many factors make achieving this promise challenging, not least of which are the high data rates and timing requirements of real-world radio protocols. The Ziria language and accompanying compiler demonstrated that a high-level language can compete in this demanding space, but extracting reusable lessons from this success is difficult due to Ziria's lack of a formal semantics. Our first contribution is a core language, operational semantics, and type system for Ziria. \nThe insight we gained through developing this operational semantics led to our second contribution, consisting of two program transformations. The first is fusion, which can eliminate intermediate queues in Ziria programs. Fusion subsumes many one-off optimizations performed by the original Ziria compiler. The second transformation is pipeline coalescing, which reduces execution overhead by batching IO. Pipeline coalescing relies critically on fusion and provides a much simpler story for the original Ziria compiler's \"vectorization\" transformation. These developments serve as the basis of our third contribution, a new compiler for Ziria that produces significantly faster code than the original compiler. The new compiler leverages our intermediate language to help eliminate unnecessary memory traffic. \nAs well as providing a firm foundation for the Ziria language, our work on an operational semantics resulted in very real software engineering benefits. These benefits need not be limited to SDR\u2014the core language and accompanying transformations we present are applicable to other domains that require processing streaming data at high speed.",
      "Affiliations": ["Drexel University, USA"],
      "AffiliationsString": "Drexel University, USA",
      "Authors": ["geoffreymainland"],
      "Key": "icfp-2017-papers-better-living-through-operational-semantics-an-optimizing-compiler-for-radio-protocols",
      "PersonsString": "Geoffrey Mainland",
      "Title": "Better Living through Operational Semantics: An Optimizing Compiler for Radio Protocols",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-better-living-through-operational-semantics-an-optimizing-compiler-for-radio-protocols"
    },
    {
      "Abstract": "Probabilistic programming systems make machine learning methods modular by automating \\emph{inference}. Recent work by Shan and Ramsey (2017) makes inference itself modular by automating the common component of \\emph{conditioning}. Their work introduces a symbolic program transformation that treats conditioning generally via the measure-theoretic notion of \\emph{disintegration}. This technique, however, is limited to conditioning a single scalar variable. As a step towards tackling realistic machine learning applications, we have extended the disintegration algorithm to symbolically condition arrays in probabilistic programs. The extended algorithm implements \\emph{lifted disintegration}, where repetition is treated symbolically and without unrolling loops. The technique uses a language of \\emph{index variables} for tracking expressions at various array levels. We find that the method works well for arbitrarily-sized arrays of independent random choices, with the conditioning step taking time linear in the number of indices needed to select an element.",
      "Affiliations": [
        "Indiana University, USA",
        "Indiana University, USA"
      ],
      "AffiliationsString": "Indiana University, USA",
      "Authors": [
        "praveennarayanan",
        "chungchiehshan"
      ],
      "Key": "icfp-2017-papers-symbolic-conditioning-of-arrays-in-probabilistic-programs",
      "PersonsString": "Praveen Narayanan and Chung-chieh Shan",
      "Title": "Symbolic Conditioning of Arrays in Probabilistic Programs",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-symbolic-conditioning-of-arrays-in-probabilistic-programs"
    },
    {
      "Abstract": "Many types of interactive applications, including video games, raise particular challenges when it comes to testing and debugging. Reasons include de-facto lack of reproducibility and difficulties of automatically generating suitable test data. This paper demonstrates that certain variants of Functional Reactive Programming (FRP) implemented in pure functional languages can mitigate such difficulties by offering referential transparency at the level of whole programs. This opens up for a multi-pronged approach for assisting with testing and debugging that works across platforms, including assertions based on temporal logic, recording and replaying of runs (also from deployed code), and automated random testing using QuickCheck. The approach has been validated on real, non-trivial games implemented in the FRP system Yampa through a tool providing a convenient Graphical User Interface that allows the execution of the code under scrutiny to be controlled, moving along the execution time line, and pin-pointing of violations of assertions on PCs as well as mobile platforms.",
      "Affiliations": [
        "University of Nottingham, UK",
        "University of Nottingham, UK"
      ],
      "AffiliationsString": "University of Nottingham, UK",
      "Authors": [
        "ivanperez",
        "henriknilsson"
      ],
      "Key": "icfp-2017-papers-testing-and-debugging-functional-reactive-programming",
      "PersonsString": "Ivan Perez and Henrik Nilsson",
      "Title": "Testing and Debugging Functional Reactive Programming",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-testing-and-debugging-functional-reactive-programming"
    },
    {
      "Abstract": "The Racket doctrine tells developers to narrow the gap between the terminology of a problem domain and general programming constructs by creating languages instead of just plain programs. This pearl illustrates this point with the creation of a relatively simple domain-specific language for editing videos. To produce the video proceedings of a conference, for example, video professionals traditionally use \"non-linear\" GUI editors to manually edit each talk, despite the repetitive nature of the process. As it turns out, video editing naturally splits the work into a declarative phase and an imperative rendering phase at the end. Hence it is natural to create a functional-declarative language for the first phase, which reduces a lot of manual labor. This user-facing DSL utilizes a second, internal DSL to implement the second phase, which is an interface to a general, low-level C library. Finally, we inject type checking into our language via another DSL that supports programming in the language of type formalisms. In short, the development of the video editing language cleanly demonstrates how the Racket doctrine naturally leads to the creation of language hierarchies, analogous to the hierarchies of modules found in conventional functional languages.",
      "Affiliations": [
        "Northeastern University, USA",
        "Northeastern University, USA",
        "Igalia, n.n.",
        "Northeastern University, USA"
      ],
      "AffiliationsString": "Northeastern University, USA, Igalia, n.n.",
      "Authors": [
        "leifandersen",
        "stephenchang",
        "asumutakikawa",
        "matthiasfelleisen"
      ],
      "Key": "icfp-2017-papers-super-8-the-story-of-making-movies-a-functional-pearl",
      "PersonsString": "Leif Andersen, Stephen Chang, Asumu Takikawa and Matthias Felleisen",
      "Title": "Super 8 Languages for Making Movies (Functional Pearl)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-super-8-the-story-of-making-movies-a-functional-pearl"
    },
    {
      "Abstract": "This article describes the key innovations used in the massive open online course ``Introduction to Functional Programming using OCaml'' that has run since the fall semester of 2015. A fully in-browser development environment with an integrated grader provides an exceptional level of feedback to the learners. A functional library of grading combinators greatly simplifies the notoriously complex task of writing test suites for the exercises, and provides static type-safety guarantees on the tested user code. Even the error-prone manual process of importing the course content in the learning platform has been replaced by a functional program that describes the course and statically checks its contents. A detailed statistical analysis of the data collected during and after the course assesses the effectiveness of these innovations.",
      "Affiliations": [
        "OCamlPro, n.n.",
        "Inria, France / University of Paris Diderot, France",
        "OCamlPro, n.n."
      ],
      "AffiliationsString": "OCamlPro, n.n., Inria, France / University of Paris Diderot, France",
      "Authors": [
        "benjamincanou",
        "robertodicosmo",
        "gregoirehenry"
      ],
      "Key": "icfp-2017-papers-scaling-up-functional-programming-education-under-the-hood-of-the-ocaml-mooc",
      "PersonsString": "Benjamin Canou, Roberto Di Cosmo and Grégoire Henry",
      "Title": "Scaling up Functional Programming Education: Under the Hood of the OCaml MOOC",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-scaling-up-functional-programming-education-under-the-hood-of-the-ocaml-mooc"
    },
    {
      "Abstract": "Implementing multi-player networked games by broadcasting the player\u2019s input and letting each client calculate the game state \u2013 a scheme known as lock-step simulation \u2013 is an established technique. However, ensuring that every client in this scheme obtains a consistent state is infamously hard and in general requires great discipline from the game programmer. The thesis of this pearl is that in the realm of functional programming \u2013 in particular with Haskell's purity and static pointers \u2013 this hard problem becomes almost trivially easy. \nWe support this thesis by implementing lock-step simulation under very adverse conditions. We extended the educational programming environment CodeWorld, which is used to teach math and programming to middle school students, with the ability to create and run interactive, networked multi-user games. Despite providing a very abstract and high-level interface, and without requiring any discipline from the programmer, we can provide consistent lock-step simulation with client prediction.",
      "Affiliations": [
        "University of Pennsylvania",
        "Google, USA"
      ],
      "AffiliationsString": "University of Pennsylvania, Google, USA",
      "Authors": [
        "joachimbreitner",
        "chrissmith"
      ],
      "Key": "icfp-2017-papers-lock-step-simulation-is-child-s-play",
      "PersonsString": "Joachim Breitner and Chris Smith",
      "Title": "Lock-Step Simulation Is Child's Play (Experience Report)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-lock-step-simulation-is-child-s-play"
    },
    {
      "Abstract": "Domain-specific languages are the ultimate abstraction, dixit Paul Hudak. But what abstraction should we use to build such ultimate abstractions? What is sauce for the goose is sauce for the gander: a language, of course! \nRacket is the ultimate abstraction-abstraction, a platform for quickly and easily building new ultimate abstractions. This pearl demonstrates Racket's power by taking a leisurely walk through the implementation of a DSL for Lindenmayer systems, the computational model par excellence of theoretical botany.",
      "Affiliations": [
        "Northwestern University, USA",
        "Northwestern University, USA",
        "Northwestern University, USA",
        "Northwestern University, USA",
        "Northwestern University, USA"
      ],
      "AffiliationsString": "Northwestern University, USA",
      "Authors": [
        "vincentstamour",
        "danielfeltey",
        "spencerpflorence",
        "shuhungyou",
        "robbyfindler"
      ],
      "Key": "icfp-2017-papers-herbarium-racketensis-a-stroll-through-the-woods-functional-pearl-",
      "PersonsString": "Vincent St-Amour, Daniel Feltey, Spencer P. Florence, Shu-Hung You and Robert Bruce Findler",
      "Title": "Herbarium Racketensis: A Stroll through the Woods (Functional Pearl)",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-herbarium-racketensis-a-stroll-through-the-woods-functional-pearl-"
    },
    {
      "Abstract": "We present a general methodology of proving decidability of equational theory of programming language concepts in the framework of second-order algebraic theories of Fiore, Hur and Mahmoud. We propose a Haskell-based analysis tool \\SOL, Second-Order Laboratory, which assists the proofs of confluence and strong normalisation of computation rules derived from second-order algebraic theories. \nTo cover various examples in programming language theory, we combine and extend both syntactical and semantical results of second-order computation in non-trivial manner. In particular, our choice of Yokoyama's deterministic second-order patters as a syntactic construct of rules is important to cover a wide range of examples, such as Hasegawa's linear \\lmd-calculus. We demonstrate how to prove decidability of various algebraic theories in the literature. It includes the equational theories of monad and computational \\lmd-calculi, Staton's theory of reading and writing bits, Plotkin and Power's theory of states, and Stark's theory of \\pi-calculus.",
      "Affiliations": ["Gunma University, Japan"],
      "AffiliationsString": "Gunma University, Japan",
      "Authors": ["makotohamana"],
      "Key": "icfp-2017-papers-how-to-prove-your-calculus-is-decidable-practical-applications-of-second-order-algebraic-theories-and-computation",
      "PersonsString": "Makoto Hamana",
      "Title": "How to Prove Your Calculus Is Decidable: Practical Applications of Second-Order Algebraic Theories and Computation",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-how-to-prove-your-calculus-is-decidable-practical-applications-of-second-order-algebraic-theories-and-computation"
    },
    {
      "Abstract": "We present a call-by-need strategy for computing strong normal forms of open terms (reduction is admitted inside the body of abstractions and substitutions, and the terms may contain free variables), which guarantees that arguments are only evaluated when needed and at most once. The strategy is shown to be complete with respect to $\\beta$-reduction to strong normal form. The proof of completeness relies on two key tools: (1) the definition of a strong call-by-need calculus where reduction may be performed inside any context, and (2) the use of non-idempotent intersection types. More precisely, terms admitting a $\\beta$-normal form in pure lambda calculus are typable, typability implies (weak) normalisation in the strong call-by-need calculus, and weak normalisation in the strong call-by-need calculus implies normalisation in the strong call-by-need strategy. Our (strong) call-by-need strategy is also shown to be conservative over the standard (weak) call-by-need.",
      "Affiliations": [
        "LRI, France / University of Paris-Sud, France",
        "University of Buenos Aires, Argentina / IRIF, France / University of Paris Diderot, France",
        "CONICET, Argentina / Universidad Nacional de Quilmes, Argentina",
        "IRIF, France / University of Paris Diderot, France"
      ],
      "AffiliationsString": "LRI, France / University of Paris-Sud, France, University of Buenos Aires, Argentina / IRIF, France / University of Paris Diderot, France, CONICET, Argentina / Universidad Nacional de Quilmes, Argentina, IRIF, France / University of Paris Diderot, France",
      "Authors": [
        "thibautbalabonski",
        "pablobarenbaum",
        "eduardobonelli",
        "deliakesner"
      ],
      "Key": "icfp-2017-papers-foundations-of-strong-call-by-need",
      "PersonsString": "Thibaut Balabonski, Pablo Barenbaum, Eduardo Bonelli and Delia Kesner",
      "Title": "Foundations of Strong Call by Need",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-foundations-of-strong-call-by-need"
    },
    {
      "Abstract": "Algorithms that convert direct-style lambda-calculus terms to their equivalent terms in continuation-passing style (CPS) typically introduce so-called \u201cadministrative redexes:\u201d useless artifacts of the conversion that must be cleaned up by a subsequent pass over the result to reduce them away. We present a simple, linear-time algorithm for CPS conversion that introduces no administrative redexes. In fact, the output term is a normal form in a reduction system that generalizes the notion of \u201cadministrative redexes\u201d to what we call \u201cno-brainer redexes,\u201d that is, redexes whose reduction shrinks the size of the term. We state the theorems which establish the algorithm's desireable properties, along with sketches of the full proofs.",
      "Affiliations": [
        "Northeastern University, USA",
        "Northeastern University, USA",
        "Northeastern University, USA"
      ],
      "AffiliationsString": "Northeastern University, USA",
      "Authors": [
        "milodavis",
        "williammeehan",
        "olinshivers"
      ],
      "Key": "icfp-2017-papers-no-brainer-cps-conversion",
      "PersonsString": "Milo Davis, William Meehan and Olin Shivers",
      "Title": "No-Brainer CPS Conversion",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-no-brainer-cps-conversion"
    },
    {
      "Abstract": "Relational program verification is a variant of program verification where one can reason about two programs and as a special case about two executions of a single program on different inputs. Relational program verification can be used for reasoning about a broad range of properties, including equivalence and refinement, and specialized notions such as continuity, information flow security or relative cost. In a higher-order setting, relational program verification can be achieved using relational refinement type systems, a form of refinement types where assertions have a relational interpretation. Relational refinement type systems excel at relating structurally equivalent terms but provide limited support for relating terms with very different structures. \nWe present a logic, called Relational Higher Order Logic (RHOL), for proving relational properties of a simply typed $\\lambda$-calculus with inductive types and recursive definitions. RHOL retains the type-directed flavour of relational refinement type systems but achieves greater expressivity through rules which simultaneously reason about the two terms as well as rules which only contemplate one of the two terms. We show that RHOL has strong foundations, by proving an equivalence with higher-order logic (HOL), and leverage this equivalence to derive key meta-theoretical properties: subject reduction, admissibility of a transitivity rule and set-theoretical soundness. Moreover, we define sound embeddings for several existing relational type systems such as relational refinement types and type systems for dependency analysis and relative cost, and we verify examples that were out of reach of prior work.",
      "Affiliations": [
        "IMDEA Software Institute, Spain",
        "IMDEA Software Institute, Spain",
        "University at Buffalo, SUNY, USA",
        "MPI-SWS, Germany",
        "École Polytechnique, n.n."
      ],
      "AffiliationsString": "IMDEA Software Institute, Spain, University at Buffalo, SUNY, USA, MPI-SWS, Germany, École Polytechnique, n.n.",
      "Authors": [
        "alejandroaguirre",
        "gillesbarthe",
        "marcogaboardi",
        "deepakgarg",
        "pierreyvesstrub"
      ],
      "Key": "icfp-2017-papers-a-relational-logic-for-higher-order-programs",
      "PersonsString": "Alejandro Aguirre, Gilles Barthe, Marco Gaboardi, Deepak Garg and Pierre-Yves Strub",
      "Title": "A Relational Logic for Higher-Order Programs",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-a-relational-logic-for-higher-order-programs"
    },
    {
      "Abstract": "Session types are a rich type discipline, based on linear types, that lift the sort of safety claims that come with type systems to communications. However, web-based applications and micro services are often written in a mix of languages, with type disciplines in a spectrum between static and dynamic typing. Gradual session types address this mixed setting by providing a framework which grants seamless transition between statically typed handling of sessions and any required degree of dynamic typing. \nWe propose GradualGV as an extension of the functional session type system GV with dynamic types and casts. We demonstrate type and communication safety as well as blame safety, thus extending previous results to functional languages with session-based communication. The interplay of linearity and dynamic types requires a novel approach to specifying the dynamics of the language.",
      "Affiliations": [
        "Kyoto University, Japan",
        "University of Freiburg, Germany",
        "University of Lisbon, Portugal",
        "University of Edinburgh, UK"
      ],
      "AffiliationsString": "Kyoto University, Japan, University of Freiburg, Germany, University of Lisbon, Portugal, University of Edinburgh, UK",
      "Authors": [
        "atsushiigarashi",
        "peterthiemann",
        "vascovasconcelos",
        "philipwadler"
      ],
      "Key": "icfp-2017-papers-gradual-session-types",
      "PersonsString": "Atsushi Igarashi, Peter Thiemann, Vasco Vasconcelos and Philip Wadler",
      "Title": "Gradual Session Types",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-gradual-session-types"
    },
    {
      "Abstract": "We present Low*, a language for low-level programming and verification, and its application to high-assurance optimized cryptographic libraries. Low* is a shallow embedding of a small, sequential, well-behaved subset of C in F*, a dependently- typed variant of ML aimed at program verification. Departing from ML, Low* does not involve any garbage collection or implicit heap allocation; instead, it has a structured memory model à la CompCert, and it provides the control required for writing efficient low-level security-critical code. \nBy virtue of typing, any Low* program is memory safe. In addition, the programmer can make full use of the verification power of F* to write high-level specifications and verify the functional correctness of Low* code using a combination of SMT automation and sophisticated manual proofs. At extraction time, specifications and proofs are erased, and the remaining code enjoys a predictable translation to C. We prove that this translation preserves semantics and side-channel resistance. \nWe provide a new compiler back-end from Low* to C and, to evaluate our approach, we implement and verify various cryptographic algorithms, constructions, and tools for a total of about 28,000 lines of code. We show that our Low* code delivers performance competitive with existing (unverified) C cryptographic libraries, suggesting our approach may be applicable to larger-scale low-level software.",
      "Affiliations": [
        "Microsoft Research, n.n.",
        "Inria, France",
        "Microsoft Research",
        "Microsoft Research, n.n.",
        "Massachusetts Institute of Technology, USA",
        "Microsoft Research, n.n.",
        "Microsoft Research, n.n.",
        "Inria Paris",
        "Inria, France",
        "Microsoft Research, n.n.",
        "Microsoft Research, n.n."
      ],
      "AffiliationsString": "Microsoft Research, n.n., Inria, France, Microsoft Research, Massachusetts Institute of Technology, USA, Inria Paris",
      "Authors": [
        "jonathanprotzenko",
        "jeankarimzinzindohoue",
        "aseemrastogi",
        "tahinaramananandro",
        "pengwang",
        "santiagozanellabeguelin",
        "antoinedelignatlavaud",
        "catalinhritcu",
        "karthikeyanbhargavan",
        "cedricfournet",
        "nikhilswamy"
      ],
      "Key": "icfp-2017-papers-verified-low-level-programming-embedded-in-f-",
      "PersonsString": "Jonathan Protzenko, Jean-Karim Zinzindohoué, Aseem Rastogi, Tahina Ramananandro, Peng Wang, Santiago Zanella-Béguelin, Antoine Delignat-Lavaud, Cătălin Hriţcu, Karthikeyan Bhargavan, Cédric Fournet and Nikhil Swamy",
      "Title": "Verified Low-Level Programming Embedded in F*",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-papers-verified-low-level-programming-embedded-in-f-"
    },
    {
      "Abstract": "",
      "Affiliations": ["Portland State University"],
      "AffiliationsString": "Portland State University",
      "Authors": ["markjones"],
      "Key": "icfp-2017-keynote-talks-program-chair-report",
      "PersonsString": "Mark Jones",
      "Title": "Program Chair's Report",
      "Type": "Talk",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-keynote-talks-program-chair-report"
    },
    {
      "Abstract": "",
      "Affiliations": ["University College London"],
      "AffiliationsString": "University College London",
      "Authors": ["ilyasergey"],
      "Key": "icfp-2017-student-research-competition-student-research-competition-awards",
      "PersonsString": "Ilya Sergey",
      "Title": "Student Research Competition Awards",
      "Type": "Awards",
      "URL": "http://icfp17.sigplan.org/event/icfp-2017-student-research-competition-student-research-competition-awards"
    }
  ],
  "Name": "ICFP 2017",
  "People": [
    {
      "Affiliation": "P.C.K.",
      "Key": "annabelsatin",
      "Name": "Annabel Satin",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/annabelsatin/5e2fc743-bd68-4432-86af-99b4a6b6bf60/small.jpg"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Bio": "I am a 2nd year PhD student at the University of Washington.",
      "Key": "jaredroesch",
      "Name": "Jared Roesch",
      "URL": "http://jroesch.github.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jaredroesch/8e584c15-d323-48f2-b76b-1700a77ed0ea/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University, USA",
      "Key": "jeremyavigad",
      "Name": "Jeremy Avigad",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jeremyavigad/3fa6e3f3-b3dd-49e8-b523-55baaf93d99b/small.jpg"
    },
    {
      "Affiliation": "University of Utah, USA",
      "Key": "thomasgilray",
      "Name": "Thomas Gilray"
    },
    {
      "Affiliation": "Cognitect",
      "Key": "richhickey",
      "Name": "Rich Hickey",
      "URL": "https://clojure.org/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/richhickey/424f589b-c695-40d9-b221-72c292271839/small.jpg"
    },
    {
      "Affiliation": "Utrecht University",
      "Key": "jurriaanhage",
      "Name": "Jurriaan Hage"
    },
    {
      "Affiliation": "Northwestern University, USA",
      "Key": "shuhungyou",
      "Name": "Shu-Hung You"
    },
    {
      "Affiliation": "",
      "Key": "willclinger",
      "Name": "Will Clinger",
      "URL": "http://www.cesura17.net/~will/Professional/"
    },
    {
      "Affiliation": "",
      "Key": "ryanyates",
      "Name": "Ryan Yates"
    },
    {
      "Affiliation": "",
      "Key": "ryotasuzuki",
      "Name": "Ryota Suzuki"
    },
    {
      "Affiliation": "",
      "Key": "alanzimmerman",
      "Name": "Alan Zimmerman"
    },
    {
      "Affiliation": "Universidad Politécnica de Madrid",
      "Key": "clarabenacearle",
      "Name": "Clara Benac Earle",
      "URL": "http://babel.ls.fi.upm.es/~cbenac/"
    },
    {
      "Affiliation": "",
      "Key": "elibarzilay",
      "Name": "Eli Barzilay"
    },
    {
      "Affiliation": "Appalachian State University",
      "Key": "patriciapatriciajohann",
      "Name": "Patricia Johann",
      "URL": "http://www.cs.appstate.edu/~johannp/"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Key": "stevenlyubomirsky",
      "Name": "Steven Lyubomirsky",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/stevenlyubomirsky/6aa6a84a-4694-41d2-a0d1-d11105ad687c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "kostissagonas",
      "Name": "Kostis Sagonas"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "francoispottier",
      "Name": "François Pottier",
      "URL": "http://gallium.inria.fr/~fpottier/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/francoispottier/8f390103-6b3f-4cf0-8bf9-891b0596b9b7/small.jpg"
    },
    {
      "Affiliation": "Kyoto University",
      "Key": "yosukefukuda",
      "Name": "Yosuke Fukuda"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "joshuaauerbach",
      "Name": "Joshua Auerbach",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-josh"
    },
    {
      "Affiliation": "",
      "Key": "antalspectorzabusky",
      "Name": "Antal Spector-Zabusky"
    },
    {
      "Affiliation": "Kyoto University",
      "Key": "yuukinishida",
      "Name": "Yuki Nishida"
    },
    {
      "Affiliation": "",
      "Key": "manuelchakravarty",
      "Name": "Manuel Chakravarty"
    },
    {
      "Affiliation": "IIT Hyderabad",
      "Key": "siddharthbhat",
      "Name": "Siddharth Bhat"
    },
    {
      "Affiliation": "Well-Typed LLP",
      "Key": "andresloh",
      "Name": "Andres Löh"
    },
    {
      "Affiliation": "University of Utrecht",
      "Key": "victorcacciarimiraldo",
      "Name": "Victor Cacciari Miraldo"
    },
    {
      "Affiliation": "The University of Tokyo",
      "Key": "kenjirotaura",
      "Name": "Kenjiro Taura"
    },
    {
      "Affiliation": "uSwitch",
      "Bio": "Renzo Borgatti is a software engineer. He used a variety of languages throughout his career and got interested in Clojure around 2010. He\u2019s author of \u201cClojure Standard Library, Annotated Reference\u201d book by Manning and the \u201cClojure Pills\u201d screencasts on YouTube. He currently works for uSwitch, an online comparison service company based in London.",
      "Key": "renzoborgatti",
      "Name": "Renzo Borgatti",
      "URL": "http://reborg.net",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/renzoborgatti/333eae8a-f4f0-4a56-b488-059c9f7bcc5c/small.jpg"
    },
    {
      "Affiliation": "University of Wrocław",
      "Key": "maciejpirog",
      "Name": "Maciej Piróg",
      "URL": "http://www.ii.uni.wroc.pl/~mpirog/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/maciejpirog/6d35caec-bf73-4a63-b16b-9ee7f05d2a71/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Key": "andrewkennedy",
      "Name": "Andrew Kennedy",
      "URL": "http://research.microsoft.com/~akenn"
    },
    {
      "Affiliation": "Harvard University, USA",
      "Key": "lucaswaye",
      "Name": "Lucas Waye",
      "URL": "http://lucaswaye.com",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/lucaswaye/2539423d-555a-4f61-aa6d-7bd3b7ea33ab/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "tadeuszlitak",
      "Name": "Tadeusz Litak"
    },
    {
      "Affiliation": "",
      "Key": "marksantolucito",
      "Name": "Mark Santolucito",
      "URL": "http://marksantolucito.com/"
    },
    {
      "Affiliation": "MSRIT",
      "Key": "arvindhudli",
      "Name": "Arvind Hudli"
    },
    {
      "Affiliation": "ENS Paris-Saclay, France",
      "Key": "theowinterhalter",
      "Name": "Theo Winterhalter"
    },
    {
      "Affiliation": "Australian National University",
      "Key": "andrewsorensen",
      "Name": "Andrew Sorensen"
    },
    {
      "Affiliation": "DTU, Denmark",
      "Key": "mathiasnygaardjustesen",
      "Name": "Mathias Nygaard Justesen"
    },
    {
      "Affiliation": "",
      "Key": "adambarwell",
      "Name": "Adam Barwell"
    },
    {
      "Affiliation": "CEA",
      "Key": "francoisbobot",
      "Name": "François Bobot",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/francoisbobot/c6483650-f718-485a-bf58-bf7dc0285bf1/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "kanaetsushima",
      "Name": "Kanae Tsushima"
    },
    {
      "Affiliation": "University of Oxford",
      "Key": "samstaton",
      "Name": "Sam Staton",
      "URL": "http://www.cs.ox.ac.uk/people/samuel.staton/main.html"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "stephenchang",
      "Name": "Stephen Chang",
      "URL": "http://www.ccs.neu.edu/home/stchang/"
    },
    {
      "Affiliation": "",
      "Key": "jeansimonlemay",
      "Name": "Jean-Simon Lemay"
    },
    {
      "Affiliation": "Indiana University",
      "Key": "chaohongchen",
      "Name": "Chao-Hong Chen"
    },
    {
      "Affiliation": "KU Leuven, Belgium",
      "Key": "dominiquedevriese",
      "Name": "Dominique Devriese",
      "URL": "https://distrinet.cs.kuleuven.be/people/dominiqu",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/dominiquedevriese/08b1fc2d-d157-4905-9c9a-e1ff279ab345/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "philipsaville",
      "Name": "Philip Saville"
    },
    {
      "Affiliation": "TestingPays",
      "Key": "matemarjai",
      "Name": "Máté Marjai"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Key": "samlindley",
      "Name": "Sam Lindley",
      "URL": "http://homepages.inf.ed.ac.uk/slindley",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/samlindley/144f1f69-c839-48e3-8ba4-58a84018aa48/small.jpg"
    },
    {
      "Affiliation": "Jane Street",
      "Key": "daniellesucher",
      "Name": "Danielle Sucher"
    },
    {
      "Affiliation": "Google",
      "Key": "andreasrossberg",
      "Name": "Andreas Rossberg",
      "URL": "http://www.mpi-sws.org/~rossberg/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/andreasrossberg/c6329233-e420-4a58-9b0f-f6619c045332/small.jpg"
    },
    {
      "Affiliation": "University of Buenos Aires, Argentina / IRIF, France / University of Paris Diderot, France",
      "Key": "pablobarenbaum",
      "Name": "Pablo Barenbaum"
    },
    {
      "Affiliation": "Middlesex University, London",
      "Key": "andreipopescu",
      "Name": "Andrei Popescu"
    },
    {
      "Affiliation": "Carnegie Mellon University, USA",
      "Key": "yongkiamtan",
      "Name": "Yong Kiam Tan"
    },
    {
      "Affiliation": "",
      "Key": "colinriba",
      "Name": "Colin Riba"
    },
    {
      "Affiliation": "Microsoft Research",
      "Key": "aseemrastogi",
      "Name": "Aseem Rastogi",
      "URL": "https://www.microsoft.com/en-us/research/people/aseemr/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/aseemrastogi/60be692f-f2e1-4eef-ac4a-85f7accdba8e/small.jpg"
    },
    {
      "Affiliation": "National Institute of Informatics",
      "Key": "zhenjianghu",
      "Name": "Zhenjiang Hu",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/zhenjianghu/5d426480-5589-46be-b4f6-f98cf2acc80e/small.jpg"
    },
    {
      "Affiliation": "MIT CSAIL",
      "Key": "jasongross",
      "Name": "Jason Gross",
      "URL": "http://people.csail.mit.edu/jgross/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jasongross/843fef12-8285-477f-99de-cb3e7562c2f9/small.jpg"
    },
    {
      "Affiliation": "KU Leuven, Belgium",
      "Key": "georgioskarachalias",
      "Name": "Georgios Karachalias",
      "URL": "https://people.cs.kuleuven.be/~george.karachalias/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/georgioskarachalias/9c1b0241-f5b5-4ba8-a47d-32602670eb28/small.jpg"
    },
    {
      "Affiliation": "Igalia, S.L.",
      "Key": "andywingo",
      "Name": "Andy Wingo"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology, USA",
      "Key": "joonwonchoi",
      "Name": "Joonwon Choi",
      "URL": "http://joonwon.net/c",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/joonwonchoi/e47297a8-182a-4ed5-99ab-0c070f982299/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "dustinrhodes",
      "Name": "Dustin Rhodes"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "leifandersen",
      "Name": "Leif Andersen",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/leifandersen/022e7f05-2a9a-4e3d-8be9-418b798e00c0/small.jpg"
    },
    {
      "Affiliation": "University of New South Wales",
      "Bio": "Liam is a PhD student at UNSW Australia working on Trustworthy Systems projects with Data61 at CSIRO (formerly known as NICTA). His PhD work focuses on the use of linear typed languages to provide easy-to-reason-about semantics for formal verification of operating system components. More broadly, his research interests include automated proof and reasoning, particularly in the context of dependently typed programming languages, type inference, static analysis, and concurrency.",
      "Key": "liamoconnor",
      "Name": "Liam O'Connor",
      "URL": "http://liamoc.net",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/liamoconnor/62bc9dba-ffaf-41b7-94db-85d112d608ea/small.jpg"
    },
    {
      "Affiliation": "KU Leuven",
      "Key": "tomschrijvers",
      "Name": "Tom Schrijvers",
      "URL": "http://people.cs.kuleuven.be/~tom.schrijvers",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/tomschrijvers/dd5db9f4-87bc-4ff3-a091-a5c076b925fb/small.jpg"
    },
    {
      "Affiliation": "Data61 at CSIRO, Australia / UNSW, Australia",
      "Key": "ramanakumar",
      "Name": "Ramana Kumar",
      "URL": "http://ts.data61.csiro.au/people/?cn=Ramana+Kumar",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ramanakumar/bb13afb4-b983-48aa-bd31-bcbf597a4ad3/small.jpg"
    },
    {
      "Affiliation": "LINA, UMR 6241, Université de Nantes",
      "Key": "charlottetruchet",
      "Name": "Charlotte Truchet",
      "URL": "https://www.normalesup.org/~truchet/"
    },
    {
      "Affiliation": "CONICET, Argentina / Universidad Nacional de Quilmes, Argentina",
      "Key": "eduardobonelli",
      "Name": "Eduardo Bonelli"
    },
    {
      "Affiliation": "IRCAM",
      "Key": "jeanlouisgiavitto",
      "Name": "Jean-Louis Giavitto",
      "URL": "http://repmus.ircam.fr/giavitto",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jeanlouisgiavitto/b852bb50-151a-4b16-9fc3-2a5ad9a503a2/small.jpg"
    },
    {
      "Affiliation": "LIP6-UPMC/INRIA Mexico",
      "Bio": "Professor at Université Pierre &amp; Marie Curie since 2008",
      "Key": "beatriceberard",
      "Name": "Beatrice Berard"
    },
    {
      "Affiliation": "IT University of Copenhagen",
      "Key": "patrickbahr",
      "Name": "Patrick Bahr",
      "URL": "http://bahr.io",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/patrickbahr/076cc662-11b9-4750-80b4-778bdaf55e86/small.jpg"
    },
    {
      "Affiliation": "IBM Research, Japan",
      "Key": "tarosekiyama",
      "Name": "Taro Sekiyama"
    },
    {
      "Affiliation": "Carnegie Mellon University, USA",
      "Key": "frankpfenning",
      "Name": "Frank Pfenning",
      "URL": "https://www.cs.cmu.edu/~fp/"
    },
    {
      "Affiliation": "",
      "Key": "alexlang",
      "Name": "Alex Lang",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/alexlang/bf81e7d9-828e-4f8b-a8e7-93c21a969b27/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "renickbell",
      "Name": "Renick Bell"
    },
    {
      "Affiliation": "Dynamic Ledger Solutions",
      "Key": "arthurbreitman",
      "Name": "Arthur BREITMAN"
    },
    {
      "Affiliation": "Microsoft Research",
      "Bio": "I am a member of the Research In Software Engineering (RISE) group and chair of the Programming Languages working group (PLX). Currently, I am interested in the design and application of strong type systems and declarative programming languages, like Haskell. In particular, I am interested in programming with Effect inference in the Koka project. Furthermore, I work on domain specific embedded languages, language design, and compiler technology.",
      "Key": "daanleijen",
      "Name": "Daan Leijen",
      "URL": "https://www.microsoft.com/en-us/research/people/daan/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/daanleijen/550c0213-e92e-4f8a-a474-317bf8a6af63/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "kcsivaramakrishnan",
      "Name": "KC Sivaramakrishnan",
      "URL": "http://kcsrk.info/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/kcsivaramakrishnan/12bdba50-c8fa-44e2-9351-ab15dad55baf/small.jpg"
    },
    {
      "Affiliation": "University of Malta",
      "Key": "iancassar",
      "Name": "Ian Cassar"
    },
    {
      "Affiliation": "",
      "Key": "romainmichon",
      "Name": "Romain Michon"
    },
    {
      "Affiliation": "",
      "Key": "benediktahrens",
      "Name": "Benedikt Ahrens"
    },
    {
      "Affiliation": "",
      "Key": "colinrunciman",
      "Name": "Colin Runciman"
    },
    {
      "Affiliation": "",
      "Key": "florianangeletti",
      "Name": "Florian Angeletti"
    },
    {
      "Affiliation": "University of Pennsylvania",
      "Bio": "Benjamin Pierce is Henry Salvatori Professor of Computer and Information Science at the University of Pennsylvania and a Fellow of the ACM. His research interests include programming languages, type systems, language-based security, computer-assisted formal verification, differential privacy, and synchronization technologies. He is the author of the widely used graduate textbooks Types and Programming Languages and Software Foundations. He has served as co-Editor in Chief of the Journal of Functional Programming, as Managing Editor for Logical Methods in Computer Science, and as editorial board member of Mathematical Structures in Computer Science, Formal Aspects of Computing, and ACM Transactions on Programming Languages and Systems. He is also the lead designer of the popular Unison file synchronizer.",
      "Key": "benjamincpierce",
      "Name": "Benjamin C. Pierce",
      "URL": "http://www.cis.upenn.edu/~bcpierce/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/benjamincpierce/f2ee6f41-5bf7-4a0d-9b8d-71de6a666b1b/small.jpg"
    },
    {
      "Affiliation": "University of Washington",
      "Key": "zhenzhang1",
      "Name": "Zhen Zhang"
    },
    {
      "Affiliation": "Uppsala Univ. Sweden and KU Leuvern",
      "Key": "daveclarke",
      "Name": "Dave Clarke"
    },
    {
      "Affiliation": "Alcatel-Lucent Bell Labs",
      "Key": "alanjeffrey",
      "Name": "Alan Jeffrey"
    },
    {
      "Affiliation": "University of Edinburgh",
      "Key": "danelahman",
      "Name": "Danel Ahman",
      "URL": "http://homepages.inf.ed.ac.uk/s1225336/"
    },
    {
      "Affiliation": "Wesleyan University",
      "Bio": "I am an assistant professor at Wesleyan University. I received my PhD from Carnegie Mellon University in 2011, and was a postdoc at the Institute for Advanced Study in 2012-2013.",
      "Key": "danlicata",
      "Name": "Dan Licata",
      "URL": "http://dlicata.web.wesleyan.edu",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/danlicata/0b1942ed-7b74-4b6b-b624-03ded7f26a62/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "yoshihitotoyama",
      "Name": "Yoshihito Toyama"
    },
    {
      "Affiliation": "Northeastern University",
      "Key": "gabrielscherer",
      "Name": "Gabriel Scherer",
      "URL": "http://gallium.inria.fr/~scherer/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/gabrielscherer/12b45ebf-b3bf-4d6e-a8eb-fb44283475f9/small.jpg"
    },
    {
      "Affiliation": "Chalmers University of Technology",
      "Key": "moajohansson",
      "Name": "Moa Johansson"
    },
    {
      "Affiliation": "",
      "Key": "stianveummllersen",
      "Name": "Stian Veum Møllersen"
    },
    {
      "Affiliation": "Portland State University",
      "Bio": "I am a Professor in the Department of Computer Science in the Maseeh College of Engineering &amp; Computer Science at Portland State University in Portland, Oregon, USA. \nMy research interests include all aspects of programming language design, implementation, and application. I am particularly interested in the use of advanced programming language technologies for systems programming, and in the development and application of expressive type and module systems that support the construction and certification of secure and reliable software systems.",
      "Key": "markjones",
      "Name": "Mark Jones",
      "URL": "http://web.cecs.pdx.edu/~mpj/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/markjones/2a89efe5-5718-4aae-bb8c-15c5e541dcb4/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "liangwang",
      "Name": "Liang Wang"
    },
    {
      "Affiliation": "Northeastern University",
      "Bio": "I am a fifth year Ph.D. student at Northeastern University where I study Computer Science (specifically, programming languages). \nThe promise of programming languages research has been to provide high-level languages in which programmers can easily write complex programs without worrying about speed or low-level machine details. I think we have failed. Languages that provide strong guarantees are bemoaned as too complicated, compilers ignore those high-level guarantees anyway, and the folklore persists that C is the only language useful for writing fast code. \nI want to make programs easier to design, write, and understand. To that end, I work on verifying compilers. I am particularly interested in equivalence preserving (fully-abstract) compilers. I also dabble in dependent types and compiler design and implementation.",
      "Key": "williamjbowman",
      "Name": "William J. Bowman",
      "URL": "https://www.williamjbowman.com/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/williamjbowman/65b17dd6-298e-44ef-b32a-dc068c8c668b/small.jpg"
    },
    {
      "Affiliation": "Drexel University, USA",
      "Key": "siddhanathanshanmugam",
      "Name": "Siddhanathan Shanmugam",
      "URL": "https://siddhanathan.github.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/siddhanathanshanmugam/9a224cfa-a5c9-4843-a302-dac078305ac4/small.jpg"
    },
    {
      "Affiliation": "Victoria University of Wellington",
      "Bio": "Programming languages PhD student at VUW working on Grace.",
      "Key": "timothyjones",
      "Name": "Timothy Jones",
      "URL": "http://homepages.ecs.vuw.ac.nz/~tim",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/timothyjones/84d086ed-1fe7-4004-b243-96ea4f5a4a37/small.jpg"
    },
    {
      "Affiliation": "University of Kent",
      "Key": "reubennsrowe",
      "Name": "Reuben N. S. Rowe"
    },
    {
      "Affiliation": "Saarland University",
      "Key": "gertsmolka",
      "Name": "Gert Smolka",
      "URL": "http://www.ps.uni-saarland.de/~smolka/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/gertsmolka/2ab7c8ce-c02d-4786-85b3-245d878ea78a/small.jpg"
    },
    {
      "Affiliation": "OCamlPro",
      "Key": "louisgesbert",
      "Name": "Louis Gesbert"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "bojoelsvensson",
      "Name": "Bo Joel Svensson",
      "URL": "http://www.cse.chalmers.se/~joels/"
    },
    {
      "Affiliation": "Institute of Information Science, Academia Sinica",
      "Key": "tyngrueychuang",
      "Name": "Tyng-Ruey Chuang"
    },
    {
      "Affiliation": "",
      "Key": "dimitrisvyzovitis",
      "Name": "Dimitris Vyzovitis"
    },
    {
      "Affiliation": "Université de Montréal",
      "Key": "pierredelaunay",
      "Name": "Pierre Delaunay"
    },
    {
      "Affiliation": "University of  A Coruña",
      "Key": "lauramcastro",
      "Name": "Laura M. Castro",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/lauramcastro/be42fe66-1ecb-4d34-b94f-67a52ecdeacf/small.jpg"
    },
    {
      "Affiliation": "University of St Andrews",
      "Key": "christopherschwaab",
      "Name": "Christopher Schwaab"
    },
    {
      "Affiliation": "Hendrix College",
      "Key": "brentyorgey",
      "Name": "Brent Yorgey",
      "URL": "http://ozark.hendrix.edu/~yorgey/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/brentyorgey/7604236a-b0c2-4c69-8d3d-75ec12c4feaf/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "akihisayamada",
      "Name": "Akihisa Yamada",
      "URL": "http://cl-informatik.uibk.ac.at/users/ayamada/"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "olinshivers",
      "Name": "Olin Shivers"
    },
    {
      "Affiliation": "",
      "Key": "ashishagarwal",
      "Name": "Ashish Agarwal"
    },
    {
      "Affiliation": "University of Utah, USA",
      "Key": "williamebyrd",
      "Name": "William E. Byrd",
      "URL": "http://webyrd.net/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/williamebyrd/2a4d1ebd-5e55-4fdd-a807-8f7b593d0445/small.jpg"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "maximilianalgehed",
      "Name": "Maximilian Algehed"
    },
    {
      "Affiliation": "Igalia, n.n.",
      "Key": "asumutakikawa",
      "Name": "Asumu Takikawa",
      "URL": "http://www.ccs.neu.edu/home/asumu/"
    },
    {
      "Affiliation": "Kyoto University, Japan",
      "Key": "atsushiigarashi",
      "Name": "Atsushi Igarashi",
      "URL": "http://www.fos.kuis.kyoto-u.ac.jp/~igarashi/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/atsushiigarashi/bbac1695-343a-4091-b33c-b7f01dea73da/small.jpg"
    },
    {
      "Affiliation": "University of Tokyo, Japan",
      "Key": "takeshitsukada",
      "Name": "Takeshi Tsukada"
    },
    {
      "Affiliation": "Microsoft Research, n.n.",
      "Key": "leonardodemoura",
      "Name": "Leonardo De Moura",
      "URL": "http://leodemoura.github.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/leonardodemoura/feac9586-2cc5-4f59-9afa-a9e86a5da03f/small.jpg"
    },
    {
      "Affiliation": "MPI-SWS, Germany",
      "Key": "ralfjung",
      "Name": "Ralf Jung",
      "URL": "http://www.mpi-sws.org/~jung/"
    },
    {
      "Affiliation": "",
      "Key": "markgrebe",
      "Name": "Mark Grebe",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/markgrebe/94b19855-c969-46dd-945e-4e4a4f4200cc/small.jpg"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Bio": "I did a B.A. in Computer Science at the University of Oxford, tutored by Dr Jeff Sanders. \nI completed my Ph.D. on program verification in 2009 at the University of Cambridge, supervised by Prof. Mike Gordon. My PhD dissertation was selected as the winner of the BCS Distinguished Dissertation Competition 2010. \nIn 2012, I became a Royal Society Research Fellow, UK. \nIn 2014, I moved to Chalmers where I became a tenured Associate Professor in 2015.",
      "Key": "magnusomyreen",
      "Name": "Magnus O. Myreen",
      "URL": "http://www.cse.chalmers.se/~myreen/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/magnusomyreen/ccd5e9cd-2811-4ef2-a9f0-3dd7802233ca/small.jpg"
    },
    {
      "Affiliation": "University of Gothenburg, Sweden",
      "Key": "andreasabel",
      "Name": "Andreas Abel"
    },
    {
      "Affiliation": "Digital Asset / UNSW Australia",
      "Key": "benlippmeier",
      "Name": "Ben Lippmeier",
      "URL": "http://benl.ouroborus.net",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/benlippmeier/986e885e-cf98-4be9-a99c-cd9ded84ae4f/small.jpg"
    },
    {
      "Affiliation": "University of Glasgow",
      "Key": "patrickmaier",
      "Name": "Patrick Maier"
    },
    {
      "Affiliation": "Academia Sinica, Taiwan",
      "Key": "shinchengmu",
      "Name": "Shin-Cheng Mu",
      "URL": "http://www.iis.sinica.edu.tw/~scm/"
    },
    {
      "Affiliation": "National Institute of Informatics",
      "Key": "shinyakatsumata",
      "Name": "Shin-ya Katsumata",
      "URL": "http://www.kurims.kyoto-u.ac.jp/~sinya/index-e.html",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/shinyakatsumata/53de8011-3e39-4c39-838c-b0cbb15bcbee/small.jpg"
    },
    {
      "Affiliation": "University of St. Andrews, UK",
      "Key": "kevinhammond",
      "Name": "Kevin Hammond"
    },
    {
      "Affiliation": "",
      "Key": "jacquesgarrigue",
      "Name": "Jacques Garrigue"
    },
    {
      "Affiliation": "",
      "Key": "olegkiselyov",
      "Name": "Oleg Kiselyov",
      "URL": "http://okmij.org/ftp/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/olegkiselyov/f324364f-02c8-4bde-8df7-fc07f4057507/small.jpg"
    },
    {
      "Affiliation": "University of Maryland, College Park",
      "Bio": "Michael Hicks is a Professor in the Computer Science department and UMIACS at the University of Maryland, where he co-directs the laboratory for Programming Languages research (PLUM); he is the former Director of the Maryland Cybersecurity Center (MC2). \nHis research focuses on using programming languages and analyses to improve the security, reliability, and availability of software. He is perhaps best known for his work exploring dynamic software updating, which is a technique by which software can be updated without shutting it down. He has explored the design of new programming languages and analysis tools for helping programmers find bugs and software vulnerabilities, and for identifying suspicious or incorrect program executions. \nHis recent work has combined ideas from PL and cryptography, e.g., to ensure privacy preserving computations. He also leads the development of a new security-oriented programming contest, \u201cbuild-it, break-it, fix-it,\u201d which has been offered to the public and to students in his Coursera class on software security. He is the co-editor of the Programming Languages Enthusiast blog and Tweets at @michael_w_hicks.",
      "Key": "michaelhicks",
      "Name": "Michael Hicks",
      "URL": "http://www.cs.umd.edu/~mwh/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/michaelhicks/aa64e3c6-3516-4e13-affe-77bc32c40565/small.jpg"
    },
    {
      "Affiliation": "University College London",
      "Bio": "I am a lecturer (assistant professor) at University College London. \nPrior to joining UCL, I was a postdoctoral researcher at IMDEA Software Institute (Madrid, Spain). I defended my PhD in 2012 in the DistriNet research group at the Department of Computer Sciences of KU Leuven (Belgium). Before that I received my MSc degree in Mathematics and Computer Science from Saint Petersburg State University (Russia) in 2008. \nMy research interests dwell in the area of the design and implementation of programming languages, including but not limited to program semantics, certified programming, concurrency and abstract interpretation. I am particularly interested in developing verification techniques and static analyses for higher-order and concurrent programs.",
      "Key": "ilyasergey",
      "Name": "Ilya Sergey",
      "URL": "http://ilyasergey.net",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ilyasergey/b2941c89-4843-4194-852a-81c8a30814fa/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "pierreclairambault",
      "Name": "Pierre Clairambault"
    },
    {
      "Affiliation": "",
      "Key": "jacqueslegare",
      "Name": "Jacques Légaré"
    },
    {
      "Affiliation": "Bryn Mawr College, USA",
      "Bio": "Assistant Professor at Bryn Mawr College. I completed my PhD in 2016 at University of Pennsylvania working under Stephanie Weirich; my dissertation topic was the integration of dependent types into the Haskell programming language. I am a regular contributor to the Glasgow Haskell Compiler (GHC).",
      "Key": "richardeisenberg",
      "Name": "Richard A. Eisenberg",
      "URL": "http://cs.brynmawr.edu/~rae",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/richardeisenberg/576e2511-ae2a-4c2a-93b0-b8981243251c/small.jpg"
    },
    {
      "Affiliation": "Jane Street",
      "Key": "nicolasoury",
      "Name": "Nicolas Oury"
    },
    {
      "Affiliation": "University of Glasgow",
      "Key": "philtrinder",
      "Name": "Phil Trinder",
      "URL": "http://www.dcs.gla.ac.uk/~trinder/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/philtrinder/fa2ffb07-cddf-4a8d-a52a-ca1aaad1273b/small.jpg"
    },
    {
      "Affiliation": "Brown University, USA",
      "Key": "shriramkrishnamurthi",
      "Name": "Shriram Krishnamurthi",
      "URL": "http://cs.brown.edu/~sk/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/shriramkrishnamurthi/fffeeaab-a8ce-432c-b0ea-0b960163abe3/small.jpg"
    },
    {
      "Affiliation": "ENS Cachan, France",
      "Key": "victorlanvin",
      "Name": "Victor Lanvin",
      "URL": "http://www.dptinfo.ens-cachan.fr/~vlanvin/en.php"
    },
    {
      "Affiliation": "",
      "Key": "ulrichrabenstein",
      "Name": "Ulrich Rabenstein"
    },
    {
      "Affiliation": "University of Wrocław",
      "Key": "filipsieczkowski",
      "Name": "Filip Sieczkowski",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/filipsieczkowski/798bba62-e2ef-466f-8548-ab13f479cd83/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Key": "ryanscott",
      "Name": "Ryan Scott",
      "URL": "http://ryanglscott.github.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ryanscott/4e3ab376-a146-4946-9e77-752c3ed3aab5/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "markusaronsson",
      "Name": "Markus Aronsson"
    },
    {
      "Affiliation": "",
      "Key": "michaelshulman",
      "Name": "Michael Shulman"
    },
    {
      "Affiliation": "",
      "Key": "christiansternagel",
      "Name": "Christian Sternagel"
    },
    {
      "Affiliation": "Microsoft Research, n.n.",
      "Key": "cedricfournet",
      "Name": "Cédric Fournet",
      "URL": "http://research.microsoft.com/en-us/um/people/fournet/"
    },
    {
      "Affiliation": "",
      "Key": "davemurrayrust",
      "Name": "Dave Murray-Rust"
    },
    {
      "Affiliation": "University of Tokyo, Japan",
      "Key": "naokikobayashi",
      "Name": "Naoki Kobayashi"
    },
    {
      "Affiliation": "X",
      "Key": "wrenromano",
      "Name": "Wren Romano",
      "URL": "http://cl.indiana.edu/~wren/"
    },
    {
      "Affiliation": "Indiana University",
      "Bio": "From South Florida. Ph.D. 2009 at MIT.",
      "Key": "ryanrnewton",
      "Name": "Ryan R. Newton",
      "URL": "http://cs.indiana.edu/~rrnewton",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ryanrnewton/4dff7d06-8ca4-46f3-981b-52049bc71c54/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "kennethfoner",
      "Name": "Kenneth Foner"
    },
    {
      "Affiliation": "",
      "Key": "albertrubio",
      "Name": "Albert Rubio"
    },
    {
      "Affiliation": "Tohoku University",
      "Key": "katsuhiroueno",
      "Name": "Katsuhiro Ueno",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/katsuhiroueno/bd849dfa-47a5-43cd-92ef-8fe3a5fc7902/small.jpg"
    },
    {
      "Affiliation": "Université Denis Diderot Paris 7, PPS",
      "Key": "gabrielradanne",
      "Name": "Gabriel Radanne"
    },
    {
      "Affiliation": "",
      "Key": "antonekblad",
      "Name": "Anton Ekblad"
    },
    {
      "Affiliation": "",
      "Key": "takahitoaoto",
      "Name": "Takahito Aoto"
    },
    {
      "Affiliation": "University of Massachusetts Lowell",
      "Key": "jaymccarthy1",
      "Name": "Jay McCarthy",
      "URL": "https://jeapostrophe.github.io/home/"
    },
    {
      "Affiliation": "Indiana University, USA",
      "Key": "chungchiehshan",
      "Name": "Chung-chieh Shan",
      "URL": "http://homes.soic.indiana.edu/ccshan/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/chungchiehshan/5f1d6cc2-6e76-484a-bafe-85460ba4c6e5/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "justindawson",
      "Name": "Justin Dawson"
    },
    {
      "Affiliation": "",
      "Key": "kathygray",
      "Name": "Kathy Gray",
      "URL": "https://www.cl.cam.ac.uk/~keg29/"
    },
    {
      "Affiliation": "University of St. Andrews, UK",
      "Key": "christopherbrown1",
      "Name": "Christopher Brown"
    },
    {
      "Affiliation": "",
      "Key": "stefanoguerrini",
      "Name": "Stefano Guerrini"
    },
    {
      "Affiliation": "iMinds, Belgium",
      "Key": "jespercockx",
      "Name": "Jesper Cockx",
      "URL": "https://distrinet.cs.kuleuven.be/people/jesper",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jespercockx/113f5ec5-aa52-443e-93e2-e7d8d136577b/small.jpg"
    },
    {
      "Affiliation": "CNRS, France / University of Paris Diderot, France",
      "Key": "giuseppecastagna",
      "Name": "Giuseppe Castagna",
      "URL": "http://www.irif.fr/~gc/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/giuseppecastagna/ca2a9ac8-d149-4486-87ed-b55ceb154a17/small.jpg"
    },
    {
      "Affiliation": "Tallinn University of Technology, Estonia",
      "Key": "tarmouustalu",
      "Name": "Tarmo Uustalu"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Key": "wilmerricciotti",
      "Name": "Wilmer Ricciotti",
      "URL": "http://www.wilmer-ricciotti.net"
    },
    {
      "Affiliation": "UMR STMS: IRCAM-CNRS-UPMC",
      "Key": "jeanbresson",
      "Name": "Jean Bresson",
      "URL": "http://repmus.ircam.fr/bresson",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jeanbresson/b1ba6718-1b7b-438d-95cc-69111f99dcb9/small.jpg"
    },
    {
      "Affiliation": "University of Bologna, Italy / Inria, France",
      "Key": "ugodallago",
      "Name": "Ugo Dal Lago",
      "URL": "http://www.cs.unibo.it/~dallago/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ugodallago/446eb4fe-dc38-4ed0-85ba-5f746abe1550/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "sidharthkumar",
      "Name": "Sidharth Kumar"
    },
    {
      "Affiliation": "",
      "Key": "josepedromagalhaes",
      "Name": "José Pedro Magalhães",
      "URL": "http://dreixel.net/"
    },
    {
      "Affiliation": "University of Utah",
      "Bio": "Matthew Flatt is a professor in the School of Computing at the University of Utah, where he works on extensible programming languages, runtime systems, and applications of functional programming. He is one of the developers of the Racket programming language. He received his PhD from Rice University in 1999.",
      "Key": "matthewflatt",
      "Name": "Matthew Flatt",
      "URL": "http://www.cs.utah.edu/~mflatt/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/matthewflatt/8be359a0-6498-4c8c-a43a-e74a3d39673c/small.jpg"
    },
    {
      "Affiliation": "The University of Edinburgh",
      "Bio": "I\u2019m a postdoctoral research associate at The University of Edinburgh in the CArD group. I am a member of the Institute for Computing Systems Architecture (ICSA) which is part of the School of Informatics. \nI received my PhD from the University of Münster. \nI\u2019m interested in all aspects of parallel programming. Particular research interests of mine include structured parallel programming, heterogeneous and GPU computing, and novel functional compilation techniques.",
      "Key": "michelsteuwer",
      "Name": "Michel Steuwer",
      "URL": "http://homepages.inf.ed.ac.uk/msteuwer/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/michelsteuwer/5a465be6-d235-472c-8ace-4894a70bb742/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "peterlefanulumsdaine",
      "Name": "Peter Lefanu Lumsdaine"
    },
    {
      "Affiliation": "",
      "Key": "nicholassmallbone",
      "Name": "Nicholas Smallbone"
    },
    {
      "Affiliation": "MPI-SWS, Germany",
      "Key": "jacqueshenrijourdan",
      "Name": "Jacques-Henri Jourdan",
      "URL": "https://jhjourdan.mketjh.fr/"
    },
    {
      "Affiliation": "Ambiata",
      "Key": "jacobstanley",
      "Name": "Jacob Stanley"
    },
    {
      "Affiliation": "Reykjavik University",
      "Key": "annaingolfsdottir",
      "Name": "Anna Ingolfsdottir"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "andrewpitts",
      "Name": "Andrew Pitts",
      "URL": "http://www.cl.cam.ac.uk/~amp12/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/andrewpitts/f8687f72-b416-4511-bbd0-345e780ebd25/small.jpg"
    },
    {
      "Affiliation": "Indiana University, USA",
      "Key": "danfriedman",
      "Name": "Daniel P. Friedman"
    },
    {
      "Affiliation": "",
      "Key": "melindatoth",
      "Name": "Melinda Toth"
    },
    {
      "Affiliation": "University of Maryland, USA",
      "Key": "daviddarais",
      "Name": "David Darais",
      "URL": "http://david.darais.com",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/daviddarais/84b89731-ca3c-4d97-9540-4ce4db09d1d1/small.jpg"
    },
    {
      "Affiliation": "ETH Zurich",
      "Key": "dmitriytraytel",
      "Name": "Dmitriy Traytel",
      "URL": "http://people.inf.ethz.ch/trayteld/"
    },
    {
      "Affiliation": "Utrecht University",
      "Key": "alejandroserrano",
      "Name": "Alejandro Serrano",
      "URL": "http://www.cs.uu.nl/staff/mena.html",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/alejandroserrano/c5a07b2e-70da-4956-a386-442651bfcabb/small.jpg"
    },
    {
      "Affiliation": "Eötvös Loránd University",
      "Key": "istvanbozo",
      "Name": "István Bozó"
    },
    {
      "Affiliation": "Facebook",
      "Key": "simonmarlow",
      "Name": "Simon Marlow",
      "URL": "http://community.haskell.org/~simonmar/"
    },
    {
      "Affiliation": "EPFL",
      "Key": "nadaamin",
      "Name": "Nada Amin",
      "URL": "http://namin.net",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/nadaamin/b083e70b-31f9-4a88-89ba-ae54f8ec9315/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "edwardlilley",
      "Name": "Edward Lilley"
    },
    {
      "Affiliation": "University of Bristol",
      "Key": "matthewpickering",
      "Name": "Matthew Pickering"
    },
    {
      "Affiliation": "Colorado State University",
      "Key": "louisnoelpouchet",
      "Name": "Louis-Noel Pouchet",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/louisnoelpouchet/d72d9a63-a296-4c80-bb9e-201cf64a0294/small.jpg"
    },
    {
      "Affiliation": "CloudBees",
      "Key": "garrettsmith",
      "Name": "Garrett Smith"
    },
    {
      "Affiliation": "Kwansei Gakuin University",
      "Key": "kagumiazuma",
      "Name": "Kagumi Azuma"
    },
    {
      "Affiliation": "Harvard University, USA",
      "Key": "christosdimoulas",
      "Name": "Christos Dimoulas",
      "URL": "http://people.seas.harvard.edu/~chrdimo/"
    },
    {
      "Affiliation": "",
      "Key": "halleyyoung",
      "Name": "Halley Young"
    },
    {
      "Affiliation": "OCamlPro",
      "Key": "fabricelefessant",
      "Name": "Fabrice Le Fessant"
    },
    {
      "Affiliation": "Commonwealth Bank, Australia",
      "Key": "jostberthold",
      "Name": "Jost Berthold",
      "URL": "http://jberthold.github.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jostberthold/c6873346-5756-4e16-9c79-71df39d4774a/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "miriampolzer",
      "Name": "Miriam Polzer"
    },
    {
      "Affiliation": "Ambiata (Australia)",
      "Bio": "Software engineering practitioner working mainly in Haskell in the field of big data analytics and its supporting infrastructure.",
      "Key": "erikdecastrolopo",
      "Name": "Erik de Castro Lopo",
      "URL": "http://www.mega-nerd.com/erikd/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/erikdecastrolopo/309454ce-4797-477f-98e6-6cf0a6dffacf/small.jpg"
    },
    {
      "Affiliation": "University of Pennsylvania, USA",
      "Key": "danielwinogradcort1",
      "Name": "Daniel Winograd-Cort",
      "URL": "http://www.danwc.com"
    },
    {
      "Affiliation": "University of British Columbia",
      "Key": "ronaldgarcia",
      "Name": "Ronald Garcia",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ronaldgarcia/639c0132-c34e-4d0f-b2bb-2218d4c99377/small.jpg"
    },
    {
      "Affiliation": "Tohoku University",
      "Key": "eijirosumii",
      "Name": "Eijiro Sumii",
      "URL": "http://www.kb.ecei.tohoku.ac.jp/~sumii/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/eijirosumii/ea733a2b-2089-4df8-838a-ee27254cef4d/small.jpg"
    },
    {
      "Affiliation": "CNRS LaBRI, Inria Bordeaux,",
      "Key": "simonarchipoff",
      "Name": "Simon Archipoff",
      "URL": "http://scrime.labri.fr/blog/portfolio-item/simon-archipoff/"
    },
    {
      "Affiliation": "",
      "Key": "simoncastellan",
      "Name": "Simon Castellan"
    },
    {
      "Affiliation": "Deutsches Museum Research Institute, Munich",
      "Key": "alexmclean",
      "Name": "Alex McLean",
      "URL": "http://slab.org/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/alexmclean/fcd1d5c7-875e-4bc0-b18e-5219bd038cdc/small.jpg"
    },
    {
      "Affiliation": "Institute of Information Science, Academia Sinica",
      "Key": "tingyanlai",
      "Name": "Ting-Yan Lai"
    },
    {
      "Affiliation": "Université de Montréal",
      "Key": "vincentarchambaultbouffard",
      "Name": "Vincent Archambault-Bouffard"
    },
    {
      "Affiliation": "Brown University, USA",
      "Bio": "PhD student",
      "Key": "justinpombrio1",
      "Name": "Justin Pombrio",
      "URL": "http://justinpombrio.net/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/justinpombrio1/8ec130d8-1dad-4edb-95c4-f9a82f340556/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research, n.n.",
      "Key": "tahinaramananandro",
      "Name": "Tahina Ramananandro",
      "URL": "http://www.normalesup.org/~ramanana/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/tahinaramananandro/a58fd430-e17e-4c52-9296-d211c2084679/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "lutzstrassburger",
      "Name": "Lutz Strassburger"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Bio": "Assistant Professor at UW",
      "Key": "zacharytatlock",
      "Name": "Zachary Tatlock",
      "URL": "https://homes.cs.washington.edu/~ztatlock/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/zacharytatlock/87af1196-2d8d-4bd5-a692-018d3939a00f/small.jpg"
    },
    {
      "Affiliation": "University of Turin, Italy",
      "Key": "lucapadovani",
      "Name": "Luca Padovani",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/lucapadovani/bbc89b77-726c-4e74-9ce4-6292049d4d3e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "alainmarty",
      "Name": "Alain Marty"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Bio": "Philip Wadler is Professor of Theoretical Computer Science at the University of Edinburgh. He is an ACM Fellow and a Fellow of the Royal Society of Edinburgh, past chair of ACM SIGPLAN, past holder of a Royal Society-Wolfson Research Merit Fellowship, winner of the SIGPLAN Distinguished Service Award, and a winner of the POPL Most Influential Paper Award. Previously, he worked or studied at Stanford, Xerox Parc, CMU, Oxford, Chalmers, Glasgow, Bell Labs, and Avaya Labs, and visited as a guest professor in Copenhagen, Sydney, and Paris. He has an h-index of 60, with more than 20,000 citations to his work according to Google Scholar. He contributed to the designs of Haskell, Java, and XQuery, and is a co-author of Introduction to Functional Programming (Prentice Hall, 1988), XQuery from the Experts (Addison Wesley, 2004) and Generics and Collections in Java (O\u2019Reilly, 2006). He has delivered invited talks in locations ranging from Aizu to Zurich.",
      "Key": "philipwadler",
      "Name": "Philip Wadler",
      "URL": "http://homepages.inf.ed.ac.uk/wadler/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/philipwadler/55a9683e-908b-4052-9d49-20fb795c74cf/small.jpg"
    },
    {
      "Affiliation": "University of Leicester",
      "Key": "paulaseveri",
      "Name": "Paula Severi"
    },
    {
      "Affiliation": "University of Wrocław",
      "Key": "dariuszbiernacki",
      "Name": "Dariusz Biernacki"
    },
    {
      "Affiliation": "Chalmers University of Technology",
      "Key": "koenclaessen",
      "Name": "Koen Claessen"
    },
    {
      "Affiliation": "IRIF, France / University of Paris Diderot, France",
      "Key": "deliakesner",
      "Name": "Delia Kesner"
    },
    {
      "Affiliation": "Jet.com",
      "Key": "rachelreese",
      "Name": "Rachel Reese"
    },
    {
      "Affiliation": "",
      "Key": "akitoshikawamura",
      "Name": "Akitoshi Kawamura"
    },
    {
      "Affiliation": "",
      "Key": "yohjiakama",
      "Name": "Yohji Akama"
    },
    {
      "Affiliation": "",
      "Key": "dmitriboulytchev",
      "Name": "Dmitri Boulytchev"
    },
    {
      "Affiliation": "Google, USA",
      "Key": "jameslarson",
      "Name": "James Larson"
    },
    {
      "Affiliation": "",
      "Key": "markshinwell",
      "Name": "Mark Shinwell",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/markshinwell/1e4a6b0e-8fb3-467f-8c5a-f5b2fc92b02d/small.jpg"
    },
    {
      "Affiliation": "University of Pennsylvania, USA",
      "Key": "andreashaeberlen",
      "Name": "Andreas Haeberlen"
    },
    {
      "Affiliation": "University of Chicago",
      "Key": "johnreppy",
      "Name": "John Reppy"
    },
    {
      "Affiliation": "University of Freiburg, Germany",
      "Key": "peterthiemann",
      "Name": "Peter Thiemann",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/peterthiemann/43fc0175-1745-4b3a-b626-86e10da76b86/small.jpg"
    },
    {
      "Affiliation": "MPI-SWS, Germany",
      "Key": "deepakgarg",
      "Name": "Deepak Garg",
      "URL": "http://www.mpi-sws.org/~dg",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/deepakgarg/2a70fd29-76c7-4771-98ce-7d8c591f4e69/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "viktoriafordos1",
      "Name": "Viktória Fördős"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Bio": "I am a postdoctoral in Carnegie Mellon University, interested in mechanized reasoning and many topics in programming language theory. Currently I am mainly working on computational higher-dimensional type theory.",
      "Key": "kuenbanghoufavonia",
      "Name": "Kuen-Bang Hou (Favonia)",
      "URL": "http://favonia.org",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/kuenbanghoufavonia/f16fbbcf-7fe1-463e-b5da-10b25fc1e579/small.jpg"
    },
    {
      "Affiliation": "University of St. Andrews, UK",
      "Bio": "Lecturer in Computer Science at the University of St Andrews",
      "Key": "edwinbrady",
      "Name": "Edwin Brady",
      "URL": "https://eb.host.cs.st-andrews.ac.uk/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/edwinbrady/80bf0399-ea88-42fd-b3bb-b3462f9d69b2/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "kathrynegray",
      "Name": "Kathryn E. Gray"
    },
    {
      "Affiliation": "KAIST",
      "Key": "sukyoungryu",
      "Name": "Sukyoung Ryu",
      "URL": "http://plrg.kaist.ac.kr/ryu",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/sukyoungryu/3bdcd232-f3d4-4610-9953-30b513926e54/small.jpg"
    },
    {
      "Affiliation": "Universidad de Medellín",
      "Key": "mariaclaragomez",
      "Name": "María Clara Gómez"
    },
    {
      "Affiliation": "FAMAF, UNC and CONICET",
      "Key": "alejandrogadea",
      "Name": "Alejandro Gadea"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "samodyaabeysiriwardane",
      "Name": "Samodya Abeysiriwardane"
    },
    {
      "Affiliation": "Microsoft Research, Cambridge",
      "Bio": "Simon Peyton Jones, MA, MBCS, CEng, graduated from Trinity College Cambridge in 1980. After two years in industry, he spent seven years as a lecturer at University College London, and nine years as a professor at Glasgow University, before moving to Microsoft Research (Cambridge) in 1998. His main research interest is in functional programming languages, their implementation, and their application. He has led a succession of research projects focused around the design and implementation of production-quality functional-language systems for both uniprocessors and parallel machines. He was a key contributor to the design of the now-standard functional language Haskell, and is the lead designer of the widely-used Glasgow Haskell Compiler (GHC). He has written two textbooks about the implementation of functional languages. \nMore generally, he is interested in language design, rich type systems, software component architectures, compiler technology, code generation, runtime systems, virtual machines, and garbage collection. He is particularly motivated by direct use of principled theory to practical language design and implementation \u2013 that\u2019s one reason he loves functional programming so much.",
      "Key": "simonpaytonjones",
      "Name": "Simon Peyton Jones",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/simonpaytonjones/61daea4a-3a8b-4363-925e-b38fe6eac90d/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "maxkanovich",
      "Name": "Max Kanovich"
    },
    {
      "Affiliation": "Northeastern University",
      "Bio": "Jan Vitek is a Professor of Computer Science at Northeastern University. Dr. Vitek was born in Czechoslovakia and educated in Switzerland. Over the years, he worked on topics related to programming languages, their design, use, and implementation. With Noble and Potter, he proposed the notion of flexible alias control which became know as Ownership Types. He led the Ovm project which produced the first real-time Java virtual machine to be flight tested on a ScanEagle drone (he claims no one was harmed). Outcomes of this project include the Schism real-time garbage collector and the FijiVM \u2013 a production VM for embedded systems. More recently, he worked on dynamic languages, trying to make sense of JavaScript and to design a new language called, Thorn. Nowadays, he spends his time with statisticians and data scientists. Jan believes that his 2012 election as Chair of SIGPLAN was an accident; since has been busy trying to rock the boat to ensure this does not happen again. In his spare time, Jan enjoys organizing conferences and sitting on PCs (over 25 in the last decade). He founded the MOS (mobile objects), IWACO (alias control), STOP (gradual typing), and TRANSACT (transactional memory) workshop series. He was the first program chair of VEE and chaired ESOP, ECOOP, Coordination and TOOLS. He was the general chair of PLDI (in Beijing!), ISMM and LCTES. He may still be sitting on the steering committees of ECOOP, JTRES, ICFP, OOPLSA, POPL, PLDI, LCTES, ESOP.",
      "Key": "janvitek",
      "Name": "Jan Vitek",
      "URL": "http://janvitek.org",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/janvitek/213b9734-8942-47ea-933d-6ffad4bb1ee6/small.jpg"
    },
    {
      "Affiliation": "University of Bristol",
      "Key": "nicolaswu",
      "Name": "Nicolas Wu",
      "URL": "http://zenzike.com",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/nicolaswu/16dfcd93-2531-4de2-baee-d5a8d1a95a47/small.jpg"
    },
    {
      "Affiliation": "Université Pierre et Marie Curie, France",
      "Key": "christianqueinnec",
      "Name": "Christian Queinnec",
      "URL": "http://lip6.fr/Christian.Queinnec/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/christianqueinnec/976a029f-3f48-4c48-a7c4-c049a05b1f92/small.jpg"
    },
    {
      "Affiliation": "Oxford University, UK",
      "Key": "timothyzakian",
      "Name": "Timothy A. K. Zakian",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/timothyzakian/aa4563c3-463e-48cf-a916-44417bb8625c/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research, n.n.",
      "Key": "jonathanprotzenko",
      "Name": "Jonathan Protzenko",
      "URL": "https://jonathan.protzenko.fr",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jonathanprotzenko/203c9e40-1cbf-40d3-b59f-da4a4c305361/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "sarahwinkler",
      "Name": "Sarah Winkler"
    },
    {
      "Affiliation": "University of Innsbruck",
      "Key": "georgmoser",
      "Name": "Georg Moser"
    },
    {
      "Affiliation": "University of Edinburgh",
      "Key": "wenkokke",
      "Name": "Wen Kokke"
    },
    {
      "Affiliation": "Inria, France / University of Paris Diderot, France",
      "Key": "robertodicosmo",
      "Name": "Roberto Di Cosmo",
      "URL": "http://www.dicosmo.org",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/robertodicosmo/6c2ecfea-25c3-419b-952d-11e5d7a6b689/small.jpg"
    },
    {
      "Affiliation": "Oregon State University",
      "Key": "martinerwig1",
      "Name": "Martin Erwig"
    },
    {
      "Affiliation": "Inria/LIP6",
      "Key": "julialawall",
      "Name": "Julia Lawall",
      "URL": "http://pagesperso-systeme.lip6.fr/Julia.Lawall/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/julialawall/22890f3c-a892-4571-b863-0751c14252c4/small.jpg"
    },
    {
      "Affiliation": "UCLA",
      "Key": "mattbrown",
      "Name": "Matt Brown",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/mattbrown/c2008a4e-98ee-4ac7-9337-13b41183b9ca/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "alaricsnellpym",
      "Name": "Alaric Snell-Pym"
    },
    {
      "Affiliation": "",
      "Key": "maryshe",
      "Name": "Mary Sheeran",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/maryshe/56c53169-67ae-4c70-a640-510305f6a233/small.jpg"
    },
    {
      "Affiliation": "University of Maryland, USA",
      "Key": "nicholaslabich",
      "Name": "Nicholas Labich"
    },
    {
      "Affiliation": "University of Utrecht",
      "Key": "wouterswierstra",
      "Name": "Wouter Swierstra",
      "URL": "http://www.staff.science.uu.nl/~swier004",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/wouterswierstra/781d3865-6ae3-4d7f-9725-d813559e3fb7/small.jpg"
    },
    {
      "Affiliation": "AppNexus",
      "Key": "jeremielasalleratelle",
      "Name": "Jeremie Lasalle-Ratelle"
    },
    {
      "Affiliation": "IMDEA Software Institute, Spain",
      "Key": "alejandroaguirre",
      "Name": "Alejandro Aguirre"
    },
    {
      "Affiliation": "Ahrefs Research",
      "Key": "jorisgiovannangeli",
      "Name": "Joris Giovannangeli"
    },
    {
      "Affiliation": "n.n., n.n.",
      "Key": "gregoryrosenblatt",
      "Name": "Gregory Rosenblatt",
      "URL": "http://gregrosenblatt.com",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/gregoryrosenblatt/ce11d39a-2f60-41aa-a333-92ef94be55ed/small.jpg"
    },
    {
      "Affiliation": "Université de Montréal",
      "Key": "marcfeeley",
      "Name": "Marc Feeley",
      "URL": "http://www.iro.umontreal.ca/~feeley",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/marcfeeley/2c882fdf-a3a8-4bbf-9e03-75b3d7d08909/small.jpg"
    },
    {
      "Affiliation": "Klarna",
      "Key": "richardcarlsson",
      "Name": "Richard Carlsson"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "milodavis",
      "Name": "Milo Davis"
    },
    {
      "Affiliation": "",
      "Key": "pierrevial",
      "Name": "Pierre Vial"
    },
    {
      "Affiliation": "Princeton University, USA",
      "Key": "zoeparaskevopoulou",
      "Name": "Zoe Paraskevopoulou",
      "URL": "https://zoep.github.io/"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "avrahamshinnar",
      "Name": "Avraham Shinnar"
    },
    {
      "Affiliation": "",
      "Key": "yukitoshisuzuki",
      "Name": "Yukitoshi Suzuki"
    },
    {
      "Affiliation": "ASTEM RI/KYOTO",
      "Key": "hiroyukikanbara",
      "Name": "Hiroyuki Kanbara"
    },
    {
      "Affiliation": "G-Research",
      "Key": "robinkay",
      "Name": "Robin Kay"
    },
    {
      "Affiliation": "KU Leuven, Belgium",
      "Key": "andreasnuyts",
      "Name": "Andreas Nuyts",
      "URL": "https://distrinet.cs.kuleuven.be/people/andreasn",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/andreasnuyts/12f1ee74-3513-42de-a1e9-4fc19049ebca/small.jpg"
    },
    {
      "Affiliation": "Fugue",
      "Key": "jaspervanderjeugt",
      "Name": "Jasper Van der Jeugt",
      "URL": "http://jaspervdj.be"
    },
    {
      "Affiliation": "UNSW, Australia",
      "Key": "zilinchen",
      "Name": "Zilin Chen"
    },
    {
      "Affiliation": "INRIA",
      "Key": "assiamahboubi",
      "Name": "Assia Mahboubi",
      "URL": "http://specfun.inria.fr/mahboubi"
    },
    {
      "Affiliation": "DIKU, University of Copenhagen",
      "Key": "cosminoancea",
      "Name": "Cosmin Oancea",
      "URL": "http://www.diku.dk/~zgh600/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/cosminoancea/40450761-b155-4a17-9b03-9100541603b1/small.jpg"
    },
    {
      "Affiliation": "Sinusoidal Engineering, n.n.",
      "Bio": "I am Berlin based freelance software engineer, with a focus on interactive software, modern C++, functional programming and open source strategy. Before I worked for Ableton and I have been involved in various music technology projects. I have also developed for the GNU project and cofounded a Hacklab in Granada.",
      "Key": "juanpedrobolivarpuente",
      "Name": "Juan Pedro Bolívar Puente",
      "URL": "https://sinusoid.al",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/juanpedrobolivarpuente/63e3dc1b-a660-49e0-8133-d9c2a4bd5726/small.jpg"
    },
    {
      "Affiliation": "Facebook",
      "Key": "bartosznitka",
      "Name": "Bartosz Nitka"
    },
    {
      "Affiliation": "INRIA Saclay and LIX",
      "Bio": "Dale Miller received his Ph.D. in Mathematics in 1983 from Carnegie Mellon University. He has been a professor at the University of Pennsylvania and Ecole Polytechnique (France) and Department Head in Computer Science and Engineering at Pennsylvania State University. He has held visiting positions at the universities of Aix-Marseille, Sienna, Genoa, Pisa, and Edinburgh. He is currently Director of Research at Inria-Saclay where he is the Scientific Leader of the Parsifal team. \nMiller was a two-term editor-in-chief of the ACM Transactions on Computational Logic. He is a member of editorial board of the Journal of Automated Reasoning. In 2014 he was a PC chair for CSL and LICS. He was awarded an ERC Advanced Grant in 2011 and the LICS Test-of-Time awards in 2011 and 2014 for papers written in 1991 and 1994. Miller works on various topics in computational logic including proof theory, automated reasoning, logic programming, unification theory, operational semantics, and proof certificates.",
      "Key": "dalemiller",
      "Name": "Dale Miller",
      "URL": "http://www.lix.polytechnique.fr/Labo/Dale.Miller/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/dalemiller/cc117bc2-22be-479b-9c2c-2227cfae5ec0/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "michalchalmoviansky",
      "Name": "Michal Chalmovianský"
    },
    {
      "Affiliation": "",
      "Key": "bodilstokke",
      "Name": "Bodil Stokke",
      "URL": "http://bodil.org"
    },
    {
      "Affiliation": "",
      "Key": "conormcbride",
      "Name": "Conor McBride"
    },
    {
      "Affiliation": "Galois, Inc.",
      "Key": "iavordiatchki",
      "Name": "Iavor Diatchki",
      "URL": "https://galois.com/team/iavor-diatchki/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/iavordiatchki/8df229ac-c726-4f98-ae6c-61c7b2603e9e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "aartmiddeldorp",
      "Name": "aart Middeldorp"
    },
    {
      "Affiliation": "",
      "Key": "rudybraquehais",
      "Name": "Rudy Braquehais"
    },
    {
      "Affiliation": "Seoul National University",
      "Key": "chungkilhur",
      "Name": "Chung-Kil Hur",
      "URL": "http://sf.snu.ac.kr/gil.hur",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/chungkilhur/7a210194-94f1-448e-8461-5b4b54b43558/small.jpg"
    },
    {
      "Affiliation": "Inria",
      "Key": "arthurchargueraud",
      "Name": "Arthur Charguéraud",
      "URL": "http://arthur.chargueraud.org",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/arthurchargueraud/0687ef87-200c-4671-a07a-a72895976e98/small.jpg"
    },
    {
      "Affiliation": "Los Alamos National Laboratory",
      "Bio": "Research Scientist Programming Models Team, Applied Computer Science Group CCS-7 Computer, Computational, and Statistical Sciences Division Los Alamos National Laboratory, USA",
      "Key": "keidavis",
      "Name": "Kei Davis",
      "URL": "https://ccsweb.lanl.gov/~kei/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/keidavis/dcc326c7-d700-4a98-aa2d-857eb44ef54c/small.jpg"
    },
    {
      "Affiliation": "KIT, Germany",
      "Key": "sebastianullrich",
      "Name": "Sebastian Ullrich",
      "URL": "https://pp.ipd.kit.edu/~ullrich/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/sebastianullrich/2d241fe3-9a8d-4423-a746-a6440f17eab7/small.jpg"
    },
    {
      "Affiliation": "University of Buenos Aires, Argentina",
      "Key": "hernanmelgratti",
      "Name": "Hernan Melgratti"
    },
    {
      "Affiliation": "",
      "Key": "jeffpolakow",
      "Name": "Jeff Polakow"
    },
    {
      "Affiliation": "DTU, Denmark",
      "Key": "hanneriisnielson",
      "Name": "Hanne Riis Nielson"
    },
    {
      "Affiliation": "Microsoft Research, n.n.",
      "Key": "nikhilswamy",
      "Name": "Nikhil Swamy",
      "URL": "https://research.microsoft.com/~nswamy",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/nikhilswamy/fcdbbbd2-b390-4c57-a305-b77c7386f260/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Key": "davidchristiansen",
      "Name": "David Christiansen",
      "URL": "http://davidchristiansen.dk",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/davidchristiansen/b2aa30df-aad6-4e2b-87b9-8979825a3c39/small.jpg"
    },
    {
      "Affiliation": "University of Birmingham, UK",
      "Key": "noamzeilberger",
      "Name": "Noam Zeilberger",
      "URL": "http://noamz.org/"
    },
    {
      "Affiliation": "Google",
      "Key": "ericholk",
      "Name": "Eric Holk"
    },
    {
      "Affiliation": "Data61 at CSIRO, Australia / Australian National University, Australia",
      "Bio": "I did my PhD at the University of Cambridge, finishing in 1999. Since 2003, I have worked in Canberra, first with NICTA, and now with Data61 (the result of NICTA merging into CSIRO)",
      "Key": "michaelnorrish",
      "Name": "Michael Norrish",
      "URL": "http://ts.data61.csiro.au/people/?cn=Michael+Norrish",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/michaelnorrish/b4ee437b-353d-4dc9-8d90-ed1f71465fe6/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "dominiquefober",
      "Name": "Dominique Fober"
    },
    {
      "Affiliation": "University of Strathclyde",
      "Key": "bobatkey",
      "Name": "Bob Atkey",
      "URL": "http://bentnib.org/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/bobatkey/aefb1488-69b7-4a95-8c3d-714396037e7f/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "davidallsopp",
      "Name": "David Allsopp"
    },
    {
      "Affiliation": "",
      "Key": "ursulamartin",
      "Name": "Ursula Martin"
    },
    {
      "Affiliation": "Inria",
      "Key": "sebastienhinderer",
      "Name": "Sébastien Hinderer",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/sebastienhinderer/b4de434c-1b3f-4b50-b3c3-006051d25877/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Bio": "I am a Tenure-Track Assistant Professor at Carnegie Mellon\u2019s Computer Science Department, and a member of the Principles of Programming (PoP) group. \nMy research areas are programming languages and formal methods. I am specifically interested in quantitative verification, type systems, static resource analysis of programs, proof assistants, and system verification. \nBefore joining Carnegie Mellon, I was an Associate Research Scientist in the Department of Computer Science at Yale. Before that, I was a PhD student at LMU Munich.",
      "Key": "janhoffmann",
      "Name": "Jan Hoffmann",
      "URL": "http://www.cs.cmu.edu/~janh/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/janhoffmann/9adae976-6941-4521-9b57-733202e412fd/small.jpg"
    },
    {
      "Affiliation": "Université de Montréal",
      "Key": "stefanmonnier",
      "Name": "Stefan Monnier"
    },
    {
      "Affiliation": "",
      "Key": "joelburget",
      "Name": "Joel Burget"
    },
    {
      "Affiliation": "EPCC",
      "Key": "ludoviccapelli",
      "Name": "Ludovic Capelli"
    },
    {
      "Affiliation": "",
      "Key": "alisonpease",
      "Name": "Alison Pease"
    },
    {
      "Affiliation": "Inria Paris, ENS Paris, and Microsoft Research",
      "Key": "kenjimaillard",
      "Name": "Kenji Maillard"
    },
    {
      "Affiliation": "",
      "Key": "sidarthkumar",
      "Name": "Sidarth Kumar"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "mitchellwand",
      "Name": "Mitchell Wand",
      "URL": "http://www.ccs.neu.edu/home/wand/"
    },
    {
      "Affiliation": "University of Warwick, UK",
      "Key": "gihanmudalige",
      "Name": "Gihan Mudalige",
      "URL": "http://go.warwick.ac.uk/gihan-mudalige"
    },
    {
      "Affiliation": "Chalmers University of Technology",
      "Key": "thomashallgren",
      "Name": "Thomas Hallgren",
      "URL": "http://www.cse.chalmers.se/~hallgren/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/thomashallgren/3f5a3ee3-edaa-455c-93b2-0a4283d21189/small.jpg"
    },
    {
      "Affiliation": "University of Nottingham, UK",
      "Bio": "I like Game Programming, Multimedia and Functional Languages. I am 4th-year PhD student @ Nottingham. \nMy supervisors are Henrik Nilsson and Graham Hutton. \nI am also the founder of Keera Studios(tm), a game programming company that uses Functional Languages to deliver games for Android, iOS and desktop, and apps for mobile platforms.",
      "Key": "ivanperez",
      "Name": "Ivan Perez",
      "URL": "http://www.cs.nott.ac.uk/~psxip1/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ivanperez/870a78de-010f-40da-8660-9ba237955e02/small.jpg"
    },
    {
      "Affiliation": "Boston University",
      "Key": "alleystoughton",
      "Name": "Alley Stoughton",
      "URL": "http://alleystoughton.us",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/alleystoughton/379aed53-3b83-4c2d-81ea-59c7714c8f7a/small.jpg"
    },
    {
      "Affiliation": "Data61,CSIRO (formerly NICTA) and UNSW",
      "Key": "gabrielekeller",
      "Name": "Gabriele Keller",
      "URL": "http://www.cse.unsw.edu.au/~keller",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/gabrielekeller/101c0ceb-fc81-4bbd-becf-b99b62ef7303/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh, UK / University of Glasgow, UK",
      "Key": "rolyperera",
      "Name": "Roly Perera",
      "URL": "http://dynamicaspects.org",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/rolyperera/42845e32-53e3-4d06-8763-41583d7a761c/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "dmitrijszamozvancev",
      "Name": "Dmitrij Szamozvancev"
    },
    {
      "Affiliation": "INRIA / LSV / CNRS",
      "Key": "buryguillaume",
      "Name": "Bury Guillaume"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "jeankarimzinzindohoue",
      "Name": "Jean-Karim Zinzindohoué"
    },
    {
      "Affiliation": "",
      "Key": "stepankuznetsov",
      "Name": "Stepan Kuznetsov"
    },
    {
      "Affiliation": "Microsoft Research, Cambridge",
      "Key": "andrewfitzgibbon",
      "Name": "Andrew Fitzgibbon"
    },
    {
      "Affiliation": "University of Pennsylvania",
      "Key": "jenniferpaykin",
      "Name": "Jennifer Paykin",
      "URL": "http://www.seas.upenn.edu/~jpaykin/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jenniferpaykin/61f6fdf3-10dd-4e5d-98bd-6aa4644432b8/small.jpg"
    },
    {
      "Affiliation": "Northwestern University, USA",
      "Key": "robbyfindler",
      "Name": "Robert Bruce Findler",
      "URL": "http://www.eecs.northwestern.edu/~robby/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/robbyfindler/1c5789be-fa0c-482b-a237-e7e575ac257e/small.jpg"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology, USA",
      "Key": "benjaminsherman",
      "Name": "Benjamin Sherman",
      "URL": "http://www.ben-sherman.net",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/benjaminsherman/a5e425a6-da5c-412e-93de-21ceb43a2c8e/small.jpg"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "amalahmed",
      "Name": "Amal Ahmed",
      "URL": "http://www.ccs.neu.edu/home/amal/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/amalahmed/301fd92b-d4ae-4998-8f6b-82cf081da653/small.jpg"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "dustinjamner",
      "Name": "Dustin Jamner",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/dustinjamner/9a09c4de-afcd-4014-8cee-5a8653aff7bd/small.jpg"
    },
    {
      "Affiliation": "Well-Typed LLP",
      "Key": "adamgundry",
      "Name": "Adam Gundry",
      "URL": "http://www.well-typed.com/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/adamgundry/beb4aad4-e212-4cad-b68b-ec45731bf786/small.jpg"
    },
    {
      "Affiliation": "Oregon State University",
      "Key": "martinerwig",
      "Name": "Martin Erwig",
      "URL": "http://web.engr.oregonstate.edu/~erwig/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/martinerwig/8fd12ecd-2d70-44d3-a670-d5ef12393f9c/small.jpg"
    },
    {
      "Affiliation": "University of Utah, USA",
      "Bio": "Associate Professor in Computing Science at the University of Utah. \nVisiting Associate Professor at the Harvard Medical School. \nStrategist in the Executive Office of the President at The White House.",
      "Key": "matthewmight",
      "Name": "Matthew Might",
      "URL": "http://matt.might.net/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/matthewmight/ec69937a-3cff-49b4-aedb-73494c1181ac/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "andygill",
      "Name": "Andy Gill"
    },
    {
      "Affiliation": "Erlang Solutions Ltd, Hungary",
      "Key": "viktoriafordos",
      "Name": "Viktória Fördős"
    },
    {
      "Affiliation": "Microsoft Research, n.n.",
      "Key": "santiagozanellabeguelin",
      "Name": "Santiago Zanella-Béguelin",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/santiagozanellabeguelin/dfba81c9-9624-47f1-8015-8abe2eeea970/small.jpg"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "martinhirzel",
      "Name": "Martin Hirzel",
      "URL": "http://hirzels.com/martin/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/martinhirzel/8ffffeeb-b25c-4f90-b2e3-4949c2871a2a/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "raymondpuzio",
      "Name": "Raymond Puzio"
    },
    {
      "Affiliation": "",
      "Key": "johanneswaldmann",
      "Name": "Johannes Waldmann"
    },
    {
      "Affiliation": "MPI-SWS",
      "Key": "derekdreyer",
      "Name": "Derek Dreyer",
      "URL": "http://www.mpi-sws.org/~dreyer",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/derekdreyer/c2afb333-bc78-499d-92b7-c31938b9e567/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Bio": "I am a Research Associate at Laboratory for Foundations of Computer Science, University of Edinburgh, UK. I am on a sabbatical leave from Instytut Informatyki (Institute of Information Technology), Politechnika Łódzka (Łódź University of Technology), Poland.",
      "Key": "janstolarek",
      "Name": "Jan Stolarek",
      "URL": "http://ics.p.lodz.pl/~stolarek",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/janstolarek/76711651-883c-4a0d-80f0-31aecbea9ee4/small.jpg"
    },
    {
      "Affiliation": "FAMAF, UNC and CONICET",
      "Key": "emmanuelgunther",
      "Name": "Emmanuel Gunther"
    },
    {
      "Affiliation": "",
      "Key": "robincockett",
      "Name": "Robin Cockett"
    },
    {
      "Affiliation": "",
      "Key": "pierrepradic",
      "Name": "Pierre Pradic"
    },
    {
      "Affiliation": "University of Nottingham",
      "Bio": "I\u2019m Professor of Computer Science at the University of Nottingham, where I co-lead the Functional Programming Lab. My research interests are in developing simple but powerful techniques for writing and reasoning about programs, by recognising and exploiting their underlying mathematical structure. I\u2019m an editor of the Journal of Functional Programming, member of IFIP working group 2.1 on Algorithmic Languages and Calculi, and an ACM Distinguished Scientist. I\u2019ve also served as vice-chair of the ACM Special Interest Group on Programming Languages, and steering committee chair of the International Conference on Functional Programming.",
      "Key": "grahamhutton",
      "Name": "Graham Hutton",
      "URL": "http://www.cs.nott.ac.uk/~gmh/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/grahamhutton/52b355ea-66e2-4bcb-a0cb-36cda89ba02a/small.jpg"
    },
    {
      "Affiliation": "University of Glasgow",
      "Bio": "Natalia Chechina is a Research Fellow at the University of Glasgow. She received a PhD degree from Heriot-Watt University, UK in 2011. She then worked as a Research Associate at the University of Glasgow in the RELEASE project (2011-2015 A High-Level Paradigm for Reliable Large-Scale Server Software) sponsored by an EU FP7 STREP (287510).",
      "Key": "nataliachechina",
      "Name": "Natalia Chechina",
      "URL": "http://dcs.gla.ac.uk/~natalia/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/nataliachechina/18d2cb10-18d7-4bc2-99fc-fbe8de6e0368/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "robertcliftoneverest",
      "Name": "Robert Clifton-Everest"
    },
    {
      "Affiliation": "Indiana University, USA",
      "Key": "jeremysiek",
      "Name": "Jeremy G. Siek",
      "URL": "http://homes.soic.indiana.edu/jsiek/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jeremysiek/4365edf9-715f-46e0-8867-4ea5fb6341ad/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "vikramanchoudhury",
      "Name": "Vikraman Choudhury"
    },
    {
      "Affiliation": "",
      "Key": "jurgengiesl",
      "Name": "Jürgen Giesl"
    },
    {
      "Affiliation": "The University of Edinburgh",
      "Bio": "PhD student at the University of Edinburgh, Scotland, UK",
      "Key": "danielhillerstrom",
      "Name": "Daniel Hillerström",
      "URL": "http://www.homepages.inf.ed.ac.uk/s1467124",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/danielhillerstrom/22512b81-b136-4451-bcdd-f3d2fbc0210a/small.jpg"
    },
    {
      "Affiliation": "Jane Street",
      "Key": "leowhite",
      "Name": "Leo White"
    },
    {
      "Affiliation": "Digital Asset",
      "Key": "simonmeier",
      "Name": "Simon Meier"
    },
    {
      "Affiliation": "University of Innsbruck, Austria",
      "Key": "martinavanzini",
      "Name": "Martin Avanzini"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Key": "konstantinweitz",
      "Name": "Konstantin Weitz",
      "URL": "http://konne.me",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/konstantinweitz/7ca25205-f53e-4659-a16a-511b86ab20f2/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "johnwhitington",
      "Name": "John Whitington"
    },
    {
      "Affiliation": "",
      "Key": "yaronminsky",
      "Name": "Yaron Minsky"
    },
    {
      "Affiliation": "Reykjavik University",
      "Key": "lucaaceto",
      "Name": "Luca Aceto"
    },
    {
      "Affiliation": "University of Pennsylvania, USA",
      "Key": "aaronroth",
      "Name": "Aaron Roth"
    },
    {
      "Affiliation": "",
      "Key": "christinetasson",
      "Name": "Christine Tasson"
    },
    {
      "Affiliation": "University at Buffalo, SUNY, USA",
      "Bio": "Marco Gaboardi is an assistant professor in the Department of Computer Science and Engineering at the University at Buffalo, SUNY. Previously, he was a faculty at the University of Dundee, Scotland. He received his PhD from the University of Torino, Italy, and the Institute National Polytechnique de Lorraine, France. He was a visitor scholar at the University of Pennsylvania and at Harvard\u2019s CRCS center. He has been the recipient of a EU Marie Curie Fellowship. His research is in programming languages, differential privacy, and logic.",
      "Key": "marcogaboardi",
      "Name": "Marco Gaboardi",
      "URL": "http://www.buffalo.edu/~gaboardi",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/marcogaboardi/76ff8963-9672-4f16-87bc-3f0d75ce589b/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "ianorton",
      "Name": "Ian Orton"
    },
    {
      "Affiliation": "Department of Computer Science, University of Oxford",
      "Bio": "I am Professor of Computing in the Department of Computer Science at the University of Oxford. I am currently Director of the Software Engineering Programme, which offers part-time professional Masters\u2019 degrees in Software Engineering and in Software and Systems Security. I also lead the Algebra of Programming research group. I am Editor-in-Chief of the Journal of Functional Programming, Past Vice Chair of ACM SIGPLAN, Past Chair of IFIP WG2.1. Before taking up this post in 1999, I held lectureships at Oxford Brookes University and the University of Auckland, New Zealand.",
      "Key": "jeremygibbons",
      "Name": "Jeremy Gibbons",
      "URL": "http://www.cs.ox.ac.uk/jeremy.gibbons/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jeremygibbons/17403e55-a926-41cf-ae21-08abecea187c/small.jpg"
    },
    {
      "Affiliation": "University of Malta",
      "Key": "adrianfrancalanza",
      "Name": "Adrian Francalanza",
      "URL": "http://staff.um.edu.mt/afra1/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/adrianfrancalanza/6e6d0dd9-c580-4596-abde-30e3716ea961/small.jpg"
    },
    {
      "Affiliation": "University of New South Wales, Australia",
      "Key": "trevormcdonell",
      "Name": "Trevor L. McDonell",
      "URL": "http://tmcdonell.github.io"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "benjamindelaware",
      "Name": "Benjamin Delaware",
      "URL": "https://www.cs.purdue.edu/homes/bendy/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/benjamindelaware/39bbf6b3-d145-435c-8956-8acf8cfcaffa/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge, UK",
      "Key": "jeremyyallop",
      "Name": "Jeremy Yallop",
      "URL": "http://www.cl.cam.ac.uk/~jdy22/"
    },
    {
      "Affiliation": "Radboud University",
      "Bio": "PhD student in the software science group at Radboud University.",
      "Key": "joshuamoerman",
      "Name": "Joshua Moerman",
      "URL": "https://joshuamoerman.nl/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/joshuamoerman/fd42629d-f503-41aa-9eb2-2f59d664efa3/small.jpg"
    },
    {
      "Affiliation": "University of Innsbruck",
      "Key": "lukaszczajka",
      "Name": "Lukasz Czajka",
      "URL": "http://www.mimuw.edu.pl/~lukaszcz/"
    },
    {
      "Affiliation": "University of Oxford, UK",
      "Key": "mikespivey",
      "Name": "Mike Spivey",
      "URL": "http://spivey.oriel.ox.ac.uk/corner",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/mikespivey/c7d7d83c-0200-4711-8596-de7eea2929b8/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University",
      "Key": "liminjia",
      "Name": "Limin Jia",
      "URL": "https://www.andrew.cmu.edu/user/liminjia/"
    },
    {
      "Affiliation": "",
      "Key": "joecorneli",
      "Name": "Joe Corneli"
    },
    {
      "Affiliation": "Stanford University, USA",
      "Key": "stefanheule",
      "Name": "Stefan Heule",
      "URL": "https://stefanheule.com/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/stefanheule/22f3a465-33d2-4d83-be6f-b7b96a0db792/small.jpg"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "matthiasfelleisen",
      "Name": "Matthias Felleisen",
      "URL": "http://www.ccs.neu.edu/home/matthias/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/matthiasfelleisen/3781509a-02f7-4e22-822d-04481501e833/small.jpg"
    },
    {
      "Affiliation": "Kwansei Gakuin University",
      "Key": "nagisaishiura",
      "Name": "Nagisa Ishiura"
    },
    {
      "Affiliation": "DIKU, University of Copenhagen",
      "Key": "rasmuswriedtlarsen",
      "Name": "Rasmus Wriedt Larsen",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/rasmuswriedtlarsen/471a20a5-d226-46cc-86d2-a2caddafdcec/small.jpg"
    },
    {
      "Affiliation": "University of Strathclyde",
      "Key": "robertatkey",
      "Name": "Robert Atkey",
      "URL": "http://bentnib.org/"
    },
    {
      "Affiliation": "Kyoto University, Japan",
      "Key": "yuuigarashi",
      "Name": "Yuu Igarashi"
    },
    {
      "Affiliation": "University of Warwick, UK",
      "Key": "michaelbgale",
      "Name": "Michael Gale"
    },
    {
      "Affiliation": "Pfizer",
      "Key": "austinhuang",
      "Name": "Austin Huang"
    },
    {
      "Affiliation": "Intel Labs",
      "Key": "lindseykuper",
      "Name": "Lindsey Kuper",
      "URL": "http://www.cs.indiana.edu/~lkuper/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/lindseykuper/f5b1f248-82e4-45ec-ab90-1d543b02d204/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "floriansteinberg",
      "Name": "Florian Steinberg"
    },
    {
      "Affiliation": "University of Tübingen",
      "Key": "philippschuster",
      "Name": "Philipp Schuster"
    },
    {
      "Affiliation": "University of Pennsylvania, USA",
      "Key": "antoinevoizard",
      "Name": "Antoine Voizard"
    },
    {
      "Affiliation": "",
      "Key": "klarazielinska",
      "Name": "Klara Zielińska"
    },
    {
      "Affiliation": "Microsoft Research, Cambridge",
      "Key": "dimitriosvytiniotis",
      "Name": "Dimitrios Vytiniotis",
      "URL": "http://research.microsoft.com/people/dimitris",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/dimitriosvytiniotis/727f6b72-4d78-4863-a3a8-9b15d45ce7ac/small.jpg"
    },
    {
      "Affiliation": "FAMAF, UNC and CONICET",
      "Bio": "Currently researcher in the group LIIS at FAMAF, UNC and CONICET (Argentina). \nFrom 04/2015 to 10/2015 Postdoc at LIIS. \nPhD from MPI-SWS (Germany), supervisor Dr. Derek Dreyer. \nMSc from FCEyN, UBA.",
      "Key": "betaziliani",
      "Name": "Beta Ziliani",
      "URL": "http://people.mpi-sws.org/~beta/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/betaziliani/293e6140-bcd4-4e3f-85ae-b8ec673bbfba/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "martinsumner",
      "Name": "Martin Sumner"
    },
    {
      "Affiliation": "G-Research",
      "Key": "nicholascowle",
      "Name": "Nicholas Cowle"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology, USA",
      "Key": "muralidaranvijayaraghavan",
      "Name": "Muralidaran Vijayaraghavan"
    },
    {
      "Affiliation": "University of Gothenburg",
      "Key": "jeanphilippebernardy",
      "Name": "Jean-Philippe Bernardy"
    },
    {
      "Affiliation": "Northeastern University, USA",
      "Key": "williammeehan",
      "Name": "William Meehan"
    },
    {
      "Affiliation": "",
      "Key": "rebekahlesliehurd",
      "Name": "Rebekah Leslie-Hurd"
    },
    {
      "Affiliation": "",
      "Key": "giuliomanzonetto",
      "Name": "Giulio Manzonetto"
    },
    {
      "Affiliation": "University of Marburg",
      "Key": "ritaloogen",
      "Name": "Rita Loogen",
      "URL": "https://www.mathematik.uni-marburg.de/~loogen/"
    },
    {
      "Affiliation": "",
      "Key": "andrewpolonsky",
      "Name": "Andrew Polonsky"
    },
    {
      "Affiliation": "",
      "Key": "glynmorrill",
      "Name": "Glyn Morrill"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "louismandel",
      "Name": "Louis Mandel",
      "URL": "http://researcher.watson.ibm.com/researcher/view.php?person=us-lmandel",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/louismandel/17cd9456-7532-4cd8-a35e-47b280338d8e/small.jpg"
    },
    {
      "Affiliation": "University of Kansas, USA",
      "Key": "jgarrettmorris",
      "Name": "J. Garrett Morris",
      "URL": "http://jgbm.github.io",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jgarrettmorris/bfd0d5b6-e65e-403e-882f-089258565ed5/small.jpg"
    },
    {
      "Affiliation": "Ozyegin University",
      "Key": "barisaktemur",
      "Name": "Baris Aktemur"
    },
    {
      "Affiliation": "Well-Typed LLP",
      "Key": "bengamari",
      "Name": "Ben Gamari"
    },
    {
      "Affiliation": "",
      "Key": "renatidrisov",
      "Name": "Renat Idrisov"
    },
    {
      "Affiliation": "University of Oxford, UK / University of Cambridge, UK",
      "Key": "ohadkammar",
      "Name": "Ohad Kammar",
      "URL": "http://www.cs.ox.ac.uk/people/ohad.kammar/main.html",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ohadkammar/1336a5cb-4d72-49de-898d-ce768d425a55/small.jpg"
    },
    {
      "Affiliation": "Jane Street",
      "Key": "sebastianfunk",
      "Name": "Sebastian Funk"
    },
    {
      "Affiliation": "IBM Research",
      "Key": "jeromesimeon",
      "Name": "Jerome Simeon",
      "URL": "http://querycert.github.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jeromesimeon/24fd5000-63ac-4aa6-b8d5-b1c7dd1e46a0/small.jpg"
    },
    {
      "Affiliation": "University of Tsukuba, Japan",
      "Key": "yukiyoshikameyama",
      "Name": "Yukiyoshi Kameyama",
      "URL": "http://logic.cs.tsukuba.ac.jp/~kam/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/yukiyoshikameyama/a7ae9aee-0992-4ddf-ae1d-6fee59d9e814/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "simonthompson",
      "Name": "Simon Thompson",
      "URL": "http://www.cs.kent.ac.uk/people/staff/sjt/"
    },
    {
      "Affiliation": "University College London",
      "Key": "alexandrasilva",
      "Name": "Alexandra Silva",
      "URL": "http://www.alexandrasilva.org/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/alexandrasilva/4b4137d3-8abf-423d-89b7-64b1a17139a5/small.jpg"
    },
    {
      "Affiliation": "DIKU, University of Copenhagen",
      "Bio": "I try to make functional programs go really, really fast. It\u2019s not easy.",
      "Key": "troelshenriksen",
      "Name": "Troels Henriksen",
      "URL": "http://sigkill.dk",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/troelshenriksen/cc6f9601-4f83-467d-8063-85f9b13b9f6f/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "mitchellriley",
      "Name": "Mitchell Riley"
    },
    {
      "Affiliation": "Drexel University, USA",
      "Key": "geoffreymainland",
      "Name": "Geoffrey Mainland"
    },
    {
      "Affiliation": "Inria, France",
      "Key": "karthikeyanbhargavan",
      "Name": "Karthikeyan Bhargavan"
    },
    {
      "Affiliation": "Rakuten Institute of Technology",
      "Key": "satoshiegi",
      "Name": "Satoshi Egi",
      "URL": "https://www.egison.org/~egi/"
    },
    {
      "Affiliation": "University of Maryland, USA",
      "Key": "phucnguyen",
      "Name": "Phúc C. Nguyễn",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/phucnguyen/fa918d3c-90fd-4629-880b-dfa4de159a3a/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "francoisrenerideau",
      "Name": "François-René Rideau"
    },
    {
      "Affiliation": "Technical University Dortmund",
      "Key": "andrejdudenhefner",
      "Name": "Andrej Dudenhefner"
    },
    {
      "Affiliation": "",
      "Key": "tommurphy",
      "Name": "Tom Murphy"
    },
    {
      "Affiliation": "",
      "Key": "witoldcharatonik",
      "Name": "Witold Charatonik"
    },
    {
      "Affiliation": "Gunma University, Japan",
      "Key": "makotohamana",
      "Name": "Makoto Hamana"
    },
    {
      "Affiliation": "MIT",
      "Key": "reginabarzilay",
      "Name": "Regina Barzilay"
    },
    {
      "Affiliation": "Imperial College London",
      "Key": "azalearaad",
      "Name": "Azalea Raad",
      "URL": "www.doc.ic.ac.uk/~azalea",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/azalearaad/180ee602-475f-483f-a01b-ea187c9e8ac1/small.jpg"
    },
    {
      "Affiliation": "Galois, Inc.",
      "Bio": "Research Engineer at the DC office of Galois, Inc. \nPhD in Programming Languages from the University of York, UK.",
      "Key": "josecalderon",
      "Name": "Jose Calderon",
      "URL": "http://jmct.cc",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/josecalderon/3b72f7fe-634a-446f-9187-b4c8a47aace6/small.jpg"
    },
    {
      "Affiliation": "EPCC",
      "Key": "jamesmarkbull",
      "Name": "James Mark Bull"
    },
    {
      "Affiliation": "Indiana University",
      "Key": "michaelvollmer",
      "Name": "Michael Vollmer",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/michaelvollmer/361af3cb-a3df-4a7d-8f88-22008acfa8bc/small.jpg"
    },
    {
      "Affiliation": "Jet.com",
      "Key": "brianmitchell",
      "Name": "Brian Mitchell"
    },
    {
      "Affiliation": "",
      "Key": "ulfnorrel",
      "Name": "Ulf Norrel"
    },
    {
      "Affiliation": "University of Utah, USA",
      "Key": "michaelballantyne",
      "Name": "Michael Ballantyne"
    },
    {
      "Affiliation": "",
      "Key": "gertjanbottu",
      "Name": "Gert-Jan Bottu"
    },
    {
      "Affiliation": "",
      "Key": "benedettointrigila",
      "Name": "Benedetto Intrigila"
    },
    {
      "Affiliation": "University of Lisbon, Portugal",
      "Key": "vascovasconcelos",
      "Name": "Vasco Vasconcelos"
    },
    {
      "Affiliation": "",
      "Key": "gabrielarinonesin",
      "Name": "Gabriela Rino Nesin"
    },
    {
      "Affiliation": "LIP6/CNRS ",
      "Key": "pierreevaristedagand",
      "Name": "Pierre-Evariste Dagand",
      "URL": "https://pages.lip6.fr/Pierre-Evariste.Dagand/#contact",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/pierreevaristedagand/9c64ffc3-c911-4f4b-ba1c-82259f88ac56/small.jpg"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Bio": "Emina Torlak is an Assistant Professor at the University of Washington, working at the intersection of programming languages, formal methods, and software engineering. She received her Bachelors (2003), Masters (2004), and Ph.D. (2009) degrees from MIT, and subsequently worked at IBM Research, LogicBlox, and as a research scientist at U.C. Berkeley. Her research focuses on developing automated tools and programming models for computer-aided design, verification, and synthesis of software. She is the creator of the Kodkod constraint solver, which has been used in over 70 academic and industrial tools for software engineering. Emina has applied her expertise to a broad range of problems, from verification of memory-consistency models to generation of test data for decision support applications. Her current work on the Rosette solver-aided language integrates constraint solvers into programming languages to support computer-aided verification, debugging, and synthesis of code, making programming a collaboration between humans and machines.",
      "Key": "eminatorlak",
      "Name": "Emina Torlak",
      "URL": "https://homes.cs.washington.edu/~emina/index.html",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/eminatorlak/b48dd8a1-4bf6-4d29-b6e3-fb0e9ea9ce8e/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "neilmitchell",
      "Name": "Neil Mitchell"
    },
    {
      "Affiliation": "Saarland University, Germany / University of Cambridge, UK",
      "Key": "yannickforster",
      "Name": "Yannick Forster",
      "URL": "https://www.ps.uni-saarland.de/~forster/"
    },
    {
      "Affiliation": "",
      "Key": "yutakimura",
      "Name": "Yuta Kimura"
    },
    {
      "Affiliation": "IMDEA Software Institute, Spain",
      "Key": "gillesbarthe",
      "Name": "Gilles Barthe",
      "URL": "http://software.imdea.org/~gbarthe/index.html"
    },
    {
      "Affiliation": "OCamlPRO",
      "Key": "pierrechambart",
      "Name": "Pierre Chambart"
    },
    {
      "Affiliation": "IMDEA Software Institute",
      "Key": "aleksandarnanevski",
      "Name": "Aleksandar Nanevski",
      "URL": "http://software.imdea.org/~aleks",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/aleksandarnanevski/6612f235-0493-478f-9ecd-d86045a7619a/small.jpg"
    },
    {
      "Affiliation": "OCaml Labs",
      "Key": "gabrieldeperthuis",
      "Name": "Gabriel de Perthuis"
    },
    {
      "Affiliation": "Google, USA",
      "Key": "chrissmith",
      "Name": "Chris Smith"
    },
    {
      "Affiliation": "École Polytechnique, n.n.",
      "Key": "pierreyvesstrub",
      "Name": "Pierre-Yves Strub",
      "URL": "https://www.strub.nu/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/pierreyvesstrub/da650c05-b1b5-4167-911c-ac0ee26a27f1/small.jpg"
    },
    {
      "Affiliation": "DTU, Denmark",
      "Key": "flemmingnielson",
      "Name": "Flemming Nielson"
    },
    {
      "Affiliation": "Dream Songs, Inc. & HPI",
      "Bio": "I used to be Dick Gabriel. Those days are long gone. Now I\u2019m just Dick Gabriel.",
      "Key": "richardpgabriel",
      "Name": "Richard P. Gabriel",
      "URL": "https://dreamsongs.com",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/richardpgabriel/24ea1eb5-102f-4174-89f2-1338f4a4d6ce/small.jpg"
    },
    {
      "Affiliation": "Microsoft Research",
      "Key": "markmarron",
      "Name": "Mark Marron"
    },
    {
      "Affiliation": "Heriot-Watt University",
      "Key": "ekaterinakomendantskaya",
      "Name": "Ekaterina Komendantskaya",
      "URL": "http://www.macs.hw.ac.uk/~ek19/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ekaterinakomendantskaya/c84e7c6e-1e8b-42e8-ba78-6d2a5e7eaba1/small.jpg"
    },
    {
      "Affiliation": "University of Maryland",
      "Key": "nikivazou",
      "Name": "Niki Vazou",
      "URL": "https://nikivazou.github.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/nikivazou/8cc6ddec-154b-47e9-b40d-c66e78476391/small.jpg"
    },
    {
      "Affiliation": "Computer Laboratory, University of Cambridge",
      "Key": "neelakantankrishnaswami",
      "Name": "Neelakantan R. Krishnaswami",
      "URL": "http://www.cl.cam.ac.uk/~nk480",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/neelakantankrishnaswami/45f309fe-1177-4f2f-b017-0f7a9333bda4/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "felixklock",
      "Name": "Felix Klock"
    },
    {
      "Affiliation": "LRI, France / University of Paris-Sud, France",
      "Key": "thibautbalabonski",
      "Name": "Thibaut Balabonski",
      "URL": "http://www.lri.fr/~blsk/"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "sureshjagannathan",
      "Name": "Suresh Jagannathan",
      "URL": "https://www.cs.purdue.edu/homes/suresh/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/sureshjagannathan/70e51299-573f-4211-a895-b2028c19c585/small.jpg"
    },
    {
      "Affiliation": "University of Kent, UK",
      "Key": "scottowens",
      "Name": "Scott Owens",
      "URL": "http://www.cs.kent.ac.uk/~sao",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/scottowens/bd54a5d6-66ab-457b-baf3-08288eae6ee2/small.jpg"
    },
    {
      "Affiliation": "Ecole Polytechnique, n.n. / University of Campinas, Brazil",
      "Key": "pedrohenriqueavezedodeamorim",
      "Name": "Pedro Henrique Avezedo de Amorim",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/pedrohenriqueavezedodeamorim/e7e44a9f-2a0d-4447-8e0b-49d3e76eb362/small.jpg"
    },
    {
      "Affiliation": "RIKEN",
      "Key": "takayukimuranushi",
      "Name": "Takayuki Muranushi"
    },
    {
      "Affiliation": "",
      "Key": "andreaslochbihler",
      "Name": "Andreas Lochbihler"
    },
    {
      "Affiliation": "",
      "Key": "mikerainey",
      "Name": "Mike Rainey"
    },
    {
      "Affiliation": "Indiana University, USA",
      "Key": "praveennarayanan",
      "Name": "Praveen Narayanan",
      "URL": "http://homes.soic.indiana.edu/pravnar/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/praveennarayanan/332d8bac-354a-4c7d-8a48-00a405c2bfb9/small.jpg"
    },
    {
      "Affiliation": "Vienna University of Technology, Austria",
      "Key": "gabrielebner",
      "Name": "Gabriel Ebner",
      "URL": "https://gebner.org/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/gabrielebner/7560898c-531f-44c8-b250-283342867471/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "jasminchristianblanchette",
      "Name": "Jasmin Christian Blanchette"
    },
    {
      "Affiliation": "SRFI Editor",
      "Key": "arthurgleckler",
      "Name": "Arthur Gleckler",
      "URL": "http://speechcode.com/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/arthurgleckler/a943f989-577f-456c-9c8e-dbc6b424c40b/small.jpg"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology, USA",
      "Key": "arvind",
      "Name": "Arvind "
    },
    {
      "Affiliation": "",
      "Key": "piotrpolesiuk",
      "Name": "Piotr Polesiuk"
    },
    {
      "Affiliation": "Ochanomizu University",
      "Key": "youyoucong",
      "Name": "Youyou Cong",
      "URL": "https://sites.google.com/site/youyoucong212/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/youyoucong/55f54fd9-cac5-44ae-93c1-921409269efc/small.jpg"
    },
    {
      "Affiliation": "University of Nottingham, UK",
      "Key": "henriknilsson",
      "Name": "Henrik Nilsson"
    },
    {
      "Affiliation": "University of Kent",
      "Bio": "PhD Candidate in the School of Computing.",
      "Key": "josephharrison",
      "Name": "Joseph Harrison",
      "URL": "https://cs.kent.ac.uk/~jrh53",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/josephharrison/44625fc5-b81d-49de-88a6-3077e208bfca/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "andreymokhov",
      "Name": "Andrey Mokhov"
    },
    {
      "Affiliation": "OCamlPro, n.n.",
      "Key": "gregoirehenry",
      "Name": "Grégoire Henry"
    },
    {
      "Affiliation": "Twitter, Inc",
      "Key": "runhangli",
      "Name": "Runhang Li"
    },
    {
      "Affiliation": "Eötvös Loránd University",
      "Key": "daniellukacs",
      "Name": "Dániel Lukács"
    },
    {
      "Affiliation": "Purdue University",
      "Key": "gowthamkaki",
      "Name": "Gowtham Kaki",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/gowthamkaki/0ecc1c76-4bab-4b2b-bbf8-20104d29c38d/small.jpg"
    },
    {
      "Affiliation": "Northwestern University, USA",
      "Key": "vincentstamour",
      "Name": "Vincent St-Amour",
      "URL": "http://users.eecs.northwestern.edu/~stamourv/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/vincentstamour/d7745159-99a2-43bb-888e-b52730256128/small.jpg"
    },
    {
      "Affiliation": "University of Pennsylvania",
      "Key": "joachimbreitner",
      "Name": "Joachim Breitner",
      "URL": "http://cis.upenn.edu/~joachim/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/joachimbreitner/2bc58f26-64bd-4bda-a3d8-a97c89b419fc/small.jpg"
    },
    {
      "Affiliation": "OCaml Labs",
      "Bio": "I\u2019m a University Lecturer at the University of Cambridge. I\u2019ve worked in a variety of senior architecture, engineering, product management, sales and \u201cwhatever it takes\u201d roles in industry (S, M, L, XL) as well as government and research (S, M, L). I completed my PhD in 2006 at the University of Cambridge Computer Laboratory in the Systems Research Group. You can read my thesis and various academic publications here. My research goal is to improve the security, reliability and performance of the Internet. I\u2019m having great fun leading the OCaml Labs group at Cambridge, and building the Mirage unikernel operating system as a new foundation for networked, multi-scale applications. I also think about ubiquitous computing technologies, and develop open-source software such as the secure OpenBSD operating system.",
      "Key": "anilmadhavapeddy",
      "Name": "Anil Madhavapeddy",
      "URL": "http://anil.recoil.org",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/anilmadhavapeddy/505529bf-b2b7-41a5-be88-f5cd55b433ae/small.jpg"
    },
    {
      "Affiliation": "Target, USA",
      "Bio": "Conal Elliott has been working (and playing) in functional programming for more than 35 years. He especially enjoys applying semantic elegance and rigor to library design and optimized implementation. He invented the paradigm now known as \u201cfunctional reactive programming\u201d in the early 1990s, and then pioneered compilation techniques for high-performance, high-level embedded domain-specific languages, with applications including 2D and 3D computer graphics. The latter work included the first compilation of Haskell programs to GPU code, while maintaining precise and simple semantics and powerful composability, as well a high degree of optimization. Conal earned a BA in math with honors from the College of Creative Studies at UC Santa Barbara in 1982 and a PhD in Computer Science from Carnegie Mellon University in 1990. He is currently working as distinguished scientist at Target. Previously, we worked at Tabula Inc on chip specification and compiling Haskell to hardware for massively parallel execution. Before Tabula, his positions included Architect at Sun Microsystems and Researcher in the Microsoft Research graphics group. He has also coached couples and led conscious relationship workshops together with his partner Holly Croydon, with whom he now lives on 20 acres in the woods in the California Gold Country.",
      "Key": "conalelliott",
      "Name": "Conal Elliott",
      "URL": "http://conal.net",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/conalelliott/0aca0f74-be30-4571-b92b-630e50725387/small.jpg"
    },
    {
      "Affiliation": "Tufts University",
      "Bio": "Kathleen Fisher is Professor in the Computer Science Department at Tufts. Previously, she was a Principal Member of the Technical Staff at AT&amp;T Labs Research, a Consulting Faculty Member in the Computer Science Department at Stanford University, and a program manager at DARPA where she started and managed the HACMS and PPAML programs. Kathleen\u2019s research focuses on advancing the theory and practice of programming languages and on applying ideas from the programming language community to the problem of ad hoc data management. The main thrust of her work has been in domain-specific languages to facilitate programming with massive amounts of ad hoc data, including the Hancock system for efficiently building signatures from massive transaction streams and the PADS system for managing ad hoc data. Recently, she has been exploring synergies between machine learning and programming languages and studying how to apply advances in programming languages to the problem of building more secure systems. \nKathleen is an ACM Fellow. She has served as program chair for FOOL, ICFP, CUFP, and OOPSLA and as General Chair for ICFP 2015. Kathleen is past Chair of the ACM Special Interest Group in Programming Languages (SIGPLAN), past Co-Chair of CRA\u2019s Committee on the Status of Women (CRA-W), and a former editor of the Journal of Functional Programming. She is an Associate Editor for TOPLAS.",
      "Key": "kathleenfisher",
      "Name": "Kathleen Fisher",
      "URL": "http://www.cs.tufts.edu/~kfisher",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/kathleenfisher/04a1b289-f7fe-4e91-b686-6b34a7a45cb2/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Bio": "I am an Assistant Professor in the Department of Computer Science at Indiana University. \nResearch Interests: my research focuses on the design and analysis of software and programming languages. I am particularly interested in how programs grow from prototype scripts to robust software, and how programming language design can support this process. My research concerns type systems, software contracts, modularity, and extensibility. I\u2019m currently working with the DARPA CRASH program on Racket and with Mozilla Labs on JavaScript.",
      "Key": "samtobinhochstadt",
      "Name": "Sam Tobin-Hochstadt",
      "URL": "http://samth.github.io",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/samtobinhochstadt/d817e5c9-fe1c-4664-a4d1-6af45d4d4586/small.jpg"
    },
    {
      "Affiliation": "University of California at San Diego, USA",
      "Bio": "Nom nom. Chomp. Burp.",
      "Key": "ranjitjhala",
      "Name": "Ranjit Jhala",
      "URL": "http://ranjitjhala.github.io",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ranjitjhala/afbdab69-ed23-4022-b7a4-2c57128f20ec/small.jpg"
    },
    {
      "Affiliation": "Northwestern University, USA",
      "Key": "danielfeltey",
      "Name": "Daniel Feltey",
      "URL": "http://users.eecs.northwestern.edu/~dmf082/"
    },
    {
      "Affiliation": "Delft University of Technology, Netherlands",
      "Key": "robbertkrebbers",
      "Name": "Robbert Krebbers",
      "URL": "http://robbertkrebbers.nl"
    },
    {
      "Affiliation": "ThoughtWorks (UK) Ltd.",
      "Key": "chrisford",
      "Name": "Chris Ford",
      "URL": "https://www.thoughtworks.com/de/profiles/chris-ford"
    },
    {
      "Affiliation": "Obsidian Systems LLC",
      "Key": "ryantrinkle",
      "Name": "Ryan Trinkle",
      "URL": "https://obsidian.systems/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ryantrinkle/71874f99-8ae9-46bd-b1d9-7a2f810b406f/small.jpg"
    },
    {
      "Affiliation": "Indiana University",
      "Key": "buddhikachamithdealwiskahawitagedon",
      "Name": "Buddhika Chamith",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/buddhikachamithdealwiskahawitagedon/71e01b50-2877-4990-ac01-5661a530ce7b/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "pavlokerestey",
      "Name": "Pavlo Kerestey"
    },
    {
      "Affiliation": "University of Edinburgh, UK",
      "Key": "jamescheney",
      "Name": "James Cheney",
      "URL": "http://homepages.inf.ed.ac.uk/jcheney/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jamescheney/fad2c5e0-4605-4bd7-a0bb-aa02ec0b60ba/small.jpg"
    },
    {
      "Affiliation": "Facebook",
      "Key": "cristianocalcagno",
      "Name": "Cristiano Calcagno"
    },
    {
      "Affiliation": "DTU, Denmark",
      "Key": "janmidtgaard",
      "Name": "Jan Midtgaard",
      "URL": "http://janmidtgaard.dk/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/janmidtgaard/deb4aff7-1902-4d2f-8512-c8968c89e722/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "danielhillerstrom1",
      "Name": "Daniel Hillerström"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology, USA",
      "Key": "pengwang",
      "Name": "Peng Wang",
      "URL": "https://people.csail.mit.edu/wangpeng/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/pengwang/8ff111f4-bf05-4401-9cb1-4e50378feb91/small.jpg"
    },
    {
      "Affiliation": "DTU, Denmark",
      "Key": "patrickkasting",
      "Name": "Patrick Kasting"
    },
    {
      "Affiliation": "The University of Hong Kong",
      "Key": "brunooliveira",
      "Name": "Bruno C. d. S. Oliveira",
      "URL": "http://i.cs.hku.hk/~bruno/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/brunooliveira/f799cea5-abc3-443d-a265-ff5699cac240/small.jpg"
    },
    {
      "Affiliation": "Vrije Universiteit Amsterdam",
      "Key": "jasminblanchette",
      "Name": "Jasmin Blanchette",
      "URL": "http://www.cs.vu.nl/~jbe248/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jasminblanchette/9e79875a-976b-43a7-9453-18e510e97ae7/small.jpg"
    },
    {
      "Affiliation": "CNRS, Paris, France",
      "Key": "jeanchristophefilliatre",
      "Name": "Jean-Christophe Filliatre",
      "URL": "https://www.lri.fr/~filliatr/#"
    },
    {
      "Affiliation": "JAIST",
      "Key": "naohirokawa",
      "Name": "Nao Hirokawa"
    },
    {
      "Affiliation": "Federal University of Paraiba / fortiss",
      "Key": "viveknigam",
      "Name": "Vivek Nigam",
      "URL": "http://www.nigam.info",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/viveknigam/8edda215-4631-4103-a99a-5d278a2ce856/small.jpg"
    },
    {
      "Affiliation": "Utrecht University",
      "Key": "marcellvangeest",
      "Name": "Marcell van Geest"
    },
    {
      "Affiliation": "Ochanomizu University",
      "Key": "kenichiasai",
      "Name": "Kenichi Asai",
      "URL": "http://pllab.is.ocha.ac.jp/~asai/"
    },
    {
      "Affiliation": "Tweag I/O",
      "Key": "mathieuboespflug",
      "Name": "Mathieu Boespflug"
    },
    {
      "Affiliation": "LRI - Université Paris-Sud",
      "Key": "mariopereira",
      "Name": "Mário Pereira"
    },
    {
      "Affiliation": "INRIA",
      "Key": "didierremy",
      "Name": "Didier Rémy"
    },
    {
      "Affiliation": "",
      "Key": "koichifujima",
      "Name": "Koichi Fujima"
    },
    {
      "Affiliation": "",
      "Key": "marioblazevic",
      "Name": "Mario Blažević"
    },
    {
      "Affiliation": "Keera Studios",
      "Bio": "Founder of the Haskell Game programming company Keera Studios. Haskell game and mobile app developer.",
      "Key": "ivanperez1",
      "Name": "Ivan Perez",
      "URL": "https://facebook.com/keerastudios",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/ivanperez1/c45c544e-ba8b-4bed-8026-1a1bd7ea42a0/small.jpg"
    },
    {
      "Affiliation": "Technical University Dortmund",
      "Key": "jakobrehof",
      "Name": "Jakob Rehof"
    },
    {
      "Affiliation": "Universidad Nacional de Córdoba and CONCET (Argentina)",
      "Key": "mallkuernestosoldevilaraffa",
      "Name": "Mallku Ernesto Soldevila Raffa"
    },
    {
      "Affiliation": "Zendesk",
      "Key": "andreasgarns",
      "Name": "Andreas Garnæs",
      "URL": "https://andreas.github.io",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/andreasgarns/0fde71b1-ec3a-47d9-96b5-957d45cf7250/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "stephendolan",
      "Name": "Stephen Dolan"
    },
    {
      "Affiliation": "University of Pennsylvania, USA",
      "Key": "stephanieweirich",
      "Name": "Stephanie Weirich",
      "URL": "https://www.cis.upenn.edu/~sweirich/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/stephanieweirich/1f63ace9-e52a-4efc-b20b-ee75b5d7d091/small.jpg"
    },
    {
      "Affiliation": "Stevens Institute of Technology",
      "Bio": "Donya Quick is a research assistant professor in Music and Computation at Stevens Institute of Technology. Her research explores the intersection of artificial intelligence and computational linguistics with music. She completed her PhD at Yale University, where the subject of her work was an automated composition system called Kulitta. Donya is also the active maintainer of the Euterpea library for music representation in Haskell and is part of the MUSICA project, which is part of the DAPRA Communicating with Computers program and focuses on development of interactive systems in the musical domain.",
      "Key": "donyaquick",
      "Name": "Donya Quick",
      "URL": "http://www.donyaquick.com/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/donyaquick/33abd526-4f3c-468a-bbe5-a9722f4c9981/small.jpg"
    },
    {
      "Affiliation": "University of Bath",
      "Key": "marcosolieri",
      "Name": "Marco Solieri",
      "URL": "https://ms.xt3.it",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/marcosolieri/4ccec15e-6773-4a3e-8e44-df42fa8e318e/small.jpg"
    },
    {
      "Affiliation": "Uppsala University",
      "Key": "kikofernandezreyes",
      "Name": "Kiko Fernandez-Reyes"
    },
    {
      "Affiliation": "",
      "Key": "glynnwinskel",
      "Name": "Glynn Winskel"
    },
    {
      "Affiliation": "University of Pennsylvania",
      "Key": "leonidaslampropoulos",
      "Name": "Leonidas Lampropoulos",
      "URL": "http://www.cis.upenn.edu/~llamp/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/leonidaslampropoulos/0533948d-2e45-449e-b1d5-5fe451706ede/small.jpg"
    },
    {
      "Affiliation": "Univ Paris Diderot, Sorbonne Paris Cité, BeSport",
      "Key": "jeromevouillon1",
      "Name": "Jérôme Vouillon"
    },
    {
      "Affiliation": "ASTEM RI/KYOTO",
      "Key": "nobuakiyoshida",
      "Name": "Nobuaki Yoshida"
    },
    {
      "Affiliation": "Bordeaux INP / CNRS LaBRI / Bordeaux University",
      "Bio": "1996, PhD in Computer science, Bordeaux University,\n 2005, Habilitation à diriger les recherches, Bordeaux University\n Since 2015, team leader of the research project \nPoSET.\n",
      "Key": "davidjanin",
      "Name": "David Janin",
      "URL": "http://www.labri.fr/~janin",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/davidjanin/156a0aaf-9300-4ea3-8597-3cf733cda7b9/small.jpg"
    },
    {
      "Affiliation": "EPCC",
      "Key": "nickbrown",
      "Name": "Nick Brown"
    },
    {
      "Affiliation": "",
      "Key": "stephaneletz",
      "Name": "Stéphane Letz"
    },
    {
      "Affiliation": "Sain Petersburg State University, SPbGU",
      "Key": "petrlozov",
      "Name": "Petr Lozov"
    },
    {
      "Affiliation": "",
      "Key": "paolopistone",
      "Name": "Paolo Pistone"
    },
    {
      "Affiliation": "Computer Laboratory, University of Cambridge",
      "Key": "marcelofiore",
      "Name": "Marcelo Fiore"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "dylanmcdermott",
      "Name": "Dylan McDermott"
    },
    {
      "Affiliation": "Northwestern University, USA",
      "Key": "spencerpflorence",
      "Name": "Spencer P. Florence",
      "URL": "http://florence.io/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/spencerpflorence/e3e98e1c-983d-4d21-bce9-d9bd196711ba/small.jpg"
    },
    {
      "Affiliation": "OCamlPro, n.n.",
      "Key": "benjamincanou",
      "Name": "Benjamin Canou"
    },
    {
      "Affiliation": "University of Ljubljana, Slovenia",
      "Key": "matijapretnar",
      "Name": "Matija Pretnar",
      "URL": "http://matija.pretnar.info/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/matijapretnar/8c7c2332-59e0-46b8-8053-a8d42d6f6aa1/small.jpg"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "andreavezzosi",
      "Name": "Andrea Vezzosi"
    },
    {
      "Affiliation": "McGill University",
      "Key": "brigittepientka",
      "Name": "Brigitte Pientka",
      "URL": "http://www.cs.mcgill.ca/~bpientka/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/brigittepientka/de1fcba2-a8fd-4b6e-a4f2-b7d397fef2cf/small.jpg"
    },
    {
      "Affiliation": "MPI-INF",
      "Key": "mathiasfleury",
      "Name": "Mathias Fleury",
      "URL": "http://www.mpi-inf.mpg.de/~mfleury"
    },
    {
      "Affiliation": "Facebook London",
      "Key": "nickbenton1",
      "Name": "Nick Benton",
      "URL": "https://research.fb.com/people/benton-nick/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/nickbenton1/63e28c1e-f3ae-4400-af77-eb444cd397db/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "mindypreston",
      "Name": "Mindy Preston"
    },
    {
      "Affiliation": "",
      "Key": "romaincalascibetta",
      "Name": "Romain Calascibetta",
      "URL": "http://din.osau.re",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/romaincalascibetta/c9af0d98-be55-46cd-bacd-9d4f55d0954f/small.jpg"
    },
    {
      "Affiliation": "Delft University of Technology",
      "Bio": "Adminstrator + support for conf.researchr.org.",
      "Key": "elmervanchastelet",
      "Name": "Elmer van Chastelet",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/elmervanchastelet/55ccc9a8-327f-423a-ae20-01391b394a05/small.jpg"
    },
    {
      "Affiliation": "Goldsmiths, University of London",
      "Key": "christopherhodes",
      "Name": "Christophe Rhodes",
      "URL": "http://doc.gold.ac.uk/~mas01cr/"
    },
    {
      "Affiliation": "Active Group GmbH",
      "Bio": "Mike Sperber is CEO of Active Group GmbH in Filderstadt, Germany.",
      "Key": "michaelsperber",
      "Name": "Michael Sperber",
      "URL": "http://www.deinprogramm.de/sperber/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/michaelsperber/3b29c0de-6581-441a-939f-574a48e8b8af/small.jpg"
    },
    {
      "Affiliation": "University of Pennsylvania",
      "Key": "stevezdancewic",
      "Name": "Steve Zdancewic",
      "URL": "http://www.cis.upenn.edu/~stevez",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/stevezdancewic/41b883c6-4689-4ae3-b6f1-6b7a24622e99/small.jpg"
    },
    {
      "Affiliation": "JSC \"InfoTeCS\"",
      "Key": "evgeniyshishikin",
      "Name": "Evgeniy Shishikin",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/evgeniyshishikin/b627b851-090c-4221-a8d7-f8538b55401a/small.jpg"
    },
    {
      "Affiliation": "Harvard University, USA",
      "Bio": "Stephen Chong is an Associate Professor of Computer Science in the Harvard School of Engineering and Applied Sciences. Steve\u2019s research focuses on programming languages, information security, and the intersection of these two areas. He is the recipient of an NSF CAREER award, an AFOSR Young Investigator award, and a Sloan Research Fellowship. He received a PhD from Cornell University, and a bachelor\u2019s degree from Victoria University of Wellington, New Zealand.",
      "Key": "stephenchong",
      "Name": "Stephen Chong",
      "URL": "http://people.seas.harvard.edu/~chong/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/stephenchong/91e43651-bcd6-40dc-b231-4c92711b0e95/small.jpg"
    },
    {
      "Affiliation": "Carnegie Mellon University, USA",
      "Key": "stephaniebalzer",
      "Name": "Stephanie Balzer",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/stephaniebalzer/f9d2b097-d049-4f71-b0d4-d7870c219338/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "johnwiegley",
      "Name": "John Wiegley"
    },
    {
      "Affiliation": "Chalmers University of Technology",
      "Key": "patrikjansson",
      "Name": "Patrik Jansson",
      "URL": "https://www.chalmers.se/en/Staff/Pages/patrik-jansson.aspx",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/patrikjansson/14102235-c1e2-4283-8f8b-20cf67eb7d91/small.jpg"
    },
    {
      "Affiliation": "Chalmers University of Technology",
      "Key": "johnhughes",
      "Name": "John Hughes",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/johnhughes/3aab862a-7036-4f9f-8a33-34bfd41844cd/small.jpg"
    },
    {
      "Affiliation": "Jane Street Group",
      "Key": "spiroseliopoulos",
      "Name": "Spiros Eliopoulos"
    },
    {
      "Affiliation": "Karlsruhe Institute of Technology",
      "Key": "sebastiangraf",
      "Name": "Sebastian Graf"
    },
    {
      "Affiliation": "Jane Street Europe",
      "Key": "jeremiedimino",
      "Name": "Jeremie Dimino"
    },
    {
      "Affiliation": "Inria Paris",
      "Bio": "Catalin is a tenured Research Scientist at Inria Paris where he develops rigorous formal techniques for solving security problems. He is particularly interested in formal methods for security (memory safety, compartmentalization, dynamic monitoring, integrity, security protocols, information flow), programming languages (type systems, verification, proof assistants, property-based testing, semantics, formal metatheory, certified tools), and the design and verification of security-critical systems (reference monitors, secure compilers, microkernels, secure hardware). He is actively involved in the design of the F* verification system and was recently awarded an ERC Starting Grant on secure compilation. Catalin was a PhD student at Saarland University and a Research Associate at University of Pennsylvania before joining Inria Paris in 2013.",
      "Key": "catalinhritcu",
      "Name": "Cătălin Hriţcu",
      "URL": "http://prosecco.gforge.inria.fr/personal/hritcu/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/catalinhritcu/e262cec6-3e6b-47cc-ad61-b5c5b07953a1/small.jpg"
    },
    {
      "Affiliation": "EPFL, Switzerland",
      "Key": "amirshaikhha",
      "Name": "Amir Shaikhha"
    },
    {
      "Affiliation": "",
      "Key": "benjaminlichtman",
      "Name": "Benjamin Lichtman"
    },
    {
      "Affiliation": "OCaml Labs",
      "Key": "fredericbour",
      "Name": "Frédéric Bour"
    },
    {
      "Affiliation": "North Carolina State University",
      "Bio": "Ph.D. Carnegie Mellon University, 2015 \nPostdoc UC Santa Cruz, 2015-2016 \nAssistant Professor, NC State University, 2016-present",
      "Key": "chrismartens",
      "Name": "Chris Martens",
      "URL": "http://go.ncsu.edu/cmartens",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/chrismartens/962dad73-d5f2-486d-a080-7722ef25ed3f/small.jpg"
    },
    {
      "Affiliation": "Massachusetts Institute of Technology, USA",
      "Key": "adamchlipala",
      "Name": "Adam Chlipala",
      "URL": "http://adam.chlipala.net/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/adamchlipala/def72d03-2975-4c5a-a726-e8a944b77dc9/small.jpg"
    },
    {
      "Affiliation": "VMware Research",
      "Bio": "Scott Lystig Fritchie was a UNIX systems administrator until he returned to programming full-time at Sendmail, Inc. His focus the last 15 years has been distributed storage systems: design, implementation, and checking their correctness. He has had papers published by USENIX, the Erlang User Conference, and the ACM and has given presentations at Erlang Factory and Ricon. He is co-chair of the 2017 ACM Erlang Workshop (to be held in Oxford, UK) and will probably ask you to submit a paper for the workshop. Scott is a senior staff engineer at VMware.",
      "Key": "scottlystigfritchie",
      "Name": "Scott Lystig Fritchie",
      "URL": "http://www.snookles.com/scott/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/scottlystigfritchie/6778aa8b-853b-4027-85a6-e7be9978c775/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "jonaskaiser",
      "Name": "Jonas Kaiser"
    },
    {
      "Affiliation": "Chalmers University of Technology, Sweden",
      "Key": "anabove",
      "Name": "Ana Bove",
      "URL": "http://www.cse.chalmers.se/~bove/"
    },
    {
      "Affiliation": "Tohoku University, Japan",
      "Key": "atsushiohori",
      "Name": "Atsushi Ohori",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/atsushiohori/fb4f797b-bbfe-4073-8141-60f3fe8b2371/small.jpg"
    },
    {
      "Affiliation": "University of Birmingham, UK",
      "Key": "kokomuroya",
      "Name": "Koko Muroya"
    },
    {
      "Affiliation": "Microsoft Research, n.n.",
      "Key": "antoinedelignatlavaud",
      "Name": "Antoine Delignat-Lavaud"
    },
    {
      "Affiliation": "",
      "Key": "andrescedrov",
      "Name": "Andre Scedrov"
    },
    {
      "Affiliation": "University of Chicago",
      "Key": "kavonfarvardin",
      "Name": "Kavon Farvardin",
      "URL": "http://kavon.farvard.in",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/kavonfarvardin/e1385ba6-42de-4482-ba49-de87451e6cae/small.jpg"
    },
    {
      "Affiliation": "Mount Sinai - Hammer Lab",
      "Key": "sebastienmondet",
      "Name": "Sebastien Mondet"
    },
    {
      "Affiliation": "University of Wroclaw",
      "Key": "malgorzatabiernacka",
      "Name": "Malgorzata Biernacka"
    },
    {
      "Affiliation": "University of Maryland, USA",
      "Key": "davidvanhorn",
      "Name": "David Van Horn",
      "URL": "https://www.cs.umd.edu/~dvanhorn/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/davidvanhorn/1683f65c-07ad-48e0-9e25-712586a45b51/small.jpg"
    },
    {
      "Affiliation": "",
      "Key": "lennartaugustsson",
      "Name": "Lennart Augustsson"
    },
    {
      "Affiliation": "University of Southern California",
      "Key": "zhanpengliang",
      "Name": "Zhanpeng Liang"
    },
    {
      "Affiliation": "",
      "Key": "carterschonwald",
      "Name": "Carter Schonwald"
    },
    {
      "Affiliation": "University of Leicester, UK",
      "Key": "tomridge",
      "Name": "Tom Ridge",
      "URL": "http://www.tom-ridge.com/"
    },
    {
      "Affiliation": "",
      "Key": "jakubzalewski",
      "Name": "Jakub Zalewski",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jakubzalewski/33493c56-89a9-4187-9eff-4517d11c9818/small.jpg"
    },
    {
      "Affiliation": "University of Edinburgh",
      "Key": "jamesmckinna",
      "Name": "James McKinna",
      "URL": "http://www.inf.ed.ac.uk/people/staff/James_McKinna.html",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/jamesmckinna/989b46f2-ca98-4d1d-9f5a-aff7ec947239/small.jpg"
    },
    {
      "Affiliation": "Uppsala University",
      "Key": "stavrosaronis",
      "Name": "Stavros Aronis",
      "URL": "http://www.it.uu.se/katalog/staar721"
    },
    {
      "Affiliation": "University of Rochester",
      "Key": "michaelscott",
      "Name": "Michael Scott"
    },
    {
      "Affiliation": "University of Washington, USA",
      "Bio": "Michael D. Ernst is a Professor in the Computer Science &amp; Engineering department at the University of Washington. \nErnst\u2019s research aims to make software more reliable, more secure, and easier (and more fun!) to produce. His primary technical interests are in software engineering, programming languages, type theory, security, program analysis, bug prediction, testing, and verification. Ernst\u2019s research combines strong theoretical foundations with realistic experimentation, with an eye to changing the way that software developers work. \nErnst is an ACM Fellow (2014) and received the inaugural John Backus Award (2009) and the NSF CAREER Award (2002). His research has received an ACM SIGSOFT Impact Paper Award (2013), 8 ACM Distinguished Paper Awards (FSE 2014, ISSTA 2014, ESEC/FSE 2011, ISSTA 2009, ESEC/FSE 2007, ICSE 2007, ICSE 2004, ESEC/FSE 2003), an ECOOP 2011 Best Paper Award, honorable mention in the 2000 ACM doctoral dissertation competition, and other honors. In 2013, Microsoft Academic Search ranked Ernst #2 in the world, in software engineering research contributions over the past 10 years. \nDr. Ernst was previously a tenured professor at MIT, and before that a researcher at Microsoft Research.",
      "Key": "michaeldernst",
      "Name": "Michael D. Ernst",
      "URL": "http://homes.cs.washington.edu/~mernst/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/michaeldernst/c4859f6d-6233-416a-bc82-36d41286e201/small.jpg"
    },
    {
      "Affiliation": "University of Cambridge",
      "Key": "evelinagabasova",
      "Name": "Evelina Gabasova"
    },
    {
      "Affiliation": "",
      "Key": "yannorlarey",
      "Name": "Yann Orlarey"
    },
    {
      "Affiliation": "Mozilla Research",
      "Key": "alanjeffrey1",
      "Name": "Alan Jeffrey",
      "URL": "http://asaj.org/",
      "URLphoto": "http://icfp17.sigplan.org/getProfileImage/alanjeffrey1/85292841-a6a7-416c-8808-fc36002bf1bd/small.jpg"
    },
    {
      "Affiliation": "University of California at San Diego, USA",
      "Key": "benjamincosman",
      "Name": "Benjamin Cosman"
    }
  ],
  "Sessions": [
    {
      "Abstract": "Overview \nThis year ICFP will host a Student Research Competition where undergraduate and postgraduate students can present posters. The SRC at the ICFP 2017 consists of three rounds: \n \n  Extended abstract round: All students are encouraged to submit an extended abstract outlining their research (up to two pages).  \n  Poster session at ICFP 2017: Based on the abstracts, a panel of judges will select the most promising entrants to participate in the poster session which will take place at ICFP. Students who make it to this round will be eligible for some travel support to attend the conference. In the poster session, students will have the opportunity to present their work to the judges, who will select three finalists in each category (graduate/undergraduate) to advance to the next round.  \n  ICFP presentation: The last round will consist of an oral presentation at the ICFP to compete for the final awards in each category and selection of an overall winner who will advance to the ACM SRC Grand Finals.  \n \nInformations for the Authors of Accepted Presentations \nYou will be responsible for transporting your poster to the conference. If this will be a problem, please contact the chair of the SRC. \nAuthors of the accepted posters, please take notice: the demonstration boards at the venue are portrait only; so your poster can be portrait A0-sized, or landscape A1. \nConsider applying for SIGPLAN PAC funding (http://www.sigplan.org/PAC/) to partially support your travel/accommodation/attendance costs. \nFinalists \nUndergraduate category \nTBA \nGraduate category \nTBA \nPrizes \n \n The top three graduate and the top three undergraduate winners will receive prizes of $500, $300, and $200, respectively. \n All six winners will receive award medals and a two-year complimentary ACM student membership, including a subscription to ACM\u2019s Digital Library. \n The names of the winners will be posted on the SRC web site. \n The first place winners of the SRC will be invited to participate in the ACM SRC Grand Finals, an on-line round of competitions among the winners of other conference-hosted SRCs. \n Grand Finalists and their advisors will be invited to the Annual ACM Awards Banquet for an all-expenses-paid trip, where they will be recognized for their accomplishments along with other prestigious ACM award winners, including the winner of the Turing Award (also known as the Nobel Prize of Computing). \n The top three Grand Finalists will receive an additional $500, $300, and $200. All Grand Finalists will receive Grand Finalist certificates. \n The ACM, Microsoft Research, and our industrial partners provide financial support for students attending the SRC. You can find more information about this on the ACM website. \n",
      "Chairs": ["ilyasergey"],
      "ChairsString": "Ilya Sergey",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-student-research-competition-student-research-competition-finalist-presentations"],
      "Key": "8c043bfd-e524-428c-bfc3-1b07a3a1e533",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 09:37",
      "Title": "Student Research Competition: SRC Presentations",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Overview \nThis year ICFP will host a Student Research Competition where undergraduate and postgraduate students can present posters. The SRC at the ICFP 2017 consists of three rounds: \n \n  Extended abstract round: All students are encouraged to submit an extended abstract outlining their research (up to two pages).  \n  Poster session at ICFP 2017: Based on the abstracts, a panel of judges will select the most promising entrants to participate in the poster session which will take place at ICFP. Students who make it to this round will be eligible for some travel support to attend the conference. In the poster session, students will have the opportunity to present their work to the judges, who will select three finalists in each category (graduate/undergraduate) to advance to the next round.  \n  ICFP presentation: The last round will consist of an oral presentation at the ICFP to compete for the final awards in each category and selection of an overall winner who will advance to the ACM SRC Grand Finals.  \n \nInformations for the Authors of Accepted Presentations \nYou will be responsible for transporting your poster to the conference. If this will be a problem, please contact the chair of the SRC. \nAuthors of the accepted posters, please take notice: the demonstration boards at the venue are portrait only; so your poster can be portrait A0-sized, or landscape A1. \nConsider applying for SIGPLAN PAC funding (http://www.sigplan.org/PAC/) to partially support your travel/accommodation/attendance costs. \nFinalists \nUndergraduate category \nTBA \nGraduate category \nTBA \nPrizes \n \n The top three graduate and the top three undergraduate winners will receive prizes of $500, $300, and $200, respectively. \n All six winners will receive award medals and a two-year complimentary ACM student membership, including a subscription to ACM\u2019s Digital Library. \n The names of the winners will be posted on the SRC web site. \n The first place winners of the SRC will be invited to participate in the ACM SRC Grand Finals, an on-line round of competitions among the winners of other conference-hosted SRCs. \n Grand Finalists and their advisors will be invited to the Annual ACM Awards Banquet for an all-expenses-paid trip, where they will be recognized for their accomplishments along with other prestigious ACM award winners, including the winner of the Turing Award (also known as the Nobel Prize of Computing). \n The top three Grand Finalists will receive an additional $500, $300, and $200. All Grand Finalists will receive Grand Finalist certificates. \n The ACM, Microsoft Research, and our industrial partners provide financial support for students attending the SRC. You can find more information about this on the ACM website. \n",
      "Chairs": ["ilyasergey"],
      "ChairsString": "Ilya Sergey",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-student-research-competition-student-research-competition-awards"],
      "Key": "e0af46d5-a0e4-4d58-b6b5-1271ca0c6978",
      "Location": "Mathematical Institute | L1",
      "Time": "17:50 - 18:00",
      "Title": "Student Research Competition: SRC Awards",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "On Monday evening, there is a Welcome and Poster Reception, in the Maths Institute foyer. The Banquet is on Wednesday evening, in the Blackwell Hall of the Weston Library, and the Industry Reception is on Thursday evening, in the Ashmolean Museum. On Saturday, the FARM workshop is organizing an Evening of Algorithmic Arts, which is open to all ICFP participants. \nIn addition, the historic St Giles\u2019 Fair takes place right outside the Maths Institute, on Monday and Tuesday.",
      "Day": "2017-09-04",
      "Items": ["icfp-2017-social-events-welcome-reception"],
      "Key": "4ae44295-1102-404d-85a0-3a00fd73cec8",
      "Location": "Mathematical Institute | Foyer",
      "Time": "18:30 - 20:30",
      "Title": "Social Events: Welcome Reception",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "On Monday evening, there is a Welcome and Poster Reception, in the Maths Institute foyer. The Banquet is on Wednesday evening, in the Blackwell Hall of the Weston Library, and the Industry Reception is on Thursday evening, in the Ashmolean Museum. On Saturday, the FARM workshop is organizing an Evening of Algorithmic Arts, which is open to all ICFP participants. \nIn addition, the historic St Giles\u2019 Fair takes place right outside the Maths Institute, on Monday and Tuesday.",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-social-events-banquet"],
      "Key": "c4ee9dbf-a8f3-4744-a186-a0df2aca97aa",
      "Location": "Mathematical Institute | Weston Library",
      "Time": "18:30 - 22:30",
      "Title": "Social Events: Banquet",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "On Monday evening, there is a Welcome and Poster Reception, in the Maths Institute foyer. The Banquet is on Wednesday evening, in the Blackwell Hall of the Weston Library, and the Industry Reception is on Thursday evening, in the Ashmolean Museum. On Saturday, the FARM workshop is organizing an Evening of Algorithmic Arts, which is open to all ICFP participants. \nIn addition, the historic St Giles\u2019 Fair takes place right outside the Maths Institute, on Monday and Tuesday.",
      "Day": "2017-09-07",
      "Items": ["icfp-2017-social-events-industry-reception"],
      "Key": "92095f7d-bb37-40f8-9ec1-c153e259c216",
      "Location": "Mathematical Institute | Ashmolean Museum",
      "Time": "18:15 - 20:30",
      "Title": "Social Events: Industry Reception",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "On Monday evening, there is a Welcome and Poster Reception, in the Maths Institute foyer. The Banquet is on Wednesday evening, in the Blackwell Hall of the Weston Library, and the Industry Reception is on Thursday evening, in the Ashmolean Museum. On Saturday, the FARM workshop is organizing an Evening of Algorithmic Arts, which is open to all ICFP participants. \nIn addition, the historic St Giles\u2019 Fair takes place right outside the Maths Institute, on Monday and Tuesday.",
      "Day": "2017-09-09",
      "Items": ["icfp-2017-social-events-farm-2017-evening-of-algorithmic-arts"],
      "Key": "5cb92b35-c058-4563-bd7e-94e0bd8542cb",
      "Location": "Mathematical Institute | Old Fire Station",
      "Time": "19:30 - 22:00",
      "Title": "Social Events: FARM Performance Evening",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 will feature keynote talks from Chris Martens and Rich Hickey.",
      "Chairs": ["markjones"],
      "ChairsString": "Mark Jones",
      "Day": "2017-09-05",
      "Items": ["icfp-2017-keynote-talks-ten-years-of-clojure-fp-out-of-the-box"],
      "Key": "d3f7323d-e227-4b17-88fe-809bbb5ffcea",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 10:00",
      "Title": "Keynotes and Reports: Tuesday Keynote",
      "Type": "Events"
    },
    {
      "Abstract": "ICFP 2017 will feature keynote talks from Chris Martens and Rich Hickey.",
      "Day": "2017-09-05",
      "Items": ["icfp-2017-keynote-talks-programming-contest-report"],
      "Key": "2a079e71-71c9-4ffb-906c-1998e2719aeb",
      "Location": "Mathematical Institute | L1",
      "Time": "17:50 - 18:20",
      "Title": "Keynotes and Reports: Tuesday Closing Events",
      "Type": "Events"
    },
    {
      "Abstract": "This year, there will be two tutorials co-located with ICFP directly, taking place on the Sunday before ICFP. This is in addition to the CUFP tutorials which will take place on Thursday and Friday.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-tutorials-tutorial-t1-writing-verified-programs-in-cakeml-continued-"],
      "Key": "1ed0dfdf-1da7-4f41-b866-df20b7a3fb0a",
      "Location": "Mathematical Institute | L5",
      "Time": "10:30 - 11:30",
      "Title": "Tutorials: Morning tutorial session 2",
      "Type": "Tutorials"
    },
    {
      "Abstract": "ICFP 2017 will feature keynote talks from Chris Martens and Rich Hickey.",
      "Chairs": ["jeremygibbons"],
      "ChairsString": "Jeremy Gibbons",
      "Day": "2017-09-04",
      "Items": ["icfp-2017-keynote-talks-compositional-creativity-some-principles-for-talking-to-computers"],
      "Key": "bb0eb8d8-9e28-4552-89cd-8a584bfd1339",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 10:00",
      "Title": "Keynotes and Reports: Monday Keynote",
      "Type": "Events"
    },
    {
      "Abstract": "ICFP 2017 will feature keynote talks from Chris Martens and Rich Hickey.",
      "Day": "2017-09-06",
      "Items": [
        "icfp-2017-keynote-talks-program-chair-report",
        "icfp-2017-keynote-talks-icfp-2018-announcement"
      ],
      "Key": "8ae220f4-ec77-44b0-a659-b45d1c558c5f",
      "Location": "Mathematical Institute | L1",
      "Time": "18:00 - 18:20",
      "Title": "Keynotes and Reports: Wednesday Closing Events",
      "Type": "Events"
    },
    {
      "Abstract": "This year, there will be two tutorials co-located with ICFP directly, taking place on the Sunday before ICFP. This is in addition to the CUFP tutorials which will take place on Thursday and Friday.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-tutorials-tutorial-t2-certified-functional-co-programming-with-isabelle-hol-part-3-"],
      "Key": "a0edb3ce-cda2-4496-b498-b3d9551ddb17",
      "Location": "Mathematical Institute | L5",
      "Time": "16:50 - 17:50",
      "Title": "Tutorials: Afternoon tutorial session 3",
      "Type": "Tutorials"
    },
    {
      "Abstract": "This year, there will be two tutorials co-located with ICFP directly, taking place on the Sunday before ICFP. This is in addition to the CUFP tutorials which will take place on Thursday and Friday.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-tutorials-tutorial-certified-functional-co-programming-with-isabelle-hol"],
      "Key": "15b60442-5ba9-47c2-a247-fc1700bba67c",
      "Location": "Mathematical Institute | L5",
      "Time": "14:00 - 15:00",
      "Title": "Tutorials: Afternoon tutorial session 1",
      "Type": "Tutorials"
    },
    {
      "Abstract": "This year, there will be two tutorials co-located with ICFP directly, taking place on the Sunday before ICFP. This is in addition to the CUFP tutorials which will take place on Thursday and Friday.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-tutorials-tutorial-t2-certified-functional-co-programming-with-isabelle-hol-continued-"],
      "Key": "3f56fe54-f1e1-41e0-bb65-896927fec490",
      "Location": "Mathematical Institute | L5",
      "Time": "15:30 - 16:20",
      "Title": "Tutorials: Afternoon tutorial session 2",
      "Type": "Tutorials"
    },
    {
      "Abstract": "ICFP 2017 will feature keynote talks from Chris Martens and Rich Hickey.",
      "Day": "2017-09-06",
      "Key": "f5426c4d-ba92-4575-b0ec-7ac7e6d79e06",
      "Location": "Mathematical Institute | L1",
      "Time": "18:10 - 18:20",
      "Title": "Keynotes and Reports",
      "Type": "Events"
    },
    {
      "Abstract": "This year, there will be two tutorials co-located with ICFP directly, taking place on the Sunday before ICFP. This is in addition to the CUFP tutorials which will take place on Thursday and Friday.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-tutorials-tutorial-writing-verified-programs-in-cakeml"],
      "Key": "c3d43aba-0ed1-426c-a091-df10b69ff850",
      "Location": "Mathematical Institute | L5",
      "Time": "09:00 - 10:00",
      "Title": "Tutorials: Morning tutorial session 1",
      "Type": "Tutorials"
    },
    {
      "Abstract": "ICFP 2017 will feature keynote talks from Chris Martens and Rich Hickey.",
      "Chairs": ["peterthiemann"],
      "ChairsString": "Peter Thiemann",
      "Day": "2017-09-04",
      "Items": ["icfp-2017-keynote-talks-monday-announcements"],
      "Key": "b6ed77b5-6947-4462-a4cd-12d55390798e",
      "Location": "Mathematical Institute | L1",
      "Time": "18:10 - 18:20",
      "Title": "Keynotes and Reports: Monday Closing Events",
      "Type": "Events"
    },
    {
      "Abstract": "This year, there will be two tutorials co-located with ICFP directly, taking place on the Sunday before ICFP. This is in addition to the CUFP tutorials which will take place on Thursday and Friday.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-tutorials-tutorial-t1-writing-verified-programs-in-cakeml-part-3-"],
      "Key": "fdcf8335-13f3-4b57-8db2-43a53525d4d0",
      "Location": "Mathematical Institute | L5",
      "Time": "12:00 - 12:30",
      "Title": "Tutorials: Morning tutorial session 3",
      "Type": "Tutorials"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Day": "2017-09-09",
      "Key": "7cf536c1-8001-41e8-bfcd-ca28836a1bb1",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:20",
      "Title": "HIW 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Day": "2017-09-09",
      "Key": "7ab04546-79cf-4341-bb24-d5e78d2979ab",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:40",
      "Title": "HIW 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Chairs": ["richardeisenberg"],
      "ChairsString": "Richard A. Eisenberg",
      "Day": "2017-09-09",
      "Items": [
        "hiw-2017-progress-on-ghc",
        "hiw-2017-ghc-infrastructure-update-and-discussion",
        "hiw-2017-getting-ready-for-hadrian"
      ],
      "Key": "5905827b-f214-45f9-8288-ce6abac08fad",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 10:10",
      "Title": "HIW 2017 - : State of GHC",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Day": "2017-09-09",
      "Key": "ec47085b-66dc-4a29-80b2-082f9b78699f",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:30",
      "Title": "HIW 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Day": "2017-09-09",
      "Items": ["hiw-2017-on-unsatisfiability"],
      "Key": "c9e70095-a4f3-4569-97ad-c674ea6837c2",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:25",
      "Title": "HIW 2017 - : Constraints",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Chairs": ["janstolarek"],
      "ChairsString": "Jan Stolarek",
      "Day": "2017-09-09",
      "Items": [
        "hiw-2017-native-support-for-explicit-stacks-in-llvm",
        "hiw-2017-simplexhc-lowering-high-level-haskell-to-imperative-ir",
        "hiw-2017-lightning-talk-slot-1"
      ],
      "Key": "98c6b770-0750-4e80-a6b7-307ece2d20b9",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:30",
      "Title": "HIW 2017 - : Compiling to LLVM",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Day": "2017-09-09",
      "Key": "2701fc6e-2242-439f-874e-4ef676fc810f",
      "Location": "Mathematical Institute | L1",
      "Time": "09:10 - 10:00",
      "Title": "HIW 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Day": "2017-09-09",
      "Key": "fb6bdfad-f554-43a6-b632-db62ee44657f",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 14:50",
      "Title": "HIW 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Day": "2017-09-09",
      "Key": "16f86d29-0d67-4e92-8682-34bd0b36355d",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:20",
      "Title": "HIW 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Chairs": ["adamgundry"],
      "ChairsString": "Adam Gundry",
      "Day": "2017-09-09",
      "Items": [
        "hiw-2017-why-ghc-core-and-linear-logic-should-be-best-friends",
        "hiw-2017-demand-analysis-vs-call-arity",
        "hiw-2017-lightning-talk-slot-2"
      ],
      "Key": "b92ac40a-1305-49a0-ad74-7f8b08b49141",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 15:00",
      "Title": "HIW 2017 - : Working in Core",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Chairs": ["bartosznitka"],
      "ChairsString": "Bartosz Nitka",
      "Day": "2017-09-09",
      "Items": [
        "hiw-2017-an-experiment-in-fragment-based-code-distribution",
        "hiw-2017-lightning-talk-slot-4"
      ],
      "Key": "33666f54-7466-454f-a4ac-c3c816ba3565",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:50",
      "Title": "HIW 2017 - : All Broken Up",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Haskell Implementors\u2019 Workshop is a forum for those involved in implementing Haskell systems, infrastructure, libraries and tools, for people generally involved in implementing Haskell technology. We share our work and discuss future directions and collaborations with others. \nIn 2017, the Haskell Implementors\u2019 Workshop will be co-located with ICFP 2017 in Oxford. \nThe workshop does not have proceedings. Talks and/or demos are proposed by submitting an abstract and selected by a small program committee. The workshop will be informal and interactive, with a flexible timetable and plenty of room for ad-hoc discussion, demos, and impromptu short talks.",
      "Chairs": ["wrenromano"],
      "ChairsString": "Wren Romano",
      "Day": "2017-09-09",
      "Items": [
        "hiw-2017-ide-support-in-ghc",
        "hiw-2017-tracking-ghc-performance",
        "hiw-2017-lightning-talk-slot-3"
      ],
      "Key": "b1d97587-b68b-438f-8152-2df87ca6db63",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:30",
      "Title": "HIW 2017 - : Tool Support",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Key": "a365df6d-5106-41dd-add0-fff97a720c52",
      "Location": "Mathematical Institute | L4",
      "Time": "15:30 - 16:20",
      "Title": "FHPC 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Key": "b1e4539a-f93a-4e93-8ddb-6961f32a33d5",
      "Location": "Mathematical Institute | L2",
      "Time": "16:50 - 17:50",
      "Title": "TyDe 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["danlicata"],
      "ChairsString": "Dan Licata",
      "Day": "2017-09-06",
      "Items": [
        "icfp-2017-papers-a-specification-for-dependently-typed-haskell",
        "icfp-2017-papers-parametric-quantifiers-for-dependent-type-theory",
        "icfp-2017-papers-normalization-by-evaluation-for-sized-dependent-types",
        "icfp-2017-papers-engineering-a-metaprogramming-framework-for-formal-verification"
      ],
      "Key": "17e2986e-1a37-47ea-a45d-672caa67d5f9",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 12:00",
      "Title": "Research Papers: Dependently Typed Programming",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Key": "ceee48fc-5fad-48ae-b493-fb781b2fd6bd",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:20",
      "Title": "PLMW 2017 - ",
      "Type": "Events"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Key": "d3660892-ec8f-4d4b-854c-a40d04083b3b",
      "Location": "Mathematical Institute | L4",
      "Time": "12:00 - 12:25",
      "Title": "Scheme 2017 - ",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Key": "c3be990e-89db-4047-88ba-cf9ba72895f2",
      "Location": "Mathematical Institute | L4",
      "Time": "16:50 - 17:40",
      "Title": "Scheme 2017 - ",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Items": [
        "fhpc-2017-papers-from-high-level-radio-protocol-specifications-to-efficient-low-level-implementations-via-partial-evaluation",
        "fhpc-2017-papers-destination-passing-style-for-efficient-memory-management"
      ],
      "Key": "e308fbc2-b6eb-4715-a059-4caef1ef160a",
      "Location": "Mathematical Institute | L4",
      "Time": "10:30 - 11:30",
      "Title": "FHPC 2017 - : Compilation",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Items": [
        "erlang-2017-papers-distributed-memory-architecture-for-high-level-synthesis-of-embedded-controllers-from-erlang",
        "erlang-2017-papers-structuring-erlang-beam-control-flow"
      ],
      "Key": "f3fb0b84-c09a-4b53-9bb0-e9fef876d3fc",
      "Location": "Mathematical Institute | L6",
      "Time": "14:00 - 14:50",
      "Title": "Erlang 2017 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Items": ["tyde-2017-papers-driving-types-into-php"],
      "Key": "0cb17b83-e6a0-4bde-8557-97e93ff3c7ca",
      "Location": "Mathematical Institute | L2",
      "Time": "09:05 - 10:00",
      "Title": "TyDe 2017 - : Invited talk",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["matthewflatt"],
      "ChairsString": "Matthew Flatt",
      "Day": "2017-09-06",
      "Items": [
        "icfp-2017-papers-chaperone-contracts-for-higher-order-sessions",
        "icfp-2017-papers-whip-higher-order-contracts-for-modern-services",
        "icfp-2017-papers-manifest-sharing-with-session-types",
        "icfp-2017-papers-gradual-session-types"
      ],
      "Key": "2e964954-37cd-4bb4-b0d6-40b05a9e38b0",
      "Location": "Mathematical Institute | L1",
      "Time": "13:00 - 14:30",
      "Title": "Research Papers: Contracts and Sessions",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Items": [
        "tyde-2017-papers-extended-abstract-type-oriented-programming-for-task-based-parallelism",
        "tyde-2017-papers-type-directed-reasoning-for-probabilistic-non-compositional-resources"
      ],
      "Key": "06336ffe-fc63-4e84-9652-ee8b69e8165d",
      "Location": "Mathematical Institute | L2",
      "Time": "16:50 - 17:40",
      "Title": "TyDe 2017 - : Extended abstracts 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Key": "c90ed9fa-d217-4708-95ac-90deedc5403a",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:20",
      "Title": "ML 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Key": "57d7ec39-c37f-4d56-a5e1-e67414ebd47a",
      "Location": "Mathematical Institute | L1",
      "Time": "09:10 - 10:10",
      "Title": "PLMW 2017 - ",
      "Type": "Events"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Key": "b6b70872-507d-4502-a9e6-e8a5cb702f9d",
      "Location": "Mathematical Institute | L2",
      "Time": "14:00 - 14:50",
      "Title": "TyDe 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Items": [
        "mlfamilyworkshop-2017-papers-effects-without-monads-non-determinism",
        "mlfamilyworkshop-2017-papers-effectively-tackling-the-awkward-squad"
      ],
      "Key": "8667ceb5-d95e-4ee2-a890-77fa99845dd1",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:40",
      "Title": "ML 2017 - : Effects",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["gabrielscherer"],
      "ChairsString": "Gabriel Scherer",
      "Day": "2017-09-05",
      "Items": [
        "icfp-2017-papers-how-to-prove-your-calculus-is-decidable-practical-applications-of-second-order-algebraic-theories-and-computation",
        "icfp-2017-papers-a-relational-logic-for-higher-order-programs",
        "icfp-2017-papers-foundations-of-strong-call-by-need",
        "icfp-2017-papers-no-brainer-cps-conversion"
      ],
      "Key": "e35c0546-f33a-480b-8f16-bae5325f52ee",
      "Location": "Mathematical Institute | L1",
      "Time": "13:00 - 14:30",
      "Title": "Research Papers: Foundations of Higher-Order Programming",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Items": ["hope-2017-papers-invited-talk-semantics-of-effect-systems-by-graded-monads"],
      "Key": "98db02f6-7272-4fcb-b164-5e21be763568",
      "Location": "Mathematical Institute | L3",
      "Time": "09:10 - 10:00",
      "Title": "HOPE 2017 - : Invited talk",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Key": "bd821f1c-bc8f-4163-bf44-cae57eb441c5",
      "Location": "Mathematical Institute | L3",
      "Time": "09:10 - 10:10",
      "Title": "HOPE 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Key": "79c560b1-4787-4df2-8f42-0b18f7aa3f57",
      "Location": "Mathematical Institute | L4",
      "Time": "15:30 - 16:20",
      "Title": "Scheme 2017 - ",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Key": "4c8c51fa-cc84-4234-ab31-fa36101d45b5",
      "Location": "Mathematical Institute | L6",
      "Time": "15:30 - 16:30",
      "Title": "Erlang 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Key": "033f1098-95fd-475a-bb5b-7dbfc0f9c7ce",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:30",
      "Title": "ML 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Items": ["erlang-2017-papers-opening-welcome"],
      "Key": "ca95a657-d82d-42f2-a7a0-599010408e9b",
      "Location": "Mathematical Institute | L6",
      "Time": "09:00 - 09:10",
      "Title": "Erlang 2017 - : Opening & Welcome",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Items": [
        "fhpc-2017-papers-in-search-of-a-map-using-program-slicing-to-discover-potential-parallelism-in-recursive-functions",
        "fhpc-2017-papers-strategies-for-regular-segmented-reductions-on-gpu"
      ],
      "Key": "9c1e1fa4-beeb-4e4a-9404-f552de007edf",
      "Location": "Mathematical Institute | L4",
      "Time": "14:00 - 15:00",
      "Title": "FHPC 2017 - : Parallel Programming",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Key": "96f21c6f-4c95-4a16-9879-83ff765fab57",
      "Location": "Mathematical Institute | L6",
      "Time": "16:50 - 17:40",
      "Title": "Erlang 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Items": ["fhpc-2017-papers-vispar-visualising-dataflow-graphs-from-the-par-monad"],
      "Key": "5bdf7abe-bb26-4504-b338-7cb909dcad38",
      "Location": "Mathematical Institute | L4",
      "Time": "12:00 - 12:30",
      "Title": "FHPC 2017 - : Tools",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Key": "0c762edd-592c-4082-836e-06f62a226b39",
      "Location": "Mathematical Institute | L6",
      "Time": "12:00 - 12:30",
      "Title": "Erlang 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Items": [
        "hope-2017-papers-handling-fibred-algebraic-effects",
        "hope-2017-papers-only-control-effects-and-dependent-types"
      ],
      "Key": "c0d14bbe-4c78-4cd8-81c7-9ea2077603ae",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 15:00",
      "Title": "HOPE 2017 - : Effects and Dependent Types",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Key": "1b20825a-d640-4824-bdf3-d37ffcaeed1b",
      "Location": "Mathematical Institute | L2",
      "Time": "12:00 - 12:30",
      "Title": "TyDe 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Key": "f363744d-3369-44c6-878b-a07bf2607dce",
      "Location": "Mathematical Institute | L2",
      "Time": "15:30 - 16:30",
      "Title": "TyDe 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Key": "221c25bc-0298-4753-8bf5-b1f4c393f846",
      "Location": "Mathematical Institute | L6",
      "Time": "09:10 - 10:10",
      "Title": "Erlang 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Items": [
        "scheme-2017-papers-report-status-of-the-ongoing-r7rs-standardization-process",
        "scheme-2017-papers-lightning-lambda-talk-"
      ],
      "Key": "481d7186-1003-41e2-a05e-bd585d143be1",
      "Location": "Mathematical Institute | L4",
      "Time": "15:30 - 16:30",
      "Title": "Scheme 2017 - : Session 5",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Items": ["hope-2017-papers-welcome"],
      "Key": "bde28b3b-96a2-4205-a7b0-f64d3a8dd41a",
      "Location": "Mathematical Institute | L3",
      "Time": "09:00 - 09:10",
      "Title": "HOPE 2017 - : Welcome",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Items": ["fhpc-2017-papers-welcome-to-fhpc-17"],
      "Key": "264a471e-b6a1-40d8-bf14-57bdc6f5b78f",
      "Location": "Mathematical Institute | L4",
      "Time": "09:00 - 09:10",
      "Title": "FHPC 2017 - : Welcome to FHPC'17",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Key": "c3590698-9d18-4209-9296-54b4826bb1c4",
      "Location": "Mathematical Institute | L4",
      "Time": "09:10 - 10:00",
      "Title": "FHPC 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Key": "a73bb2cc-258c-442d-b563-1b7a4c1e97a6",
      "Location": "Mathematical Institute | L4",
      "Time": "14:00 - 14:50",
      "Title": "FHPC 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Items": [
        "tyde-2017-papers-type-safe-redis-queries-a-case-study-of-type-level-programming-in-haskell",
        "tyde-2017-papers-generic-packet-descriptions-verified-parsing-and-pretty-printing-of-low-level-data"
      ],
      "Key": "3175f256-8b80-4527-a1b2-bd4b2e6422f7",
      "Location": "Mathematical Institute | L2",
      "Time": "14:00 - 15:00",
      "Title": "TyDe 2017 - : Full papers 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Key": "3e8ed9bb-b4f2-4f79-b1c0-c4844d89cced",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:50",
      "Title": "HOPE 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Key": "7506c8c8-0176-4f16-aca8-8ffb20976cb8",
      "Location": "Mathematical Institute | L3",
      "Time": "12:00 - 12:30",
      "Title": "ML 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Items": ["erlang-2017-papers-in-medias-res-wip-discussion"],
      "Key": "079fd6fc-9cfe-4c0d-a94a-31cfc6ef0b03",
      "Location": "Mathematical Institute | L6",
      "Time": "12:00 - 12:25",
      "Title": "Erlang 2017 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Items": ["scheme-2017-papers-panel-scheme-in-2017"],
      "Key": "f21f9964-2239-4e59-b144-95df6b0f8e29",
      "Location": "Mathematical Institute | L4",
      "Time": "12:00 - 12:30",
      "Title": "Scheme 2017 - : Session 3",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Items": [
        "scheme-2017-invited-talk-matt-might",
        "scheme-2017-papers-goodbye"
      ],
      "Key": "64cc00e6-a9d2-41d5-aa40-81fad85fa53d",
      "Location": "Mathematical Institute | L4",
      "Time": "16:50 - 17:50",
      "Title": "Scheme 2017 - : Session 6",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Items": [
        "mlfamilyworkshop-2017-papers-typer-an-infix-statically-typed-lisp",
        "mlfamilyworkshop-2017-papers-relational-conversion-for-ocaml",
        "mlfamilyworkshop-2017-papers-towards-abductive-functional-programming"
      ],
      "Key": "25ade746-1b5f-45c8-af2d-1441a2638cc3",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 15:15",
      "Title": "ML 2017 - : Programming language design",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["benlippmeier"],
      "ChairsString": "Ben Lippmeier",
      "Day": "2017-09-04",
      "Items": [
        "icfp-2017-papers-definitional-abstract-interpreters-for-higher-order-programming-languages",
        "icfp-2017-papers-on-the-expressive-power-of-user-defined-effects-effect-handlers-monadic-reflection-delimited-control",
        "icfp-2017-papers-imperative-functional-programs-that-explain-their-work",
        "icfp-2017-papers-effect-driven-quickchecking-of-compilers"
      ],
      "Key": "a37b5bff-7055-40b3-84b8-0a2b0e9e6317",
      "Location": "Mathematical Institute | L1",
      "Time": "16:40 - 18:10",
      "Title": "Research Papers: Effects",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Key": "bce72933-d670-4e01-8d32-4cc6d88bb61e",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:20",
      "Title": "PLMW 2017 - ",
      "Type": "Events"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Items": ["tyde-2017-papers-welcome"],
      "Key": "f1b50f40-789f-4e8b-8b59-b8add678f82e",
      "Location": "Mathematical Institute | L2",
      "Time": "09:00 - 09:05",
      "Title": "TyDe 2017 - : Welcome",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Items": [
        "tyde-2017-papers-type-directed-diffing-of-structured-data",
        "tyde-2017-papers-structured-asynchrony-with-algebraic-effects"
      ],
      "Key": "d8452a3d-a176-42a7-9182-6f4835233a8c",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 11:30",
      "Title": "TyDe 2017 - : Full papers 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Key": "e43650a6-ee25-478a-8fc3-5f3bba722baa",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 14:50",
      "Title": "HOPE 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Key": "2f853317-e005-423d-9125-22aead34e668",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:25",
      "Title": "PLMW 2017 - ",
      "Type": "Events"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Items": ["hope-2017-papers-rustbelt-securing-the-foundations-of-the-rust-programming-language"],
      "Key": "29224ed7-89da-42ac-a802-dfdfc14181a8",
      "Location": "Mathematical Institute | L3",
      "Time": "12:00 - 12:30",
      "Title": "HOPE 2017 - : Rust",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Key": "be39dc2f-af1f-4e4a-a3cc-8d93f6c72bae",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 14:50",
      "Title": "ML 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Key": "0adfd519-0618-4002-ad36-4419bafbb1af",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:50",
      "Title": "PLMW 2017 - ",
      "Type": "Events"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Key": "06c438dd-883c-481a-b531-ab72e28eb18a",
      "Location": "Mathematical Institute | L4",
      "Time": "10:30 - 11:20",
      "Title": "Scheme 2017 - ",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Key": "e6e86448-2d1d-4765-91f2-94df768b03ff",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:20",
      "Title": "HOPE 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Key": "1a342f7f-5e78-4073-b817-2c04b31fe9b6",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:50",
      "Title": "ML 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Items": ["hope-2017-papers-recalling-a-witness"],
      "Key": "f634b364-952d-495f-829a-7e88bcebe68b",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:40",
      "Title": "HOPE 2017 - : Monotonicity",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Key": "89689041-5b76-4de1-9678-78378579743b",
      "Location": "Mathematical Institute | L6",
      "Time": "14:00 - 15:00",
      "Title": "Erlang 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Key": "fad6b94a-0ee8-421e-ac0e-771fb8b9fc73",
      "Location": "Mathematical Institute | L6",
      "Time": "10:30 - 11:30",
      "Title": "Erlang 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Items": ["mlfamilyworkshop-2017-papers-vocal-a-verified-ocaml-library"],
      "Key": "efcd43bb-24c5-450c-89a6-2fbbe07b84e4",
      "Location": "Mathematical Institute | L3",
      "Time": "12:00 - 12:25",
      "Title": "ML 2017 - : Verification",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Items": [
        "fhpc-2017-papers-keynote-2-to-be-announced",
        "fhpc-2017-papers-paraformance-demo"
      ],
      "Key": "91d88b32-bb93-401c-8e8c-aa97533227b8",
      "Location": "Mathematical Institute | L4",
      "Time": "15:30 - 16:30",
      "Title": "FHPC 2017 - : Demo Session",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Key": "609e2124-8d45-4f5e-b72b-c31d37fb2de3",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:20",
      "Title": "HOPE 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Items": [
        "erlang-2017-papers-the-shared-memory-interferences-of-erlang-otp-built-ins",
        "erlang-2017-papers-towards-change-driven-testing"
      ],
      "Key": "46edbe38-a972-4e3c-b848-ab96b4c70105",
      "Location": "Mathematical Institute | L6",
      "Time": "15:30 - 16:20",
      "Title": "Erlang 2017 - : Session 5",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["nikhilswamy"],
      "ChairsString": "Nikhil Swamy",
      "Day": "2017-09-05",
      "Items": [
        "icfp-2017-papers-kami-a-platform-for-high-level-parametric-hardware-specification-and-its-modular-verification",
        "icfp-2017-papers-spacesearch-a-library-for-building-and-verifying-solver-aided-tools",
        "icfp-2017-papers-local-refinement-typing"
      ],
      "Key": "bbcab22f-16dc-4135-816d-86e9967d67ef",
      "Location": "Mathematical Institute | L1",
      "Time": "15:00 - 16:10",
      "Title": "Research Papers: Tools for Verification",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["ronaldgarcia"],
      "ChairsString": "Ronald Garcia",
      "Day": "2017-09-06",
      "Items": [
        "icfp-2017-papers-theorems-for-free-for-free-parametricity-with-and-without-types",
        "icfp-2017-papers-on-polymorphic-gradual-typing",
        "icfp-2017-papers-gradual-typing-with-union-and-intersection-types"
      ],
      "Key": "1e7e6089-1832-4c57-acec-52532ab89906",
      "Location": "Mathematical Institute | L1",
      "Time": "15:00 - 16:10",
      "Title": "Research Papers: Integrating Static and Dynamic Typing",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Items": ["erlang-2017-papers-keynote-speaker-martin-sumner"],
      "Key": "e611142b-47d1-47a5-8451-421b46f126e3",
      "Location": "Mathematical Institute | L6",
      "Time": "09:10 - 10:00",
      "Title": "Erlang 2017 - : Keynote Invited Talk",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Chairs": ["brigittepientka"],
      "ChairsString": "Brigitte Pientka",
      "Day": "2017-09-03",
      "Items": ["plmw-icfp-2017-welcome"],
      "Key": "e192b782-2aef-4495-8d95-3c2b4004fdd3",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 09:10",
      "Title": "PLMW 2017 - : Welcome",
      "Type": "Events"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Key": "0f531ecb-c42c-4d61-9703-3a8cc58c59d0",
      "Location": "Mathematical Institute | L4",
      "Time": "14:00 - 14:50",
      "Title": "Scheme 2017 - ",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["martinerwig"],
      "ChairsString": "Martin Erwig",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-papers-herbarium-racketensis-a-stroll-through-the-woods-functional-pearl-"],
      "Key": "12fcd497-db71-494a-9a12-f1e3b429eefd",
      "Location": "Mathematical Institute | L1",
      "Time": "09:37 - 10:00",
      "Title": "Research Papers: Domain-Specific Languages",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Items": [
        "erlang-2017-papers-eaop-an-aspect-oriented-programming-framework-for-erlang",
        "erlang-2017-papers-erlang-and-elixir-development-news-not-yet-confirmed-"
      ],
      "Key": "100d9751-21b2-4d1b-bf04-c008ecced54a",
      "Location": "Mathematical Institute | L6",
      "Time": "16:50 - 17:50",
      "Title": "Erlang 2017 - : Session 6",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Items": [
        "plmw-icfp-2017-gradual-typing",
        "plmw-icfp-2017-tbd"
      ],
      "Key": "7f6cc89e-7e00-4481-89a3-362ed0ae50ba",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 15:00",
      "Title": "PLMW 2017 - : Session 3",
      "Type": "Events"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Items": ["plmw-icfp-2017-how-to-write-papers-give-talks"],
      "Key": "35c575c5-2954-4223-83cf-e57fd0b79fbd",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:30",
      "Title": "PLMW 2017 - : Session 4",
      "Type": "Events"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Items": ["scheme-2017-papers-keynote-sam-tobin-hochstadt"],
      "Key": "483b7210-071e-4ae8-8a32-17ef5a51c495",
      "Location": "Mathematical Institute | L4",
      "Time": "09:10 - 10:10",
      "Title": "Scheme 2017 - : Session 1",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["grahamhutton"],
      "ChairsString": "Graham Hutton",
      "Day": "2017-09-04",
      "Items": [
        "icfp-2017-papers-faster-coroutine-pipelines",
        "icfp-2017-papers-a-pretty-but-not-greedy-printer-functional-pearl-",
        "icfp-2017-papers-generic-functional-parallel-algorithms-scan-and-fft",
        "icfp-2017-papers-functional-pearl-a-unified-approach-to-solving-seven-programming-problems"
      ],
      "Key": "371a707f-0e29-4974-b292-d4a90dc53e7b",
      "Location": "Mathematical Institute | L1",
      "Time": "13:00 - 14:30",
      "Title": "Research Papers: Functional Programming Techniques",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Items": [
        "tyde-2017-papers-affine-killing",
        "tyde-2017-papers-on-ringads-and-foldables"
      ],
      "Key": "551e563e-53eb-477a-8d24-e68af59c7b81",
      "Location": "Mathematical Institute | L2",
      "Time": "15:30 - 16:20",
      "Title": "TyDe 2017 - : Extended abstracts 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Chairs": ["samlindley"],
      "ChairsString": "Sam Lindley",
      "Day": "2017-09-07",
      "Items": ["mlfamilyworkshop-2017-papers-welcome"],
      "Key": "fde398d2-25df-4d77-98e8-b845a836b514",
      "Location": "Mathematical Institute | L3",
      "Time": "09:00 - 09:05",
      "Title": "ML 2017 - : Welcome",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Items": [
        "mlfamilyworkshop-2017-papers-making-sml-a-general-purpose-high-performance-language",
        "mlfamilyworkshop-2017-papers-efficient-representation-of-large-dynamic-sequences-in-ml"
      ],
      "Key": "fda6f749-4e61-4b66-8454-da9cac485a47",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:20",
      "Title": "ML 2017 - : Performance",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Key": "8a49c0cd-3bb9-4515-a61b-cf46a57d7227",
      "Location": "Mathematical Institute | L4",
      "Time": "16:50 - 17:40",
      "Title": "FHPC 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Key": "abda00bc-ea62-457f-9b2a-ac245e706f63",
      "Location": "Mathematical Institute | L2",
      "Time": "09:10 - 10:10",
      "Title": "TyDe 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Key": "04f9758c-48b6-42ee-87c5-b6a4d663dee6",
      "Location": "Mathematical Institute | L4",
      "Time": "10:30 - 11:20",
      "Title": "FHPC 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Key": "6e915560-9fb1-48a0-93ab-e3d19fde867d",
      "Location": "Mathematical Institute | L4",
      "Time": "09:10 - 10:00",
      "Title": "Scheme 2017 - ",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Items": [
        "hope-2017-papers-structured-asynchrony-with-algebraic-effects",
        "hope-2017-papers-logical-relations-for-algebraic-effects"
      ],
      "Key": "2d3e5ad5-5442-4a15-9b6a-19967f220843",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:30",
      "Title": "HOPE 2017 - : Effects",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["samtobinhochstadt"],
      "ChairsString": "Sam Tobin-Hochstadt",
      "Day": "2017-09-05",
      "Items": [
        "icfp-2017-papers-persistence-for-the-masses-rrb-vectors-in-a-systems-language",
        "icfp-2017-papers-verified-low-level-programming-embedded-in-f-",
        "icfp-2017-papers-verifying-efficient-function-calls-in-cakeml",
        "icfp-2017-papers-better-living-through-operational-semantics-an-optimizing-compiler-for-radio-protocols"
      ],
      "Key": "4c93b70d-93bb-4553-a647-6ae954421ab5",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 12:00",
      "Title": "Research Papers: Low-level and Systems Programming",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Items": ["tyde-2017-papers-cogent-giving-systems-engineers-a-stepping-stone"],
      "Key": "ac72fd25-6bd7-423f-afae-6c74514bc032",
      "Location": "Mathematical Institute | L2",
      "Time": "12:00 - 12:25",
      "Title": "TyDe 2017 - : Extended abstracts 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Items": [
        "hope-2017-papers-higher-order-programming-is-an-effect",
        "hope-2017-papers-a-monadic-solution-to-the-cartwright-felleisen-wadler-conjecture"
      ],
      "Key": "f233b65f-1cba-416b-9264-138743f6bc95",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:30",
      "Title": "HOPE 2017 - : Modular Semantics",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Items": ["plmw-icfp-2017-panel-discussion-careers-in-programming-languages"],
      "Key": "46f3d5b1-0680-4214-84e3-c9d6ffe2ed03",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:40",
      "Title": "PLMW 2017 - : Session 5",
      "Type": "Events"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Key": "5e85f449-3ddd-4cdd-b211-6302d70e770e",
      "Location": "Mathematical Institute | L3",
      "Time": "09:10 - 10:10",
      "Title": "ML 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Items": [
        "fhpc-2017-papers-ziria-demo",
        "fhpc-2017-papers-panel-discussion"
      ],
      "Key": "2c563c3d-3b34-4681-96d4-2e0064e8adc6",
      "Location": "Mathematical Institute | L4",
      "Time": "16:50 - 17:50",
      "Title": "FHPC 2017 - : Demo and Panel",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["kathrynegray"],
      "ChairsString": "Kathryn E. Gray",
      "Day": "2017-09-04",
      "Items": [
        "icfp-2017-papers-super-8-the-story-of-making-movies-a-functional-pearl",
        "icfp-2017-papers-testing-and-debugging-functional-reactive-programming",
        "icfp-2017-papers-lock-step-simulation-is-child-s-play",
        "icfp-2017-papers-scaling-up-functional-programming-education-under-the-hood-of-the-ocaml-mooc"
      ],
      "Key": "82750a0e-5ff3-4c5f-bafd-dbee34e27227",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 12:00",
      "Title": "Research Papers: Art and Education",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Items": [
        "scheme-2017-papers-paper-toward-parallelizing-control-flow-analysis-with-datalog",
        "scheme-2017-papers-lightning-gerbil-on-gambit-as-they-say-racket-on-chez"
      ],
      "Key": "3af62a6d-f271-49ca-97a9-329969125688",
      "Location": "Mathematical Institute | L4",
      "Time": "14:00 - 15:00",
      "Title": "Scheme 2017 - : Session 4",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Items": ["plmw-icfp-2017-tbd2"],
      "Key": "f3db162b-c58d-46cd-9ce6-d311fa6f56cf",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:30",
      "Title": "PLMW 2017 - : Session 2",
      "Type": "Events"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Chairs": ["samlindley"],
      "ChairsString": "Sam Lindley",
      "Day": "2017-09-07",
      "Items": ["mlfamilyworkshop-2017-papers-state-machines-all-the-way-down"],
      "Key": "84f2c1b2-a844-44fd-90d1-3eeb7890d785",
      "Location": "Mathematical Institute | L3",
      "Time": "09:05 - 10:00",
      "Title": "ML 2017 - : Invited talk",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Items": ["scheme-2017-papers-welcome"],
      "Key": "ffa45e97-b71a-4f95-8245-9d371c88927d",
      "Location": "Mathematical Institute | L4",
      "Time": "09:00 - 09:10",
      "Title": "Scheme 2017 - : Session 0",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["alexandrasilva"],
      "ChairsString": "Alexandra Silva",
      "Day": "2017-09-04",
      "Items": [
        "icfp-2017-papers-prototyping-a-query-compiler-using-coq-experience-report-",
        "icfp-2017-papers-a-framework-for-adaptive-differential-privacy",
        "icfp-2017-papers-symbolic-conditioning-of-arrays-in-probabilistic-programs"
      ],
      "Key": "04e4ea8a-9202-43b4-818b-7e0958a12276",
      "Location": "Mathematical Institute | L1",
      "Time": "15:00 - 16:10",
      "Title": "Research Papers: Applications",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Items": ["fhpc-2017-papers-keynote-1-title-to-be-announced"],
      "Key": "fac4465c-7d8c-4106-b91d-633163294b9b",
      "Location": "Mathematical Institute | L4",
      "Time": "09:10 - 10:10",
      "Title": "FHPC 2017 - : First Keynote",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Friday, 8 September 2017 \nVenue &amp; Registration Details \nFor registration, please see the ICFP 2017 web site at: http://icfp17.sigplan.org/ \nWorkshop Objectives \nThe Erlang Workshop aims to bring together the open source, academic, and industrial communities of Erlang, to discuss technologies and languages related to Erlang. The Erlang model of concurrent programming has been widely emulated, for example by Akka in Scala, and even new programming languages were designed atop of the Erlang VM, such as Elixir. Therefore we would like to broaden the scope of the workshop to include systems like those mentioned above. \nThe workshop will enable participants to familiarize themselves with recent developments on new techniques and tools, novel applications, draw lessons from users\u2019 experiences and identify research problems and common areas relevant to the practice of Erlang, Erlang-like languages, functional programming, distribution, concurrency etc.",
      "Day": "2017-09-08",
      "Items": [
        "erlang-2017-papers-construction-and-formal-verification-of-a-fault-tolerant-distributed-mutual-exclusion-algorithm",
        "erlang-2017-papers-towards-an-isabelle-hol-formalisation-of-core-erlang"
      ],
      "Key": "3876953e-7e17-43ce-a8ad-1f7341732865",
      "Location": "Mathematical Institute | L6",
      "Time": "10:30 - 11:20",
      "Title": "Erlang 2017 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "UPDATE: artifact submission extended to 30st of June 2017 \u2013 submission open at \nhttps://icfp-fhpc17aec.hotcrp.com/ \nThis year FHPC provides authors the opportunity to submit for evaluation any artifacts that accompany their papers. The dissemination of artifacts promotes reproducibility, and enables authors to build on top of each others\u2019 work, while it can also help to more unambiguously resolve questions about cases not considered by the original authors. \nFor the purpose of FHPC, we plan to reward selected artifacts with additional presentation time in a dedicated slot during the workshop \u2013 for example for demonstrating (i) reproducibility of results or (ii) practical usage of the framework (visualization, demos, etc). \nArtifact Details: \nThe artifact-evaluation committee (AEC) will accept any artifact that authors wish to submit. Obviously, the better the artifact is packaged, the more likely the AEC can actually work with it. We ask the authors to provide provide the title of the FHPC paper submission, together with three files: \n \n  a .pdf file that provides detailed instructions to the reviewers about how to install the artifact and what to look for in the evaluations  \n  an archive .zip or .tar.gz containing the artifact  \n  the submitted FHPC\u201917 paper (.pdf file)  \n \nThe AE process is thought to encourage an open and constructive communication (by means HotCRP) between (anonymous) reviewers and authors. \nSubmission of an artifact does not contain tacit permission to make its content public. AEC members will be instructed that they may not publicise any part of your artifact during or after completing evaluation, nor retain any part of it after evaluation. Thus, you are free to include models, data files, proprietary binaries, and similar items in your artifact. The AEC organisers strongly encourage you to anonymise any data files that you submit. \nSubmission Deadline: 9th of June 2017 anywhere on earth \n(extended from 26th of May 2017) \nUPDATE: FHPC\u201917 papers length extended to up to 12 pages! \nWhen \nThursday Sept. 7th, 2017. \nRegistration Details \nPlease see ICFP 2017 web site at: http://icfp17.sigplan.org/ \nPrevious FHPC Website: \nhttps://sites.google.com/site/fhpcworkshops/ \nWorkshop Objectives \nThe 6th ACM SIGPLAN Workshop on Functional High-Performance Computing workshop aims at bringing together researchers exploring uses of functional (or more generally, declarative or high-level) programming technology in application domains where high performance is essential. The aim of the meeting is to enable sharing of results, experiences, and novel ideas about how high-level, declarative specifications of computationally challenging problems can serve as maintainable and portable code that approaches (or even exceeds) the performance of machine-oriented (low-level) imperative implementations. \nAll aspects of performance critical programming and parallel programming are in-scope for the workshop, irrespective of hardware target. This includes both traditional large-scale scientific computing (HPC), as well as work targeting single node systems with SMPs, GPUs, FPGAs, or embedded processors. FHPC 2017 seeks to encourage a range of submissions, focusing on work in progress and facilitating early exchange of ideas and open discussion on innovative and/or emerging results. Experience reports are also welcome.",
      "Day": "2017-09-07",
      "Key": "689f1f35-228d-4fae-bfac-1e8bf5d45e3c",
      "Location": "Mathematical Institute | L4",
      "Time": "12:00 - 12:25",
      "Title": "FHPC 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["markjones"],
      "ChairsString": "Mark Jones",
      "Day": "2017-09-06",
      "Items": [
        "icfp-2017-papers-constrained-type-families",
        "icfp-2017-papers-automating-sized-type-inference-for-complexity-analysis",
        "icfp-2017-papers-inferring-scope-through-syntactic-sugar"
      ],
      "Key": "aff9efb5-c40c-42ba-b553-58cf38a7faac",
      "Location": "Mathematical Institute | L1",
      "Time": "16:40 - 17:50",
      "Title": "Research Papers: Inference and Analysis",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ML is a family of programming languages that includes Standard ML, OCaml, F#, Alice ML, Dependent ML, Flow Caml, JoCaml, Manticore, MetaOCaml, SML#, and many others. All ML languages share several fundamental traits, besides a good deal of syntax. They are higher-order, strict, mostly pure, and typed, with algebraic and other data types. Their type systems are derived from Hindley-Milner. The development of these languages has inspired a significant body of computer science research and influenced the design of many other programming languages, including Haskell, Rust, and Scala. \nML workshops have been held in affiliation with ICFP continuously since 2005. This workshop specifically aims to recognise the entire extended ML family and to provide a forum for presenting and discussing common issues, both practical (compilation techniques, implementations of concurrency and parallelism, programming for the Web) and theoretical (fancy types, module systems, metaprogramming). The scope of the workshop includes all aspects of the design, semantics, theory, application, implementation, and teaching of the members of the ML family. We also encourage presentations from related languages (such as ATS, Eff, F*, Koka, Links, Rust, Scala, Swift, etc.), to exchange experience of further developing ML ideas. Last year\u2019s ML Family workshop included talks covering eight different ML dialects and related languages: Eff, F#, F*, Links, Manticore, OCaml, SML, and SML#. \nThe ML family workshop will be held in close coordination with the OCaml Users and Developers Workshop. \nThe official ML family workshop 2017 home page is here. \nInvited speaker \nEdwin Brady (University of St Andrews, UK) \n \n State machines all the way down \n A useful pattern in dependently typed programming is to define a state transition system, for example the states and operations in a network protocol, as an indexed monad. We index each operation by its input and output states, thus guaranteeing that operations satisfy pre- and post-conditions, by typechecking. However, what if we want to write a program using several systems at once? What if we want to define a high level state transition system, such as a network application protocol, in terms of lower level states, such as network sockets and mutable variables? \n In this talk, I will present an architecture for dependently typed applications based on a hierarchy of state transition systems, implemented in a generic data type ST. This is based on a monad indexed by contexts of resources, allowing us to reason about multiple state transition systems in the type of a function. Using ST, we show: how to implement a state transition system as a dependent type, with type level guarantees on its operations; how to account for operations which could fail; how to combine state transition systems into a larger system; and, how to implement larger systems as a hierarchy of state transition systems. I will illustrate the system with a high level network application protocol, implemented in terms of POSIX network sockets. \n",
      "Day": "2017-09-07",
      "Items": [
        "mlfamilyworkshop-2017-papers-mergeable-types",
        "mlfamilyworkshop-2017-papers-tierless-modules",
        "mlfamilyworkshop-2017-papers-first-class-subtypes"
      ],
      "Key": "fb8de202-44fe-4f9e-8483-5e590b66241d",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:45",
      "Title": "ML 2017 - : Types and modules",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Items": [
        "plmw-icfp-2017-a-few-frank-remarks",
        "plmw-icfp-2017-compositional-compiler-correctness"
      ],
      "Key": "9a866651-8833-410d-90ba-b3b1a3d6e2cc",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:30",
      "Title": "PLMW 2017 - : Session 1",
      "Type": "Events"
    },
    {
      "Abstract": "The HOPE workshop series are intended to bring together researchers interested in the design, semantics, implementation, and verification of higher-order effectful programs. They are informal, consisting of invited talks, contributed talks on work in progress, and open-ended discussion sessions. They are dedicated to John Reynolds, whose work is an inspiration to us all. \nThe 6th ACM SIGPLAN Workshop on Higher-Order Programming with Effects will take place on Sunday, September 3, 2017, that is, the day before ICFP 2017, in Oxford, United Kingdom. \nGoals of the Workshop \nA recurring theme in many papers at ICFP, and in the research of many ICFP attendees, is the interaction of higher-order programming with various kinds of effects: storage effects, I/O, control effects, concurrency, etc. While effects are of critical importance in many applications, they also make code harder to build, maintain, and reason about. Higher-order languages (both functional and object-oriented) provide a variety of abstraction mechanisms to help \u201ctame\u201d or \u201cencapsulate\u201d effects (e.g. monads, ADTs, ownership types, typestate, first-class events, transactions, Hoare Type Theory, session types, substructural and region-based type systems), and a number of different semantic models and verification technologies have been developed in order to codify and exploit the benefits of this encapsulation (e.g. bisimulations, step-indexed Kripke logical relations, higher-order separation logic, game semantics, various modal logics). But there remain many open problems, and the field is highly active. \nThe goal of the HOPE workshop is to bring researchers from a variety of different backgrounds and perspectives together to exchange new and exciting ideas concerning the design, semantics, implementation, and verification of higher-order effectful programs. \nWe want HOPE to be as informal and interactive as possible. The program will thus involve a combination of invited talks, contributed talks about work in progress, and open-ended discussion sessions. There will be no published proceedings, but participants will be invited to submit working documents, talk slides, etc., to be made available online. \nPrevious Editions \nThis is the 6th edition of the HOPE workshop. \nThe 5th edition of the workshop was held in Nara, Japan, in September 2016. \nThe 4th edition of the workshop was held in Vancouver, Canada, in August 2015. \nThe 3rd edition of the workshop was held in Gothenburg, Sweden, in August 2014. \nThe 2nd edition of the workshop was held in Boston, Massachusetts, in September 2013. \nThe 1st edition of the workshop was held in Copenhagen, Denmark, in September 2012.",
      "Day": "2017-09-03",
      "Key": "3912914d-10bf-46ec-ad46-d88b9288aa35",
      "Location": "Mathematical Institute | L3",
      "Time": "12:00 - 12:25",
      "Title": "HOPE 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The workshop on Type-Driven Development aims to show how static type information may be used effectively in the development of computer programs. The workshop brings together leading researchers and practitioners who are using or exploring types as a means of program development. \nWe welcome all contributions, both theoretical and practical, on a range of topics including: \n \n dependently typed programming; \n generic programming; \n design and implementation of programming languages, exploiting types in novel ways; \n exploiting typed data, data dependent data, or type providers; \n static and dynamic analyses of typed programs; \n tools, IDEs, or testing tools exploiting type information; \n pearls, being elegant, instructive examples of types used in the derivation, calculation, or construction of programs. \n \nThe official TyDe workshop 2017 home page is here. \nInvited speaker \nAndrew Kennedy (Facebook, UK) \n \n Driving types into PHP \n Facebook\u2019s main website, ads platform, and much of its internal tooling is implemented in PHP, a language not known for elegance or best practice in programming language design. Five years ago Facebook embarked on an ambitious project to migrate its code base to Hack, which takes the syntax of PHP, removes the worst features, and adds static typing and modern constructs for asynchronous programming. Its type system is an interesting mixture of ideas from Java, C#, Scala, and Caml, with flow-sensitive typing thrown in to capture typical PHP idioms. Type-driven development is now more than accepted: developers demand ever richer types, and evolution of the codebase goes hand-in-hand with evolution of the type system and programming language. Development-driven typing, anyone? \n",
      "Day": "2017-09-03",
      "Key": "dc72bb18-fb9f-44a5-968d-30ca467dcb60",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 11:20",
      "Title": "TyDe 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "ICFP 2017 provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries.",
      "Chairs": ["johnhughes"],
      "ChairsString": "John Hughes",
      "Day": "2017-09-05",
      "Items": [
        "icfp-2017-papers-compiling-to-categories",
        "icfp-2017-papers-visitors-unchained",
        "icfp-2017-papers-staged-generic-programming"
      ],
      "Key": "2b24c128-39c0-4ee9-aeeb-76b04455c2c0",
      "Location": "Mathematical Institute | L1",
      "Time": "16:40 - 17:50",
      "Title": "Research Papers: Program Construction",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Chairs": ["neelakantankrishnaswami"],
      "ChairsString": "Neelakantan R. Krishnaswami",
      "Day": "2017-09-03",
      "Items": ["plmw-icfp-2017-keynote"],
      "Key": "439ac752-1ebb-49af-8bc9-05a183daad39",
      "Location": "Mathematical Institute | L1",
      "Time": "09:10 - 10:00",
      "Title": "PLMW 2017 - : Keynote",
      "Type": "Events"
    },
    {
      "Abstract": "We proudly announce the SIGPLAN Programming Languages Mentoring Workshop at ICFP. The purpose of this mentoring workshop is to encourage senior undergraduate and beginning graduate students to pursue careers in programming language research. We are specifically interested in attracting groups who have traditionally not had the opportunity to participate in research in functional programming. This workshop will be a combination of learning about the work being done in several areas of programming language research and mentoring with respect to helping students prepare for graduate school and the rest of their career. We will bring together leaders in programming language research from academia and industry to give talks on the kind of research typically performed after obtaining a Ph.D. The workshop will engage students, specifically interested in programming language research, in a process of imagining how they might contribute to the world. \nThis workshop is part of the activities surrounding the ICFP conference and takes place the day before the main conference. One goal of the workshop is to make the ICFP conference more accessible to newcomers. We hope that participants will stay through the entire conference. \nWorkshop Focus \nOur effort is inspired by and modeled on the highly successful mentoring workshops associated with many recent conferences, including past ICFPs, POPL, and LICS. Our focus for this workshop will be undergraduates and early career (first or second year) graduate students, and undergraduates who are seriously considering a research career. \nTravel Scholarship Applications (Due 31 July) \nPlease fill out this form by 31 July to apply for travel funding. \nThese scholarships will provide funds towards airfare, hotel, and registration fees for attendance at both the workshop and ICFP, but are limited. We welcome students with alternative sources of travel funding to attend PLMW as well. \nSelected participants will be notified by 2 August and will need to pre-register and commit to attending the workshop by August 4. Applicants who apply after July 31 may be eligible to receive funding, if funds remain. \nPlease email the organizers if you have any questions.",
      "Day": "2017-09-03",
      "Key": "5fe467d3-9858-480b-bdc9-03fd83bb1117",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 14:50",
      "Title": "PLMW 2017 - ",
      "Type": "Events"
    },
    {
      "Abstract": "The Scheme and Functional Programming Workshop is a yearly meeting of programming language practitioners who share a sense of aesthetic as embodied by the Algorithmic Language Scheme: universality through minimalism, adequation through self-improvement, flexibility through rigorous design, and composability through orthogonal features.",
      "Day": "2017-09-03",
      "Items": [
        "scheme-2017-papers-paper-scalar-and-tensor-parameters-for-importing-tensor-index-notation-including-einstein-summation-notation",
        "scheme-2017-papers-lightning-talk-extending-the-lisp-model-from-cons-cells-to-triples-from-trees-to-hypergraphs"
      ],
      "Key": "bd0a119f-3b7c-43f6-962f-c7dc968ec8a3",
      "Location": "Mathematical Institute | L4",
      "Time": "10:30 - 11:30",
      "Title": "Scheme 2017 - : Session 2",
      "Type": "Accepted Papers & Lightning Talks"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Chairs": ["henriknilsson"],
      "ChairsString": "Henrik Nilsson",
      "Day": "2017-09-09",
      "Items": [
        "farm-2017-papers-unified-media-programming-an-algebraic-approach",
        "farm-2017-papers-demo-octopus-a-high-level-fast-3d-animation-language"
      ],
      "Key": "d7a28fdd-ef89-411f-8c47-213cd36b4531",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:40",
      "Title": "FARM 2017 - : Session 6: Papers/Demos",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Chairs": ["ivanperez1"],
      "ChairsString": "Ivan Perez",
      "Day": "2017-09-09",
      "Items": [
        "farm-2017-papers-demo-the-arpeggigon-a-functional-reactive-musical-automaton",
        "farm-2017-papers-demo-vivid-sound-synthesis-with-haskell-and-supercollider",
        "farm-2017-papers-demo-african-polyphony-and-polyrhythm"
      ],
      "Key": "022f3b8f-e7af-4033-a5ff-9c59381988c5",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:30",
      "Title": "FARM 2017 - : Session 2: Demos (Music)",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Day": "2017-09-09",
      "Key": "bc78f3a0-50fd-4e97-b8b8-1eedc698acff",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:20",
      "Title": "FARM 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Day": "2017-09-09",
      "Key": "fc72b07d-a0c6-417b-bcb1-b75727fb3b0b",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 14:50",
      "Title": "FARM 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Day": "2017-09-09",
      "Key": "db25b6d7-4b41-49d5-b1f6-1223661c8d82",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:50",
      "Title": "FARM 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Day": "2017-09-09",
      "Key": "e2e80a99-a0ba-4bfb-9a27-3cb12f4a4f57",
      "Location": "Mathematical Institute | L3",
      "Time": "12:00 - 12:25",
      "Title": "FARM 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Day": "2017-09-09",
      "Key": "dcd99107-e646-4777-8cbf-74544b67379c",
      "Location": "Mathematical Institute | L3",
      "Time": "09:10 - 10:10",
      "Title": "FARM 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Chairs": ["davidjanin"],
      "ChairsString": "David Janin",
      "Day": "2017-09-09",
      "Items": [
        "farm-2017-papers-gale-graphic-adventure-library-and-engine",
        "farm-2017-papers-demo-ait-a-concatenative-language-for-creative-programming"
      ],
      "Key": "3951e7c3-294a-4cfa-9795-2daa2e2874f1",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:20",
      "Title": "FARM 2017 - : Session 5: Papers/Demos",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Chairs": ["jeanbresson"],
      "ChairsString": "Jean Bresson",
      "Day": "2017-09-09",
      "Items": ["farm-2017-papers-faust-for-functional-programmers"],
      "Key": "cce03209-31d2-42f4-bc47-d5c4cfd8ab11",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 15:00",
      "Title": "FARM 2017 - : Session 4: Paper/Tutorial",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Day": "2017-09-09",
      "Items": ["farm-2017-papers-welcome"],
      "Key": "97ec22e4-b5be-4d8c-90d2-f9d6538ec792",
      "Location": "Mathematical Institute | L3",
      "Time": "09:00 - 09:10",
      "Title": "FARM 2017 - : Introduction",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Day": "2017-09-09",
      "Key": "f4939bf2-a739-43fb-82fc-efbce063e99d",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:30",
      "Title": "FARM 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Chairs": ["jeanbresson"],
      "ChairsString": "Jean Bresson",
      "Day": "2017-09-09",
      "Items": [
        "farm-2017-papers-a-categorial-grammar-for-music-and-its-use-in-automatic-melody-generation",
        "farm-2017-papers-representation-of-musical-notation-in-haskell"
      ],
      "Key": "79bf609f-38de-45f0-9fdd-30317004edd9",
      "Location": "Mathematical Institute | L3",
      "Time": "09:10 - 10:00",
      "Title": "FARM 2017 - : Session 1: Papers/Demos (Music)",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The ACM SIGPLAN International Workshop on Functional Art, Music, Modelling and Design (FARM) gathers together people who are harnessing functional techniques in the pursuit of creativity and expression. \nFunctional Programming has emerged as a mainstream software development paradigm, and its artistic and creative use is booming. A growing number of software toolkits, frameworks and environments for art, music and design now employ functional programming languages and techniques. FARM is a forum for exploration and critical evaluation of these developments, for example to consider potential benefits of greater consistency, tersity, and closer mapping to a problem domain. \nFARM\u2019s official home page is here.",
      "Chairs": ["michaelsperber"],
      "ChairsString": "Michael Sperber",
      "Day": "2017-09-09",
      "Items": ["farm-2017-papers-modelling-the-way-mathematics-is-actually-done"],
      "Key": "9f0a6af4-703b-472e-9c0d-0dd2ffdcefb0",
      "Location": "Mathematical Institute | L3",
      "Time": "12:00 - 12:30",
      "Title": "FARM 2017 - : Session 3: Paper",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Items": [
        "ocaml-2017-papers-invited-talk-new-contributors",
        "ocaml-2017-papers-the-state-of-the-ocaml-platform-september-2017"
      ],
      "Key": "7def47c8-deb6-461e-b4d3-5ab9703d7e30",
      "Location": "Mathematical Institute | L3",
      "Time": "09:10 - 10:10",
      "Title": "OCaml 2017 - : Talk session 1",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Items": [
        "ocaml-2017-papers-rotor-first-steps-towards-a-refactoring-tool-for-ocaml",
        "ocaml-2017-papers-a-memory-model-for-multicore-ocaml",
        "ocaml-2017-papers-bioinformatics-the-typed-tagless-final-way"
      ],
      "Key": "9df5bc11-1b34-4c88-af28-4dc6c6380476",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 15:00",
      "Title": "OCaml 2017 - : Talk session 3",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Items": [
        "ocaml-2017-papers-owl-a-general-purpose-numerical-library-in-ocaml",
        "ocaml-2017-papers-extending-ocaml-s-open",
        "ocaml-2017-papers-genspio-generating-shell-phrases-in-ocaml"
      ],
      "Key": "f6ef2f6b-9073-4868-a1dc-8d772c223955",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:30",
      "Title": "OCaml 2017 - : Talk session 2",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Key": "7dd08d89-a32b-4270-9998-d7c82e2787e1",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:50",
      "Title": "OCaml 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Items": [
        "ocaml-2017-papers-flash-poster-presentation",
        "ocaml-2017-papers-jbuilder-a-modern-approach-to-ocaml-development",
        "ocaml-2017-papers-msat-an-ocaml-sat-solver",
        "ocaml-2017-papers-ocamli-interpreted-ocaml",
        "ocaml-2017-papers-tyre-typed-regular-expressions"
      ],
      "Key": "d9d451a5-554a-49a0-8b2b-8e5d7eeb01c6",
      "Location": "Mathematical Institute | L3",
      "Time": "11:35 - 12:30",
      "Title": "OCaml 2017 - : Poster session",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Key": "95dc2aab-b884-40c8-bdb2-def4974090d2",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:20",
      "Title": "OCaml 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Key": "bfcfa1c9-7d19-4129-b1b5-5b1f974d275d",
      "Location": "Mathematical Institute | L3",
      "Time": "10:30 - 11:20",
      "Title": "OCaml 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Items": ["ocaml-2017-papers-opening"],
      "Key": "e0e150b3-408b-4f2d-b634-6686fa9760a5",
      "Location": "Mathematical Institute | L3",
      "Time": "09:00 - 09:10",
      "Title": "OCaml 2017 - : Opening",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Key": "237a0a96-ec17-4ee5-803e-5d9bd9332911",
      "Location": "Mathematical Institute | L3",
      "Time": "14:00 - 14:50",
      "Title": "OCaml 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Items": [
        "ocaml-2017-papers-a-b-tree-library-for-ocaml",
        "ocaml-2017-papers-wodan-a-pure-ocaml-flash-aware-filesystem-library",
        "ocaml-2017-papers-tezos-the-ocaml-crypto-ledger"
      ],
      "Key": "acd0d213-03dd-4a57-8437-b38f1a207c4d",
      "Location": "Mathematical Institute | L3",
      "Time": "15:30 - 16:30",
      "Title": "OCaml 2017 - : Talk session 4",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Key": "262164db-040c-42f1-84a0-7b3f04d54acd",
      "Location": "Mathematical Institute | L3",
      "Time": "09:10 - 10:00",
      "Title": "OCaml 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Key": "8d8b3506-3181-46c2-acdd-384c66a3cda5",
      "Location": "Mathematical Institute | L3",
      "Time": "12:00 - 12:30",
      "Title": "OCaml 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The OCaml Users and Developers Workshop brings together industrial users of OCaml with academics and hackers who are working on extending the language, type system and tools. Previous editions have been colocated with ICFP 2012 in Copenhagen, ICFP 2013 in Boston, ICFP 2014 in Gothenburg, ICFP 2015 in Vancouver and ICFP 2016 in Nara, following the OCaml Meetings in Paris in 2010 and 2011. \nOCaml 2017 will be held on September 8th, 2017 in Oxford, UK, colocated with ICFP 2017.",
      "Day": "2017-09-08",
      "Items": [
        "ocaml-2017-papers-component-based-program-synthesis-in-ocaml",
        "ocaml-2017-papers-testing-with-crowbar"
      ],
      "Key": "9493c04c-58a5-42d4-b38d-2cf68374f40f",
      "Location": "Mathematical Institute | L3",
      "Time": "16:50 - 17:40",
      "Title": "OCaml 2017 - : Talk session 5",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-04",
      "Items": [
        "fscd-2017-relating-system-f-and-2-a-case-study-in-coq-abella-and-beluga",
        "fscd-2017-nested-multisets-hereditary-multisets-and-syntactic-ordinals-in-isabelle-hol"
      ],
      "Key": "53f62cd3-e436-47de-9e37-7aee6c64197d",
      "Location": "Mathematical Institute | L2",
      "Time": "15:00 - 16:00",
      "Title": "FSCD 2017 - : Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-04",
      "Items": [
        "fscd-2017-a-polynomial-time-algorithm-for-the-lambek-calculus-with-brackets-of-bounded-order",
        "fscd-2017-a-sequent-calculus-for-semi-associativity",
        "fscd-2017-combinatorial-flows-and-their-normalisation"
      ],
      "Key": "24a15e24-b4e1-4518-9f29-23ffa1a9ab92",
      "Location": "Mathematical Institute | L2",
      "Time": "16:40 - 18:10",
      "Title": "FSCD 2017 - : Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-04",
      "Items": ["fscd-2017-welcome-message"],
      "Key": "196a35c3-33f1-4868-9e78-51980f6b7a80",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 10:45",
      "Title": "FSCD 2017 - : Welcome",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-06",
      "Items": ["fscd-2017-quantitative-semantics-for-probabilistic-programming"],
      "Key": "c6885fdd-00f9-41d4-8698-d5688781ecbb",
      "Location": "Mathematical Institute | L2",
      "Time": "09:00 - 10:00",
      "Title": "FSCD 2017 - : Session 10",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-07",
      "Items": [
        "fscd-2017-arrays-and-references-in-resource-aware-ml",
        "fscd-2017-the-complexity-of-principal-inhabitation",
        "fscd-2017-types-as-resources-for-classical-natural-deduction"
      ],
      "Key": "e16afe70-c9fc-49fa-9f43-7657754b451c",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 11:59",
      "Title": "FSCD 2017 - : Session 16",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-06",
      "Items": ["fscd-2017-termination-and-complexity-competition-2017"],
      "Key": "c89ee2f6-7986-47cd-a9ab-022303e63f09",
      "Location": "Mathematical Institute | L2",
      "Time": "17:10 - 17:20",
      "Title": "FSCD 2017 - : Termination and Complexity Competition 2017",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-05",
      "Items": [
        "fscd-2017-generalized-refocusing-from-hybrid-strategies-to-abstract-machines",
        "fscd-2017-observably-deterministic-concurrent-strategies-and-intensional-full-abstraction-for-parallel-or",
        "fscd-2017-refutation-of-sall-s-longstanding-conjecture"
      ],
      "Key": "c01369f8-997a-4b7c-b4f5-928ea27f8f7b",
      "Location": "Mathematical Institute | L2",
      "Time": "16:40 - 18:10",
      "Title": "FSCD 2017 - : Session 9",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-06",
      "Items": [
        "fscd-2017-a-fibrational-framework-for-substructural-and-modal-logics",
        "fscd-2017-dinaturality-between-syntax-and-semantics",
        "fscd-2017-models-of-type-theory-based-on-moore-paths"
      ],
      "Key": "08197e19-72fe-498c-b87a-c48cdb2f8c8b",
      "Location": "Mathematical Institute | L2",
      "Time": "13:00 - 14:30",
      "Title": "FSCD 2017 - : Session 12",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-06",
      "Items": [
        "fscd-2017-displayed-categories",
        "fscd-2017-list-objects-with-algebraic-structure",
        "fscd-2017-there-is-only-one-notion-of-differentiation"
      ],
      "Key": "b47f99bf-bf89-4a08-91da-989bb6e3139e",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 12:00",
      "Title": "FSCD 2017 - : Session 11",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-06",
      "Items": ["fscd-2017-fscd-general-meeting"],
      "Key": "a2565c92-7607-4f3e-8de7-99402cc25399",
      "Location": "Mathematical Institute | L2",
      "Time": "17:20 - 18:10",
      "Title": "FSCD 2017 - : FSCD General Meeting",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-06",
      "Items": [
        "fscd-2017-b-hm-reduction-in-infinitary-term-graph-rewriting-systems",
        "fscd-2017-infinite-runs-in-abstract-completion"
      ],
      "Key": "be0bd3b1-17bf-4d15-b2aa-8933cdff9b3e",
      "Location": "Mathematical Institute | L2",
      "Time": "15:00 - 16:00",
      "Title": "FSCD 2017 - : Session 13",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-05",
      "Items": [
        "fscd-2017-confluence-of-an-extension-of-combinatory-logic-by-boolean-constants",
        "fscd-2017-improving-rewriting-induction-approach-for-proving-ground-confluence",
        "fscd-2017-the-confluent-terminating-context-free-substitutive-rewriting-system-for-the-calculus-with-surjective-pairing-and-terminal-type"
      ],
      "Key": "94d45ba5-f897-4d32-86a5-4a8f019efbd6",
      "Location": "Mathematical Institute | L2",
      "Time": "13:00 - 14:30",
      "Title": "FSCD 2017 - : Session 7",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-04",
      "Items": [
        "fscd-2017-polynomial-running-times-for-polynomial-time-oracle-machines",
        "fscd-2017-a-curry-howard-approach-to-church-s-synthesis",
        "fscd-2017-streett-automata-model-checking-of-higher-order-recursion-schemes"
      ],
      "Key": "3bd80160-e386-459d-a122-2ce4621bf412",
      "Location": "Mathematical Institute | L2",
      "Time": "13:00 - 14:30",
      "Title": "FSCD 2017 - : Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-05",
      "Items": ["fscd-2017-uniform-resource-analysis-by-rewriting-strenghts-and-weaknesses"],
      "Key": "db3e40af-deaa-4751-8ee7-2f9267019b8f",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 11:30",
      "Title": "FSCD 2017 - : Session 5",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-07",
      "Items": ["fscd-2017-type-systems-for-the-relational-verification-of-higher-order-programs"],
      "Key": "01db05fe-09f3-4384-8b71-0352c3ab6745",
      "Location": "Mathematical Institute | L2",
      "Time": "09:00 - 10:00",
      "Title": "FSCD 2017 - : Session 15",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-05",
      "Items": ["fscd-2017-continuation-passing-style-for-effect-handlers"],
      "Key": "928963c4-1ffb-4557-a43c-8d7904804168",
      "Location": "Mathematical Institute | L2",
      "Time": "11:30 - 12:00",
      "Title": "FSCD 2017 - : Session 6",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-04",
      "Items": ["fscd-2017-brzozowski-goes-concurrent-a-kleene-theorem-for-pomset-languages"],
      "Key": "43a58651-95d7-4fb8-97d9-11a4814b1482",
      "Location": "Mathematical Institute | L2",
      "Time": "10:45 - 11:45",
      "Title": "FSCD 2017 - : Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-06",
      "Items": ["fscd-2017-negative-translations-and-normal-modality"],
      "Key": "efe1e7e1-bd49-4dd0-bb7c-a9105c4f2780",
      "Location": "Mathematical Institute | L2",
      "Time": "16:40 - 17:10",
      "Title": "FSCD 2017 - : Session 14",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "The Second International Conference on Formal Structures for Computation and Deduction is co-located with ICFP 2017. \nYou can find all information at http://www.cs.ox.ac.uk/conferences/fscd2017/.",
      "Day": "2017-09-05",
      "Items": [
        "fscd-2017-is-the-optimal-implementation-inefficient-elementarily-not",
        "fscd-2017-optimality-and-the-linear-substitution-calculus"
      ],
      "Key": "ba9f2a94-b7c3-46e9-9ce4-4d44cd3ad6f6",
      "Location": "Mathematical Institute | L2",
      "Time": "15:00 - 16:00",
      "Title": "FSCD 2017 - : Session 8",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Items": [
        "haskellsymp-2017-papers-algebraic-graphs-with-class-functional-pearl-",
        "haskellsymp-2017-papers-packrats-parse-in-packs"
      ],
      "Key": "58c44198-c99b-4514-907b-d4c7df9ee516",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:30",
      "Title": "Haskell 2017 - : Day 1, Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "7c99540b-93b8-4014-b6a7-d91bad0e86d7",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:20",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "9d92043f-77e2-4c75-925f-4e72f80506a1",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 14:50",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Items": [
        "haskellsymp-2017-papers-hardware-software-co-design-in-haskell",
        "haskellsymp-2017-papers-streaming-irregular-arrays"
      ],
      "Key": "2171d3ba-7914-4b5a-887c-cd1446676611",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:30",
      "Title": "Haskell 2017 - : Day 2, Session 5",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Items": [
        "haskellsymp-2017-papers-a-meta-edsl-for-distributed-web-applications",
        "haskellsymp-2017-papers-composable-network-stacks-and-remote-monads"
      ],
      "Key": "46f1b123-45cb-4867-aa3c-924705bd00ce",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:50",
      "Title": "Haskell 2017 - : Day 1, Session 6",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "9fdfed60-5ed3-4a1d-b495-6e762ca988c8",
      "Location": "Mathematical Institute | L1",
      "Time": "09:10 - 10:00",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "b34911ac-a38c-4a43-ba2e-6c319f61efc0",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 09:10",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Items": ["haskellsymp-2017-papers-ode-on-a-random-urn-functional-pearl-"],
      "Key": "c06993a3-c2e6-426b-a814-b9bcb0953ef1",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:30",
      "Title": "Haskell 2017 - : Day 1, Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Items": [
        "haskellsymp-2017-papers-elaboration-on-functional-dependencies",
        "haskellsymp-2017-papers-quantified-class-constraints"
      ],
      "Key": "960102ed-1eaa-4551-94bc-ee310a79620a",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 15:00",
      "Title": "Haskell 2017 - : Day 2, Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "6de483e4-dc9f-4b8f-8d22-bbd5bcf51ce6",
      "Location": "Mathematical Institute | L1",
      "Time": "09:10 - 10:10",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Items": [
        "haskellsymp-2017-papers-using-coq-to-write-fast-and-correct-haskell",
        "haskellsymp-2017-papers-a-tale-of-two-provers-verifying-monoidal-string-matching-in-liquid-haskell-and-coq"
      ],
      "Key": "34357de6-e7af-458c-a84b-8a29a8fb490d",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:30",
      "Title": "Haskell 2017 - : Day 1, Session 5",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "2a02ec6b-5001-4b2d-b4cf-e7b8a3efb482",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:25",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Items": ["haskellsymp-2017-papers-algorithmic-music-in-haskell-invited-talk-"],
      "Key": "e92b6f1e-41ce-467b-8e0e-06e7f39a522e",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 10:00",
      "Title": "Haskell 2017 - : Day 2, Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "1b4c55a0-f99a-451d-a438-0f01cc283e76",
      "Location": "Mathematical Institute | L1",
      "Time": "15:30 - 16:20",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "7a8d86b2-6d92-436e-a6c7-df1703a2014c",
      "Location": "Mathematical Institute | L1",
      "Time": "09:10 - 10:00",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "7ddf4bd3-2be0-463c-9f34-6e4b1f65737f",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:20",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "c74c499f-d979-4997-9b4d-19380ea4e8a4",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:40",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "0c562501-bc9a-4c0b-918e-82f03c49fa33",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 14:50",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Items": [
        "haskellsymp-2017-papers-improving-stm-performance-with-transactional-structs",
        "haskellsymp-2017-papers-adaptive-lock-free-data-structures-in-haskell-a-general-method-for-concurrent-implementation-swapping"
      ],
      "Key": "6e5718a3-52fe-42ea-872c-4ee2d02d079a",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:50",
      "Title": "Haskell 2017 - : Day 2, Session 6",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Items": [
        "haskellsymp-2017-papers-quickspec-a-lightweight-theory-exploration-tool-for-programmers-system-demonstration-",
        "haskellsymp-2017-papers-speculate-discovering-conditional-equations-and-inequalities-about-black-box-functions-by-reasoning-from-test-results"
      ],
      "Key": "dfe159dc-d594-4636-9808-c6dd400b4194",
      "Location": "Mathematical Institute | L1",
      "Time": "14:00 - 15:00",
      "Title": "Haskell 2017 - : Day 1, Session 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "15639d28-1cfd-467b-9e78-9c8b0b01942b",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:20",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "6580bf57-6971-4fd8-87e5-70f04b051d2c",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 09:10",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Key": "f7afdfbe-350b-48e2-8e91-55483b4467be",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:25",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "072a20da-34f8-445d-a8f7-5ecc035aad25",
      "Location": "Mathematical Institute | L1",
      "Time": "16:50 - 17:40",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Key": "fe436850-0815-4a4f-83c6-28932800b4c1",
      "Location": "Mathematical Institute | L1",
      "Time": "09:10 - 10:10",
      "Title": "Haskell 2017 - ",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Items": ["haskellsymp-2017-papers-the-linearity-monad"],
      "Key": "d7ac925f-1853-47fc-b53b-3c10c27f3884",
      "Location": "Mathematical Institute | L1",
      "Time": "12:00 - 12:30",
      "Title": "Haskell 2017 - : Day 2, Session 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-08",
      "Items": [
        "haskellsymp-2017-papers-well-typed-music-does-not-sound-wrong-experience-report-",
        "haskellsymp-2017-papers-back-to-the-future-time-travel-in-frp"
      ],
      "Key": "c5d0c2b2-5f6a-4bcc-a9b3-bf114a8a8347",
      "Location": "Mathematical Institute | L1",
      "Time": "10:30 - 11:30",
      "Title": "Haskell 2017 - : Day 2, Session 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Haskell Symposium 2017 web page: https://www.haskell.org/haskell-symposium/2017/ \nDates: 7\u20138 September 2017, Oxford, United Kingdom \nThe ACM SIGPLAN Haskell Symposium 2017 will be co-located with the 2017 International Conference on Functional Programming (ICFP), in Oxford, United Kingdom. The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming. \nTopics of interest include: \n \n  Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo;  \n  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation;  \n  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces;  \n  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell;  \n  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools;  \n  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth;  \n  Functional Pearls, being elegant and instructive programming examples;  \n  Experience Reports, to document general practice and experience in education, industry, or other contexts.  \n System Demonstrations, based on running software rather than novel research results. \n \nRegular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate. \nExperience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementors, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting. More advice is available via the Haskell wiki. \nSystem demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.",
      "Day": "2017-09-07",
      "Items": ["haskellsymp-2017-papers-ornaments-exploiting-parametricity-for-safer-more-automated-code-refactorization-and-code-reuse-invited-talk-"],
      "Key": "c09ca8ed-fcbb-4101-8b94-a469db7cc978",
      "Location": "Mathematical Institute | L1",
      "Time": "09:00 - 10:00",
      "Title": "Haskell 2017 - : Day 1, Session 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-catering-sunday-lunch"],
      "Key": "e2699ea1-9b5f-45df-ae49-8b9eba3c7847",
      "Location": "Mathematical Institute | Catering",
      "Time": "12:25 - 14:00",
      "Title": "Catering: Sunday lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-catering-wednesday-coffee-break-3"],
      "Key": "f65eaa41-acdf-4fea-80a4-17c30eb2e195",
      "Location": "Mathematical Institute | Catering",
      "Time": "16:10 - 16:40",
      "Title": "Catering: Wednesday coffee break 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-07",
      "Items": ["icfp-2017-catering-thursday-lunch"],
      "Key": "9f447a5e-180a-49f4-9f02-8d6c5ea99435",
      "Location": "Mathematical Institute | Catering",
      "Time": "12:25 - 14:00",
      "Title": "Catering: Thursday lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-08",
      "Items": ["icfp-2017-catering-friday-coffee-break-4"],
      "Key": "1e1320b6-d030-4fea-bd7d-e0c674dd3e99",
      "Location": "Mathematical Institute | Catering",
      "Time": "16:20 - 16:50",
      "Title": "Catering: Friday coffee break 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-07",
      "Items": ["icfp-2017-catering-thursday-coffee-break-2"],
      "Key": "3b5e5c03-6e1d-4f61-98db-e7b137dad692",
      "Location": "Mathematical Institute | Catering",
      "Time": "11:20 - 12:00",
      "Title": "Catering: Thursday coffee break 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-catering-wednesday-coffee-break-1"],
      "Key": "f3cd26e5-d4ac-46bf-b0d2-46127b71dd1f",
      "Location": "Mathematical Institute | Catering",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Wednesday coffee break 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-07",
      "Items": ["icfp-2017-catering-thursday-coffee-break-3"],
      "Key": "aebd6d71-990a-4e9d-bfd0-1d66c98379e7",
      "Location": "Mathematical Institute | Catering",
      "Time": "14:50 - 15:30",
      "Title": "Catering: Thursday coffee break 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-09",
      "Items": ["icfp-2017-catering-saturday-coffee-break-2"],
      "Key": "d87e1a42-1450-4450-84fc-75d6cfdcb2d9",
      "Location": "Mathematical Institute | Catering",
      "Time": "11:20 - 12:00",
      "Title": "Catering: Saturday coffee break 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-08",
      "Items": ["icfp-2017-catering-friday-coffee-break-2"],
      "Key": "c37dcb52-47e7-440f-9d7a-14b69eb04f32",
      "Location": "Mathematical Institute | Catering",
      "Time": "11:20 - 12:00",
      "Title": "Catering: Friday coffee break 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-catering-sunday-coffee-break-2"],
      "Key": "ad607048-3b0e-4223-9bcb-2e0ce3007752",
      "Location": "Mathematical Institute | Catering",
      "Time": "11:20 - 12:00",
      "Title": "Catering: Sunday coffee break 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-09",
      "Items": ["icfp-2017-catering-saturday-coffee-break-3"],
      "Key": "b62cc42d-4265-476f-83fb-fa41555d1d52",
      "Location": "Mathematical Institute | Catering",
      "Time": "14:50 - 15:30",
      "Title": "Catering: Saturday coffee break 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-07",
      "Items": ["icfp-2017-catering-thursday-coffee-break-4"],
      "Key": "d59c8f1a-37e8-448f-b341-29cefbfed4f9",
      "Location": "Mathematical Institute | Catering",
      "Time": "16:20 - 16:50",
      "Title": "Catering: Thursday coffee break 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-04",
      "Items": ["icfp-2017-catering-monday-coffee-break-2"],
      "Key": "6104418e-b88b-489d-afc8-d3760896c4a5",
      "Location": "Mathematical Institute | Catering",
      "Time": "14:30 - 15:00",
      "Title": "Catering: Monday coffee break 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-04",
      "Items": ["icfp-2017-catering-coffee-break"],
      "Key": "e83d8e89-964c-4c19-943b-7aded9ad85bc",
      "Location": "Mathematical Institute | Catering",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Monday coffee break 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-05",
      "Items": ["icfp-2017-catering-tuesday-coffee-break-3"],
      "Key": "241bce1a-adf5-42ed-819d-5ea1446de729",
      "Location": "Mathematical Institute | Catering",
      "Time": "16:10 - 16:40",
      "Title": "Catering: Tuesday coffee break 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-08",
      "Items": ["icfp-2017-catering-friday-coffee-break-1"],
      "Key": "7c1539f1-7c7e-4ea3-8887-2701c9a29848",
      "Location": "Mathematical Institute | Catering",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Friday coffee break 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-09",
      "Items": ["icfp-2017-catering-saturday-coffee-break-1"],
      "Key": "48c96f11-2a88-4563-8554-43db34acd67e",
      "Location": "Mathematical Institute | Catering",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Saturday coffee break 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-09",
      "Items": ["icfp-2017-catering-saturday-coffee-break-4"],
      "Key": "9d31612d-fc4b-4e43-9d92-20f951374a41",
      "Location": "Mathematical Institute | Catering",
      "Time": "16:20 - 16:50",
      "Title": "Catering: Saturday coffee break 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-catering-sunday-coffee-break-3"],
      "Key": "18dfa5ae-c786-48b8-ac36-729456ddb3b8",
      "Location": "Mathematical Institute | Catering",
      "Time": "14:50 - 15:30",
      "Title": "Catering: Sunday coffee break 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-05",
      "Items": ["icfp-2017-catering-tuesday-lunch"],
      "Key": "1fe8c1e5-2761-4ddd-b3eb-334f7c05d880",
      "Location": "Mathematical Institute | Catering",
      "Time": "12:00 - 13:00",
      "Title": "Catering: Tuesday lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-catering-sunday-coffee-break-1"],
      "Key": "37f8c0e7-8a6a-4369-b3c1-6c54d11eda8a",
      "Location": "Mathematical Institute | Catering",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Sunday coffee break 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-04",
      "Items": ["icfp-2017-catering-monday-lunch"],
      "Key": "30ac29fc-77b4-4eab-922c-ea64706d1ccc",
      "Location": "Mathematical Institute | Catering",
      "Time": "12:00 - 13:00",
      "Title": "Catering: Monday lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-08",
      "Items": ["icfp-2017-catering-friday-coffee-break-3"],
      "Key": "c81c1fbd-d416-4e3c-9d01-5ad054884822",
      "Location": "Mathematical Institute | Catering",
      "Time": "14:50 - 15:30",
      "Title": "Catering: Friday coffee break 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-catering-wednesday-coffee-break-2"],
      "Key": "f500c82f-4e15-4133-bbbd-12e75d3a0c55",
      "Location": "Mathematical Institute | Catering",
      "Time": "14:30 - 15:00",
      "Title": "Catering: Wednesday coffee break 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-09",
      "Items": ["icfp-2017-catering-saturday-lunch"],
      "Key": "81395b73-808f-4aab-a6e8-1f3c4473f202",
      "Location": "Mathematical Institute | Catering",
      "Time": "12:25 - 14:00",
      "Title": "Catering: Saturday lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-05",
      "Items": ["icfp-2017-catering-tuesday-coffee-break-2"],
      "Key": "c981b014-03b8-4393-8975-e2e51954dafc",
      "Location": "Mathematical Institute | Catering",
      "Time": "14:30 - 15:00",
      "Title": "Catering: Tuesday coffee break 2",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-04",
      "Items": ["icfp-2017-catering-monday-coffee-break-3"],
      "Key": "9fbaf830-590c-46db-a302-8b46f6d5b1f1",
      "Location": "Mathematical Institute | Catering",
      "Time": "16:10 - 16:40",
      "Title": "Catering: Monday coffee break 3",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-03",
      "Items": ["icfp-2017-catering-sunday-coffee-break-4"],
      "Key": "cfe49719-4b31-4693-80ff-3653c47a6e60",
      "Location": "Mathematical Institute | Catering",
      "Time": "16:20 - 16:50",
      "Title": "Catering: Sunday coffee break 4",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-05",
      "Items": ["icfp-2017-catering-tuesday-coffee-break-1"],
      "Key": "206ea532-ad75-48f4-9008-39edc292851b",
      "Location": "Mathematical Institute | Catering",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Tuesday coffee break 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-06",
      "Items": ["icfp-2017-catering-wednesday-lunch"],
      "Key": "543048cb-e0ed-4fae-a936-35bce1ac6ee2",
      "Location": "Mathematical Institute | Catering",
      "Time": "12:00 - 13:00",
      "Title": "Catering: Wednesday lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-07",
      "Items": ["icfp-2017-catering-thursday-coffee-break-1"],
      "Key": "7ecfbf69-4e0e-4fb5-a430-9dfb7a6e006b",
      "Location": "Mathematical Institute | Catering",
      "Time": "10:00 - 10:30",
      "Title": "Catering: Thursday coffee break 1",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Lunch and coffee breaks.",
      "Day": "2017-09-08",
      "Items": ["icfp-2017-catering-friday-lunch"],
      "Key": "82999294-9011-422c-86dc-4817888e7755",
      "Location": "Mathematical Institute | Catering",
      "Time": "12:25 - 14:00",
      "Title": "Catering: Friday lunch",
      "Type": "Accepted Papers"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml-part-2-"],
      "Key": "824686f3-da8d-4b71-8e3b-de7e16cda4da",
      "Location": "Mathematical Institute | L4",
      "Time": "15:30 - 16:20",
      "Title": "CUFP 2017 - : CUFP Tutorials C8",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml"],
      "Key": "dba6074a-65fa-454f-8d60-fc0c570434a3",
      "Location": "Mathematical Institute | L4",
      "Time": "14:00 - 15:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C8",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c1-online-applications-with-incremental"],
      "Key": "93ec0b97-c332-471a-b0da-8305b3baa68d",
      "Location": "Mathematical Institute | L5",
      "Time": "09:00 - 10:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C1",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c5-teaching-functional-programming"],
      "Key": "a756180c-1dbe-4dfe-a578-3dfdf42f47d7",
      "Location": "Mathematical Institute | L5",
      "Time": "09:00 - 10:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C5",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Items": [
        "cufp-2017-talks-formally-verifying-a-smart-contract-language-implementation-with-isabelle",
        "cufp-2017-talks-haskell-games-and-apps-for-ios-and-android"
      ],
      "Key": "d658fce6-669d-45ab-a9fe-cb90841f0a19",
      "Location": "Mathematical Institute | L2",
      "Time": "14:00 - 14:50",
      "Title": "CUFP 2017 - : CUFP Talks 4",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c6-introduction-to-clojure"],
      "Key": "cdb27077-86a3-439c-a3ed-2881b6fc8939",
      "Location": "Mathematical Institute | L4",
      "Time": "09:00 - 10:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C6",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c1-online-applications-with-incremental-part-3-"],
      "Key": "90a96cf8-b518-4d1e-a290-7e3efe606192",
      "Location": "Mathematical Institute | L5",
      "Time": "12:00 - 12:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C1",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c5-teaching-functional-programming-part-2-"],
      "Key": "94faf06c-62b8-4ba6-ac09-f4a0564f55b5",
      "Location": "Mathematical Institute | L5",
      "Time": "10:30 - 11:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C5",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers-part-3-"],
      "Key": "553c0dda-13b2-4994-a33c-d837d7557499",
      "Location": "Mathematical Institute | L5",
      "Time": "16:50 - 17:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C3",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Items": [
        "cufp-2017-talks-building-the-largest-payment-sandbox-on-a-tiny-machine",
        "cufp-2017-talks-using-functional-programming-to-accelerate-translational-research-at-pfizer"
      ],
      "Key": "df42f436-2c68-47ed-b41b-d11672beb09f",
      "Location": "Mathematical Institute | L2",
      "Time": "16:50 - 17:40",
      "Title": "CUFP 2017 - : CUFP Talks 6",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Key": "a6a9cc0c-9dc2-4e72-81ee-2cc5b929e538",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 11:30",
      "Title": "CUFP 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml-part-2-"],
      "Key": "b6a97a64-1410-4bbf-b206-d22ac552ab77",
      "Location": "Mathematical Institute | L5",
      "Time": "15:30 - 16:20",
      "Title": "CUFP 2017 - : CUFP Tutorials C7",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml"],
      "Key": "a6f63c75-a00c-4a0b-8fdd-13cdca31ddb4",
      "Location": "Mathematical Institute | L5",
      "Time": "14:00 - 15:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C7",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Items": [
        "cufp-2017-talks-using-haskell-to-run-a-datacenter",
        "cufp-2017-talks-functional-facades-over-legacy-code"
      ],
      "Key": "863eac34-3a44-4a3f-9172-313a424a8060",
      "Location": "Mathematical Institute | L2",
      "Time": "15:30 - 16:20",
      "Title": "CUFP 2017 - : CUFP Talks 5",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml-part-2-"],
      "Key": "01c6f097-577c-4013-a47a-16767b898812",
      "Location": "Mathematical Institute | L6",
      "Time": "15:30 - 16:20",
      "Title": "CUFP 2017 - : CUFP Tutorials C4",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c5-teaching-functional-programming-part-3-"],
      "Key": "4a1cbe89-c730-40a4-80af-9cbc19c047fc",
      "Location": "Mathematical Institute | L5",
      "Time": "12:00 - 12:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C5",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Items": ["cufp-2017-talks-gens-n-roses-appetite-for-reduction"],
      "Key": "375abe8f-1dbc-41a8-8dff-42b6598f0a7a",
      "Location": "Mathematical Institute | L2",
      "Time": "12:00 - 12:25",
      "Title": "CUFP 2017 - : CUFP Talks 3",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers"],
      "Key": "475b97f0-c22f-448c-bbbb-69701cc3cdf0",
      "Location": "Mathematical Institute | L5",
      "Time": "14:00 - 15:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C3",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them-part-2-"],
      "Key": "c4d09f54-9302-4399-93b7-66dbaf4b6811",
      "Location": "Mathematical Institute | L6",
      "Time": "10:30 - 11:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C2",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml-part-3-"],
      "Key": "9422f589-7324-4de4-8b64-4ad7c996ec86",
      "Location": "Mathematical Institute | L6",
      "Time": "16:50 - 17:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C4",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c7-owl-data-science-in-ocaml-part-3-"],
      "Key": "e062ea91-828b-447e-8752-102c6110a8d7",
      "Location": "Mathematical Institute | L5",
      "Time": "16:50 - 17:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C7",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Items": [
        "cufp-2017-talks-keynote",
        "cufp-2017-talks-bonsai-a-dsl-for-serverless-firm-real-time-decisioning"
      ],
      "Key": "f7aa7145-168d-4bff-a904-1880d9caa483",
      "Location": "Mathematical Institute | L2",
      "Time": "09:10 - 10:00",
      "Title": "CUFP 2017 - : CUFP Talks 1",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them-part-3-"],
      "Key": "27f7e33c-2890-4929-8750-722826a6272b",
      "Location": "Mathematical Institute | L6",
      "Time": "12:00 - 12:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C2",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c4-git-under-the-hood-with-ocaml"],
      "Key": "c623cfc5-a1a9-4456-9e2e-5da1dc9aa692",
      "Location": "Mathematical Institute | L6",
      "Time": "14:00 - 15:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C4",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Items": [
        "cufp-2017-talks-interfacing-ocaml-and-rust-picking-the-right-tool-for-the-job",
        "cufp-2017-talks-distributed-load-testing-with-mzbench"
      ],
      "Key": "a6ce7632-2110-4059-a8fc-02e5402dde07",
      "Location": "Mathematical Institute | L2",
      "Time": "10:30 - 11:20",
      "Title": "CUFP 2017 - : CUFP Talks 2",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Key": "18ce47c2-f45e-4e75-8040-4b7d0f188f90",
      "Location": "Mathematical Institute | L2",
      "Time": "09:10 - 10:10",
      "Title": "CUFP 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Key": "42f5cc71-d336-46b8-b170-4ec787217fc5",
      "Location": "Mathematical Institute | L2",
      "Time": "16:50 - 17:50",
      "Title": "CUFP 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c3-concurrent-programming-with-effect-handlers-part-2-"],
      "Key": "db7fc367-e295-4b5c-bf7a-9a4f8637315b",
      "Location": "Mathematical Institute | L5",
      "Time": "15:30 - 16:20",
      "Title": "CUFP 2017 - : CUFP Tutorials C3",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Key": "0234339f-716b-4be7-b74a-84c9c5c31a17",
      "Location": "Mathematical Institute | L2",
      "Time": "09:00 - 09:10",
      "Title": "CUFP 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Key": "7cef0990-1ffc-4311-b274-d9216ebefeed",
      "Location": "Mathematical Institute | L2",
      "Time": "14:00 - 15:00",
      "Title": "CUFP 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Key": "8f508639-83f3-48c1-a142-828d55576e00",
      "Location": "Mathematical Institute | L2",
      "Time": "15:30 - 16:30",
      "Title": "CUFP 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Chairs": ["runhangli"],
      "ChairsString": "Runhang Li",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c2-extensible-effects-understanding-them-implementing-them-using-them"],
      "Key": "013b8cec-fa11-4e07-b581-ec3aa0076296",
      "Location": "Mathematical Institute | L6",
      "Time": "09:00 - 10:00",
      "Title": "CUFP 2017 - : CUFP Tutorials C2",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c6-introduction-to-clojure-part-3-"],
      "Key": "8f6d0ab4-811c-4f92-a32e-c41dce3146b0",
      "Location": "Mathematical Institute | L4",
      "Time": "12:00 - 12:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C6",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-07",
      "Items": ["cufp-2017-talks-tutorial-c1-online-applications-with-incremental-part-2-"],
      "Key": "7494bed4-477a-4bd4-81c3-e41b920fa4d4",
      "Location": "Mathematical Institute | L5",
      "Time": "10:30 - 11:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C1",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-09",
      "Key": "7ac4a7ed-889b-440b-8d88-38424a696779",
      "Location": "Mathematical Institute | L2",
      "Time": "12:00 - 12:30",
      "Title": "CUFP 2017 - ",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c6-introduction-to-clojure-part-2-"],
      "Key": "8b72d4d2-578a-4618-a119-596ba0548204",
      "Location": "Mathematical Institute | L4",
      "Time": "10:30 - 11:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C6",
      "Type": "Accepted Talks"
    },
    {
      "Abstract": "Functional Programming has been at the forefront of a new generation of programming technologies, and companies have been successfully utilizing functional programming to enable more flexible, robust, and effective software development. \nThe annual CUFP workshop is designed to serve the growing community of commercial users of functional programming. Practitioners meet and collaborate, language designers and users share ideas about the future of their languages, and experts share their expertise on practical functional programming. \nThe external web site is here: CUFP 2017.",
      "Day": "2017-09-08",
      "Items": ["cufp-2017-talks-tutorial-c8-graphql-servers-in-ocaml-part-3-"],
      "Key": "913e6f0e-4ee1-4028-9e78-6d849370cad4",
      "Location": "Mathematical Institute | L4",
      "Time": "16:50 - 17:30",
      "Title": "CUFP 2017 - : CUFP Tutorials C8",
      "Type": "Accepted Talks"
    }
  ],
  "Sponsors": "ahrefs, Jane Street, Standard Chartered Bank, Bloomberg, X, Facebook, Mozilla, Galois, Oracle, Obsidian Systems, Portland State University, Well-Typed, Microsoft Research, Department of Computer Science, University of Oxford, IntelliFactory",
  "URL": "http://icfp17.sigplan.org/home",
  "VenueInfo": {"Name": "Mathematical Institute"}
}